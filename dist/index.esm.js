import CookieManager from '@react-native-cookies/cookies';

var KS=Object.defineProperty;var tN=n=>{throw TypeError(n)};var QP=(n,t,e)=>t in n?KS(n,t,{enumerable:true,configurable:true,writable:true,value:e}):n[t]=e;var s=(n,t)=>KS(n,"name",{value:t,configurable:true});var Te=(n,t)=>{for(var e in t)KS(n,e,{get:t[e],enumerable:true});};var i$1=(n,t,e)=>QP(n,typeof t!="symbol"?t+"":t,e),qS=(n,t,e)=>t.has(n)||tN("Cannot "+e);var p=(n,t,e)=>(qS(n,t,"read from private field"),e?e.call(n):t.get(n)),g=(n,t,e)=>t.has(n)?tN("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(n):t.set(n,e),w=(n,t,e,o)=>(qS(n,t,"write to private field"),t.set(n,e),e),N=(n,t,e)=>(qS(n,t,"access private method"),e);var iN=(n,t,e,o)=>({set _(r){w(n,t,r);},get _(){return p(n,t,o)}});var cR={};Te(cR,{ChannelError:()=>Qh,InnertubeError:()=>_,MissingParamError:()=>VS,OAuth2Error:()=>Se,ParsingError:()=>Rt,Platform:()=>W,PlayerError:()=>Ui,SessionError:()=>Hl,base64ToU8:()=>Kp,concatMemos:()=>K1,debugFetch:()=>QM,deepCompare:()=>V_,escapeStringRegexp:()=>mC,findFunction:()=>Jo,findVariable:()=>Ju,generateRandomString:()=>vt,generateSidAuth:()=>QE,getCookie:()=>e1,getRandomUserAgent:()=>f_,getStringBetweenStrings:()=>nt,hasKeys:()=>ZM,isTextRun:()=>Xe,streamToIterable:()=>XE,throwIfMissing:()=>X,timeToSeconds:()=>Me,u8ToBase64:()=>Ie});var k_={};Te(k_,{ArrayExpression:()=>ip,ArrowFunctionExpression:()=>np,AssignmentExpression:()=>rl,BinaryExpression:()=>al,BlockStatement:()=>op,BreakStatement:()=>sp,CallExpression:()=>ap,ConditionalExpression:()=>cp,ContinueStatement:()=>up,EmptyStatement:()=>lp,ExpressionStatement:()=>pp$a,ForOfStatement:()=>fp,ForStatement:()=>dp,FunctionDeclaration:()=>mp,FunctionExpression:()=>hp,Identifier:()=>_p,IfStatement:()=>bp,Literal:()=>yp,LogicalExpression:()=>cl,MemberExpression:()=>xp,NewExpression:()=>gp,ObjectExpression:()=>wp,Property:()=>vp,ReturnStatement:()=>Ip,SequenceExpression:()=>kp,SwitchCase:()=>Sp,SwitchStatement:()=>Ep,TemplateLiteral:()=>Cp,ThisExpression:()=>Np,ThrowStatement:()=>Rp,TryStatement:()=>Pp,UnaryExpression:()=>ll,UpdateExpression:()=>Ap,VariableDeclaration:()=>Mp,WhileStatement:()=>Dp});var $S=class $S{constructor(t,e){this.node=t,this.visitor=e;}run(){}};s($S,"BaseJSNode");var M=$S;var zS=class zS extends M{run(){return this.node.elements.map(t=>this.visitor.visitNode(t))}};s(zS,"ArrayExpression");var ip=zS;var sl=s((n,t)=>Object.defineProperty(t,"name",{value:n}),"namedFunction"),JS=class JS extends Error{constructor(t,e){super(t),e&&(this.info=e);}};s(JS,"JinterError");var lo=JS;var XS=class XS extends M{run(){let{params:t,body:e}=this.node;return sl("anonymous function",r=>{let a=0;for(let f of t)this.visitor.visitNode(f),f.type==="Identifier"&&this.visitor.scope.set(f.name,r[a]),a++;return this.visitor.visitNode(e)})}};s(XS,"ArrowFunctionExpression");var np=XS;var w_=class w_ extends M{handleMemberExpression(t,e,o){let r=this.visitor.visitNode(t.object),a=this.visitor.visitNode(t.property),f=r[a],m=o(f,e);return r[a]=m}handleIdentifier(t,e,o){let r=this.visitor.visitNode(t),a=o(r,e);return this.visitor.scope.set(t.name,a),this.visitor.scope.get(t.name)}run(){let{operator:t,left:e,right:o}=this.node,r=this.visitor.visitNode(o),a=w_.operatorMap[t];if(a){if(e.type==="MemberExpression")return this.handleMemberExpression(e,r,a);if(e.type==="Identifier")return this.handleIdentifier(e,r,a)}}};s(w_,"AssignmentExpression");var rl=w_;rl.operatorMap={"=":s((n,t)=>t,"="),"+=":s((n,t)=>n+t,"+="),"-=":s((n,t)=>n-t,"-="),"*=":s((n,t)=>n*t,"*="),"/=":s((n,t)=>n/t,"/="),"%=":s((n,t)=>n%t,"%="),"**=":s((n,t)=>n**t,"**="),"<<=":s((n,t)=>n<<t,"<<="),">>=":s((n,t)=>n>>t,">>="),">>>=":s((n,t)=>n>>>t,">>>="),"&=":s((n,t)=>n&t,"&="),"^=":s((n,t)=>n^t,"^="),"|=":s((n,t)=>n|t,"|=")};var T_=class T_ extends M{run(){let{operator:t,left:e,right:o}=this.node,r=this.visitor.visitNode(e),a=this.visitor.visitNode(o),f=T_.operatorMap[t];if(f)return f(r,a)}};s(T_,"BinaryExpression");var al=T_;al.operatorMap={"!=":s((n,t)=>n!=t,"!="),"!==":s((n,t)=>n!==t,"!=="),"==":s((n,t)=>n==t,"=="),"===":s((n,t)=>n===t,"==="),"<":s((n,t)=>n<t,"<"),"<=":s((n,t)=>n<=t,"<="),">":s((n,t)=>n>t,">"),">=":s((n,t)=>n>=t,">="),"+":s((n,t)=>n+t,"+"),"-":s((n,t)=>n-t,"-"),"*":s((n,t)=>n*t,"*"),"/":s((n,t)=>n/t,"/"),"%":s((n,t)=>n%t,"%"),"**":s((n,t)=>n**t,"**"),"&":s((n,t)=>n&t,"&"),"|":s((n,t)=>n|t,"|"),"^":s((n,t)=>n^t,"^"),"<<":s((n,t)=>n<<t,"<<"),">>":s((n,t)=>n>>t,">>"),">>>":s((n,t)=>n>>>t,">>>"),in:s((n,t)=>n in t,"in"),instanceof:s((n,t)=>n instanceof t,"instanceof")};var ZS=class ZS extends M{run(){for(let t of this.node.body){let e=this.visitor.visitNode(t);if(t.type==="ReturnStatement"||e==="$jintr_break_"||e==="$jintr_continue_"||(t.type==="WhileStatement"||t.type==="IfStatement"||t.type==="ForStatement"||t.type==="TryStatement")&&e)return e}}};s(ZS,"BlockStatement");var op=ZS;var QS=class QS extends M{run(){return "$jintr_break_"}};s(QS,"BreakStatement");var sp=QS;var rp=function(n,t,e,o){if(typeof t=="function"?n!==t||!o:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e==="m"?o:e==="a"?o.call(n):o?o.value:t.get(n)},es,v_,nN,oN={forEach:s((n,t,e)=>{let o=t;n.length>1&&e.scope.set("_this",n.slice(-1)[0]);let r=0;for(let a of o)n[0]([a,r++,o]);},"forEach"),toString:s((n,t)=>t.toString(),"toString")},eE=class eE extends M{constructor(){super(...arguments),es.add(this);}run(){let t,e;if(this.node.callee.type==="MemberExpression"?(t=this.visitor.getName(this.node.callee.object),e=this.visitor.getName(this.node.callee.property)):this.node.callee.type==="Identifier"&&(e=this.node.callee.name),t&&this.visitor.listeners[t]){let a=this.visitor.listeners[t](this.node,this.visitor);if(a!=="__continue_exec")return a}if(e&&e!=="toString"&&this.visitor.listeners[e]){let a=this.visitor.listeners[e](this.node,this.visitor);if(a!=="__continue_exec")return a}if(this.node.callee.type==="MemberExpression"){let a=this.visitor.visitNode(this.node.callee.object),f=this.node.callee.computed?this.visitor.visitNode(this.node.callee.property):this.visitor.getName(this.node.callee.property),m=this.node.arguments.map(b=>this.visitor.visitNode(b));return f in oN?oN[f](m,a,this.visitor):(a||rp(this,es,"m",v_).call(this),typeof a[f]!="function"&&rp(this,es,"m",v_).call(this),a[f].toString().includes("[native code]")?a[f](...m):a[f](m))}let o=this.visitor.visitNode(this.node.callee),r=this.node.arguments.map(a=>this.visitor.visitNode(a));return typeof o!="function"&&rp(this,es,"m",v_).call(this),o(r)}};s(eE,"CallExpression");var ap=eE;es=new WeakSet,v_=s(function(){if(this.node.callee.type==="MemberExpression"||this.node.callee.type==="Identifier"){let t=rp(this,es,"m",nN).call(this,this.node.callee);throw new lo(`${t} is not a function`)}else if(this.node.callee.type==="SequenceExpression"){let t=[],e=[];throw t.push("("),this.node.callee.expressions.forEach(o=>{o.type==="Literal"?e.push(o.raw||""):o.type==="Identifier"?e.push(o.name):o.type==="MemberExpression"&&(o.computed?e.push(`${this.visitor.getName(o.object)}[${this.visitor.getName(o.property)||"..."}]`):e.push(`${this.visitor.getName(o.object)}.${this.visitor.getName(o.property)}`));}),t.push(e.join(", ")),t.push(")"),new lo(`${t.join("")} is not a function`)}},"_CallExpression_throwError"),nN=s(function n(t){if(t.type==="Identifier")return t.name;if(t.type==="MemberExpression"){let e=rp(this,es,"m",n).call(this,t.object),o=t.computed?`[${this.visitor.getName(t.property)||"..."}]`:`.${this.visitor.getName(t.property)}`;return `${e}${o}`}return "<unknown>"},"_CallExpression_getCalleeString");var tE=class tE extends M{run(){let{test:t,consequent:e,alternate:o}=this.node;return this.visitor.visitNode(t)?this.visitor.visitNode(e):this.visitor.visitNode(o)}};s(tE,"ConditionalExpression");var cp=tE;var iE=class iE extends M{run(){return "$jintr_continue_"}};s(iE,"ContinueStatement");var up=iE;var nE=class nE extends M{run(){}};s(nE,"EmptyStatement");var lp=nE;var oE=class oE extends M{run(){return this.visitor.visitNode(this.node.expression)}};s(oE,"ExpressionStatement");var pp$a=oE;var sE=class sE extends M{run(){this.visitor.visitNode(this.node.left);let t=this.visitor.visitNode(this.node.right);for(let e of t){if(this.node.left.type==="VariableDeclaration"&&this.node.left.declarations[0].id.type==="Identifier")this.visitor.scope.set(this.node.left.declarations[0].id.name,e);else if(this.node.left.type==="VariableDeclaration"&&this.node.left.declarations[0].id.type==="ObjectPattern")for(let r of this.node.left.declarations[0].id.properties)r.type==="Property"&&r.value.type==="Identifier"&&r.key.type==="Identifier"&&this.visitor.scope.set(r.value.name,e[r.key.name]);let o=this.visitor.visitNode(this.node.body);if(o==="$jintr_break_")break;if(o!=="$jintr_continue_"&&o&&this.node.body.type!=="ExpressionStatement")return o}}};s(sE,"ForOfStatement");var fp=sE;var rE=class rE extends M{run(){this.node.init&&this.visitor.visitNode(this.node.init);let t=s(()=>this.node.test?this.visitor.visitNode(this.node.test):true,"test");for(;t();){let o=this.visitor.visitNode(this.node.body);if(o!=="$jintr_continue_"){if(o==="$jintr_break_")break;if(this.node.update&&this.visitor.visitNode(this.node.update),o&&this.node.body.type!=="ExpressionStatement")return o}}}};s(rE,"ForStatement");var dp=rE;var aE=class aE extends M{run(){let{params:t,body:e}=this.node,o=this.visitor.visitNode(this.node.id),r=sl(o,a=>{let f=0;for(let m of t)this.visitor.visitNode(m),m.type==="Identifier"&&this.visitor.scope.set(m.name,a[f]),f++;return this.visitor.visitNode(e)});this.visitor.scope.set(o,r);}};s(aE,"FunctionDeclaration");var mp=aE;var cE=class cE extends M{run(){let{params:t,body:e}=this.node;return sl("anonymous function",r=>{let a=0;for(let f of t)this.visitor.visitNode(f),f.type==="Identifier"&&this.visitor.scope.set(f.name,r[a]),a++;return this.visitor.visitNode(e)})}};s(cE,"FunctionExpression");var hp=cE;var uE=class uE extends M{run(){if(this.visitor.listeners[this.node.name]){let t=this.visitor.listeners[this.node.name](this.node,this.visitor);if(t!=="__continue_exec")return t}return this.visitor.scope.has(this.node.name)?this.visitor.scope.get(this.node.name):this.node.name}};s(uE,"Identifier");var _p=uE;var lE=class lE extends M{run(){if(this.visitor.visitNode(this.node.test))return this.visitor.visitNode(this.node.consequent);if(this.node.alternate)return this.visitor.visitNode(this.node.alternate)}};s(lE,"IfStatement");var bp=lE;var pE=class pE extends M{run(){return this.node.value}};s(pE,"Literal");var yp=pE;var I_=class I_ extends M{run(){let{operator:t,left:e,right:o}=this.node,r=I_.operatorMap[t];if(r)return r(this.visitor,e,o)}};s(I_,"LogicalExpression");var cl=I_;cl.operatorMap={"&&":s((n,t,e)=>{let o=n.visitNode(t);return o===true?n.visitNode(e):o},"&&"),"||":s((n,t,e)=>n.visitNode(t)||n.visitNode(e),"||"),"??":s((n,t,e)=>{let o=s((f,m)=>m&&f==="undefined"?void 0:f,"normalizeUndefined"),r=o(n.visitNode(t),t.type==="Identifier"),a=o(n.visitNode(e),e.type==="Identifier");return r??a},"??")};var fE=class fE extends M{run(){let{object:t,property:e,computed:o}=this.node,r=this.visitor.visitNode(t),a=o?this.visitor.visitNode(e):this.visitor.getName(e);if(a!==void 0||a!==null){if(this.visitor.listeners[a]){let f=this.visitor.listeners[a](this.node,this.visitor);if(f!=="__continue_exec")return f}return r?.[a]}}};s(fE,"MemberExpression");var xp=fE;var dE=class dE extends M{run(){let t=this.visitor.visitNode(this.node.callee),e=this.node.arguments.map(o=>this.visitor.visitNode(o));return e.length?new t(e):new t}};s(dE,"NewExpression");var gp=dE;var mE=class mE extends M{run(){let t={};for(let e of this.node.properties)if(e.type==="Property")t={...t,...this.visitor.visitNode(e)};else throw new Error(`Unhandled property type: ${e.type}`);return t}};s(mE,"ObjectExpression");var wp=mE;var hE=function(n,t,e,o){if(typeof t=="function"?n!==t||!o:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e==="m"?o:e==="a"?o.call(n):o?o.value:t.get(n)},Tp,sN,rN,aN,_E=class _E extends M{constructor(){super(...arguments),Tp.add(this);}run(){switch(this.node.kind){case "init":return hE(this,Tp,"m",sN).call(this);case "get":return hE(this,Tp,"m",rN).call(this);case "set":return hE(this,Tp,"m",aN).call(this);default:throw new Error(`Unhandled property kind: ${this.node.kind}`)}}};s(_E,"Property");var vp=_E;Tp=new WeakSet,sN=s(function(){let t=this.node.computed?this.visitor.visitNode(this.node.key):this.visitor.getName(this.node.key),e=this.visitor.visitNode(this.node.value);if(t)return {[t]:e}},"_Property_init"),rN=s(function(){throw new TypeError("Not implemented: Property.get")},"_Property_get"),aN=s(function(){throw new TypeError("Not implemented: Property.set")},"_Property_set");var bE=class bE extends M{run(){if(this.node.argument)return this.visitor.visitNode(this.node.argument)}};s(bE,"ReturnStatement");var Ip=bE;var yE=class yE extends M{run(){let t;for(let e of this.node.expressions)t=this.visitor.visitNode(e);return t}};s(yE,"SequenceExpression");var kp=yE;var xE=class xE extends M{run(){for(let t of this.node.consequent){let e=this.visitor.visitNode(t);if(t.type==="ContinueStatement"||t.type==="BreakStatement")return e}}};s(xE,"SwitchCase");var Sp=xE;var gE=class gE extends M{run(){let t=this.visitor.visitNode(this.node.discriminant),e=false,o=-1,r=0;for(;;){let a=this.node.cases[r];if(e){let f=this.visitor.visitNode(a);if(f==="$jintr_break_")break;if(f==="$jintr_continue_")return f;if(++r,r>=this.node.cases.length){r=0;break}else continue}if(e=a&&t===this.visitor.visitNode(a.test),e===void 0&&r>this.node.cases.length)break;if(a&&!e&&!a.test){o=r,r+=1;continue}if(!a&&!e&&o!==-1){e=true,r=o;continue}e||++r;}}};s(gE,"SwitchStatement");var Ep=gE;var wE=class wE extends M{run(){let t="";for(let e=0;e<this.node.quasis.length;++e){let o=this.node.quasis[e];if(o.type==="TemplateElement"){if(o.value.cooked===null)throw new Error(`Invalid template literal: ${o.value.raw}`);if(o.value.cooked!==void 0&&(t+=o.value.cooked),!o.tail){let r=this.node.expressions[e];if(r!==void 0)t+=this.visitor.visitNode(r);else throw new Error(`Expected expression after: ${o.value}`)}}else throw new Error(`Unhandled quasi type: ${o.type}`)}return t}};s(wE,"TemplateLiteral");var Cp=wE;var TE=class TE extends M{run(){return this.visitor.scope.get("_this")}};s(TE,"ThisExpression");var Np=TE;var vE=class vE extends M{run(){throw this.visitor.visitNode(this.node.argument)}};s(vE,"ThrowStatement");var Rp=vE;var IE=class IE extends M{run(){try{return this.visitor.visitNode(this.node.block)}catch(t){if(this.node.handler)return this.node.handler.param&&this.node.handler.param.type==="Identifier"&&this.visitor.scope.set(this.node.handler.param.name,t),this.visitor.visitNode(this.node.handler.body)}finally{this.visitor.visitNode(this.node.finalizer);}}};s(IE,"TryStatement");var Pp=IE;var ul=class ul extends M{static isValidOperator(t){return t in ul.operatorMap}run(){let{operator:t,argument:e}=this.node;if(ul.isValidOperator(t))return ul.operatorMap[t](this.visitor,e)}};s(ul,"UnaryExpression");var ll=ul;ll.operatorMap={"-":s((n,t)=>-n.visitNode(t),"-"),"+":s((n,t)=>+n.visitNode(t),"+"),"!":s((n,t)=>!n.visitNode(t),"!"),"~":s((n,t)=>~n.visitNode(t),"~"),void:s((n,t)=>{n.visitNode(t);},"void"),typeof:s((n,t)=>{let e=n.visitNode(t);return t.type==="Identifier"&&e==="undefined"?"undefined":typeof n.visitNode(t)},"typeof"),delete:s((n,t)=>{if(t.type==="MemberExpression"){let e=n.visitNode(t.object),o=t.computed?n.visitNode(t.property):n.getName(t.property);return delete e[o]}return t.type==="Identifier"&&n.scope.has(t.name)?n.scope.delete(t.name):true},"delete")};var kE=class kE extends M{run(){switch(this.node.operator){case "++":if(this.node.argument.type==="MemberExpression"){let e=this.visitor.visitNode(this.node.argument.object);return e[this.visitor.visitNode(this.node.argument.property)]++}else if(this.node.argument.type==="Identifier"){let e=this.visitor.visitNode(this.node.argument);return this.visitor.scope.set(this.node.argument.name,e+1),this.node.prefix?++e:e}break;case "--":if(this.node.argument.type==="MemberExpression"){let e=this.visitor.visitNode(this.node.argument.object);return e[this.visitor.visitNode(this.node.argument.property)]--}else if(this.node.argument.type==="Identifier"){let e=this.visitor.visitNode(this.node.argument);return this.visitor.scope.set(this.node.argument.name,e-1),this.node.prefix?--e:e}break}}};s(kE,"UpdateExpression");var Ap=kE;var SE=class SE extends M{run(){this.node.declarations.forEach(t=>{let{id:e,init:o}=t,r=this.visitor.getName(e),a=o?this.visitor.visitNode(o):void 0;r&&this.visitor.scope.set(r,a),typeof a=="object"&&a!==null&&this.visitor.scope.set("_this",a);});}};s(SE,"VariableDeclaration");var Mp=SE;var EE=class EE extends M{run(){for(;this.visitor.visitNode(this.node.test);){let t=this.visitor.visitNode(this.node.body);if(t==="$jintr_break_")break;if(t!=="$jintr_continue_"&&t)return t}}};s(EE,"WhileStatement");var Dp=EE;var t3=function(n,t,e,o){if(typeof t=="function"?n!==t||!o:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e==="m"?o:e==="a"?o.call(n):o?o.value:t.get(n)},CE,cN,NE=class NE{constructor(){CE.add(this),this.scope=new Map,this.listeners={},this.ast=[];}setAST(t){this.ast=t;}run(){let t;for(let e of this.ast)t=this.visitNode(e);return t}visitNode(t){if(!t)return null;let e=t3(this,CE,"m",cN).call(this,t.type);return e?new e(t,this).run():null}getName(t){if(t.type==="Identifier")return t.name;if(t.type==="Literal")return t.value}on(t,e){this.listeners[t]=e;}};s(NE,"Visitor");var Op=NE;CE=new WeakSet,cN=s(function(t){let e=k_[t];return e},"_Visitor_getNode");var i3=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,81,2,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,9,5351,0,7,14,13835,9,87,9,39,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,4706,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,983,6,110,6,6,9,4759,9,787719,239],mN=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,68,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,4026,582,8634,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,757,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191],n3="\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0CF3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECE\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\u30FB\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F\uFF65",hN="\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",RE={3:"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",5:"class enum extends super const export import",6:"enum",strict:"implements interface let package private protected public static yield",strictBind:"eval arguments"},PE="break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",o3={5:PE,"5module":PE+" export import",6:PE+" const class extends export import super"},s3=/^in(stanceof)?$/,r3=new RegExp("["+hN+"]"),a3=new RegExp("["+hN+n3+"]");function ME(n,t){for(var e=65536,o=0;o<t.length;o+=2){if(e+=t[o],e>n)return  false;if(e+=t[o+1],e>=n)return  true}return  false}s(ME,"isInAstralSet");function Hi(n,t){return n<65?n===36:n<91?true:n<97?n===95:n<123?true:n<=65535?n>=170&&r3.test(String.fromCharCode(n)):t===false?false:ME(n,mN)}s(Hi,"isIdentifierStart");function pl(n,t){return n<48?n===36:n<58?true:n<65?false:n<91?true:n<97?n===95:n<123?true:n<=65535?n>=170&&a3.test(String.fromCharCode(n)):t===false?false:ME(n,mN)||ME(n,i3)}s(pl,"isIdentifierChar");var Q=s(function(t,e){e===void 0&&(e={}),this.label=t,this.keyword=e.keyword,this.beforeExpr=!!e.beforeExpr,this.startsExpr=!!e.startsExpr,this.isLoop=!!e.isLoop,this.isAssign=!!e.isAssign,this.prefix=!!e.prefix,this.postfix=!!e.postfix,this.binop=e.binop||null,this.updateContext=null;},"TokenType");function It(n,t){return new Q(n,{beforeExpr:true,binop:t})}s(It,"binop");var kt={beforeExpr:true},it={startsExpr:true},LE={};function Z(n,t){return t===void 0&&(t={}),t.keyword=n,LE[n]=new Q(n,t)}s(Z,"kw");var h={num:new Q("num",it),regexp:new Q("regexp",it),string:new Q("string",it),name:new Q("name",it),privateId:new Q("privateId",it),eof:new Q("eof"),bracketL:new Q("[",{beforeExpr:true,startsExpr:true}),bracketR:new Q("]"),braceL:new Q("{",{beforeExpr:true,startsExpr:true}),braceR:new Q("}"),parenL:new Q("(",{beforeExpr:true,startsExpr:true}),parenR:new Q(")"),comma:new Q(",",kt),semi:new Q(";",kt),colon:new Q(":",kt),dot:new Q("."),question:new Q("?",kt),questionDot:new Q("?."),arrow:new Q("=>",kt),template:new Q("template"),invalidTemplate:new Q("invalidTemplate"),ellipsis:new Q("...",kt),backQuote:new Q("`",it),dollarBraceL:new Q("${",{beforeExpr:true,startsExpr:true}),eq:new Q("=",{beforeExpr:true,isAssign:true}),assign:new Q("_=",{beforeExpr:true,isAssign:true}),incDec:new Q("++/--",{prefix:true,postfix:true,startsExpr:true}),prefix:new Q("!/~",{beforeExpr:true,prefix:true,startsExpr:true}),logicalOR:It("||",1),logicalAND:It("&&",2),bitwiseOR:It("|",3),bitwiseXOR:It("^",4),bitwiseAND:It("&",5),equality:It("==/!=/===/!==",6),relational:It("</>/<=/>=",7),bitShift:It("<</>>/>>>",8),plusMin:new Q("+/-",{beforeExpr:true,binop:9,prefix:true,startsExpr:true}),modulo:It("%",10),star:It("*",10),slash:It("/",10),starstar:new Q("**",{beforeExpr:true}),coalesce:It("??",1),_break:Z("break"),_case:Z("case",kt),_catch:Z("catch"),_continue:Z("continue"),_debugger:Z("debugger"),_default:Z("default",kt),_do:Z("do",{isLoop:true,beforeExpr:true}),_else:Z("else",kt),_finally:Z("finally"),_for:Z("for",{isLoop:true}),_function:Z("function",it),_if:Z("if"),_return:Z("return",kt),_switch:Z("switch"),_throw:Z("throw",kt),_try:Z("try"),_var:Z("var"),_const:Z("const"),_while:Z("while",{isLoop:true}),_with:Z("with"),_new:Z("new",{beforeExpr:true,startsExpr:true}),_this:Z("this",it),_super:Z("super",it),_class:Z("class",it),_extends:Z("extends",kt),_export:Z("export"),_import:Z("import",it),_null:Z("null",it),_true:Z("true",it),_false:Z("false",it),_in:Z("in",{beforeExpr:true,binop:7}),_instanceof:Z("instanceof",{beforeExpr:true,binop:7}),_typeof:Z("typeof",{beforeExpr:true,prefix:true,startsExpr:true}),_void:Z("void",{beforeExpr:true,prefix:true,startsExpr:true}),_delete:Z("delete",{beforeExpr:true,prefix:true,startsExpr:true})},Ct=/\r\n?|\n|\u2028|\u2029/,c3=new RegExp(Ct.source,"g");function fl(n){return n===10||n===13||n===8232||n===8233}s(fl,"isNewLine");function _N(n,t,e){e===void 0&&(e=n.length);for(var o=t;o<e;o++){var r=n.charCodeAt(o);if(fl(r))return o<e-1&&r===13&&n.charCodeAt(o+1)===10?o+2:o+1}return  -1}s(_N,"nextLineBreak");var bN=/[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/,St=/(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g,yN=Object.prototype,u3=yN.hasOwnProperty,l3=yN.toString,Yp=Object.hasOwn||function(n,t){return u3.call(n,t)},uN=Array.isArray||function(n){return l3.call(n)==="[object Array]"},lN=Object.create(null);function po(n){return lN[n]||(lN[n]=new RegExp("^(?:"+n.replace(/ /g,"|")+")$"))}s(po,"wordsRegexp");function fo(n){return n<=65535?String.fromCharCode(n):(n-=65536,String.fromCharCode((n>>10)+55296,(n&1023)+56320))}s(fo,"codePointToString");var p3=/(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/,Lp=s(function(t,e){this.line=t,this.column=e;},"Position");Lp.prototype.offset=s(function(t){return new Lp(this.line,this.column+t)},"offset");var P_=s(function(t,e,o){this.start=e,this.end=o,t.sourceFile!==null&&(this.source=t.sourceFile);},"SourceLocation");function xN(n,t){for(var e=1,o=0;;){var r=_N(n,o,t);if(r<0)return new Lp(e,t-o);++e,o=r;}}s(xN,"getLineInfo");var DE={ecmaVersion:null,sourceType:"script",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:false,allowImportExportEverywhere:false,allowAwaitOutsideFunction:null,allowSuperOutsideMethod:null,allowHashBang:false,checkPrivateFields:true,locations:false,onToken:null,onComment:null,ranges:false,program:null,sourceFile:null,directSourceFile:null,preserveParens:false};function f3(n){var t={};for(var e in DE)t[e]=n&&Yp(n,e)?n[e]:DE[e];if(t.ecmaVersion==="latest"?t.ecmaVersion=1e8:t.ecmaVersion==null?(t.ecmaVersion=11):t.ecmaVersion>=2015&&(t.ecmaVersion-=2009),t.allowReserved==null&&(t.allowReserved=t.ecmaVersion<5),(!n||n.allowHashBang==null)&&(t.allowHashBang=t.ecmaVersion>=14),uN(t.onToken)){var o=t.onToken;t.onToken=function(r){return o.push(r)};}return uN(t.onComment)&&(t.onComment=d3(t,t.onComment)),t}s(f3,"getOptions");function d3(n,t){return function(e,o,r,a,f,m){var b={type:e?"Block":"Line",value:o,start:r,end:a};n.locations&&(b.loc=new P_(this,f,m)),n.ranges&&(b.range=[r,a]),t.push(b);}}s(d3,"pushComment");var Up=1,dl=2,UE=4,gN=8,wN=16,TN=32,YE=64,vN=128,Vp=256,VE=Up|dl|Vp;function FE(n,t){return dl|(n?UE:0)|(t?gN:0)}s(FE,"functionFlags");var E_=0,jE=1,qi=2,IN=3,kN=4,SN=5,Ne=s(function(t,e,o){this.options=t=f3(t),this.sourceFile=t.sourceFile,this.keywords=po(o3[t.ecmaVersion>=6?6:t.sourceType==="module"?"5module":5]);var r="";t.allowReserved!==true&&(r=RE[t.ecmaVersion>=6?6:t.ecmaVersion===5?5:3],t.sourceType==="module"&&(r+=" await")),this.reservedWords=po(r);var a=(r?r+" ":"")+RE.strict;this.reservedWordsStrict=po(a),this.reservedWordsStrictBind=po(a+" "+RE.strictBind),this.input=String(e),this.containsEsc=false,o?(this.pos=o,this.lineStart=this.input.lastIndexOf(`
`,o-1)+1,this.curLine=this.input.slice(0,this.lineStart).split(Ct).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=h.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=true,this.inModule=t.sourceType==="module",this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.potentialArrowInForAwait=false,this.yieldPos=this.awaitPos=this.awaitIdentPos=0,this.labels=[],this.undefinedExports=Object.create(null),this.pos===0&&t.allowHashBang&&this.input.slice(0,2)==="#!"&&this.skipLineComment(2),this.scopeStack=[],this.enterScope(Up),this.regexpState=null,this.privateNameStack=[];},"Parser"),di={inFunction:{configurable:true},inGenerator:{configurable:true},inAsync:{configurable:true},canAwait:{configurable:true},allowSuper:{configurable:true},allowDirectSuper:{configurable:true},treatFunctionsAsVar:{configurable:true},allowNewDotTarget:{configurable:true},inClassStaticBlock:{configurable:true}};Ne.prototype.parse=s(function(){var t=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(t)},"parse");di.inFunction.get=function(){return (this.currentVarScope().flags&dl)>0};di.inGenerator.get=function(){return (this.currentVarScope().flags&gN)>0&&!this.currentVarScope().inClassFieldInit};di.inAsync.get=function(){return (this.currentVarScope().flags&UE)>0&&!this.currentVarScope().inClassFieldInit};di.canAwait.get=function(){for(var n=this.scopeStack.length-1;n>=0;n--){var t=this.scopeStack[n];if(t.inClassFieldInit||t.flags&Vp)return  false;if(t.flags&dl)return (t.flags&UE)>0}return this.inModule&&this.options.ecmaVersion>=13||this.options.allowAwaitOutsideFunction};di.allowSuper.get=function(){var n=this.currentThisScope(),t=n.flags,e=n.inClassFieldInit;return (t&YE)>0||e||this.options.allowSuperOutsideMethod};di.allowDirectSuper.get=function(){return (this.currentThisScope().flags&vN)>0};di.treatFunctionsAsVar.get=function(){return this.treatFunctionsAsVarInScope(this.currentScope())};di.allowNewDotTarget.get=function(){var n=this.currentThisScope(),t=n.flags,e=n.inClassFieldInit;return (t&(dl|Vp))>0||e};di.inClassStaticBlock.get=function(){return (this.currentVarScope().flags&Vp)>0};Ne.extend=s(function(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];for(var o=this,r=0;r<t.length;r++)o=t[r](o);return o},"extend");Ne.parse=s(function(t,e){return new this(e,t).parse()},"parse");Ne.parseExpressionAt=s(function(t,e,o){var r=new this(o,t,e);return r.nextToken(),r.parseExpression()},"parseExpressionAt");Ne.tokenizer=s(function(t,e){return new this(e,t)},"tokenizer");Object.defineProperties(Ne.prototype,di);var Je=Ne.prototype,m3=/^(?:'((?:\\[^]|[^'\\])*?)'|"((?:\\[^]|[^"\\])*?)")/;Je.strictDirective=function(n){if(this.options.ecmaVersion<5)return  false;for(;;){St.lastIndex=n,n+=St.exec(this.input)[0].length;var t=m3.exec(this.input.slice(n));if(!t)return  false;if((t[1]||t[2])==="use strict"){St.lastIndex=n+t[0].length;var e=St.exec(this.input),o=e.index+e[0].length,r=this.input.charAt(o);return r===";"||r==="}"||Ct.test(e[0])&&!(/[(`.[+\-/*%<>=,?^&]/.test(r)||r==="!"&&this.input.charAt(o+1)==="=")}n+=t[0].length,St.lastIndex=n,n+=St.exec(this.input)[0].length,this.input[n]===";"&&n++;}};Je.eat=function(n){return this.type===n?(this.next(),true):false};Je.isContextual=function(n){return this.type===h.name&&this.value===n&&!this.containsEsc};Je.eatContextual=function(n){return this.isContextual(n)?(this.next(),true):false};Je.expectContextual=function(n){this.eatContextual(n)||this.unexpected();};Je.canInsertSemicolon=function(){return this.type===h.eof||this.type===h.braceR||Ct.test(this.input.slice(this.lastTokEnd,this.start))};Je.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),true};Je.semicolon=function(){!this.eat(h.semi)&&!this.insertSemicolon()&&this.unexpected();};Je.afterTrailingComma=function(n,t){if(this.type===n)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),t||this.next(),true};Je.expect=function(n){this.eat(n)||this.unexpected();};Je.unexpected=function(n){this.raise(n??this.start,"Unexpected token");};var A_=s(function(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1;},"DestructuringErrors");Je.checkPatternErrors=function(n,t){if(n){n.trailingComma>-1&&this.raiseRecoverable(n.trailingComma,"Comma is not permitted after the rest element");var e=t?n.parenthesizedAssign:n.parenthesizedBind;e>-1&&this.raiseRecoverable(e,t?"Assigning to rvalue":"Parenthesized pattern");}};Je.checkExpressionErrors=function(n,t){if(!n)return  false;var e=n.shorthandAssign,o=n.doubleProto;if(!t)return e>=0||o>=0;e>=0&&this.raise(e,"Shorthand property assignments are valid only in destructuring patterns"),o>=0&&this.raiseRecoverable(o,"Redefinition of __proto__ property");};Je.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,"Yield expression cannot be a default value"),this.awaitPos&&this.raise(this.awaitPos,"Await expression cannot be a default value");};Je.isSimpleAssignTarget=function(n){return n.type==="ParenthesizedExpression"?this.isSimpleAssignTarget(n.expression):n.type==="Identifier"||n.type==="MemberExpression"};var L=Ne.prototype;L.parseTopLevel=function(n){var t=Object.create(null);for(n.body||(n.body=[]);this.type!==h.eof;){var e=this.parseStatement(null,true,t);n.body.push(e);}if(this.inModule)for(var o=0,r=Object.keys(this.undefinedExports);o<r.length;o+=1){var a=r[o];this.raiseRecoverable(this.undefinedExports[a].start,"Export '"+a+"' is not defined");}return this.adaptDirectivePrologue(n.body),this.next(),n.sourceType=this.options.sourceType,this.finishNode(n,"Program")};var GE={kind:"loop"},h3={kind:"switch"};L.isLet=function(n){if(this.options.ecmaVersion<6||!this.isContextual("let"))return  false;St.lastIndex=this.pos;var t=St.exec(this.input),e=this.pos+t[0].length,o=this.input.charCodeAt(e);if(o===91||o===92)return  true;if(n)return  false;if(o===123||o>55295&&o<56320)return  true;if(Hi(o,true)){for(var r=e+1;pl(o=this.input.charCodeAt(r),true);)++r;if(o===92||o>55295&&o<56320)return  true;var a=this.input.slice(e,r);if(!s3.test(a))return  true}return  false};L.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual("async"))return  false;St.lastIndex=this.pos;var n=St.exec(this.input),t=this.pos+n[0].length,e;return !Ct.test(this.input.slice(this.pos,t))&&this.input.slice(t,t+8)==="function"&&(t+8===this.input.length||!(pl(e=this.input.charCodeAt(t+8))||e>55295&&e<56320))};L.parseStatement=function(n,t,e){var o=this.type,r=this.startNode(),a;switch(this.isLet(n)&&(o=h._var,a="let"),o){case h._break:case h._continue:return this.parseBreakContinueStatement(r,o.keyword);case h._debugger:return this.parseDebuggerStatement(r);case h._do:return this.parseDoStatement(r);case h._for:return this.parseForStatement(r);case h._function:return n&&(this.strict||n!=="if"&&n!=="label")&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(r,false,!n);case h._class:return n&&this.unexpected(),this.parseClass(r,true);case h._if:return this.parseIfStatement(r);case h._return:return this.parseReturnStatement(r);case h._switch:return this.parseSwitchStatement(r);case h._throw:return this.parseThrowStatement(r);case h._try:return this.parseTryStatement(r);case h._const:case h._var:return a=a||this.value,n&&a!=="var"&&this.unexpected(),this.parseVarStatement(r,a);case h._while:return this.parseWhileStatement(r);case h._with:return this.parseWithStatement(r);case h.braceL:return this.parseBlock(true,r);case h.semi:return this.parseEmptyStatement(r);case h._export:case h._import:if(this.options.ecmaVersion>10&&o===h._import){St.lastIndex=this.pos;var f=St.exec(this.input),m=this.pos+f[0].length,b=this.input.charCodeAt(m);if(b===40||b===46)return this.parseExpressionStatement(r,this.parseExpression())}return this.options.allowImportExportEverywhere||(t||this.raise(this.start,"'import' and 'export' may only appear at the top level"),this.inModule||this.raise(this.start,"'import' and 'export' may appear only with 'sourceType: module'")),o===h._import?this.parseImport(r):this.parseExport(r,e);default:if(this.isAsyncFunction())return n&&this.unexpected(),this.next(),this.parseFunctionStatement(r,true,!n);var x=this.value,I=this.parseExpression();return o===h.name&&I.type==="Identifier"&&this.eat(h.colon)?this.parseLabeledStatement(r,x,I,n):this.parseExpressionStatement(r,I)}};L.parseBreakContinueStatement=function(n,t){var e=t==="break";this.next(),this.eat(h.semi)||this.insertSemicolon()?n.label=null:this.type!==h.name?this.unexpected():(n.label=this.parseIdent(),this.semicolon());for(var o=0;o<this.labels.length;++o){var r=this.labels[o];if((n.label==null||r.name===n.label.name)&&(r.kind!=null&&(e||r.kind==="loop")||n.label&&e))break}return o===this.labels.length&&this.raise(n.start,"Unsyntactic "+t),this.finishNode(n,e?"BreakStatement":"ContinueStatement")};L.parseDebuggerStatement=function(n){return this.next(),this.semicolon(),this.finishNode(n,"DebuggerStatement")};L.parseDoStatement=function(n){return this.next(),this.labels.push(GE),n.body=this.parseStatement("do"),this.labels.pop(),this.expect(h._while),n.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(h.semi):this.semicolon(),this.finishNode(n,"DoWhileStatement")};L.parseForStatement=function(n){this.next();var t=this.options.ecmaVersion>=9&&this.canAwait&&this.eatContextual("await")?this.lastTokStart:-1;if(this.labels.push(GE),this.enterScope(0),this.expect(h.parenL),this.type===h.semi)return t>-1&&this.unexpected(t),this.parseFor(n,null);var e=this.isLet();if(this.type===h._var||this.type===h._const||e){var o=this.startNode(),r=e?"let":this.value;return this.next(),this.parseVar(o,true,r),this.finishNode(o,"VariableDeclaration"),(this.type===h._in||this.options.ecmaVersion>=6&&this.isContextual("of"))&&o.declarations.length===1?(this.options.ecmaVersion>=9&&(this.type===h._in?t>-1&&this.unexpected(t):n.await=t>-1),this.parseForIn(n,o)):(t>-1&&this.unexpected(t),this.parseFor(n,o))}var a=this.isContextual("let"),f=false,m=this.containsEsc,b=new A_,x=this.start,I=t>-1?this.parseExprSubscripts(b,"await"):this.parseExpression(true,b);return this.type===h._in||(f=this.options.ecmaVersion>=6&&this.isContextual("of"))?(t>-1?(this.type===h._in&&this.unexpected(t),n.await=true):f&&this.options.ecmaVersion>=8&&(I.start===x&&!m&&I.type==="Identifier"&&I.name==="async"?this.unexpected():this.options.ecmaVersion>=9&&(n.await=false)),a&&f&&this.raise(I.start,"The left-hand side of a for-of loop may not start with 'let'."),this.toAssignable(I,false,b),this.checkLValPattern(I),this.parseForIn(n,I)):(this.checkExpressionErrors(b,true),t>-1&&this.unexpected(t),this.parseFor(n,I))};L.parseFunctionStatement=function(n,t,e){return this.next(),this.parseFunction(n,Bp|(e?0:OE),false,t)};L.parseIfStatement=function(n){return this.next(),n.test=this.parseParenExpression(),n.consequent=this.parseStatement("if"),n.alternate=this.eat(h._else)?this.parseStatement("if"):null,this.finishNode(n,"IfStatement")};L.parseReturnStatement=function(n){return !this.inFunction&&!this.options.allowReturnOutsideFunction&&this.raise(this.start,"'return' outside of function"),this.next(),this.eat(h.semi)||this.insertSemicolon()?n.argument=null:(n.argument=this.parseExpression(),this.semicolon()),this.finishNode(n,"ReturnStatement")};L.parseSwitchStatement=function(n){this.next(),n.discriminant=this.parseParenExpression(),n.cases=[],this.expect(h.braceL),this.labels.push(h3),this.enterScope(0);for(var t,e=false;this.type!==h.braceR;)if(this.type===h._case||this.type===h._default){var o=this.type===h._case;t&&this.finishNode(t,"SwitchCase"),n.cases.push(t=this.startNode()),t.consequent=[],this.next(),o?t.test=this.parseExpression():(e&&this.raiseRecoverable(this.lastTokStart,"Multiple default clauses"),e=true,t.test=null),this.expect(h.colon);}else t||this.unexpected(),t.consequent.push(this.parseStatement(null));return this.exitScope(),t&&this.finishNode(t,"SwitchCase"),this.next(),this.labels.pop(),this.finishNode(n,"SwitchStatement")};L.parseThrowStatement=function(n){return this.next(),Ct.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,"Illegal newline after throw"),n.argument=this.parseExpression(),this.semicolon(),this.finishNode(n,"ThrowStatement")};var _3=[];L.parseCatchClauseParam=function(){var n=this.parseBindingAtom(),t=n.type==="Identifier";return this.enterScope(t?TN:0),this.checkLValPattern(n,t?kN:qi),this.expect(h.parenR),n};L.parseTryStatement=function(n){if(this.next(),n.block=this.parseBlock(),n.handler=null,this.type===h._catch){var t=this.startNode();this.next(),this.eat(h.parenL)?t.param=this.parseCatchClauseParam():(this.options.ecmaVersion<10&&this.unexpected(),t.param=null,this.enterScope(0)),t.body=this.parseBlock(false),this.exitScope(),n.handler=this.finishNode(t,"CatchClause");}return n.finalizer=this.eat(h._finally)?this.parseBlock():null,!n.handler&&!n.finalizer&&this.raise(n.start,"Missing catch or finally clause"),this.finishNode(n,"TryStatement")};L.parseVarStatement=function(n,t,e){return this.next(),this.parseVar(n,false,t,e),this.semicolon(),this.finishNode(n,"VariableDeclaration")};L.parseWhileStatement=function(n){return this.next(),n.test=this.parseParenExpression(),this.labels.push(GE),n.body=this.parseStatement("while"),this.labels.pop(),this.finishNode(n,"WhileStatement")};L.parseWithStatement=function(n){return this.strict&&this.raise(this.start,"'with' in strict mode"),this.next(),n.object=this.parseParenExpression(),n.body=this.parseStatement("with"),this.finishNode(n,"WithStatement")};L.parseEmptyStatement=function(n){return this.next(),this.finishNode(n,"EmptyStatement")};L.parseLabeledStatement=function(n,t,e,o){for(var r=0,a=this.labels;r<a.length;r+=1){var f=a[r];f.name===t&&this.raise(e.start,"Label '"+t+"' is already declared");}for(var m=this.type.isLoop?"loop":this.type===h._switch?"switch":null,b=this.labels.length-1;b>=0;b--){var x=this.labels[b];if(x.statementStart===n.start)x.statementStart=this.start,x.kind=m;else break}return this.labels.push({name:t,kind:m,statementStart:this.start}),n.body=this.parseStatement(o?o.indexOf("label")===-1?o+"label":o:"label"),this.labels.pop(),n.label=e,this.finishNode(n,"LabeledStatement")};L.parseExpressionStatement=function(n,t){return n.expression=t,this.semicolon(),this.finishNode(n,"ExpressionStatement")};L.parseBlock=function(n,t,e){for(n===void 0&&(n=true),t===void 0&&(t=this.startNode()),t.body=[],this.expect(h.braceL),n&&this.enterScope(0);this.type!==h.braceR;){var o=this.parseStatement(null);t.body.push(o);}return e&&(this.strict=false),this.next(),n&&this.exitScope(),this.finishNode(t,"BlockStatement")};L.parseFor=function(n,t){return n.init=t,this.expect(h.semi),n.test=this.type===h.semi?null:this.parseExpression(),this.expect(h.semi),n.update=this.type===h.parenR?null:this.parseExpression(),this.expect(h.parenR),n.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(n,"ForStatement")};L.parseForIn=function(n,t){var e=this.type===h._in;return this.next(),t.type==="VariableDeclaration"&&t.declarations[0].init!=null&&(!e||this.options.ecmaVersion<8||this.strict||t.kind!=="var"||t.declarations[0].id.type!=="Identifier")&&this.raise(t.start,(e?"for-in":"for-of")+" loop variable declaration may not have an initializer"),n.left=t,n.right=e?this.parseExpression():this.parseMaybeAssign(),this.expect(h.parenR),n.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(n,e?"ForInStatement":"ForOfStatement")};L.parseVar=function(n,t,e,o){for(n.declarations=[],n.kind=e;;){var r=this.startNode();if(this.parseVarId(r,e),this.eat(h.eq)?r.init=this.parseMaybeAssign(t):!o&&e==="const"&&!(this.type===h._in||this.options.ecmaVersion>=6&&this.isContextual("of"))?this.unexpected():!o&&r.id.type!=="Identifier"&&!(t&&(this.type===h._in||this.isContextual("of")))?this.raise(this.lastTokEnd,"Complex binding patterns require an initialization value"):r.init=null,n.declarations.push(this.finishNode(r,"VariableDeclarator")),!this.eat(h.comma))break}return n};L.parseVarId=function(n,t){n.id=this.parseBindingAtom(),this.checkLValPattern(n.id,t==="var"?jE:qi,false);};var Bp=1,OE=2,EN=4;L.parseFunction=function(n,t,e,o,r){this.initFunction(n),(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!o)&&(this.type===h.star&&t&OE&&this.unexpected(),n.generator=this.eat(h.star)),this.options.ecmaVersion>=8&&(n.async=!!o),t&Bp&&(n.id=t&EN&&this.type!==h.name?null:this.parseIdent(),n.id&&!(t&OE)&&this.checkLValSimple(n.id,this.strict||n.generator||n.async?this.treatFunctionsAsVar?jE:qi:IN));var a=this.yieldPos,f=this.awaitPos,m=this.awaitIdentPos;return this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(FE(n.async,n.generator)),t&Bp||(n.id=this.type===h.name?this.parseIdent():null),this.parseFunctionParams(n),this.parseFunctionBody(n,e,false,r),this.yieldPos=a,this.awaitPos=f,this.awaitIdentPos=m,this.finishNode(n,t&Bp?"FunctionDeclaration":"FunctionExpression")};L.parseFunctionParams=function(n){this.expect(h.parenL),n.params=this.parseBindingList(h.parenR,false,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams();};L.parseClass=function(n,t){this.next();var e=this.strict;this.strict=true,this.parseClassId(n,t),this.parseClassSuper(n);var o=this.enterClassBody(),r=this.startNode(),a=false;for(r.body=[],this.expect(h.braceL);this.type!==h.braceR;){var f=this.parseClassElement(n.superClass!==null);f&&(r.body.push(f),f.type==="MethodDefinition"&&f.kind==="constructor"?(a&&this.raiseRecoverable(f.start,"Duplicate constructor in the same class"),a=true):f.key&&f.key.type==="PrivateIdentifier"&&b3(o,f)&&this.raiseRecoverable(f.key.start,"Identifier '#"+f.key.name+"' has already been declared"));}return this.strict=e,this.next(),n.body=this.finishNode(r,"ClassBody"),this.exitClassBody(),this.finishNode(n,t?"ClassDeclaration":"ClassExpression")};L.parseClassElement=function(n){if(this.eat(h.semi))return null;var t=this.options.ecmaVersion,e=this.startNode(),o="",r=false,a=false,f="method",m=false;if(this.eatContextual("static")){if(t>=13&&this.eat(h.braceL))return this.parseClassStaticBlock(e),e;this.isClassElementNameStart()||this.type===h.star?m=true:o="static";}if(e.static=m,!o&&t>=8&&this.eatContextual("async")&&((this.isClassElementNameStart()||this.type===h.star)&&!this.canInsertSemicolon()?a=true:o="async"),!o&&(t>=9||!a)&&this.eat(h.star)&&(r=true),!o&&!a&&!r){var b=this.value;(this.eatContextual("get")||this.eatContextual("set"))&&(this.isClassElementNameStart()?f=b:o=b);}if(o?(e.computed=false,e.key=this.startNodeAt(this.lastTokStart,this.lastTokStartLoc),e.key.name=o,this.finishNode(e.key,"Identifier")):this.parseClassElementName(e),t<13||this.type===h.parenL||f!=="method"||r||a){var x=!e.static&&C_(e,"constructor"),I=x&&n;x&&f!=="method"&&this.raise(e.key.start,"Constructor can't have get/set modifier"),e.kind=x?"constructor":f,this.parseClassMethod(e,r,a,I);}else this.parseClassField(e);return e};L.isClassElementNameStart=function(){return this.type===h.name||this.type===h.privateId||this.type===h.num||this.type===h.string||this.type===h.bracketL||this.type.keyword};L.parseClassElementName=function(n){this.type===h.privateId?(this.value==="constructor"&&this.raise(this.start,"Classes can't have an element named '#constructor'"),n.computed=false,n.key=this.parsePrivateIdent()):this.parsePropertyName(n);};L.parseClassMethod=function(n,t,e,o){var r=n.key;n.kind==="constructor"?(t&&this.raise(r.start,"Constructor can't be a generator"),e&&this.raise(r.start,"Constructor can't be an async method")):n.static&&C_(n,"prototype")&&this.raise(r.start,"Classes may not have a static property named prototype");var a=n.value=this.parseMethod(t,e,o);return n.kind==="get"&&a.params.length!==0&&this.raiseRecoverable(a.start,"getter should have no params"),n.kind==="set"&&a.params.length!==1&&this.raiseRecoverable(a.start,"setter should have exactly one param"),n.kind==="set"&&a.params[0].type==="RestElement"&&this.raiseRecoverable(a.params[0].start,"Setter cannot use rest params"),this.finishNode(n,"MethodDefinition")};L.parseClassField=function(n){if(C_(n,"constructor")?this.raise(n.key.start,"Classes can't have a field named 'constructor'"):n.static&&C_(n,"prototype")&&this.raise(n.key.start,"Classes can't have a static field named 'prototype'"),this.eat(h.eq)){var t=this.currentThisScope(),e=t.inClassFieldInit;t.inClassFieldInit=true,n.value=this.parseMaybeAssign(),t.inClassFieldInit=e;}else n.value=null;return this.semicolon(),this.finishNode(n,"PropertyDefinition")};L.parseClassStaticBlock=function(n){n.body=[];var t=this.labels;for(this.labels=[],this.enterScope(Vp|YE);this.type!==h.braceR;){var e=this.parseStatement(null);n.body.push(e);}return this.next(),this.exitScope(),this.labels=t,this.finishNode(n,"StaticBlock")};L.parseClassId=function(n,t){this.type===h.name?(n.id=this.parseIdent(),t&&this.checkLValSimple(n.id,qi,false)):(t===true&&this.unexpected(),n.id=null);};L.parseClassSuper=function(n){n.superClass=this.eat(h._extends)?this.parseExprSubscripts(null,false):null;};L.enterClassBody=function(){var n={declared:Object.create(null),used:[]};return this.privateNameStack.push(n),n.declared};L.exitClassBody=function(){var n=this.privateNameStack.pop(),t=n.declared,e=n.used;if(this.options.checkPrivateFields)for(var o=this.privateNameStack.length,r=o===0?null:this.privateNameStack[o-1],a=0;a<e.length;++a){var f=e[a];Yp(t,f.name)||(r?r.used.push(f):this.raiseRecoverable(f.start,"Private field '#"+f.name+"' must be declared in an enclosing class"));}};function b3(n,t){var e=t.key.name,o=n[e],r="true";return t.type==="MethodDefinition"&&(t.kind==="get"||t.kind==="set")&&(r=(t.static?"s":"i")+t.kind),o==="iget"&&r==="iset"||o==="iset"&&r==="iget"||o==="sget"&&r==="sset"||o==="sset"&&r==="sget"?(n[e]="true",false):o?true:(n[e]=r,false)}s(b3,"isPrivateNameConflicted");function C_(n,t){var e=n.computed,o=n.key;return !e&&(o.type==="Identifier"&&o.name===t||o.type==="Literal"&&o.value===t)}s(C_,"checkKeyName");L.parseExportAllDeclaration=function(n,t){return this.options.ecmaVersion>=11&&(this.eatContextual("as")?(n.exported=this.parseModuleExportName(),this.checkExport(t,n.exported,this.lastTokStart)):n.exported=null),this.expectContextual("from"),this.type!==h.string&&this.unexpected(),n.source=this.parseExprAtom(),this.semicolon(),this.finishNode(n,"ExportAllDeclaration")};L.parseExport=function(n,t){if(this.next(),this.eat(h.star))return this.parseExportAllDeclaration(n,t);if(this.eat(h._default))return this.checkExport(t,"default",this.lastTokStart),n.declaration=this.parseExportDefaultDeclaration(),this.finishNode(n,"ExportDefaultDeclaration");if(this.shouldParseExportStatement())n.declaration=this.parseExportDeclaration(n),n.declaration.type==="VariableDeclaration"?this.checkVariableExport(t,n.declaration.declarations):this.checkExport(t,n.declaration.id,n.declaration.id.start),n.specifiers=[],n.source=null;else {if(n.declaration=null,n.specifiers=this.parseExportSpecifiers(t),this.eatContextual("from"))this.type!==h.string&&this.unexpected(),n.source=this.parseExprAtom();else {for(var e=0,o=n.specifiers;e<o.length;e+=1){var r=o[e];this.checkUnreserved(r.local),this.checkLocalExport(r.local),r.local.type==="Literal"&&this.raise(r.local.start,"A string literal cannot be used as an exported binding without `from`.");}n.source=null;}this.semicolon();}return this.finishNode(n,"ExportNamedDeclaration")};L.parseExportDeclaration=function(n){return this.parseStatement(null)};L.parseExportDefaultDeclaration=function(){var n;if(this.type===h._function||(n=this.isAsyncFunction())){var t=this.startNode();return this.next(),n&&this.next(),this.parseFunction(t,Bp|EN,false,n)}else if(this.type===h._class){var e=this.startNode();return this.parseClass(e,"nullableID")}else {var o=this.parseMaybeAssign();return this.semicolon(),o}};L.checkExport=function(n,t,e){n&&(typeof t!="string"&&(t=t.type==="Identifier"?t.name:t.value),Yp(n,t)&&this.raiseRecoverable(e,"Duplicate export '"+t+"'"),n[t]=true);};L.checkPatternExport=function(n,t){var e=t.type;if(e==="Identifier")this.checkExport(n,t,t.start);else if(e==="ObjectPattern")for(var o=0,r=t.properties;o<r.length;o+=1){var a=r[o];this.checkPatternExport(n,a);}else if(e==="ArrayPattern")for(var f=0,m=t.elements;f<m.length;f+=1){var b=m[f];b&&this.checkPatternExport(n,b);}else e==="Property"?this.checkPatternExport(n,t.value):e==="AssignmentPattern"?this.checkPatternExport(n,t.left):e==="RestElement"&&this.checkPatternExport(n,t.argument);};L.checkVariableExport=function(n,t){if(n)for(var e=0,o=t;e<o.length;e+=1){var r=o[e];this.checkPatternExport(n,r.id);}};L.shouldParseExportStatement=function(){return this.type.keyword==="var"||this.type.keyword==="const"||this.type.keyword==="class"||this.type.keyword==="function"||this.isLet()||this.isAsyncFunction()};L.parseExportSpecifier=function(n){var t=this.startNode();return t.local=this.parseModuleExportName(),t.exported=this.eatContextual("as")?this.parseModuleExportName():t.local,this.checkExport(n,t.exported,t.exported.start),this.finishNode(t,"ExportSpecifier")};L.parseExportSpecifiers=function(n){var t=[],e=true;for(this.expect(h.braceL);!this.eat(h.braceR);){if(e)e=false;else if(this.expect(h.comma),this.afterTrailingComma(h.braceR))break;t.push(this.parseExportSpecifier(n));}return t};L.parseImport=function(n){return this.next(),this.type===h.string?(n.specifiers=_3,n.source=this.parseExprAtom()):(n.specifiers=this.parseImportSpecifiers(),this.expectContextual("from"),n.source=this.type===h.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(n,"ImportDeclaration")};L.parseImportSpecifier=function(){var n=this.startNode();return n.imported=this.parseModuleExportName(),this.eatContextual("as")?n.local=this.parseIdent():(this.checkUnreserved(n.imported),n.local=n.imported),this.checkLValSimple(n.local,qi),this.finishNode(n,"ImportSpecifier")};L.parseImportDefaultSpecifier=function(){var n=this.startNode();return n.local=this.parseIdent(),this.checkLValSimple(n.local,qi),this.finishNode(n,"ImportDefaultSpecifier")};L.parseImportNamespaceSpecifier=function(){var n=this.startNode();return this.next(),this.expectContextual("as"),n.local=this.parseIdent(),this.checkLValSimple(n.local,qi),this.finishNode(n,"ImportNamespaceSpecifier")};L.parseImportSpecifiers=function(){var n=[],t=true;if(this.type===h.name&&(n.push(this.parseImportDefaultSpecifier()),!this.eat(h.comma)))return n;if(this.type===h.star)return n.push(this.parseImportNamespaceSpecifier()),n;for(this.expect(h.braceL);!this.eat(h.braceR);){if(t)t=false;else if(this.expect(h.comma),this.afterTrailingComma(h.braceR))break;n.push(this.parseImportSpecifier());}return n};L.parseModuleExportName=function(){if(this.options.ecmaVersion>=13&&this.type===h.string){var n=this.parseLiteral(this.value);return p3.test(n.value)&&this.raise(n.start,"An export name cannot include a lone surrogate."),n}return this.parseIdent(true)};L.adaptDirectivePrologue=function(n){for(var t=0;t<n.length&&this.isDirectiveCandidate(n[t]);++t)n[t].directive=n[t].expression.raw.slice(1,-1);};L.isDirectiveCandidate=function(n){return this.options.ecmaVersion>=5&&n.type==="ExpressionStatement"&&n.expression.type==="Literal"&&typeof n.expression.value=="string"&&(this.input[n.start]==='"'||this.input[n.start]==="'")};var Nt=Ne.prototype;Nt.toAssignable=function(n,t,e){if(this.options.ecmaVersion>=6&&n)switch(n.type){case "Identifier":this.inAsync&&n.name==="await"&&this.raise(n.start,"Cannot use 'await' as identifier inside an async function");break;case "ObjectPattern":case "ArrayPattern":case "AssignmentPattern":case "RestElement":break;case "ObjectExpression":n.type="ObjectPattern",e&&this.checkPatternErrors(e,true);for(var o=0,r=n.properties;o<r.length;o+=1){var a=r[o];this.toAssignable(a,t),a.type==="RestElement"&&(a.argument.type==="ArrayPattern"||a.argument.type==="ObjectPattern")&&this.raise(a.argument.start,"Unexpected token");}break;case "Property":n.kind!=="init"&&this.raise(n.key.start,"Object pattern can't contain getter or setter"),this.toAssignable(n.value,t);break;case "ArrayExpression":n.type="ArrayPattern",e&&this.checkPatternErrors(e,true),this.toAssignableList(n.elements,t);break;case "SpreadElement":n.type="RestElement",this.toAssignable(n.argument,t),n.argument.type==="AssignmentPattern"&&this.raise(n.argument.start,"Rest elements cannot have a default value");break;case "AssignmentExpression":n.operator!=="="&&this.raise(n.left.end,"Only '=' operator can be used for specifying default value."),n.type="AssignmentPattern",delete n.operator,this.toAssignable(n.left,t);break;case "ParenthesizedExpression":this.toAssignable(n.expression,t,e);break;case "ChainExpression":this.raiseRecoverable(n.start,"Optional chaining cannot appear in left-hand side");break;case "MemberExpression":if(!t)break;default:this.raise(n.start,"Assigning to rvalue");}else e&&this.checkPatternErrors(e,true);return n};Nt.toAssignableList=function(n,t){for(var e=n.length,o=0;o<e;o++){var r=n[o];r&&this.toAssignable(r,t);}if(e){var a=n[e-1];this.options.ecmaVersion===6&&t&&a&&a.type==="RestElement"&&a.argument.type!=="Identifier"&&this.unexpected(a.argument.start);}return n};Nt.parseSpread=function(n){var t=this.startNode();return this.next(),t.argument=this.parseMaybeAssign(false,n),this.finishNode(t,"SpreadElement")};Nt.parseRestBinding=function(){var n=this.startNode();return this.next(),this.options.ecmaVersion===6&&this.type!==h.name&&this.unexpected(),n.argument=this.parseBindingAtom(),this.finishNode(n,"RestElement")};Nt.parseBindingAtom=function(){if(this.options.ecmaVersion>=6)switch(this.type){case h.bracketL:var n=this.startNode();return this.next(),n.elements=this.parseBindingList(h.bracketR,true,true),this.finishNode(n,"ArrayPattern");case h.braceL:return this.parseObj(true)}return this.parseIdent()};Nt.parseBindingList=function(n,t,e,o){for(var r=[],a=true;!this.eat(n);)if(a?a=false:this.expect(h.comma),t&&this.type===h.comma)r.push(null);else {if(e&&this.afterTrailingComma(n))break;if(this.type===h.ellipsis){var f=this.parseRestBinding();this.parseBindingListItem(f),r.push(f),this.type===h.comma&&this.raiseRecoverable(this.start,"Comma is not permitted after the rest element"),this.expect(n);break}else r.push(this.parseAssignableListItem(o));}return r};Nt.parseAssignableListItem=function(n){var t=this.parseMaybeDefault(this.start,this.startLoc);return this.parseBindingListItem(t),t};Nt.parseBindingListItem=function(n){return n};Nt.parseMaybeDefault=function(n,t,e){if(e=e||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(h.eq))return e;var o=this.startNodeAt(n,t);return o.left=e,o.right=this.parseMaybeAssign(),this.finishNode(o,"AssignmentPattern")};Nt.checkLValSimple=function(n,t,e){t===void 0&&(t=E_);var o=t!==E_;switch(n.type){case "Identifier":this.strict&&this.reservedWordsStrictBind.test(n.name)&&this.raiseRecoverable(n.start,(o?"Binding ":"Assigning to ")+n.name+" in strict mode"),o&&(t===qi&&n.name==="let"&&this.raiseRecoverable(n.start,"let is disallowed as a lexically bound name"),e&&(Yp(e,n.name)&&this.raiseRecoverable(n.start,"Argument name clash"),e[n.name]=true),t!==SN&&this.declareName(n.name,t,n.start));break;case "ChainExpression":this.raiseRecoverable(n.start,"Optional chaining cannot appear in left-hand side");break;case "MemberExpression":o&&this.raiseRecoverable(n.start,"Binding member expression");break;case "ParenthesizedExpression":return o&&this.raiseRecoverable(n.start,"Binding parenthesized expression"),this.checkLValSimple(n.expression,t,e);default:this.raise(n.start,(o?"Binding":"Assigning to")+" rvalue");}};Nt.checkLValPattern=function(n,t,e){switch(t===void 0&&(t=E_),n.type){case "ObjectPattern":for(var o=0,r=n.properties;o<r.length;o+=1){var a=r[o];this.checkLValInnerPattern(a,t,e);}break;case "ArrayPattern":for(var f=0,m=n.elements;f<m.length;f+=1){var b=m[f];b&&this.checkLValInnerPattern(b,t,e);}break;default:this.checkLValSimple(n,t,e);}};Nt.checkLValInnerPattern=function(n,t,e){switch(t===void 0&&(t=E_),n.type){case "Property":this.checkLValInnerPattern(n.value,t,e);break;case "AssignmentPattern":this.checkLValPattern(n.left,t,e);break;case "RestElement":this.checkLValPattern(n.argument,t,e);break;default:this.checkLValPattern(n,t,e);}};var jt=s(function(t,e,o,r,a){this.token=t,this.isExpr=!!e,this.preserveSpace=!!o,this.override=r,this.generator=!!a;},"TokContext"),le={b_stat:new jt("{",false),b_expr:new jt("{",true),b_tmpl:new jt("${",false),p_stat:new jt("(",false),p_expr:new jt("(",true),q_tmpl:new jt("`",true,true,function(n){return n.tryReadTemplateToken()}),f_stat:new jt("function",false),f_expr:new jt("function",true),f_expr_gen:new jt("function",true,false,null,true),f_gen:new jt("function",false,false,null,true)},ml=Ne.prototype;ml.initialContext=function(){return [le.b_stat]};ml.curContext=function(){return this.context[this.context.length-1]};ml.braceIsBlock=function(n){var t=this.curContext();return t===le.f_expr||t===le.f_stat?true:n===h.colon&&(t===le.b_stat||t===le.b_expr)?!t.isExpr:n===h._return||n===h.name&&this.exprAllowed?Ct.test(this.input.slice(this.lastTokEnd,this.start)):n===h._else||n===h.semi||n===h.eof||n===h.parenR||n===h.arrow?true:n===h.braceL?t===le.b_stat:n===h._var||n===h._const||n===h.name?false:!this.exprAllowed};ml.inGeneratorContext=function(){for(var n=this.context.length-1;n>=1;n--){var t=this.context[n];if(t.token==="function")return t.generator}return  false};ml.updateContext=function(n){var t,e=this.type;e.keyword&&n===h.dot?this.exprAllowed=false:(t=e.updateContext)?t.call(this,n):this.exprAllowed=e.beforeExpr;};ml.overrideContext=function(n){this.curContext()!==n&&(this.context[this.context.length-1]=n);};h.parenR.updateContext=h.braceR.updateContext=function(){if(this.context.length===1){this.exprAllowed=true;return}var n=this.context.pop();n===le.b_stat&&this.curContext().token==="function"&&(n=this.context.pop()),this.exprAllowed=!n.isExpr;};h.braceL.updateContext=function(n){this.context.push(this.braceIsBlock(n)?le.b_stat:le.b_expr),this.exprAllowed=true;};h.dollarBraceL.updateContext=function(){this.context.push(le.b_tmpl),this.exprAllowed=true;};h.parenL.updateContext=function(n){var t=n===h._if||n===h._for||n===h._with||n===h._while;this.context.push(t?le.p_stat:le.p_expr),this.exprAllowed=true;};h.incDec.updateContext=function(){};h._function.updateContext=h._class.updateContext=function(n){n.beforeExpr&&n!==h._else&&!(n===h.semi&&this.curContext()!==le.p_stat)&&!(n===h._return&&Ct.test(this.input.slice(this.lastTokEnd,this.start)))&&!((n===h.colon||n===h.braceL)&&this.curContext()===le.b_stat)?this.context.push(le.f_expr):this.context.push(le.f_stat),this.exprAllowed=false;};h.colon.updateContext=function(){this.curContext().token==="function"&&this.context.pop(),this.exprAllowed=true;};h.backQuote.updateContext=function(){this.curContext()===le.q_tmpl?this.context.pop():this.context.push(le.q_tmpl),this.exprAllowed=false;};h.star.updateContext=function(n){if(n===h._function){var t=this.context.length-1;this.context[t]===le.f_expr?this.context[t]=le.f_expr_gen:this.context[t]=le.f_gen;}this.exprAllowed=true;};h.name.updateContext=function(n){var t=false;this.options.ecmaVersion>=6&&n!==h.dot&&(this.value==="of"&&!this.exprAllowed||this.value==="yield"&&this.inGeneratorContext())&&(t=true),this.exprAllowed=t;};var j=Ne.prototype;j.checkPropClash=function(n,t,e){if(!(this.options.ecmaVersion>=9&&n.type==="SpreadElement")&&!(this.options.ecmaVersion>=6&&(n.computed||n.method||n.shorthand))){var o=n.key,r;switch(o.type){case "Identifier":r=o.name;break;case "Literal":r=String(o.value);break;default:return}var a=n.kind;if(this.options.ecmaVersion>=6){r==="__proto__"&&a==="init"&&(t.proto&&(e?e.doubleProto<0&&(e.doubleProto=o.start):this.raiseRecoverable(o.start,"Redefinition of __proto__ property")),t.proto=true);return}r="$"+r;var f=t[r];if(f){var m;a==="init"?m=this.strict&&f.init||f.get||f.set:m=f.init||f[a],m&&this.raiseRecoverable(o.start,"Redefinition of property");}else f=t[r]={init:false,get:false,set:false};f[a]=true;}};j.parseExpression=function(n,t){var e=this.start,o=this.startLoc,r=this.parseMaybeAssign(n,t);if(this.type===h.comma){var a=this.startNodeAt(e,o);for(a.expressions=[r];this.eat(h.comma);)a.expressions.push(this.parseMaybeAssign(n,t));return this.finishNode(a,"SequenceExpression")}return r};j.parseMaybeAssign=function(n,t,e){if(this.isContextual("yield")){if(this.inGenerator)return this.parseYield(n);this.exprAllowed=false;}var o=false,r=-1,a=-1,f=-1;t?(r=t.parenthesizedAssign,a=t.trailingComma,f=t.doubleProto,t.parenthesizedAssign=t.trailingComma=-1):(t=new A_,o=true);var m=this.start,b=this.startLoc;(this.type===h.parenL||this.type===h.name)&&(this.potentialArrowAt=this.start,this.potentialArrowInForAwait=n==="await");var x=this.parseMaybeConditional(n,t);if(e&&(x=e.call(this,x,m,b)),this.type.isAssign){var I=this.startNodeAt(m,b);return I.operator=this.value,this.type===h.eq&&(x=this.toAssignable(x,false,t)),o||(t.parenthesizedAssign=t.trailingComma=t.doubleProto=-1),t.shorthandAssign>=x.start&&(t.shorthandAssign=-1),this.type===h.eq?this.checkLValPattern(x):this.checkLValSimple(x),I.left=x,this.next(),I.right=this.parseMaybeAssign(n),f>-1&&(t.doubleProto=f),this.finishNode(I,"AssignmentExpression")}else o&&this.checkExpressionErrors(t,true);return r>-1&&(t.parenthesizedAssign=r),a>-1&&(t.trailingComma=a),x};j.parseMaybeConditional=function(n,t){var e=this.start,o=this.startLoc,r=this.parseExprOps(n,t);if(this.checkExpressionErrors(t))return r;if(this.eat(h.question)){var a=this.startNodeAt(e,o);return a.test=r,a.consequent=this.parseMaybeAssign(),this.expect(h.colon),a.alternate=this.parseMaybeAssign(n),this.finishNode(a,"ConditionalExpression")}return r};j.parseExprOps=function(n,t){var e=this.start,o=this.startLoc,r=this.parseMaybeUnary(t,false,false,n);return this.checkExpressionErrors(t)||r.start===e&&r.type==="ArrowFunctionExpression"?r:this.parseExprOp(r,e,o,-1,n)};j.parseExprOp=function(n,t,e,o,r){var a=this.type.binop;if(a!=null&&(!r||this.type!==h._in)&&a>o){var f=this.type===h.logicalOR||this.type===h.logicalAND,m=this.type===h.coalesce;m&&(a=h.logicalAND.binop);var b=this.value;this.next();var x=this.start,I=this.startLoc,k=this.parseExprOp(this.parseMaybeUnary(null,false,false,r),x,I,a,r),S=this.buildBinary(t,e,n,k,b,f||m);return (f&&this.type===h.coalesce||m&&(this.type===h.logicalOR||this.type===h.logicalAND))&&this.raiseRecoverable(this.start,"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"),this.parseExprOp(S,t,e,o,r)}return n};j.buildBinary=function(n,t,e,o,r,a){o.type==="PrivateIdentifier"&&this.raise(o.start,"Private identifier can only be left side of binary expression");var f=this.startNodeAt(n,t);return f.left=e,f.operator=r,f.right=o,this.finishNode(f,a?"LogicalExpression":"BinaryExpression")};j.parseMaybeUnary=function(n,t,e,o){var r=this.start,a=this.startLoc,f;if(this.isContextual("await")&&this.canAwait)f=this.parseAwait(o),t=true;else if(this.type.prefix){var m=this.startNode(),b=this.type===h.incDec;m.operator=this.value,m.prefix=true,this.next(),m.argument=this.parseMaybeUnary(null,true,b,o),this.checkExpressionErrors(n,true),b?this.checkLValSimple(m.argument):this.strict&&m.operator==="delete"&&CN(m.argument)?this.raiseRecoverable(m.start,"Deleting local variable in strict mode"):m.operator==="delete"&&BE(m.argument)?this.raiseRecoverable(m.start,"Private fields can not be deleted"):t=true,f=this.finishNode(m,b?"UpdateExpression":"UnaryExpression");}else if(!t&&this.type===h.privateId)(o||this.privateNameStack.length===0)&&this.options.checkPrivateFields&&this.unexpected(),f=this.parsePrivateIdent(),this.type!==h._in&&this.unexpected();else {if(f=this.parseExprSubscripts(n,o),this.checkExpressionErrors(n))return f;for(;this.type.postfix&&!this.canInsertSemicolon();){var x=this.startNodeAt(r,a);x.operator=this.value,x.prefix=false,x.argument=f,this.checkLValSimple(f),this.next(),f=this.finishNode(x,"UpdateExpression");}}if(!e&&this.eat(h.starstar))if(t)this.unexpected(this.lastTokStart);else return this.buildBinary(r,a,f,this.parseMaybeUnary(null,false,false,o),"**",false);else return f};function CN(n){return n.type==="Identifier"||n.type==="ParenthesizedExpression"&&CN(n.expression)}s(CN,"isLocalVariableAccess");function BE(n){return n.type==="MemberExpression"&&n.property.type==="PrivateIdentifier"||n.type==="ChainExpression"&&BE(n.expression)||n.type==="ParenthesizedExpression"&&BE(n.expression)}s(BE,"isPrivateFieldAccess");j.parseExprSubscripts=function(n,t){var e=this.start,o=this.startLoc,r=this.parseExprAtom(n,t);if(r.type==="ArrowFunctionExpression"&&this.input.slice(this.lastTokStart,this.lastTokEnd)!==")")return r;var a=this.parseSubscripts(r,e,o,false,t);return n&&a.type==="MemberExpression"&&(n.parenthesizedAssign>=a.start&&(n.parenthesizedAssign=-1),n.parenthesizedBind>=a.start&&(n.parenthesizedBind=-1),n.trailingComma>=a.start&&(n.trailingComma=-1)),a};j.parseSubscripts=function(n,t,e,o,r){for(var a=this.options.ecmaVersion>=8&&n.type==="Identifier"&&n.name==="async"&&this.lastTokEnd===n.end&&!this.canInsertSemicolon()&&n.end-n.start===5&&this.potentialArrowAt===n.start,f=false;;){var m=this.parseSubscript(n,t,e,o,a,f,r);if(m.optional&&(f=true),m===n||m.type==="ArrowFunctionExpression"){if(f){var b=this.startNodeAt(t,e);b.expression=m,m=this.finishNode(b,"ChainExpression");}return m}n=m;}};j.shouldParseAsyncArrow=function(){return !this.canInsertSemicolon()&&this.eat(h.arrow)};j.parseSubscriptAsyncArrow=function(n,t,e,o){return this.parseArrowExpression(this.startNodeAt(n,t),e,true,o)};j.parseSubscript=function(n,t,e,o,r,a,f){var m=this.options.ecmaVersion>=11,b=m&&this.eat(h.questionDot);o&&b&&this.raise(this.lastTokStart,"Optional chaining cannot appear in the callee of new expressions");var x=this.eat(h.bracketL);if(x||b&&this.type!==h.parenL&&this.type!==h.backQuote||this.eat(h.dot)){var I=this.startNodeAt(t,e);I.object=n,x?(I.property=this.parseExpression(),this.expect(h.bracketR)):this.type===h.privateId&&n.type!=="Super"?I.property=this.parsePrivateIdent():I.property=this.parseIdent(this.options.allowReserved!=="never"),I.computed=!!x,m&&(I.optional=b),n=this.finishNode(I,"MemberExpression");}else if(!o&&this.eat(h.parenL)){var k=new A_,S=this.yieldPos,P=this.awaitPos,R=this.awaitIdentPos;this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0;var E=this.parseExprList(h.parenR,this.options.ecmaVersion>=8,false,k);if(r&&!b&&this.shouldParseAsyncArrow())return this.checkPatternErrors(k,false),this.checkYieldAwaitInDefaultParams(),this.awaitIdentPos>0&&this.raise(this.awaitIdentPos,"Cannot use 'await' as identifier inside an async function"),this.yieldPos=S,this.awaitPos=P,this.awaitIdentPos=R,this.parseSubscriptAsyncArrow(t,e,E,f);this.checkExpressionErrors(k,true),this.yieldPos=S||this.yieldPos,this.awaitPos=P||this.awaitPos,this.awaitIdentPos=R||this.awaitIdentPos;var U=this.startNodeAt(t,e);U.callee=n,U.arguments=E,m&&(U.optional=b),n=this.finishNode(U,"CallExpression");}else if(this.type===h.backQuote){(b||a)&&this.raise(this.start,"Optional chaining cannot appear in the tag of tagged template expressions");var A=this.startNodeAt(t,e);A.tag=n,A.quasi=this.parseTemplate({isTagged:true}),n=this.finishNode(A,"TaggedTemplateExpression");}return n};j.parseExprAtom=function(n,t,e){this.type===h.slash&&this.readRegexp();var o,r=this.potentialArrowAt===this.start;switch(this.type){case h._super:return this.allowSuper||this.raise(this.start,"'super' keyword outside a method"),o=this.startNode(),this.next(),this.type===h.parenL&&!this.allowDirectSuper&&this.raise(o.start,"super() call outside constructor of a subclass"),this.type!==h.dot&&this.type!==h.bracketL&&this.type!==h.parenL&&this.unexpected(),this.finishNode(o,"Super");case h._this:return o=this.startNode(),this.next(),this.finishNode(o,"ThisExpression");case h.name:var a=this.start,f=this.startLoc,m=this.containsEsc,b=this.parseIdent(false);if(this.options.ecmaVersion>=8&&!m&&b.name==="async"&&!this.canInsertSemicolon()&&this.eat(h._function))return this.overrideContext(le.f_expr),this.parseFunction(this.startNodeAt(a,f),0,false,true,t);if(r&&!this.canInsertSemicolon()){if(this.eat(h.arrow))return this.parseArrowExpression(this.startNodeAt(a,f),[b],false,t);if(this.options.ecmaVersion>=8&&b.name==="async"&&this.type===h.name&&!m&&(!this.potentialArrowInForAwait||this.value!=="of"||this.containsEsc))return b=this.parseIdent(false),(this.canInsertSemicolon()||!this.eat(h.arrow))&&this.unexpected(),this.parseArrowExpression(this.startNodeAt(a,f),[b],true,t)}return b;case h.regexp:var x=this.value;return o=this.parseLiteral(x.value),o.regex={pattern:x.pattern,flags:x.flags},o;case h.num:case h.string:return this.parseLiteral(this.value);case h._null:case h._true:case h._false:return o=this.startNode(),o.value=this.type===h._null?null:this.type===h._true,o.raw=this.type.keyword,this.next(),this.finishNode(o,"Literal");case h.parenL:var I=this.start,k=this.parseParenAndDistinguishExpression(r,t);return n&&(n.parenthesizedAssign<0&&!this.isSimpleAssignTarget(k)&&(n.parenthesizedAssign=I),n.parenthesizedBind<0&&(n.parenthesizedBind=I)),k;case h.bracketL:return o=this.startNode(),this.next(),o.elements=this.parseExprList(h.bracketR,true,true,n),this.finishNode(o,"ArrayExpression");case h.braceL:return this.overrideContext(le.b_expr),this.parseObj(false,n);case h._function:return o=this.startNode(),this.next(),this.parseFunction(o,0);case h._class:return this.parseClass(this.startNode(),false);case h._new:return this.parseNew();case h.backQuote:return this.parseTemplate();case h._import:return this.options.ecmaVersion>=11?this.parseExprImport(e):this.unexpected();default:return this.parseExprAtomDefault()}};j.parseExprAtomDefault=function(){this.unexpected();};j.parseExprImport=function(n){var t=this.startNode();if(this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword import"),this.next(),this.type===h.parenL&&!n)return this.parseDynamicImport(t);if(this.type===h.dot){var e=this.startNodeAt(t.start,t.loc&&t.loc.start);return e.name="import",t.meta=this.finishNode(e,"Identifier"),this.parseImportMeta(t)}else this.unexpected();};j.parseDynamicImport=function(n){if(this.next(),n.source=this.parseMaybeAssign(),!this.eat(h.parenR)){var t=this.start;this.eat(h.comma)&&this.eat(h.parenR)?this.raiseRecoverable(t,"Trailing comma is not allowed in import()"):this.unexpected(t);}return this.finishNode(n,"ImportExpression")};j.parseImportMeta=function(n){this.next();var t=this.containsEsc;return n.property=this.parseIdent(true),n.property.name!=="meta"&&this.raiseRecoverable(n.property.start,"The only valid meta property for import is 'import.meta'"),t&&this.raiseRecoverable(n.start,"'import.meta' must not contain escaped characters"),this.options.sourceType!=="module"&&!this.options.allowImportExportEverywhere&&this.raiseRecoverable(n.start,"Cannot use 'import.meta' outside a module"),this.finishNode(n,"MetaProperty")};j.parseLiteral=function(n){var t=this.startNode();return t.value=n,t.raw=this.input.slice(this.start,this.end),t.raw.charCodeAt(t.raw.length-1)===110&&(t.bigint=t.raw.slice(0,-1).replace(/_/g,"")),this.next(),this.finishNode(t,"Literal")};j.parseParenExpression=function(){this.expect(h.parenL);var n=this.parseExpression();return this.expect(h.parenR),n};j.shouldParseArrow=function(n){return !this.canInsertSemicolon()};j.parseParenAndDistinguishExpression=function(n,t){var e=this.start,o=this.startLoc,r,a=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var f=this.start,m=this.startLoc,b=[],x=true,I=false,k=new A_,S=this.yieldPos,P=this.awaitPos,R;for(this.yieldPos=0,this.awaitPos=0;this.type!==h.parenR;)if(x?x=false:this.expect(h.comma),a&&this.afterTrailingComma(h.parenR,true)){I=true;break}else if(this.type===h.ellipsis){R=this.start,b.push(this.parseParenItem(this.parseRestBinding())),this.type===h.comma&&this.raiseRecoverable(this.start,"Comma is not permitted after the rest element");break}else b.push(this.parseMaybeAssign(false,k,this.parseParenItem));var E=this.lastTokEnd,U=this.lastTokEndLoc;if(this.expect(h.parenR),n&&this.shouldParseArrow(b)&&this.eat(h.arrow))return this.checkPatternErrors(k,false),this.checkYieldAwaitInDefaultParams(),this.yieldPos=S,this.awaitPos=P,this.parseParenArrowList(e,o,b,t);(!b.length||I)&&this.unexpected(this.lastTokStart),R&&this.unexpected(R),this.checkExpressionErrors(k,true),this.yieldPos=S||this.yieldPos,this.awaitPos=P||this.awaitPos,b.length>1?(r=this.startNodeAt(f,m),r.expressions=b,this.finishNodeAt(r,"SequenceExpression",E,U)):r=b[0];}else r=this.parseParenExpression();if(this.options.preserveParens){var A=this.startNodeAt(e,o);return A.expression=r,this.finishNode(A,"ParenthesizedExpression")}else return r};j.parseParenItem=function(n){return n};j.parseParenArrowList=function(n,t,e,o){return this.parseArrowExpression(this.startNodeAt(n,t),e,false,o)};var y3=[];j.parseNew=function(){this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword new");var n=this.startNode();if(this.next(),this.options.ecmaVersion>=6&&this.type===h.dot){var t=this.startNodeAt(n.start,n.loc&&n.loc.start);t.name="new",n.meta=this.finishNode(t,"Identifier"),this.next();var e=this.containsEsc;return n.property=this.parseIdent(true),n.property.name!=="target"&&this.raiseRecoverable(n.property.start,"The only valid meta property for new is 'new.target'"),e&&this.raiseRecoverable(n.start,"'new.target' must not contain escaped characters"),this.allowNewDotTarget||this.raiseRecoverable(n.start,"'new.target' can only be used in functions and class static block"),this.finishNode(n,"MetaProperty")}var o=this.start,r=this.startLoc;return n.callee=this.parseSubscripts(this.parseExprAtom(null,false,true),o,r,true,false),this.eat(h.parenL)?n.arguments=this.parseExprList(h.parenR,this.options.ecmaVersion>=8,false):n.arguments=y3,this.finishNode(n,"NewExpression")};j.parseTemplateElement=function(n){var t=n.isTagged,e=this.startNode();return this.type===h.invalidTemplate?(t||this.raiseRecoverable(this.start,"Bad escape sequence in untagged template literal"),e.value={raw:this.value.replace(/\r\n?/g,`
`),cooked:null}):e.value={raw:this.input.slice(this.start,this.end).replace(/\r\n?/g,`
`),cooked:this.value},this.next(),e.tail=this.type===h.backQuote,this.finishNode(e,"TemplateElement")};j.parseTemplate=function(n){n===void 0&&(n={});var t=n.isTagged;t===void 0&&(t=false);var e=this.startNode();this.next(),e.expressions=[];var o=this.parseTemplateElement({isTagged:t});for(e.quasis=[o];!o.tail;)this.type===h.eof&&this.raise(this.pos,"Unterminated template literal"),this.expect(h.dollarBraceL),e.expressions.push(this.parseExpression()),this.expect(h.braceR),e.quasis.push(o=this.parseTemplateElement({isTagged:t}));return this.next(),this.finishNode(e,"TemplateLiteral")};j.isAsyncProp=function(n){return !n.computed&&n.key.type==="Identifier"&&n.key.name==="async"&&(this.type===h.name||this.type===h.num||this.type===h.string||this.type===h.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===h.star)&&!Ct.test(this.input.slice(this.lastTokEnd,this.start))};j.parseObj=function(n,t){var e=this.startNode(),o=true,r={};for(e.properties=[],this.next();!this.eat(h.braceR);){if(o)o=false;else if(this.expect(h.comma),this.options.ecmaVersion>=5&&this.afterTrailingComma(h.braceR))break;var a=this.parseProperty(n,t);n||this.checkPropClash(a,r,t),e.properties.push(a);}return this.finishNode(e,n?"ObjectPattern":"ObjectExpression")};j.parseProperty=function(n,t){var e=this.startNode(),o,r,a,f;if(this.options.ecmaVersion>=9&&this.eat(h.ellipsis))return n?(e.argument=this.parseIdent(false),this.type===h.comma&&this.raiseRecoverable(this.start,"Comma is not permitted after the rest element"),this.finishNode(e,"RestElement")):(e.argument=this.parseMaybeAssign(false,t),this.type===h.comma&&t&&t.trailingComma<0&&(t.trailingComma=this.start),this.finishNode(e,"SpreadElement"));this.options.ecmaVersion>=6&&(e.method=false,e.shorthand=false,(n||t)&&(a=this.start,f=this.startLoc),n||(o=this.eat(h.star)));var m=this.containsEsc;return this.parsePropertyName(e),!n&&!m&&this.options.ecmaVersion>=8&&!o&&this.isAsyncProp(e)?(r=true,o=this.options.ecmaVersion>=9&&this.eat(h.star),this.parsePropertyName(e)):r=false,this.parsePropertyValue(e,n,o,r,a,f,t,m),this.finishNode(e,"Property")};j.parseGetterSetter=function(n){n.kind=n.key.name,this.parsePropertyName(n),n.value=this.parseMethod(false);var t=n.kind==="get"?0:1;if(n.value.params.length!==t){var e=n.value.start;n.kind==="get"?this.raiseRecoverable(e,"getter should have no params"):this.raiseRecoverable(e,"setter should have exactly one param");}else n.kind==="set"&&n.value.params[0].type==="RestElement"&&this.raiseRecoverable(n.value.params[0].start,"Setter cannot use rest params");};j.parsePropertyValue=function(n,t,e,o,r,a,f,m){(e||o)&&this.type===h.colon&&this.unexpected(),this.eat(h.colon)?(n.value=t?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(false,f),n.kind="init"):this.options.ecmaVersion>=6&&this.type===h.parenL?(t&&this.unexpected(),n.kind="init",n.method=true,n.value=this.parseMethod(e,o)):!t&&!m&&this.options.ecmaVersion>=5&&!n.computed&&n.key.type==="Identifier"&&(n.key.name==="get"||n.key.name==="set")&&this.type!==h.comma&&this.type!==h.braceR&&this.type!==h.eq?((e||o)&&this.unexpected(),this.parseGetterSetter(n)):this.options.ecmaVersion>=6&&!n.computed&&n.key.type==="Identifier"?((e||o)&&this.unexpected(),this.checkUnreserved(n.key),n.key.name==="await"&&!this.awaitIdentPos&&(this.awaitIdentPos=r),n.kind="init",t?n.value=this.parseMaybeDefault(r,a,this.copyNode(n.key)):this.type===h.eq&&f?(f.shorthandAssign<0&&(f.shorthandAssign=this.start),n.value=this.parseMaybeDefault(r,a,this.copyNode(n.key))):n.value=this.copyNode(n.key),n.shorthand=true):this.unexpected();};j.parsePropertyName=function(n){if(this.options.ecmaVersion>=6){if(this.eat(h.bracketL))return n.computed=true,n.key=this.parseMaybeAssign(),this.expect(h.bracketR),n.key;n.computed=false;}return n.key=this.type===h.num||this.type===h.string?this.parseExprAtom():this.parseIdent(this.options.allowReserved!=="never")};j.initFunction=function(n){n.id=null,this.options.ecmaVersion>=6&&(n.generator=n.expression=false),this.options.ecmaVersion>=8&&(n.async=false);};j.parseMethod=function(n,t,e){var o=this.startNode(),r=this.yieldPos,a=this.awaitPos,f=this.awaitIdentPos;return this.initFunction(o),this.options.ecmaVersion>=6&&(o.generator=n),this.options.ecmaVersion>=8&&(o.async=!!t),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(FE(t,o.generator)|YE|(e?vN:0)),this.expect(h.parenL),o.params=this.parseBindingList(h.parenR,false,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBody(o,false,true,false),this.yieldPos=r,this.awaitPos=a,this.awaitIdentPos=f,this.finishNode(o,"FunctionExpression")};j.parseArrowExpression=function(n,t,e,o){var r=this.yieldPos,a=this.awaitPos,f=this.awaitIdentPos;return this.enterScope(FE(e,false)|wN),this.initFunction(n),this.options.ecmaVersion>=8&&(n.async=!!e),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,n.params=this.toAssignableList(t,true),this.parseFunctionBody(n,true,false,o),this.yieldPos=r,this.awaitPos=a,this.awaitIdentPos=f,this.finishNode(n,"ArrowFunctionExpression")};j.parseFunctionBody=function(n,t,e,o){var r=t&&this.type!==h.braceL,a=this.strict,f=false;if(r)n.body=this.parseMaybeAssign(o),n.expression=true,this.checkParams(n,false);else {var m=this.options.ecmaVersion>=7&&!this.isSimpleParamList(n.params);(!a||m)&&(f=this.strictDirective(this.end),f&&m&&this.raiseRecoverable(n.start,"Illegal 'use strict' directive in function with non-simple parameter list"));var b=this.labels;this.labels=[],f&&(this.strict=true),this.checkParams(n,!a&&!f&&!t&&!e&&this.isSimpleParamList(n.params)),this.strict&&n.id&&this.checkLValSimple(n.id,SN),n.body=this.parseBlock(false,void 0,f&&!a),n.expression=false,this.adaptDirectivePrologue(n.body.body),this.labels=b;}this.exitScope();};j.isSimpleParamList=function(n){for(var t=0,e=n;t<e.length;t+=1){var o=e[t];if(o.type!=="Identifier")return  false}return  true};j.checkParams=function(n,t){for(var e=Object.create(null),o=0,r=n.params;o<r.length;o+=1){var a=r[o];this.checkLValInnerPattern(a,jE,t?null:e);}};j.parseExprList=function(n,t,e,o){for(var r=[],a=true;!this.eat(n);){if(a)a=false;else if(this.expect(h.comma),t&&this.afterTrailingComma(n))break;var f=void 0;e&&this.type===h.comma?f=null:this.type===h.ellipsis?(f=this.parseSpread(o),o&&this.type===h.comma&&o.trailingComma<0&&(o.trailingComma=this.start)):f=this.parseMaybeAssign(false,o),r.push(f);}return r};j.checkUnreserved=function(n){var t=n.start,e=n.end,o=n.name;if(this.inGenerator&&o==="yield"&&this.raiseRecoverable(t,"Cannot use 'yield' as identifier inside a generator"),this.inAsync&&o==="await"&&this.raiseRecoverable(t,"Cannot use 'await' as identifier inside an async function"),this.currentThisScope().inClassFieldInit&&o==="arguments"&&this.raiseRecoverable(t,"Cannot use 'arguments' in class field initializer"),this.inClassStaticBlock&&(o==="arguments"||o==="await")&&this.raise(t,"Cannot use "+o+" in class static initialization block"),this.keywords.test(o)&&this.raise(t,"Unexpected keyword '"+o+"'"),!(this.options.ecmaVersion<6&&this.input.slice(t,e).indexOf("\\")!==-1)){var r=this.strict?this.reservedWordsStrict:this.reservedWords;r.test(o)&&(!this.inAsync&&o==="await"&&this.raiseRecoverable(t,"Cannot use keyword 'await' outside an async function"),this.raiseRecoverable(t,"The keyword '"+o+"' is reserved"));}};j.parseIdent=function(n){var t=this.parseIdentNode();return this.next(!!n),this.finishNode(t,"Identifier"),n||(this.checkUnreserved(t),t.name==="await"&&!this.awaitIdentPos&&(this.awaitIdentPos=t.start)),t};j.parseIdentNode=function(){var n=this.startNode();return this.type===h.name?n.name=this.value:this.type.keyword?(n.name=this.type.keyword,(n.name==="class"||n.name==="function")&&(this.lastTokEnd!==this.lastTokStart+1||this.input.charCodeAt(this.lastTokStart)!==46)&&this.context.pop(),this.type=h.name):this.unexpected(),n};j.parsePrivateIdent=function(){var n=this.startNode();return this.type===h.privateId?n.name=this.value:this.unexpected(),this.next(),this.finishNode(n,"PrivateIdentifier"),this.options.checkPrivateFields&&(this.privateNameStack.length===0?this.raise(n.start,"Private field '#"+n.name+"' must be declared in an enclosing class"):this.privateNameStack[this.privateNameStack.length-1].used.push(n)),n};j.parseYield=function(n){this.yieldPos||(this.yieldPos=this.start);var t=this.startNode();return this.next(),this.type===h.semi||this.canInsertSemicolon()||this.type!==h.star&&!this.type.startsExpr?(t.delegate=false,t.argument=null):(t.delegate=this.eat(h.star),t.argument=this.parseMaybeAssign(n)),this.finishNode(t,"YieldExpression")};j.parseAwait=function(n){this.awaitPos||(this.awaitPos=this.start);var t=this.startNode();return this.next(),t.argument=this.parseMaybeUnary(null,true,false,n),this.finishNode(t,"AwaitExpression")};var N_=Ne.prototype;N_.raise=function(n,t){var e=xN(this.input,n);t+=" ("+e.line+":"+e.column+")";var o=new SyntaxError(t);throw o.pos=n,o.loc=e,o.raisedAt=this.pos,o};N_.raiseRecoverable=N_.raise;N_.curPosition=function(){if(this.options.locations)return new Lp(this.curLine,this.pos-this.lineStart)};var mo=Ne.prototype,x3=s(function(t){this.flags=t,this.var=[],this.lexical=[],this.functions=[],this.inClassFieldInit=false;},"Scope");mo.enterScope=function(n){this.scopeStack.push(new x3(n));};mo.exitScope=function(){this.scopeStack.pop();};mo.treatFunctionsAsVarInScope=function(n){return n.flags&dl||!this.inModule&&n.flags&Up};mo.declareName=function(n,t,e){var o=false;if(t===qi){var r=this.currentScope();o=r.lexical.indexOf(n)>-1||r.functions.indexOf(n)>-1||r.var.indexOf(n)>-1,r.lexical.push(n),this.inModule&&r.flags&Up&&delete this.undefinedExports[n];}else if(t===kN){var a=this.currentScope();a.lexical.push(n);}else if(t===IN){var f=this.currentScope();this.treatFunctionsAsVar?o=f.lexical.indexOf(n)>-1:o=f.lexical.indexOf(n)>-1||f.var.indexOf(n)>-1,f.functions.push(n);}else for(var m=this.scopeStack.length-1;m>=0;--m){var b=this.scopeStack[m];if(b.lexical.indexOf(n)>-1&&!(b.flags&TN&&b.lexical[0]===n)||!this.treatFunctionsAsVarInScope(b)&&b.functions.indexOf(n)>-1){o=true;break}if(b.var.push(n),this.inModule&&b.flags&Up&&delete this.undefinedExports[n],b.flags&VE)break}o&&this.raiseRecoverable(e,"Identifier '"+n+"' has already been declared");};mo.checkLocalExport=function(n){this.scopeStack[0].lexical.indexOf(n.name)===-1&&this.scopeStack[0].var.indexOf(n.name)===-1&&(this.undefinedExports[n.name]=n);};mo.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]};mo.currentVarScope=function(){for(var n=this.scopeStack.length-1;;n--){var t=this.scopeStack[n];if(t.flags&VE)return t}};mo.currentThisScope=function(){for(var n=this.scopeStack.length-1;;n--){var t=this.scopeStack[n];if(t.flags&VE&&!(t.flags&wN))return t}};var M_=s(function(t,e,o){this.type="",this.start=e,this.end=0,t.options.locations&&(this.loc=new P_(t,o)),t.options.directSourceFile&&(this.sourceFile=t.options.directSourceFile),t.options.ranges&&(this.range=[e,0]);},"Node"),Fp=Ne.prototype;Fp.startNode=function(){return new M_(this,this.start,this.startLoc)};Fp.startNodeAt=function(n,t){return new M_(this,n,t)};function NN(n,t,e,o){return n.type=t,n.end=e,this.options.locations&&(n.loc.end=o),this.options.ranges&&(n.range[1]=e),n}s(NN,"finishNodeAt");Fp.finishNode=function(n,t){return NN.call(this,n,t,this.lastTokEnd,this.lastTokEndLoc)};Fp.finishNodeAt=function(n,t,e,o){return NN.call(this,n,t,e,o)};Fp.copyNode=function(n){var t=new M_(this,n.start,this.startLoc);for(var e in n)t[e]=n[e];return t};var RN="ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS",PN=RN+" Extended_Pictographic",AN=PN,MN=AN+" EBase EComp EMod EPres ExtPict",DN=MN,g3=DN,w3={9:RN,10:PN,11:AN,12:MN,13:DN,14:g3},T3="Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji",v3={9:"",10:"",11:"",12:"",13:"",14:T3},fN="Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu",ON="Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb",BN=ON+" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd",LN=BN+" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho",UN=LN+" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi",YN=UN+" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith",I3=YN+" Hrkt Katakana_Or_Hiragana Kawi Nag_Mundari Nagm Unknown Zzzz",k3={9:ON,10:BN,11:LN,12:UN,13:YN,14:I3},VN={};function S3(n){var t=VN[n]={binary:po(w3[n]+" "+fN),binaryOfStrings:po(v3[n]),nonBinary:{General_Category:po(fN),Script:po(k3[n])}};t.nonBinary.Script_Extensions=t.nonBinary.Script,t.nonBinary.gc=t.nonBinary.General_Category,t.nonBinary.sc=t.nonBinary.Script,t.nonBinary.scx=t.nonBinary.Script_Extensions;}s(S3,"buildUnicodeData");for(S_=0,AE=[9,10,11,12,13,14];S_<AE.length;S_+=1)dN=AE[S_],S3(dN);var dN,S_,AE,O=Ne.prototype,R_=s(function(t,e){this.parent=t,this.base=e||this;},"BranchID");R_.prototype.separatedFrom=s(function(t){for(var e=this;e;e=e.parent)for(var o=t;o;o=o.parent)if(e.base===o.base&&e!==o)return  true;return  false},"separatedFrom");R_.prototype.sibling=s(function(){return new R_(this.parent,this.base)},"sibling");var mi=s(function(t){this.parser=t,this.validFlags="gim"+(t.options.ecmaVersion>=6?"uy":"")+(t.options.ecmaVersion>=9?"s":"")+(t.options.ecmaVersion>=13?"d":"")+(t.options.ecmaVersion>=15?"v":""),this.unicodeProperties=VN[t.options.ecmaVersion>=14?14:t.options.ecmaVersion],this.source="",this.flags="",this.start=0,this.switchU=false,this.switchV=false,this.switchN=false,this.pos=0,this.lastIntValue=0,this.lastStringValue="",this.lastAssertionIsQuantifiable=false,this.numCapturingParens=0,this.maxBackReference=0,this.groupNames=Object.create(null),this.backReferenceNames=[],this.branchID=null;},"RegExpValidationState");mi.prototype.reset=s(function(t,e,o){var r=o.indexOf("v")!==-1,a=o.indexOf("u")!==-1;this.start=t|0,this.source=e+"",this.flags=o,r&&this.parser.options.ecmaVersion>=15?(this.switchU=true,this.switchV=true,this.switchN=true):(this.switchU=a&&this.parser.options.ecmaVersion>=6,this.switchV=false,this.switchN=a&&this.parser.options.ecmaVersion>=9);},"reset");mi.prototype.raise=s(function(t){this.parser.raiseRecoverable(this.start,"Invalid regular expression: /"+this.source+"/: "+t);},"raise");mi.prototype.at=s(function(t,e){e===void 0&&(e=false);var o=this.source,r=o.length;if(t>=r)return  -1;var a=o.charCodeAt(t);if(!(e||this.switchU)||a<=55295||a>=57344||t+1>=r)return a;var f=o.charCodeAt(t+1);return f>=56320&&f<=57343?(a<<10)+f-56613888:a},"at");mi.prototype.nextIndex=s(function(t,e){e===void 0&&(e=false);var o=this.source,r=o.length;if(t>=r)return r;var a=o.charCodeAt(t),f;return !(e||this.switchU)||a<=55295||a>=57344||t+1>=r||(f=o.charCodeAt(t+1))<56320||f>57343?t+1:t+2},"nextIndex");mi.prototype.current=s(function(t){return t===void 0&&(t=false),this.at(this.pos,t)},"current");mi.prototype.lookahead=s(function(t){return t===void 0&&(t=false),this.at(this.nextIndex(this.pos,t),t)},"lookahead");mi.prototype.advance=s(function(t){t===void 0&&(t=false),this.pos=this.nextIndex(this.pos,t);},"advance");mi.prototype.eat=s(function(t,e){return e===void 0&&(e=false),this.current(e)===t?(this.advance(e),true):false},"eat");mi.prototype.eatChars=s(function(t,e){e===void 0&&(e=false);for(var o=this.pos,r=0,a=t;r<a.length;r+=1){var f=a[r],m=this.at(o,e);if(m===-1||m!==f)return  false;o=this.nextIndex(o,e);}return this.pos=o,true},"eatChars");O.validateRegExpFlags=function(n){for(var t=n.validFlags,e=n.flags,o=false,r=false,a=0;a<e.length;a++){var f=e.charAt(a);t.indexOf(f)===-1&&this.raise(n.start,"Invalid regular expression flag"),e.indexOf(f,a+1)>-1&&this.raise(n.start,"Duplicate regular expression flag"),f==="u"&&(o=true),f==="v"&&(r=true);}this.options.ecmaVersion>=15&&o&&r&&this.raise(n.start,"Invalid regular expression flag");};function E3(n){for(var t in n)return  true;return  false}s(E3,"hasProp");O.validateRegExpPattern=function(n){this.regexp_pattern(n),!n.switchN&&this.options.ecmaVersion>=9&&E3(n.groupNames)&&(n.switchN=true,this.regexp_pattern(n));};O.regexp_pattern=function(n){n.pos=0,n.lastIntValue=0,n.lastStringValue="",n.lastAssertionIsQuantifiable=false,n.numCapturingParens=0,n.maxBackReference=0,n.groupNames=Object.create(null),n.backReferenceNames.length=0,n.branchID=null,this.regexp_disjunction(n),n.pos!==n.source.length&&(n.eat(41)&&n.raise("Unmatched ')'"),(n.eat(93)||n.eat(125))&&n.raise("Lone quantifier brackets")),n.maxBackReference>n.numCapturingParens&&n.raise("Invalid escape");for(var t=0,e=n.backReferenceNames;t<e.length;t+=1){var o=e[t];n.groupNames[o]||n.raise("Invalid named capture referenced");}};O.regexp_disjunction=function(n){var t=this.options.ecmaVersion>=16;for(t&&(n.branchID=new R_(n.branchID,null)),this.regexp_alternative(n);n.eat(124);)t&&(n.branchID=n.branchID.sibling()),this.regexp_alternative(n);t&&(n.branchID=n.branchID.parent),this.regexp_eatQuantifier(n,true)&&n.raise("Nothing to repeat"),n.eat(123)&&n.raise("Lone quantifier brackets");};O.regexp_alternative=function(n){for(;n.pos<n.source.length&&this.regexp_eatTerm(n););};O.regexp_eatTerm=function(n){return this.regexp_eatAssertion(n)?(n.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(n)&&n.switchU&&n.raise("Invalid quantifier"),true):(n.switchU?this.regexp_eatAtom(n):this.regexp_eatExtendedAtom(n))?(this.regexp_eatQuantifier(n),true):false};O.regexp_eatAssertion=function(n){var t=n.pos;if(n.lastAssertionIsQuantifiable=false,n.eat(94)||n.eat(36))return  true;if(n.eat(92)){if(n.eat(66)||n.eat(98))return  true;n.pos=t;}if(n.eat(40)&&n.eat(63)){var e=false;if(this.options.ecmaVersion>=9&&(e=n.eat(60)),n.eat(61)||n.eat(33))return this.regexp_disjunction(n),n.eat(41)||n.raise("Unterminated group"),n.lastAssertionIsQuantifiable=!e,true}return n.pos=t,false};O.regexp_eatQuantifier=function(n,t){return t===void 0&&(t=false),this.regexp_eatQuantifierPrefix(n,t)?(n.eat(63),true):false};O.regexp_eatQuantifierPrefix=function(n,t){return n.eat(42)||n.eat(43)||n.eat(63)||this.regexp_eatBracedQuantifier(n,t)};O.regexp_eatBracedQuantifier=function(n,t){var e=n.pos;if(n.eat(123)){var o=0,r=-1;if(this.regexp_eatDecimalDigits(n)&&(o=n.lastIntValue,n.eat(44)&&this.regexp_eatDecimalDigits(n)&&(r=n.lastIntValue),n.eat(125)))return r!==-1&&r<o&&!t&&n.raise("numbers out of order in {} quantifier"),true;n.switchU&&!t&&n.raise("Incomplete quantifier"),n.pos=e;}return  false};O.regexp_eatAtom=function(n){return this.regexp_eatPatternCharacters(n)||n.eat(46)||this.regexp_eatReverseSolidusAtomEscape(n)||this.regexp_eatCharacterClass(n)||this.regexp_eatUncapturingGroup(n)||this.regexp_eatCapturingGroup(n)};O.regexp_eatReverseSolidusAtomEscape=function(n){var t=n.pos;if(n.eat(92)){if(this.regexp_eatAtomEscape(n))return  true;n.pos=t;}return  false};O.regexp_eatUncapturingGroup=function(n){var t=n.pos;if(n.eat(40)){if(n.eat(63)&&n.eat(58)){if(this.regexp_disjunction(n),n.eat(41))return  true;n.raise("Unterminated group");}n.pos=t;}return  false};O.regexp_eatCapturingGroup=function(n){if(n.eat(40)){if(this.options.ecmaVersion>=9?this.regexp_groupSpecifier(n):n.current()===63&&n.raise("Invalid group"),this.regexp_disjunction(n),n.eat(41))return n.numCapturingParens+=1,true;n.raise("Unterminated group");}return  false};O.regexp_eatExtendedAtom=function(n){return n.eat(46)||this.regexp_eatReverseSolidusAtomEscape(n)||this.regexp_eatCharacterClass(n)||this.regexp_eatUncapturingGroup(n)||this.regexp_eatCapturingGroup(n)||this.regexp_eatInvalidBracedQuantifier(n)||this.regexp_eatExtendedPatternCharacter(n)};O.regexp_eatInvalidBracedQuantifier=function(n){return this.regexp_eatBracedQuantifier(n,true)&&n.raise("Nothing to repeat"),false};O.regexp_eatSyntaxCharacter=function(n){var t=n.current();return FN(t)?(n.lastIntValue=t,n.advance(),true):false};function FN(n){return n===36||n>=40&&n<=43||n===46||n===63||n>=91&&n<=94||n>=123&&n<=125}s(FN,"isSyntaxCharacter");O.regexp_eatPatternCharacters=function(n){for(var t=n.pos,e=0;(e=n.current())!==-1&&!FN(e);)n.advance();return n.pos!==t};O.regexp_eatExtendedPatternCharacter=function(n){var t=n.current();return t!==-1&&t!==36&&!(t>=40&&t<=43)&&t!==46&&t!==63&&t!==91&&t!==94&&t!==124?(n.advance(),true):false};O.regexp_groupSpecifier=function(n){if(n.eat(63)){this.regexp_eatGroupName(n)||n.raise("Invalid group");var t=this.options.ecmaVersion>=16,e=n.groupNames[n.lastStringValue];if(e)if(t)for(var o=0,r=e;o<r.length;o+=1){var a=r[o];a.separatedFrom(n.branchID)||n.raise("Duplicate capture group name");}else n.raise("Duplicate capture group name");t?(e||(n.groupNames[n.lastStringValue]=[])).push(n.branchID):n.groupNames[n.lastStringValue]=true;}};O.regexp_eatGroupName=function(n){if(n.lastStringValue="",n.eat(60)){if(this.regexp_eatRegExpIdentifierName(n)&&n.eat(62))return  true;n.raise("Invalid capture group name");}return  false};O.regexp_eatRegExpIdentifierName=function(n){if(n.lastStringValue="",this.regexp_eatRegExpIdentifierStart(n)){for(n.lastStringValue+=fo(n.lastIntValue);this.regexp_eatRegExpIdentifierPart(n);)n.lastStringValue+=fo(n.lastIntValue);return  true}return  false};O.regexp_eatRegExpIdentifierStart=function(n){var t=n.pos,e=this.options.ecmaVersion>=11,o=n.current(e);return n.advance(e),o===92&&this.regexp_eatRegExpUnicodeEscapeSequence(n,e)&&(o=n.lastIntValue),C3(o)?(n.lastIntValue=o,true):(n.pos=t,false)};function C3(n){return Hi(n,true)||n===36||n===95}s(C3,"isRegExpIdentifierStart");O.regexp_eatRegExpIdentifierPart=function(n){var t=n.pos,e=this.options.ecmaVersion>=11,o=n.current(e);return n.advance(e),o===92&&this.regexp_eatRegExpUnicodeEscapeSequence(n,e)&&(o=n.lastIntValue),N3(o)?(n.lastIntValue=o,true):(n.pos=t,false)};function N3(n){return pl(n,true)||n===36||n===95||n===8204||n===8205}s(N3,"isRegExpIdentifierPart");O.regexp_eatAtomEscape=function(n){return this.regexp_eatBackReference(n)||this.regexp_eatCharacterClassEscape(n)||this.regexp_eatCharacterEscape(n)||n.switchN&&this.regexp_eatKGroupName(n)?true:(n.switchU&&(n.current()===99&&n.raise("Invalid unicode escape"),n.raise("Invalid escape")),false)};O.regexp_eatBackReference=function(n){var t=n.pos;if(this.regexp_eatDecimalEscape(n)){var e=n.lastIntValue;if(n.switchU)return e>n.maxBackReference&&(n.maxBackReference=e),true;if(e<=n.numCapturingParens)return  true;n.pos=t;}return  false};O.regexp_eatKGroupName=function(n){if(n.eat(107)){if(this.regexp_eatGroupName(n))return n.backReferenceNames.push(n.lastStringValue),true;n.raise("Invalid named reference");}return  false};O.regexp_eatCharacterEscape=function(n){return this.regexp_eatControlEscape(n)||this.regexp_eatCControlLetter(n)||this.regexp_eatZero(n)||this.regexp_eatHexEscapeSequence(n)||this.regexp_eatRegExpUnicodeEscapeSequence(n,false)||!n.switchU&&this.regexp_eatLegacyOctalEscapeSequence(n)||this.regexp_eatIdentityEscape(n)};O.regexp_eatCControlLetter=function(n){var t=n.pos;if(n.eat(99)){if(this.regexp_eatControlLetter(n))return  true;n.pos=t;}return  false};O.regexp_eatZero=function(n){return n.current()===48&&!D_(n.lookahead())?(n.lastIntValue=0,n.advance(),true):false};O.regexp_eatControlEscape=function(n){var t=n.current();return t===116?(n.lastIntValue=9,n.advance(),true):t===110?(n.lastIntValue=10,n.advance(),true):t===118?(n.lastIntValue=11,n.advance(),true):t===102?(n.lastIntValue=12,n.advance(),true):t===114?(n.lastIntValue=13,n.advance(),true):false};O.regexp_eatControlLetter=function(n){var t=n.current();return jN(t)?(n.lastIntValue=t%32,n.advance(),true):false};function jN(n){return n>=65&&n<=90||n>=97&&n<=122}s(jN,"isControlLetter");O.regexp_eatRegExpUnicodeEscapeSequence=function(n,t){t===void 0&&(t=false);var e=n.pos,o=t||n.switchU;if(n.eat(117)){if(this.regexp_eatFixedHexDigits(n,4)){var r=n.lastIntValue;if(o&&r>=55296&&r<=56319){var a=n.pos;if(n.eat(92)&&n.eat(117)&&this.regexp_eatFixedHexDigits(n,4)){var f=n.lastIntValue;if(f>=56320&&f<=57343)return n.lastIntValue=(r-55296)*1024+(f-56320)+65536,true}n.pos=a,n.lastIntValue=r;}return  true}if(o&&n.eat(123)&&this.regexp_eatHexDigits(n)&&n.eat(125)&&R3(n.lastIntValue))return  true;o&&n.raise("Invalid unicode escape"),n.pos=e;}return  false};function R3(n){return n>=0&&n<=1114111}s(R3,"isValidUnicode");O.regexp_eatIdentityEscape=function(n){if(n.switchU)return this.regexp_eatSyntaxCharacter(n)?true:n.eat(47)?(n.lastIntValue=47,true):false;var t=n.current();return t!==99&&(!n.switchN||t!==107)?(n.lastIntValue=t,n.advance(),true):false};O.regexp_eatDecimalEscape=function(n){n.lastIntValue=0;var t=n.current();if(t>=49&&t<=57){do n.lastIntValue=10*n.lastIntValue+(t-48),n.advance();while((t=n.current())>=48&&t<=57);return  true}return  false};var GN=0,Ki=1,Et=2;O.regexp_eatCharacterClassEscape=function(n){var t=n.current();if(P3(t))return n.lastIntValue=-1,n.advance(),Ki;var e=false;if(n.switchU&&this.options.ecmaVersion>=9&&((e=t===80)||t===112)){n.lastIntValue=-1,n.advance();var o;if(n.eat(123)&&(o=this.regexp_eatUnicodePropertyValueExpression(n))&&n.eat(125))return e&&o===Et&&n.raise("Invalid property name"),o;n.raise("Invalid property name");}return GN};function P3(n){return n===100||n===68||n===115||n===83||n===119||n===87}s(P3,"isCharacterClassEscape");O.regexp_eatUnicodePropertyValueExpression=function(n){var t=n.pos;if(this.regexp_eatUnicodePropertyName(n)&&n.eat(61)){var e=n.lastStringValue;if(this.regexp_eatUnicodePropertyValue(n)){var o=n.lastStringValue;return this.regexp_validateUnicodePropertyNameAndValue(n,e,o),Ki}}if(n.pos=t,this.regexp_eatLoneUnicodePropertyNameOrValue(n)){var r=n.lastStringValue;return this.regexp_validateUnicodePropertyNameOrValue(n,r)}return GN};O.regexp_validateUnicodePropertyNameAndValue=function(n,t,e){Yp(n.unicodeProperties.nonBinary,t)||n.raise("Invalid property name"),n.unicodeProperties.nonBinary[t].test(e)||n.raise("Invalid property value");};O.regexp_validateUnicodePropertyNameOrValue=function(n,t){if(n.unicodeProperties.binary.test(t))return Ki;if(n.switchV&&n.unicodeProperties.binaryOfStrings.test(t))return Et;n.raise("Invalid property name");};O.regexp_eatUnicodePropertyName=function(n){var t=0;for(n.lastStringValue="";WN(t=n.current());)n.lastStringValue+=fo(t),n.advance();return n.lastStringValue!==""};function WN(n){return jN(n)||n===95}s(WN,"isUnicodePropertyNameCharacter");O.regexp_eatUnicodePropertyValue=function(n){var t=0;for(n.lastStringValue="";A3(t=n.current());)n.lastStringValue+=fo(t),n.advance();return n.lastStringValue!==""};function A3(n){return WN(n)||D_(n)}s(A3,"isUnicodePropertyValueCharacter");O.regexp_eatLoneUnicodePropertyNameOrValue=function(n){return this.regexp_eatUnicodePropertyValue(n)};O.regexp_eatCharacterClass=function(n){if(n.eat(91)){var t=n.eat(94),e=this.regexp_classContents(n);return n.eat(93)||n.raise("Unterminated character class"),t&&e===Et&&n.raise("Negated character class may contain strings"),true}return  false};O.regexp_classContents=function(n){return n.current()===93?Ki:n.switchV?this.regexp_classSetExpression(n):(this.regexp_nonEmptyClassRanges(n),Ki)};O.regexp_nonEmptyClassRanges=function(n){for(;this.regexp_eatClassAtom(n);){var t=n.lastIntValue;if(n.eat(45)&&this.regexp_eatClassAtom(n)){var e=n.lastIntValue;n.switchU&&(t===-1||e===-1)&&n.raise("Invalid character class"),t!==-1&&e!==-1&&t>e&&n.raise("Range out of order in character class");}}};O.regexp_eatClassAtom=function(n){var t=n.pos;if(n.eat(92)){if(this.regexp_eatClassEscape(n))return  true;if(n.switchU){var e=n.current();(e===99||qN(e))&&n.raise("Invalid class escape"),n.raise("Invalid escape");}n.pos=t;}var o=n.current();return o!==93?(n.lastIntValue=o,n.advance(),true):false};O.regexp_eatClassEscape=function(n){var t=n.pos;if(n.eat(98))return n.lastIntValue=8,true;if(n.switchU&&n.eat(45))return n.lastIntValue=45,true;if(!n.switchU&&n.eat(99)){if(this.regexp_eatClassControlLetter(n))return  true;n.pos=t;}return this.regexp_eatCharacterClassEscape(n)||this.regexp_eatCharacterEscape(n)};O.regexp_classSetExpression=function(n){var t=Ki,e;if(!this.regexp_eatClassSetRange(n))if(e=this.regexp_eatClassSetOperand(n)){e===Et&&(t=Et);for(var o=n.pos;n.eatChars([38,38]);){if(n.current()!==38&&(e=this.regexp_eatClassSetOperand(n))){e!==Et&&(t=Ki);continue}n.raise("Invalid character in character class");}if(o!==n.pos)return t;for(;n.eatChars([45,45]);)this.regexp_eatClassSetOperand(n)||n.raise("Invalid character in character class");if(o!==n.pos)return t}else n.raise("Invalid character in character class");for(;;)if(!this.regexp_eatClassSetRange(n)){if(e=this.regexp_eatClassSetOperand(n),!e)return t;e===Et&&(t=Et);}};O.regexp_eatClassSetRange=function(n){var t=n.pos;if(this.regexp_eatClassSetCharacter(n)){var e=n.lastIntValue;if(n.eat(45)&&this.regexp_eatClassSetCharacter(n)){var o=n.lastIntValue;return e!==-1&&o!==-1&&e>o&&n.raise("Range out of order in character class"),true}n.pos=t;}return  false};O.regexp_eatClassSetOperand=function(n){return this.regexp_eatClassSetCharacter(n)?Ki:this.regexp_eatClassStringDisjunction(n)||this.regexp_eatNestedClass(n)};O.regexp_eatNestedClass=function(n){var t=n.pos;if(n.eat(91)){var e=n.eat(94),o=this.regexp_classContents(n);if(n.eat(93))return e&&o===Et&&n.raise("Negated character class may contain strings"),o;n.pos=t;}if(n.eat(92)){var r=this.regexp_eatCharacterClassEscape(n);if(r)return r;n.pos=t;}return null};O.regexp_eatClassStringDisjunction=function(n){var t=n.pos;if(n.eatChars([92,113])){if(n.eat(123)){var e=this.regexp_classStringDisjunctionContents(n);if(n.eat(125))return e}else n.raise("Invalid escape");n.pos=t;}return null};O.regexp_classStringDisjunctionContents=function(n){for(var t=this.regexp_classString(n);n.eat(124);)this.regexp_classString(n)===Et&&(t=Et);return t};O.regexp_classString=function(n){for(var t=0;this.regexp_eatClassSetCharacter(n);)t++;return t===1?Ki:Et};O.regexp_eatClassSetCharacter=function(n){var t=n.pos;if(n.eat(92))return this.regexp_eatCharacterEscape(n)||this.regexp_eatClassSetReservedPunctuator(n)?true:n.eat(98)?(n.lastIntValue=8,true):(n.pos=t,false);var e=n.current();return e<0||e===n.lookahead()&&M3(e)||D3(e)?false:(n.advance(),n.lastIntValue=e,true)};function M3(n){return n===33||n>=35&&n<=38||n>=42&&n<=44||n===46||n>=58&&n<=64||n===94||n===96||n===126}s(M3,"isClassSetReservedDoublePunctuatorCharacter");function D3(n){return n===40||n===41||n===45||n===47||n>=91&&n<=93||n>=123&&n<=125}s(D3,"isClassSetSyntaxCharacter");O.regexp_eatClassSetReservedPunctuator=function(n){var t=n.current();return O3(t)?(n.lastIntValue=t,n.advance(),true):false};function O3(n){return n===33||n===35||n===37||n===38||n===44||n===45||n>=58&&n<=62||n===64||n===96||n===126}s(O3,"isClassSetReservedPunctuator");O.regexp_eatClassControlLetter=function(n){var t=n.current();return D_(t)||t===95?(n.lastIntValue=t%32,n.advance(),true):false};O.regexp_eatHexEscapeSequence=function(n){var t=n.pos;if(n.eat(120)){if(this.regexp_eatFixedHexDigits(n,2))return  true;n.switchU&&n.raise("Invalid escape"),n.pos=t;}return  false};O.regexp_eatDecimalDigits=function(n){var t=n.pos,e=0;for(n.lastIntValue=0;D_(e=n.current());)n.lastIntValue=10*n.lastIntValue+(e-48),n.advance();return n.pos!==t};function D_(n){return n>=48&&n<=57}s(D_,"isDecimalDigit");O.regexp_eatHexDigits=function(n){var t=n.pos,e=0;for(n.lastIntValue=0;HN(e=n.current());)n.lastIntValue=16*n.lastIntValue+KN(e),n.advance();return n.pos!==t};function HN(n){return n>=48&&n<=57||n>=65&&n<=70||n>=97&&n<=102}s(HN,"isHexDigit");function KN(n){return n>=65&&n<=70?10+(n-65):n>=97&&n<=102?10+(n-97):n-48}s(KN,"hexToInt");O.regexp_eatLegacyOctalEscapeSequence=function(n){if(this.regexp_eatOctalDigit(n)){var t=n.lastIntValue;if(this.regexp_eatOctalDigit(n)){var e=n.lastIntValue;t<=3&&this.regexp_eatOctalDigit(n)?n.lastIntValue=t*64+e*8+n.lastIntValue:n.lastIntValue=t*8+e;}else n.lastIntValue=t;return  true}return  false};O.regexp_eatOctalDigit=function(n){var t=n.current();return qN(t)?(n.lastIntValue=t-48,n.advance(),true):(n.lastIntValue=0,false)};function qN(n){return n>=48&&n<=55}s(qN,"isOctalDigit");O.regexp_eatFixedHexDigits=function(n,t){var e=n.pos;n.lastIntValue=0;for(var o=0;o<t;++o){var r=n.current();if(!HN(r))return n.pos=e,false;n.lastIntValue=16*n.lastIntValue+KN(r),n.advance();}return  true};var WE=s(function(t){this.type=t.type,this.value=t.value,this.start=t.start,this.end=t.end,t.options.locations&&(this.loc=new P_(t,t.startLoc,t.endLoc)),t.options.ranges&&(this.range=[t.start,t.end]);},"Token"),$=Ne.prototype;$.next=function(n){!n&&this.type.keyword&&this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword "+this.type.keyword),this.options.onToken&&this.options.onToken(new WE(this)),this.lastTokEnd=this.end,this.lastTokStart=this.start,this.lastTokEndLoc=this.endLoc,this.lastTokStartLoc=this.startLoc,this.nextToken();};$.getToken=function(){return this.next(),new WE(this)};typeof Symbol<"u"&&($[Symbol.iterator]=function(){var n=this;return {next:s(function(){var t=n.getToken();return {done:t.type===h.eof,value:t}},"next")}});$.nextToken=function(){var n=this.curContext();if((!n||!n.preserveSpace)&&this.skipSpace(),this.start=this.pos,this.options.locations&&(this.startLoc=this.curPosition()),this.pos>=this.input.length)return this.finishToken(h.eof);if(n.override)return n.override(this);this.readToken(this.fullCharCodeAtPos());};$.readToken=function(n){return Hi(n,this.options.ecmaVersion>=6)||n===92?this.readWord():this.getTokenFromCode(n)};$.fullCharCodeAtPos=function(){var n=this.input.charCodeAt(this.pos);if(n<=55295||n>=56320)return n;var t=this.input.charCodeAt(this.pos+1);return t<=56319||t>=57344?n:(n<<10)+t-56613888};$.skipBlockComment=function(){var n=this.options.onComment&&this.curPosition(),t=this.pos,e=this.input.indexOf("*/",this.pos+=2);if(e===-1&&this.raise(this.pos-2,"Unterminated comment"),this.pos=e+2,this.options.locations)for(var o=void 0,r=t;(o=_N(this.input,r,this.pos))>-1;)++this.curLine,r=this.lineStart=o;this.options.onComment&&this.options.onComment(true,this.input.slice(t+2,e),t,this.pos,n,this.curPosition());};$.skipLineComment=function(n){for(var t=this.pos,e=this.options.onComment&&this.curPosition(),o=this.input.charCodeAt(this.pos+=n);this.pos<this.input.length&&!fl(o);)o=this.input.charCodeAt(++this.pos);this.options.onComment&&this.options.onComment(false,this.input.slice(t+n,this.pos),t,this.pos,e,this.curPosition());};$.skipSpace=function(){e:for(;this.pos<this.input.length;){var n=this.input.charCodeAt(this.pos);switch(n){case 32:case 160:++this.pos;break;case 13:this.input.charCodeAt(this.pos+1)===10&&++this.pos;case 10:case 8232:case 8233:++this.pos,this.options.locations&&(++this.curLine,this.lineStart=this.pos);break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break e}break;default:if(n>8&&n<14||n>=5760&&bN.test(String.fromCharCode(n)))++this.pos;else break e}}};$.finishToken=function(n,t){this.end=this.pos,this.options.locations&&(this.endLoc=this.curPosition());var e=this.type;this.type=n,this.value=t,this.updateContext(e);};$.readToken_dot=function(){var n=this.input.charCodeAt(this.pos+1);if(n>=48&&n<=57)return this.readNumber(true);var t=this.input.charCodeAt(this.pos+2);return this.options.ecmaVersion>=6&&n===46&&t===46?(this.pos+=3,this.finishToken(h.ellipsis)):(++this.pos,this.finishToken(h.dot))};$.readToken_slash=function(){var n=this.input.charCodeAt(this.pos+1);return this.exprAllowed?(++this.pos,this.readRegexp()):n===61?this.finishOp(h.assign,2):this.finishOp(h.slash,1)};$.readToken_mult_modulo_exp=function(n){var t=this.input.charCodeAt(this.pos+1),e=1,o=n===42?h.star:h.modulo;return this.options.ecmaVersion>=7&&n===42&&t===42&&(++e,o=h.starstar,t=this.input.charCodeAt(this.pos+2)),t===61?this.finishOp(h.assign,e+1):this.finishOp(o,e)};$.readToken_pipe_amp=function(n){var t=this.input.charCodeAt(this.pos+1);if(t===n){if(this.options.ecmaVersion>=12){var e=this.input.charCodeAt(this.pos+2);if(e===61)return this.finishOp(h.assign,3)}return this.finishOp(n===124?h.logicalOR:h.logicalAND,2)}return t===61?this.finishOp(h.assign,2):this.finishOp(n===124?h.bitwiseOR:h.bitwiseAND,1)};$.readToken_caret=function(){var n=this.input.charCodeAt(this.pos+1);return n===61?this.finishOp(h.assign,2):this.finishOp(h.bitwiseXOR,1)};$.readToken_plus_min=function(n){var t=this.input.charCodeAt(this.pos+1);return t===n?t===45&&!this.inModule&&this.input.charCodeAt(this.pos+2)===62&&(this.lastTokEnd===0||Ct.test(this.input.slice(this.lastTokEnd,this.pos)))?(this.skipLineComment(3),this.skipSpace(),this.nextToken()):this.finishOp(h.incDec,2):t===61?this.finishOp(h.assign,2):this.finishOp(h.plusMin,1)};$.readToken_lt_gt=function(n){var t=this.input.charCodeAt(this.pos+1),e=1;return t===n?(e=n===62&&this.input.charCodeAt(this.pos+2)===62?3:2,this.input.charCodeAt(this.pos+e)===61?this.finishOp(h.assign,e+1):this.finishOp(h.bitShift,e)):t===33&&n===60&&!this.inModule&&this.input.charCodeAt(this.pos+2)===45&&this.input.charCodeAt(this.pos+3)===45?(this.skipLineComment(4),this.skipSpace(),this.nextToken()):(t===61&&(e=2),this.finishOp(h.relational,e))};$.readToken_eq_excl=function(n){var t=this.input.charCodeAt(this.pos+1);return t===61?this.finishOp(h.equality,this.input.charCodeAt(this.pos+2)===61?3:2):n===61&&t===62&&this.options.ecmaVersion>=6?(this.pos+=2,this.finishToken(h.arrow)):this.finishOp(n===61?h.eq:h.prefix,1)};$.readToken_question=function(){var n=this.options.ecmaVersion;if(n>=11){var t=this.input.charCodeAt(this.pos+1);if(t===46){var e=this.input.charCodeAt(this.pos+2);if(e<48||e>57)return this.finishOp(h.questionDot,2)}if(t===63){if(n>=12){var o=this.input.charCodeAt(this.pos+2);if(o===61)return this.finishOp(h.assign,3)}return this.finishOp(h.coalesce,2)}}return this.finishOp(h.question,1)};$.readToken_numberSign=function(){var n=this.options.ecmaVersion,t=35;if(n>=13&&(++this.pos,t=this.fullCharCodeAtPos(),Hi(t,true)||t===92))return this.finishToken(h.privateId,this.readWord1());this.raise(this.pos,"Unexpected character '"+fo(t)+"'");};$.getTokenFromCode=function(n){switch(n){case 46:return this.readToken_dot();case 40:return ++this.pos,this.finishToken(h.parenL);case 41:return ++this.pos,this.finishToken(h.parenR);case 59:return ++this.pos,this.finishToken(h.semi);case 44:return ++this.pos,this.finishToken(h.comma);case 91:return ++this.pos,this.finishToken(h.bracketL);case 93:return ++this.pos,this.finishToken(h.bracketR);case 123:return ++this.pos,this.finishToken(h.braceL);case 125:return ++this.pos,this.finishToken(h.braceR);case 58:return ++this.pos,this.finishToken(h.colon);case 96:if(this.options.ecmaVersion<6)break;return ++this.pos,this.finishToken(h.backQuote);case 48:var t=this.input.charCodeAt(this.pos+1);if(t===120||t===88)return this.readRadixNumber(16);if(this.options.ecmaVersion>=6){if(t===111||t===79)return this.readRadixNumber(8);if(t===98||t===66)return this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(false);case 34:case 39:return this.readString(n);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(n);case 124:case 38:return this.readToken_pipe_amp(n);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(n);case 60:case 62:return this.readToken_lt_gt(n);case 61:case 33:return this.readToken_eq_excl(n);case 63:return this.readToken_question();case 126:return this.finishOp(h.prefix,1);case 35:return this.readToken_numberSign()}this.raise(this.pos,"Unexpected character '"+fo(n)+"'");};$.finishOp=function(n,t){var e=this.input.slice(this.pos,this.pos+t);return this.pos+=t,this.finishToken(n,e)};$.readRegexp=function(){for(var n,t,e=this.pos;;){this.pos>=this.input.length&&this.raise(e,"Unterminated regular expression");var o=this.input.charAt(this.pos);if(Ct.test(o)&&this.raise(e,"Unterminated regular expression"),n)n=false;else {if(o==="[")t=true;else if(o==="]"&&t)t=false;else if(o==="/"&&!t)break;n=o==="\\";}++this.pos;}var r=this.input.slice(e,this.pos);++this.pos;var a=this.pos,f=this.readWord1();this.containsEsc&&this.unexpected(a);var m=this.regexpState||(this.regexpState=new mi(this));m.reset(e,r,f),this.validateRegExpFlags(m),this.validateRegExpPattern(m);var b=null;try{b=new RegExp(r,f);}catch{}return this.finishToken(h.regexp,{pattern:r,flags:f,value:b})};$.readInt=function(n,t,e){for(var o=this.options.ecmaVersion>=12&&t===void 0,r=e&&this.input.charCodeAt(this.pos)===48,a=this.pos,f=0,m=0,b=0,x=t??1/0;b<x;++b,++this.pos){var I=this.input.charCodeAt(this.pos),k=void 0;if(o&&I===95){r&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed in legacy octal numeric literals"),m===95&&this.raiseRecoverable(this.pos,"Numeric separator must be exactly one underscore"),b===0&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed at the first of digits"),m=I;continue}if(I>=97?k=I-97+10:I>=65?k=I-65+10:I>=48&&I<=57?k=I-48:k=1/0,k>=n)break;m=I,f=f*n+k;}return o&&m===95&&this.raiseRecoverable(this.pos-1,"Numeric separator is not allowed at the last of digits"),this.pos===a||t!=null&&this.pos-a!==t?null:f};function B3(n,t){return t?parseInt(n,8):parseFloat(n.replace(/_/g,""))}s(B3,"stringToNumber");function $N(n){return typeof BigInt!="function"?null:BigInt(n.replace(/_/g,""))}s($N,"stringToBigInt");$.readRadixNumber=function(n){var t=this.pos;this.pos+=2;var e=this.readInt(n);return e==null&&this.raise(this.start+2,"Expected number in radix "+n),this.options.ecmaVersion>=11&&this.input.charCodeAt(this.pos)===110?(e=$N(this.input.slice(t,this.pos)),++this.pos):Hi(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(h.num,e)};$.readNumber=function(n){var t=this.pos;!n&&this.readInt(10,void 0,true)===null&&this.raise(t,"Invalid number");var e=this.pos-t>=2&&this.input.charCodeAt(t)===48;e&&this.strict&&this.raise(t,"Invalid number");var o=this.input.charCodeAt(this.pos);if(!e&&!n&&this.options.ecmaVersion>=11&&o===110){var r=$N(this.input.slice(t,this.pos));return ++this.pos,Hi(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(h.num,r)}e&&/[89]/.test(this.input.slice(t,this.pos))&&(e=false),o===46&&!e&&(++this.pos,this.readInt(10),o=this.input.charCodeAt(this.pos)),(o===69||o===101)&&!e&&(o=this.input.charCodeAt(++this.pos),(o===43||o===45)&&++this.pos,this.readInt(10)===null&&this.raise(t,"Invalid number")),Hi(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number");var a=B3(this.input.slice(t,this.pos),e);return this.finishToken(h.num,a)};$.readCodePoint=function(){var n=this.input.charCodeAt(this.pos),t;if(n===123){this.options.ecmaVersion<6&&this.unexpected();var e=++this.pos;t=this.readHexChar(this.input.indexOf("}",this.pos)-this.pos),++this.pos,t>1114111&&this.invalidStringToken(e,"Code point out of bounds");}else t=this.readHexChar(4);return t};$.readString=function(n){for(var t="",e=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");var o=this.input.charCodeAt(this.pos);if(o===n)break;o===92?(t+=this.input.slice(e,this.pos),t+=this.readEscapedChar(false),e=this.pos):o===8232||o===8233?(this.options.ecmaVersion<10&&this.raise(this.start,"Unterminated string constant"),++this.pos,this.options.locations&&(this.curLine++,this.lineStart=this.pos)):(fl(o)&&this.raise(this.start,"Unterminated string constant"),++this.pos);}return t+=this.input.slice(e,this.pos++),this.finishToken(h.string,t)};var zN={};$.tryReadTemplateToken=function(){this.inTemplateElement=true;try{this.readTmplToken();}catch(n){if(n===zN)this.readInvalidTemplateToken();else throw n}this.inTemplateElement=false;};$.invalidStringToken=function(n,t){if(this.inTemplateElement&&this.options.ecmaVersion>=9)throw zN;this.raise(n,t);};$.readTmplToken=function(){for(var n="",t=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated template");var e=this.input.charCodeAt(this.pos);if(e===96||e===36&&this.input.charCodeAt(this.pos+1)===123)return this.pos===this.start&&(this.type===h.template||this.type===h.invalidTemplate)?e===36?(this.pos+=2,this.finishToken(h.dollarBraceL)):(++this.pos,this.finishToken(h.backQuote)):(n+=this.input.slice(t,this.pos),this.finishToken(h.template,n));if(e===92)n+=this.input.slice(t,this.pos),n+=this.readEscapedChar(true),t=this.pos;else if(fl(e)){switch(n+=this.input.slice(t,this.pos),++this.pos,e){case 13:this.input.charCodeAt(this.pos)===10&&++this.pos;case 10:n+=`
`;break;default:n+=String.fromCharCode(e);break}this.options.locations&&(++this.curLine,this.lineStart=this.pos),t=this.pos;}else ++this.pos;}};$.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++)switch(this.input[this.pos]){case "\\":++this.pos;break;case "$":if(this.input[this.pos+1]!=="{")break;case "`":return this.finishToken(h.invalidTemplate,this.input.slice(this.start,this.pos));case "\r":this.input[this.pos+1]===`
`&&++this.pos;case `
`:case "\u2028":case "\u2029":++this.curLine,this.lineStart=this.pos+1;break}this.raise(this.start,"Unterminated template");};$.readEscapedChar=function(n){var t=this.input.charCodeAt(++this.pos);switch(++this.pos,t){case 110:return `
`;case 114:return "\r";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return fo(this.readCodePoint());case 116:return "	";case 98:return "\b";case 118:return "\v";case 102:return "\f";case 13:this.input.charCodeAt(this.pos)===10&&++this.pos;case 10:return this.options.locations&&(this.lineStart=this.pos,++this.curLine),"";case 56:case 57:if(this.strict&&this.invalidStringToken(this.pos-1,"Invalid escape sequence"),n){var e=this.pos-1;this.invalidStringToken(e,"Invalid escape sequence in template string");}default:if(t>=48&&t<=55){var o=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0],r=parseInt(o,8);return r>255&&(o=o.slice(0,-1),r=parseInt(o,8)),this.pos+=o.length-1,t=this.input.charCodeAt(this.pos),(o!=="0"||t===56||t===57)&&(this.strict||n)&&this.invalidStringToken(this.pos-1-o.length,n?"Octal literal in template string":"Octal literal in strict mode"),String.fromCharCode(r)}return fl(t)?(this.options.locations&&(this.lineStart=this.pos,++this.curLine),""):String.fromCharCode(t)}};$.readHexChar=function(n){var t=this.pos,e=this.readInt(16,n);return e===null&&this.invalidStringToken(t,"Bad character escape sequence"),e};$.readWord1=function(){this.containsEsc=false;for(var n="",t=true,e=this.pos,o=this.options.ecmaVersion>=6;this.pos<this.input.length;){var r=this.fullCharCodeAtPos();if(pl(r,o))this.pos+=r<=65535?1:2;else if(r===92){this.containsEsc=true,n+=this.input.slice(e,this.pos);var a=this.pos;this.input.charCodeAt(++this.pos)!==117&&this.invalidStringToken(this.pos,"Expecting Unicode escape sequence \\uXXXX"),++this.pos;var f=this.readCodePoint();(t?Hi:pl)(f,o)||this.invalidStringToken(a,"Invalid Unicode escape"),n+=fo(f),e=this.pos;}else break;t=false;}return n+this.input.slice(e,this.pos)};$.readWord=function(){var n=this.readWord1(),t=h.name;return this.keywords.test(n)&&(t=LE[n]),this.finishToken(t,n)};var L3="8.12.1";Ne.acorn={Parser:Ne,version:L3,defaultOptions:DE,Position:Lp,SourceLocation:P_,getLineInfo:xN,Node:M_,TokenType:Q,tokTypes:h,keywordTypes:LE,TokContext:jt,tokContexts:le,isIdentifierChar:pl,isIdentifierStart:Hi,Token:WE,isNewLine:fl,lineBreak:Ct,lineBreakG:c3,nonASCIIwhitespace:bN};function JN(n,t){return Ne.parse(n,t)}s(JN,"parse");var U3=function(n,t,e,o,r){if(typeof t=="function"?n!==t||true:!t.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");return t.set(n,e),e},Y3=function(n,t,e,o){if(typeof t=="function"?n!==t||!o:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e==="m"?o:e==="a"?o.call(n):o?o.value:t.get(n)},O_,B_=class B_{constructor(){O_.set(this,[]),this.visitor=new Op,this.scope=this.visitor.scope,this.scope.set("print",t=>{}),this.defineObject("console",console),this.defineObject("Math",Math),this.defineObject("String",String),this.defineObject("Number",Number),this.defineObject("Array",Array),this.defineObject("Date",Date);}defineObject(t,e){this.visitor.on(t,(o,r)=>{if(o.type==="Identifier")return e;if(o.type==="CallExpression"&&o.callee.type==="MemberExpression"){let a=r.visitNode(o.callee.property),f=o.arguments.map(b=>r.visitNode(b)),m=e[a];return m?m.apply(e,f):"__continue_exec"}return "__continue_exec"});}evaluate(t){let e=B_.parseScript(t);return U3(this,O_,e.body),this.visitor.setAST(Y3(this,O_,"f")),this.visitor.run()}static parseScript(t,e){try{return JN(t,{ecmaVersion:2020,...e||{}})}catch(o){let r=o.message.match(/\((\d+):(\d+)\)/);if(r){let a=parseInt(r[1],10),f=parseInt(r[2],10),b=t.split(`
`)[a-1],x=b?b.substring(Math.max(0,f-10),f+10):"";throw new lo(`${o.message.replace(/\(.*\)/,"").trim()} at line ${a}, column ${f}: ${x}`,{errorLine:b})}else throw new lo(o.message)}}};s(B_,"Jinter");var Gt=B_;O_=new WeakMap;var t2={};Te(t2,{Maybe:()=>L_,Memo:()=>is,SuperParsedResult:()=>zi,YTNode:()=>c,observe:()=>V});var Y={};Te(Y,{Level:()=>Wt,debug:()=>W3,error:()=>j3,info:()=>G3,setLevel:()=>H3,warn:()=>ts,warnOnce:()=>F3});var V3="YOUTUBEJS",Wt={NONE:0,ERROR:1,WARNING:2,INFO:3,DEBUG:4},XN={[Wt.ERROR]:(...n)=>{},[Wt.WARNING]:(...n)=>{},[Wt.INFO]:(...n)=>{},[Wt.DEBUG]:(...n)=>{}},QN=[Wt.WARNING],ZN=new Set;function jp(n,t,e){if(!XN[n]||!QN.includes(n))return;let o=[`[${V3}]`];t&&o.push(`[${t}]`),XN[n](`${o.join("")}:`,...e||[]);}s(jp,"doLog");var F3=s((n,...t)=>{ZN.has(n)||(jp(Wt.WARNING,n,t),ZN.add(n));},"warnOnce"),ts=s((n,...t)=>jp(Wt.WARNING,n,t),"warn"),j3=s((n,...t)=>jp(Wt.ERROR,n,t),"error"),G3=s((n,...t)=>jp(Wt.INFO,n,t),"info"),W3=s((n,...t)=>jp(Wt.DEBUG,n,t),"debug");function H3(...n){QN=n;}s(H3,"setLevel");var e2=Symbol("ObservedArray.isObserved"),U_=class U_{constructor(){i$1(this,"type");this.type=this.constructor.type;}is(...t){return t.some(e=>this.type===e.type)}as(...t){if(!this.is(...t))throw new Rt(`Cannot cast ${this.type} to one of ${t.map(e=>e.type).join(", ")}`);return this}hasKey(t){return Reflect.has(this,t)}key(t){if(!this.hasKey(t))throw new Rt(`Missing key ${t}`);return new L_(this[t])}};s(U_,"YTNode"),i$1(U_,"type","YTNode");var c=U_,K3="Maybe",oe,xe,hi,$i,Y_=class Y_{constructor(t){g(this,xe);g(this,oe);w(this,oe,t);}get typeof(){return typeof p(this,oe)}string(){return N(this,xe,$i).call(this,"string")}isString(){return N(this,xe,hi).call(this,"string")}number(){return N(this,xe,$i).call(this,"number")}isNumber(){return N(this,xe,hi).call(this,"number")}bigint(){return N(this,xe,$i).call(this,"bigint")}isBigint(){return N(this,xe,hi).call(this,"bigint")}boolean(){return N(this,xe,$i).call(this,"boolean")}isBoolean(){return N(this,xe,hi).call(this,"boolean")}symbol(){return N(this,xe,$i).call(this,"symbol")}isSymbol(){return N(this,xe,hi).call(this,"symbol")}undefined(){return N(this,xe,$i).call(this,"undefined")}isUndefined(){return N(this,xe,hi).call(this,"undefined")}null(){if(p(this,oe)!==null)throw new TypeError(`Expected null, got ${typeof p(this,oe)}`);return p(this,oe)}isNull(){return p(this,oe)===null}object(){return N(this,xe,$i).call(this,"object")}isObject(){return N(this,xe,hi).call(this,"object")}function(){return N(this,xe,$i).call(this,"function")}isFunction(){return N(this,xe,hi).call(this,"function")}array(){if(!Array.isArray(p(this,oe)))throw new TypeError(`Expected array, got ${typeof p(this,oe)}`);return p(this,oe)}arrayOfMaybe(){let t=[];return new Proxy(this.array(),{get(e,o){return Reflect.has(t,o)?Reflect.get(e,o):new Y_(Reflect.get(e,o))}})}isArray(){return Array.isArray(p(this,oe))}node(){if(!(p(this,oe)instanceof c))throw new TypeError(`Expected YTNode, got ${p(this,oe).constructor.name}`);return p(this,oe)}isNode(){return p(this,oe)instanceof c}nodeOfType(...t){return this.node().as(...t)}isNodeOfType(...t){return this.isNode()&&this.node().is(...t)}observed(){if(!this.isObserved())throw new TypeError(`Expected ObservedArray, got ${typeof p(this,oe)}`);return p(this,oe)}isObserved(){return p(this,oe)?.[e2]}parsed(){if(!(p(this,oe)instanceof zi))throw new TypeError(`Expected SuperParsedResult, got ${typeof p(this,oe)}`);return p(this,oe)}isParsed(){return p(this,oe)instanceof zi}any(){return ts(K3,"This call is not meant to be used outside of debugging. Please use the specific type getter instead."),p(this,oe)}instanceof(t){if(!this.isInstanceof(t))throw new TypeError(`Expected instance of ${t.name}, got ${p(this,oe).constructor.name}`);return p(this,oe)}isInstanceof(t){return p(this,oe)instanceof t}};oe=new WeakMap,xe=new WeakSet,hi=s(function(t){return typeof p(this,oe)===t},"#checkPrimitive"),$i=s(function(t){if(!N(this,xe,hi).call(this,t))throw new TypeError(`Expected ${t}, got ${this.typeof}`);return p(this,oe)},"#assertPrimitive"),s(Y_,"Maybe");var L_=Y_,ho,HE=class HE{constructor(t){g(this,ho);w(this,ho,t);}get is_null(){return p(this,ho)===null}get is_array(){return !this.is_null&&Array.isArray(p(this,ho))}get is_node(){return !this.is_array}array(){if(!this.is_array)throw new TypeError("Expected an array, got a node");return p(this,ho)}item(){if(!this.is_node)throw new TypeError("Expected a node, got an array");return p(this,ho)}};ho=new WeakMap,s(HE,"SuperParsedResult");var zi=HE;function V(n){return new Proxy(n,{get(t,e){return e=="get"?(o,r)=>t.find((a,f)=>{let m=V_(o,a);return m&&r&&t.splice(f,1),m}):e==e2?true:e=="getAll"?(o,r)=>t.filter((a,f)=>{let m=V_(o,a);return m&&r&&t.splice(f,1),m}):e=="matchCondition"?o=>t.find(r=>o(r)):e=="filterType"?(...o)=>V(t.filter(r=>!!r.is(...o))):e=="firstOfType"?(...o)=>t.find(r=>!!r.is(...o)):e=="first"?()=>t[0]:e=="as"?(...o)=>V(t.map(r=>{if(r.is(...o))return r;throw new Rt(`Expected node of any type ${o.map(a=>a.type).join(", ")}, got ${r.type}`)})):e=="remove"?o=>t.splice(o,1):Reflect.get(t,e)}})}s(V,"observe");var KE=class KE extends Map{getType(...t){return t=t.flat(),V(t.flatMap(e=>this.get(e.type)||[]))}};s(KE,"Memo");var is=KE;var HR={};Te(HR,{AccessibilityContext:()=>ns,AccessibilityData:()=>pe,Author:()=>D,ChildElement:()=>sa,CommandContext:()=>As,EmojiRun:()=>us,Format:()=>ru,RendererContext:()=>Oe,SubscriptionButton:()=>Jc,Text:()=>l,TextRun:()=>ls,Thumbnail:()=>y,VideoDetails:()=>au});var qE=class qE{constructor(t){i$1(this,"label");this.label=t.label;}};s(qE,"AccessibilityContext");var ns=qE;var $E=class $E{constructor(t){i$1(this,"accessibility_identifier");i$1(this,"identifier");i$1(this,"label");"accessibilityIdentifier"in t&&(this.accessibility_identifier=t.accessibilityIdentifier),"identifier"in t&&(this.identifier={accessibility_id_type:t.identifier.accessibilityIdType}),"label"in t&&(this.label=t.label);}};s($E,"AccessibilityData");var pe=$E;var H={};Te(H,{CLIENTS:()=>F,CLIENT_NAME_IDS:()=>F_,INNERTUBE_HEADERS_BASE:()=>$3,OAUTH:()=>q3,STREAM_HEADERS:()=>Ji,SUPPORTED_CLIENTS:()=>j_,URLS:()=>ve});var ve={YT_BASE:"https://www.youtube.com",YT_MUSIC_BASE:"https://music.youtube.com",YT_SUGGESTIONS:"https://suggestqueries-clients6.youtube.com",YT_UPLOAD:"https://upload.youtube.com/",API:{BASE:"https://youtubei.googleapis.com",PRODUCTION_1:"https://www.youtube.com/youtubei/",PRODUCTION_2:"https://youtubei.googleapis.com/youtubei/",STAGING:"https://green-youtubei.sandbox.googleapis.com/youtubei/",RELEASE:"https://release-youtubei.sandbox.googleapis.com/youtubei/",TEST:"https://test-youtubei.sandbox.googleapis.com/youtubei/",CAMI:"http://cami-youtubei.sandbox.googleapis.com/youtubei/",UYTFE:"https://uytfe.sandbox.google.com/youtubei/"},GOOGLE_SEARCH_BASE:"https://www.google.com/"},q3={REGEX:{TV_SCRIPT:new RegExp('<script\\s+id="base-js"\\s+src="([^"]+)"[^>]*><\\/script>'),CLIENT_IDENTITY:new RegExp('clientId:"(?<client_id>[^"]+)",[^"]*?:"(?<client_secret>[^"]+)"')}},F={IOS:{NAME:"iOS",VERSION:"20.11.6",USER_AGENT:"com.google.ios.youtube/20.11.6 (iPhone10,4; U; CPU iOS 16_7_7 like Mac OS X)",DEVICE_MODEL:"iPhone10,4",OS_NAME:"iOS",OS_VERSION:"16.7.7.20H330"},WEB:{NAME:"WEB",VERSION:"2.20250222.10.00",API_KEY:"AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8",API_VERSION:"v1",STATIC_VISITOR_ID:"6zpwvWUNAco",SUGG_EXP_ID:"ytzpb5_e2,ytpo.bo.lqp.elu=1,ytpo.bo.lqp.ecsc=1,ytpo.bo.lqp.mcsc=3,ytpo.bo.lqp.mec=1,ytpo.bo.lqp.rw=0.8,ytpo.bo.lqp.fw=0.2,ytpo.bo.lqp.szp=1,ytpo.bo.lqp.mz=3,ytpo.bo.lqp.al=en_us,ytpo.bo.lqp.zrm=1,ytpo.bo.lqp.er=1,ytpo.bo.ro.erl=1,ytpo.bo.ro.mlus=3,ytpo.bo.ro.erls=3,ytpo.bo.qfo.mlus=3,ytzprp.ppp.e=1,ytzprp.ppp.st=772,ytzprp.ppp.p=5"},MWEB:{NAME:"MWEB",VERSION:"2.20250224.01.00",API_VERSION:"v1"},WEB_KIDS:{NAME:"WEB_KIDS",VERSION:"2.20250221.11.00"},YTMUSIC:{NAME:"WEB_REMIX",VERSION:"1.20250219.01.00"},ANDROID:{NAME:"ANDROID",VERSION:"19.35.36",SDK_VERSION:33,USER_AGENT:"com.google.android.youtube/19.35.36(Linux; U; Android 13; en_US; SM-S908E Build/TP1A.220624.014) gzip"},YTSTUDIO_ANDROID:{NAME:"ANDROID_CREATOR",VERSION:"22.43.101"},YTMUSIC_ANDROID:{NAME:"ANDROID_MUSIC",VERSION:"5.34.51"},TV:{NAME:"TVHTML5",VERSION:"7.20250219.14.00",USER_AGENT:"Mozilla/5.0 (ChromiumStylePlatform) Cobalt/Version"},TV_SIMPLY:{NAME:"TVHTML5_SIMPLY",VERSION:"1.0"},TV_EMBEDDED:{NAME:"TVHTML5_SIMPLY_EMBEDDED_PLAYER",VERSION:"2.0"},WEB_EMBEDDED:{NAME:"WEB_EMBEDDED_PLAYER",VERSION:"1.20250219.01.00",API_KEY:"AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8",API_VERSION:"v1",STATIC_VISITOR_ID:"6zpwvWUNAco"},WEB_CREATOR:{NAME:"WEB_CREATOR",VERSION:"1.20241203.01.00",API_KEY:"AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8",API_VERSION:"v1",STATIC_VISITOR_ID:"6zpwvWUNAco"}},F_={iOS:"5",WEB:"1",MWEB:"2",WEB_KIDS:"76",WEB_REMIX:"67",ANDROID:"3",ANDROID_CREATOR:"14",ANDROID_MUSIC:"21",TVHTML5:"7",TVHTML5_SIMPLY:"74",TVHTML5_SIMPLY_EMBEDDED_PLAYER:"85",WEB_EMBEDDED_PLAYER:"56",WEB_CREATOR:"62"},Ji={accept:"*/*",origin:"https://www.youtube.com",referer:"https://www.youtube.com",DNT:"?1"},$3={accept:"*/*","accept-encoding":"gzip, deflate","content-type":"application/json"},j_=["IOS","WEB","MWEB","YTKIDS","YTMUSIC","ANDROID","YTSTUDIO_ANDROID","YTMUSIC_ANDROID","TV","TV_SIMPLY","TV_EMBEDDED","WEB_EMBEDDED","WEB_CREATOR"];var u={};Te(u,{addRuntimeParser:()=>B1,applyCommentsMutations:()=>BR,applyMutations:()=>OR,getDynamicParsers:()=>WM,getParserByName:()=>Il,hasParser:()=>$h,parse:()=>Ze,parseActions:()=>DR,parseArray:()=>Ke,parseC:()=>MR,parseCommand:()=>AR,parseCommands:()=>$M,parseFormats:()=>F1,parseItem:()=>ee,parseLC:()=>V1,parseRR:()=>bS,parseResponse:()=>Y1,sanitizeClassName:()=>kl,setParserErrorHandler:()=>jM,shouldIgnore:()=>G1});var Tl={};Te(Tl,{AboutChannel:()=>ds,AboutChannelView:()=>fs,AccountChannel:()=>ms,AccountItem:()=>Zi,AccountItemSection:()=>_s,AccountItemSectionHeader:()=>hs,AccountSectionList:()=>bs,ActiveAccountHeader:()=>tf,AddBannerToLiveChatCommand:()=>Ud,AddChatItemAction:()=>Pa,AddLiveChatTickerItemAction:()=>Yd,AddToPlaylist:()=>nf,AddToPlaylistCommand:()=>vf,AddToPlaylistEndpoint:()=>Xf,AddToPlaylistServiceEndpoint:()=>aa,Alert:()=>en,AlertWithButton:()=>Cs,AnchoredSection:()=>tu,AnimatedThumbnailOverlayView:()=>Ns,AppendContinuationItemsAction:()=>Re,AttributionView:()=>Rs,AudioOnlyPlayability:()=>Ps,AuthorCommentBadge:()=>Cf,AutomixPreviewVideo:()=>qt,AvatarStackView:()=>tn,AvatarView:()=>$t,BackgroundPromo:()=>of,BackstageImage:()=>Ms,BackstagePost:()=>zt,BackstagePostThread:()=>sf,BadgeView:()=>rn,BrowseEndpoint:()=>Zf,BrowseFeedActions:()=>an,BrowserMediaSession:()=>rf,BumperUserEduContentView:()=>Aa,Button:()=>v,ButtonCardView:()=>af,ButtonView:()=>J,C4TabbedHeader:()=>ei,CallToActionButton:()=>cf,Card:()=>uf,CardCollection:()=>xr,CarouselHeader:()=>gr,CarouselItem:()=>lf,CarouselItemView:()=>Tr,CarouselLockup:()=>fr,CarouselTitleView:()=>vr,ChangeEngagementPanelVisibilityAction:()=>$p,Channel:()=>Ir,ChannelAboutFullMetadata:()=>To,ChannelAgeGate:()=>pf,ChannelExternalLinkView:()=>ps,ChannelFeaturedContent:()=>ff,ChannelHeaderLinks:()=>Ws,ChannelHeaderLinksView:()=>Hs,ChannelMetadata:()=>kr,ChannelMobileHeader:()=>df,ChannelOptions:()=>Sr,ChannelOwnerEmptyState:()=>mf,ChannelSubMenu:()=>vo,ChannelSwitcherHeader:()=>hf,ChannelSwitcherPage:()=>xs,ChannelTagline:()=>br,ChannelThumbnailWithLink:()=>_f,ChannelVideoPlayer:()=>bf,Chapter:()=>Er,ChildVideo:()=>yf,ChipBarView:()=>xf,ChipCloud:()=>Ge,ChipCloudChip:()=>ae,ChipView:()=>Cr,ClientSideToggleMenuItem:()=>gf,ClipAdState:()=>$s,ClipCreation:()=>zs,ClipCreationScrubber:()=>qs,ClipCreationTextInput:()=>Ks,ClipSection:()=>Js,CollaboratorInfoCardContent:()=>wf,CollageHeroImage:()=>Tf,CollectionThumbnailView:()=>Dr,CommandExecutorCommand:()=>cs,CommentActionButtons:()=>Os,CommentDialog:()=>Rf,CommentReplies:()=>Lr,CommentReplyDialog:()=>Ur,CommentSimplebox:()=>jr,CommentThread:()=>Wr,CommentView:()=>xi,CommentsEntryPointHeader:()=>Fr,CommentsEntryPointTeaser:()=>Vr,CommentsHeader:()=>ti,CommentsSimplebox:()=>Yr,CompactChannel:()=>Df,CompactLink:()=>ct,CompactMix:()=>Of,CompactMovie:()=>Bf,CompactPlaylist:()=>uR,CompactStation:()=>Lf,CompactVideo:()=>ln,CompositeVideoPrimaryInfo:()=>Uf,ConfirmDialog:()=>Yf,ContentMetadataView:()=>yn,ContentPreviewImageView:()=>Xt,ContinuationCommand:()=>If,ContinuationItem:()=>K,ConversationBar:()=>Vf,CopyLink:()=>xn,CreateCommentEndpoint:()=>Qf,CreatePlaylistDialog:()=>as,CreatePlaylistDialogFormView:()=>qr,CreatePlaylistServiceEndpoint:()=>ed,CreatorHeart:()=>Ds,CreatorHeartView:()=>Ma,DecoratedAvatarView:()=>gn,DecoratedPlayerBar:()=>zr,DefaultPromoPanel:()=>Ff,DeletePlaylistEndpoint:()=>td,DescriptionPreviewView:()=>Jr,DialogHeaderView:()=>Xr,DialogView:()=>Gf,DidYouMean:()=>ia,DimChatItemAction:()=>Vd,DislikeButtonView:()=>Ls,DismissableDialog:()=>Wf,DismissableDialogContentSection:()=>na,DownloadButton:()=>nn,Dropdown:()=>Kt,DropdownItem:()=>rs,DropdownView:()=>Hr,DynamicTextView:()=>oa,Element:()=>ra,EmergencyOnebox:()=>qf,EmojiPicker:()=>Br,EmojiPickerCategory:()=>$f,EmojiPickerCategoryButton:()=>zf,EmojiPickerUpsellCategory:()=>Jf,EndScreenPlaylist:()=>la,EndScreenVideo:()=>pa,Endscreen:()=>ua,EndscreenElement:()=>gd,EngagementPanelSectionList:()=>Qt,EngagementPanelTitleHeader:()=>Xs,EomSettingsDisclaimer:()=>js,ExpandableMetadata:()=>or,ExpandableTab:()=>vi,ExpandableVideoDescriptionBody:()=>tr,ExpandedShelfContents:()=>wd,Factoid:()=>pt,FancyDismissibleDialog:()=>Td,FeedFilterChipBar:()=>rt,FeedNudge:()=>vd,FeedTabbedHeader:()=>fa,FeedbackEndpoint:()=>id,FlexibleActionsView:()=>sn,FormFooterView:()=>Zr,GameCard:()=>ir,GameDetails:()=>Id,GetAccountsListInnertubeEndpoint:()=>nd,GetKidsBlocklistPickerCommand:()=>kf,GetMultiPageMenuAction:()=>zp,Grid:()=>Ii,GridChannel:()=>da,GridHeader:()=>kd,GridMix:()=>Sd,GridMovie:()=>Ed,GridPlaylist:()=>ma,GridShelfView:()=>Cd,GridShow:()=>Nd,GridVideo:()=>ba,GuideCollapsibleEntry:()=>Rd,GuideCollapsibleSectionEntry:()=>Pd,GuideDownloadsEntry:()=>Ad,GuideEntry:()=>ki,GuideSection:()=>Sn,GuideSubscriptionsSection:()=>ya,HashtagHeader:()=>xa,HashtagTile:()=>Md,HeatMarker:()=>wn,Heatmap:()=>vn,HeroPlaylistThumbnail:()=>Dd,HideEngagementPanelEndpoint:()=>od,HighlightsCarousel:()=>Co,HistorySuggestion:()=>Od,HorizontalCardList:()=>Jt,HorizontalList:()=>nr,HorizontalMovieList:()=>Bd,HowThisWasMadeSectionView:()=>_r,HypePointsFactoid:()=>cr,IconLink:()=>wa,ImageBannerView:()=>Ta,IncludingResultsFor:()=>Ld,InfoPanelContainer:()=>Ia,InfoPanelContent:()=>va,InfoRow:()=>pr,InteractiveTabbedHeader:()=>ka,ItemSection:()=>ce,ItemSectionHeader:()=>En,ItemSectionTab:()=>Sa,ItemSectionTabbedHeader:()=>Cn,KidsBlocklistPicker:()=>Hh,KidsBlocklistPickerItem:()=>zn,KidsCategoriesHeader:()=>iu,KidsCategoryTab:()=>Jn,KidsHomeScreen:()=>nu,LikeButton:()=>on,LikeButtonView:()=>Bs,LikeEndpoint:()=>sd,ListItemView:()=>ea,ListView:()=>ta,LiveChat:()=>Ca,LiveChatActionPanel:()=>Ua,LiveChatAuthorBadge:()=>Ba,LiveChatAutoModMessage:()=>Fd,LiveChatBanner:()=>Ra,LiveChatBannerChatSummary:()=>jd,LiveChatBannerHeader:()=>Na,LiveChatBannerPoll:()=>Gd,LiveChatBannerRedirect:()=>Wd,LiveChatDialog:()=>ym,LiveChatHeader:()=>Wa,LiveChatItemBumperView:()=>Da,LiveChatItemContextMenuEndpoint:()=>rd,LiveChatItemList:()=>Ha,LiveChatMembershipItem:()=>Hd,LiveChatMessageInput:()=>xm,LiveChatModeChangeMessage:()=>Kd,LiveChatPaidMessage:()=>qd,LiveChatPaidSticker:()=>$d,LiveChatParticipant:()=>Ka,LiveChatParticipantsList:()=>qa,LiveChatPlaceholderItem:()=>zd,LiveChatProductItem:()=>Jd,LiveChatRestrictedParticipation:()=>Xd,LiveChatSponsorshipsGiftPurchaseAnnouncement:()=>Zd,LiveChatSponsorshipsGiftRedemptionAnnouncement:()=>Qd,LiveChatSponsorshipsHeader:()=>La,LiveChatTextMessage:()=>em,LiveChatTickerPaidMessageItem:()=>tm,LiveChatTickerPaidStickerItem:()=>im,LiveChatTickerSponsorItem:()=>nm,LiveChatViewerEngagementMessage:()=>om,LockupMetadataView:()=>$a,LockupView:()=>za,MacroMarkersInfoItem:()=>Zs,MacroMarkersList:()=>Qs,MacroMarkersListEntity:()=>Nn,MacroMarkersListItem:()=>cn,MarkChatItemAsDeletedAction:()=>rm,MarkChatItemsByAuthorAsDeletedAction:()=>am,Menu:()=>B,MenuFlexibleItem:()=>Ys,MenuNavigationItem:()=>Ja,MenuPopup:()=>gm,MenuServiceItem:()=>ut,MenuServiceItemDownload:()=>Us,MenuTitle:()=>Ss,MerchandiseItem:()=>Tm,MerchandiseShelf:()=>ec,Message:()=>_e,MetadataBadge:()=>Be,MetadataRow:()=>vm,MetadataRowContainer:()=>tc,MetadataRowHeader:()=>Im,MetadataScreen:()=>km,MicroformatData:()=>mt,Mix:()=>Sm,MobileTopbar:()=>Mm,ModalWithTitleAndButton:()=>Em,ModifyChannelNotificationPreferenceEndpoint:()=>ad,Movie:()=>Cm,MovingThumbnail:()=>Nm,MultiMarkersPlayerBar:()=>$r,MultiPageMenu:()=>ys,MultiPageMenuNotificationSection:()=>wm,MultiPageMenuSection:()=>Dm,MusicCardShelf:()=>nc,MusicCardShelfHeaderBasic:()=>ic,MusicCarouselShelf:()=>we,MusicCarouselShelfBasicHeader:()=>oc,MusicDescriptionShelf:()=>ii,MusicDetailHeader:()=>On,MusicDownloadStateBadge:()=>Rm,MusicEditablePlaylistDetailHeader:()=>cc,MusicElementHeader:()=>No,MusicHeader:()=>ni,MusicImmersiveHeader:()=>uc,MusicInlineBadge:()=>Pn,MusicItemThumbnailOverlay:()=>ht,MusicLargeCardItemCarousel:()=>Pm,MusicMenuItemDivider:()=>Xa,MusicMultiRowListItem:()=>sc,MusicMultiSelectMenu:()=>Za,MusicMultiSelectMenuItem:()=>dt,MusicNavigationButton:()=>Mn,MusicPlayButton:()=>An,MusicPlaylistEditHeader:()=>Am,MusicPlaylistShelf:()=>Si,MusicQueue:()=>Bn,MusicResponsiveHeader:()=>Ln,MusicResponsiveListItem:()=>Ue,MusicResponsiveListItemFixedColumn:()=>rc,MusicResponsiveListItemFlexColumn:()=>ac,MusicShelf:()=>ue,MusicSideAlignedItem:()=>pc,MusicSortFilterButton:()=>Ro,MusicTastebuilderShelf:()=>dc,MusicTastebuilderShelfThumbnail:()=>fc,MusicThumbnail:()=>ke,MusicTwoRowItem:()=>Dn,MusicVisualHeader:()=>mc,NavigationEndpoint:()=>d,Notification:()=>Rn,NotificationAction:()=>Um,OpenOnePickAddVideoModalCommand:()=>Ym,OpenPopupAction:()=>Xi,PageHeader:()=>_t,PageHeaderView:()=>hc,PageIntroduction:()=>_c,PanelFooterView:()=>In,PdgCommentChip:()=>Af,PdgReplyButtonView:()=>Oa,PerformCommentActionEndpoint:()=>cd,PivotBar:()=>Om,PivotBarItem:()=>Bm,PivotButton:()=>bc,PlayerAnnotationsExpanded:()=>yc,PlayerCaptionsTracklist:()=>xc,PlayerControlsOverlay:()=>Vm,PlayerErrorMessage:()=>Fm,PlayerLegacyDesktopYpcOffer:()=>jm,PlayerLegacyDesktopYpcTrailer:()=>Po,PlayerLiveStoryboardSpec:()=>wc,PlayerMicroformat:()=>qe,PlayerOverflow:()=>gc,PlayerOverlay:()=>oi,PlayerOverlayAutoplay:()=>Tc,PlayerOverlayVideoDetails:()=>vc,PlayerStoryboardSpec:()=>_i,Playlist:()=>ft,PlaylistAddToOption:()=>Es,PlaylistCustomThumbnail:()=>_n,PlaylistEditEndpoint:()=>ud,PlaylistHeader:()=>kc,PlaylistInfoCardContent:()=>Gm,PlaylistMetadata:()=>Sc,PlaylistPanel:()=>at,PlaylistPanelVideo:()=>Bt,PlaylistPanelVideoWrapper:()=>lc,PlaylistSidebar:()=>Wm,PlaylistSidebarPrimaryInfo:()=>Ec,PlaylistSidebarSecondaryInfo:()=>Cc,PlaylistThumbnailOverlay:()=>Hm,PlaylistVideo:()=>Un,PlaylistVideoList:()=>Nc,PlaylistVideoThumbnail:()=>bn,Poll:()=>Km,PollHeader:()=>sm,Post:()=>Yn,PostMultiImage:()=>qm,PrefetchWatchCommand:()=>ld,PremiereTrailerBadge:()=>$m,ProductList:()=>er,ProductListHeader:()=>zm,ProductListItem:()=>Jm,ProfileColumn:()=>Rc,ProfileColumnStats:()=>Xm,ProfileColumnStatsEntry:()=>Zm,ProfileColumnUserInfo:()=>Qm,Quiz:()=>eh,RecognitionShelf:()=>th,ReelItem:()=>Vn,ReelPlayerHeader:()=>Pc,ReelPlayerOverlay:()=>ih,ReelShelf:()=>fn,ReelWatchEndpoint:()=>pd,RelatedChipCloud:()=>Ac,RemoveBannerForLiveChatCommand:()=>cm,RemoveChatItemAction:()=>um,RemoveChatItemByAuthorAction:()=>lm,ReplaceChatItemAction:()=>pm,ReplaceLiveChatAction:()=>fm,ReplayChatItemAction:()=>dm,RichGrid:()=>bt,RichItem:()=>nh,RichListHeader:()=>oh,RichMetadata:()=>Ao,RichMetadataRow:()=>Mo,RichSection:()=>sh,RichShelf:()=>Mc,RunAttestationCommand:()=>Or,SearchBox:()=>Gs,SearchEndpoint:()=>fd,SearchFilter:()=>Dc,SearchFilterGroup:()=>Fn,SearchFilterOptionsDialog:()=>rh,SearchHeader:()=>Oc,SearchRefinementCard:()=>bi,SearchSubMenu:()=>Bc,SearchSuggestion:()=>ga,SearchSuggestionsSection:()=>Lc,SecondarySearchContainer:()=>Uc,SectionHeaderView:()=>ah,SectionList:()=>G,SegmentedLikeDislikeButton:()=>Ci,SegmentedLikeDislikeButtonView:()=>Pt,SendFeedbackAction:()=>Jp,SettingBoolean:()=>ch,SettingsCheckbox:()=>Yc,SettingsOptions:()=>Wn,SettingsSidebar:()=>Vc,SettingsSwitch:()=>Gn,ShareEndpoint:()=>dd,ShareEntityEndpoint:()=>md,ShareEntityServiceEndpoint:()=>kn,SharePanelHeader:()=>jc,SharePanelTitleV15:()=>uh,ShareTarget:()=>Gc,SharedPost:()=>Fc,Shelf:()=>Hn,ShortsLockupView:()=>Kn,ShowCustomThumbnail:()=>ha,ShowDialogCommand:()=>Sf,ShowEngagementPanelEndpoint:()=>hd,ShowLiveChatActionPanelAction:()=>mm,ShowLiveChatDialogAction:()=>hm,ShowLiveChatTooltipCommand:()=>_m,ShowingResultsFor:()=>Wc,SignalAction:()=>Xp,SignalServiceEndpoint:()=>_d,SimpleCardContent:()=>lh,SimpleCardTeaser:()=>ph,SimpleMenuHeader:()=>Qa,SimpleTextSection:()=>fh,SingleActionEmergencySupport:()=>dh,SingleColumnBrowseResults:()=>si,SingleColumnMusicWatchNextResults:()=>mh,SingleHeroImage:()=>hh,SlimOwner:()=>_h,SlimVideoMetadata:()=>Hc,SortFilterHeader:()=>Ea,SortFilterSubMenu:()=>ot,SponsorCommentBadge:()=>Mf,StartAt:()=>Kc,StructuredDescriptionContent:()=>yi,StructuredDescriptionPlaylistLockup:()=>dr,SubFeedOption:()=>Vs,SubFeedSelector:()=>Fs,SubscribeButton:()=>de,SubscribeButtonView:()=>Qr,SubscribeEndpoint:()=>bd,SubscriptionNotificationToggleButton:()=>yr,Tab:()=>re,Tabbed:()=>bh,TabbedSearchResults:()=>qc,TextCarouselItemView:()=>wr,TextFieldView:()=>Kr,TextHeader:()=>yh,ThirdPartyShareTargetSection:()=>$c,ThumbnailBadgeView:()=>dn,ThumbnailBottomOverlayView:()=>Mr,ThumbnailHoverOverlayToggleActionsView:()=>Pr,ThumbnailHoverOverlayView:()=>Nr,ThumbnailLandscapePortrait:()=>xh,ThumbnailOverlayBadgeView:()=>Rr,ThumbnailOverlayBottomPanel:()=>_a,ThumbnailOverlayEndorsement:()=>gh,ThumbnailOverlayHoverText:()=>wh,ThumbnailOverlayInlineUnplayable:()=>Th,ThumbnailOverlayLoadingPreview:()=>vh,ThumbnailOverlayNowPlaying:()=>Ih,ThumbnailOverlayPinking:()=>kh,ThumbnailOverlayPlaybackStatus:()=>Sh,ThumbnailOverlayProgressBarView:()=>Ar,ThumbnailOverlayResumePlayback:()=>Eh,ThumbnailOverlaySidePanel:()=>Ch,ThumbnailOverlayTimeStatus:()=>lt,ThumbnailOverlayToggleButton:()=>Nh,ThumbnailView:()=>mn,TimedMarkerDecoration:()=>Tn,TitleAndButtonListHeader:()=>Rh,ToggleButton:()=>se,ToggleButtonView:()=>je,ToggleFormField:()=>Ph,ToggleMenuServiceItem:()=>Ah,Tooltip:()=>Mh,TopbarMenuButton:()=>Lm,TopicChannelDetails:()=>Dh,Transcript:()=>Qi,TranscriptFooter:()=>gs,TranscriptSearchBox:()=>ws,TranscriptSearchPanel:()=>ks,TranscriptSectionHeader:()=>Ts,TranscriptSegment:()=>vs,TranscriptSegmentList:()=>Is,TwoColumnBrowseResults:()=>yt,TwoColumnSearchResults:()=>zc,TwoColumnWatchNextResults:()=>qn,UnifiedSharePanel:()=>Bh,UniversalWatchCard:()=>jn,UnsubscribeEndpoint:()=>yd,UpdateChannelSwitcherPageAction:()=>Zp,UpdateDateTextAction:()=>Ya,UpdateDescriptionAction:()=>Va,UpdateEngagementPanelAction:()=>Qp,UpdateEngagementPanelContentCommand:()=>Ef,UpdateLiveChatPollAction:()=>bm,UpdateSubscribeButtonAction:()=>ef,UpdateTitleAction:()=>Fa,UpdateToggleButtonTextAction:()=>ja,UpdateViewershipAction:()=>Ga,UploadTimeFactoid:()=>rr,UpsellDialog:()=>Lh,VerticalList:()=>Uh,VerticalWatchCardList:()=>Yh,Video:()=>un,VideoAttributeView:()=>Zt,VideoAttributesSectionView:()=>hr,VideoCard:()=>sr,VideoDescriptionCourseSection:()=>mr,VideoDescriptionHeader:()=>ur,VideoDescriptionInfocardsSection:()=>lr,VideoDescriptionMusicSection:()=>pn,VideoDescriptionTranscriptSection:()=>wo,VideoInfoCardContent:()=>Vh,VideoMetadataCarouselView:()=>Fh,VideoOwner:()=>$n,VideoPrimaryInfo:()=>Zc,VideoSecondaryInfo:()=>Do,VideoViewCount:()=>Xc,ViewCountFactoid:()=>ar,VoiceReplyContainerView:()=>Gr,WatchCardCompactVideo:()=>Qc,WatchCardHeroVideo:()=>jh,WatchCardRichHeader:()=>Gh,WatchCardSectionSequence:()=>Wh,WatchEndpoint:()=>ca,WatchNextEndScreen:()=>Ic,WatchNextEndpoint:()=>xd,WatchNextTabbedResults:()=>eu,YpcTrailer:()=>Ei});var _o,zE=class zE{constructor(t,e){g(this,_o);w(this,_o,new W.shim.Cache(t,e));}get cache_dir(){return p(this,_o).cache_dir}get(t){return p(this,_o).get(t)}set(t,e){return p(this,_o).set(t,e)}remove(t){return p(this,_o).remove(t)}};_o=new WeakMap,s(zE,"UniversalCache");var os,JE=class JE extends EventTarget{constructor(){super();g(this,os,new Map);}emit(e,...o){let r=new W.shim.CustomEvent(e,{detail:o});this.dispatchEvent(r);}on(e,o){let r=s(a=>{a instanceof W.shim.CustomEvent?o(...a.detail):o(a);},"wrapper");p(this,os).set(o,r),this.addEventListener(e,r);}once(e,o){let r=s(a=>{a instanceof W.shim.CustomEvent?o(...a.detail):o(a),this.off(e,o);},"wrapper");p(this,os).set(o,r),this.addEventListener(e,r);}off(e,o){let r=p(this,os).get(o);r&&(this.removeEventListener(e,r),p(this,os).delete(o));}};os=new WeakMap,s(JE,"EventEmitterLike");var bo=JE;var hl={};Te(hl,{chooseFormat:()=>m2,download:()=>gA,toDash:()=>d2});var z3={"&":"&amp;",'"':"&quot;","'":"&apos;","<":"&lt;",">":"&gt;"};function i2(n){return n.replace(/([&"<>'])/g,(t,e)=>z3[e])}s(i2,"escapeXMLString");function J3(n){return n.charAt(0).toUpperCase()+n.slice(1)}s(J3,"normalizeTag");function z(n,t,...e){let o=e.flat();return typeof n=="function"?n({...t,children:o}):{type:J3(n),props:{...t,children:o}}}s(z,"createElement");async function n2(n){if(typeof n=="string")return i2(n);let t=`<${n.type}`;if(n.props)for(let e of Object.keys(n.props))e!=="children"&&n.props[e]!==void 0&&(t+=` ${e}="${i2(`${n.props[e]}`)}"`);if(n.props.children){let e=await Promise.all((await Promise.all(n.props.children.flat())).flat().filter(o=>!!o).map(o=>n2(o)));if(e.length>0)return t+=`>${e.join("")}</${n.type}>`,t}return `${t}/>`}s(n2,"renderElementToString");async function o2(n){return `<?xml version="1.0" encoding="utf-8"?>${await n2(await n)}`}s(o2,"renderToString");function s2(n){return n.children}s(s2,"Fragment");var W_=class W_ extends c{constructor(e){super();i$1(this,"boards");let o=e.spec.split("|"),r=new URL(o.shift());this.boards=o.map((a,f)=>{let[m,b,x,I,k,S,P,R]=a.split("#");r.searchParams.set("sigh",R);let E=Math.ceil(parseInt(x,10)/(parseInt(I,10)*parseInt(k,10)));return {type:"vod",template_url:r.toString().replace("$L",f).replace("$N",P),thumbnail_width:parseInt(m,10),thumbnail_height:parseInt(b,10),thumbnail_count:parseInt(x,10),interval:parseInt(S,10),columns:parseInt(I,10),rows:parseInt(k,10),storyboard_count:E}});}};s(W_,"PlayerStoryboardSpec"),i$1(W_,"type","PlayerStoryboardSpec");var _i=W_;var Fe={name:"youtubei.js",version:"15.1.2",description:"A JavaScript client for YouTube's private API, known as InnerTube.",type:"module",types:"./dist/src/platform/lib.d.ts",typesVersions:{"*":{agnostic:["./dist/src/platform/lib.d.ts"],web:["./dist/src/platform/lib.d.ts"],"react-native":["./dist/src/platform/lib.d.ts"],"web.bundle":["./dist/src/platform/lib.d.ts"],"web.bundle.min":["./dist/src/platform/lib.d.ts"],"cf-worker":["./dist/src/platform/lib.d.ts"]}},exports:{".":{deno:"./dist/src/platform/deno.js",node:{import:"./dist/src/platform/node.js",default:"./dist/src/platform/node.js"},types:"./dist/src/platform/lib.d.ts",browser:"./dist/src/platform/web.js","react-native":"./bundle/react-native.js",default:"./dist/src/platform/web.js"},"./package.json":"./package.json","./agnostic":{types:"./dist/src/platform/lib.d.ts",default:"./dist/src/platform/lib.js"},"./web":{types:"./dist/src/platform/lib.d.ts",default:"./dist/src/platform/web.js"},"./react-native":{types:"./dist/src/platform/lib.d.ts",default:"./bundle/react-native.js"},"./web.bundle":{types:"./dist/src/platform/lib.d.ts",default:"./bundle/browser.js"},"./cf-worker":{types:"./dist/src/platform/lib.d.ts",default:"./dist/src/platform/cf-worker.js"}},author:"LuanRT <luan.lrt4@gmail.com> (https://github.com/LuanRT)",funding:["https://github.com/sponsors/LuanRT"],contributors:["Wykerd (https://github.com/wykerd/)","MasterOfBob777 (https://github.com/MasterOfBob777)","patrickkfkan (https://github.com/patrickkfkan)","akkadaska (https://github.com/akkadaska)","Absidue (https://github.com/absidue)"],scripts:{test:"vitest run --reporter verbose",lint:"eslint ./src","lint:fix":"eslint --fix ./src","clean:source-maps":"rimraf ./bundle/browser.js.map ./bundle/cf-worker.js.map ./bundle/react-native.js.map","clean:build-output":"rimraf ./dist ./bundle/browser.js ./bundle/cf-worker.js ./bundle/react-native.js ./deno",build:"npm run clean:build-output && npm run clean:source-maps && npm run build:parser-map && npm run build:esm && npm run bundle:browser && npm run bundle:cf-worker && npm run bundle:react-native:prod","build:dev":"npm run clean:build-output && npm run clean:source-maps && npm run build:parser-map && npm run build:esm && npm run bundle:browser && npm run bundle:cf-worker && npm run bundle:react-native","build:esm":"tspc","build:deno":`cpy ./src ./deno && cpy ./protos ./deno && esbuild ./src/utils/DashManifest.tsx --keep-names --format=esm --platform=neutral --target=es2020 --outfile=./deno/src/utils/DashManifest.js && cpy ./package.json ./deno && replace ".js';" ".ts';" ./deno -r && replace '.js";' '.ts";' ./deno -r && replace "'./DashManifest.ts';" "'./DashManifest.js';" ./deno -r && replace "'jintr';" "'jsr:@luanrt/jintr';" ./deno -r && replace "@bufbuild/protobuf/wire" "https://esm.sh/@bufbuild/protobuf@2.0.0/wire" ./deno -r`,"build:proto":"rimraf ./protos/generated && node ./dev-scripts/generate-proto.mjs","build:parser-map":"node ./dev-scripts/gen-parser-map.mjs","bundle:browser":'esbuild ./dist/src/platform/web.js --banner:js="/* eslint-disable */" --bundle --sourcemap --target=chrome70 --keep-names --format=esm --define:global=globalThis --conditions=module --outfile=./bundle/browser.js --platform=browser',"bundle:react-native":"esbuild ./dist/src/platform/react-native.js --bundle --sourcemap --target=es2020 --keep-names --format=esm --platform=neutral --define:global=globalThis --conditions=module --minify --tree-shaking=true --legal-comments=none --drop:debugger --outfile=./bundle/react-native.js","bundle:react-native:prod":"esbuild ./dist/src/platform/react-native.js --bundle --target=es2020 --keep-names --format=esm --platform=neutral --define:global=globalThis --conditions=module --minify --tree-shaking=true --legal-comments=none --drop:debugger --drop:console --pure:console.log --pure:console.warn --pure:console.info --pure:console.debug --outfile=./bundle/react-native.js","bundle:react-native:analyze":"esbuild ./dist/src/platform/react-native.js --bundle --target=es2020 --keep-names --format=esm --platform=neutral --define:global=globalThis --conditions=module --minify --tree-shaking=true --legal-comments=none --metafile=./bundle/react-native-meta.json --outfile=./bundle/react-native.js && node analyze-bundle.cjs","bundle:cf-worker":'esbuild ./dist/src/platform/cf-worker.js --banner:js="/* eslint-disable */" --bundle --sourcemap --target=es2020 --keep-names --format=esm --define:global=globalThis --conditions=module --outfile=./bundle/cf-worker.js --platform=node',"build:docs":"typedoc",prepare:"npm run build",watch:"tspc --watch"},repository:{type:"git",url:"git+https://github.com/LuanRT/YouTube.js.git"},files:["dist/","bundle/","package.json","README.md","LICENSE"],license:"MIT",dependencies:{"@bufbuild/protobuf":"^2.0.0",jintr:"^3.3.1"},overrides:{typescript:"^5.0.0"},devDependencies:{"@eslint/js":"^9.9.0","@types/estree":"^1.0.6","@types/glob":"^8.1.0","@types/node":"^24.0.14","cpy-cli":"^4.2.0",esbuild:"^0.25.6",eslint:"^9.9.0",glob:"^8.0.3",globals:"^15.9.0",replace:"^1.2.2",rimraf:"^6.0.1","ts-patch":"^3.0.2","ts-proto":"^2.2.0",typedoc:"^0.26.7","typedoc-plugin-markdown":"^4.2.7",typescript:"^5.0.0","typescript-eslint":"^8.2.0",vitest:"^3.2.4"},bugs:{url:"https://github.com/LuanRT/YouTube.js/issues"},homepage:"https://github.com/LuanRT/YouTube.js#readme",keywords:["api","youtube","innertube","livechat","youtube-music","ytdl","youtube-studio","downloader","ytmusic"]};var Q3="StreamingInfo";function eA(n,t){let e=new Map,o=n.some(r=>!!r.audio_track);for(let r of n){if((!r.index_range||!r.init_range)&&!r.is_type_otf&&!t)continue;let a=r.mime_type.split(";")[0],f=nt(r.mime_type,'codecs="','"')?.split(".")[0],m=r.color_info?Object.values(r.color_info).join("-"):"",b=r.audio_track?.id||"",x=r.is_drc?"drc":"",I=`${a}-${f}-${m}-${b}-${x}`;e.has(I)||e.set(I,[]),e.get(I)?.push(r);}return {groups:Array.from(e.values()),has_multiple_audio_tracks:o}}s(eA,"getFormatGroupings");function a2(n,t){if(n.length>1&&new Set(n.map(e=>nt(e.mime_type,'codecs="','"'))).size===1)return t.push("codecs"),nt(n[0].mime_type,'codecs="','"')}s(a2,"hoistCodecsIfPossible");function c2(n,t,e){if(n.length>1&&new Set(n.map(o=>o.fps)).size===1)return e.push(t),Number(n[0][t])}s(c2,"hoistNumberAttributeIfPossible");function tA(n,t){if(n.length>1&&new Set(n.map(e=>e.audio_channels||2)).size===1)return t.push("AudioChannelConfiguration"),n[0].audio_channels}s(tA,"hoistAudioChannelsIfPossible");async function iA(n,t){let e=await t.session.http.fetch_function(`${n}&rn=0&sq=0`,{method:"GET",headers:Ji,redirect:"follow"}),o=e.url.replace("&rn=0","").replace("&sq=0",""),r=await e.text(),a=nt(r,"Segment-Durations-Ms:",`\r
`)?.split(",");if(!a)throw new _("Failed to extract the segment durations from this OTF stream",{url:n});let f=[];for(let m of a){let b=m.trim();if(b.length===0)continue;let x,I=nt(b,"(r=",")");I&&(x=parseInt(I)),f.push({duration:parseInt(b),repeat_count:x});}return {init_url:`${o}&sq=0`,media_url:`${o}&sq=$Number$`,timeline:f}}s(iA,"getOTFSegmentTemplate");async function u2(n,t){let e=await t.session.http.fetch_function(`${n}&rn=0&sq=0`,{method:"HEAD",headers:Ji,redirect:"follow"}),o=parseInt(e.headers.get("X-Head-Time-Millis")||""),r=parseInt(e.headers.get("X-Head-Seqnum")||"");if(isNaN(o)||isNaN(r))throw new _("Failed to extract the duration or segment count for this Post Live DVR video");return {duration:o/1e3,segment_count:r}}s(u2,"getPostLiveDvrInfo");async function nA(n,t,e,o,r,a){if(!n.item){let f=new URL(t.decipher(r));f.searchParams.set("cpn",a||"");let m=e(f).toString();n.item=await u2(m,o);}return n.item.duration}s(nA,"getPostLiveDvrDuration");function l2(n,t,e,o,r,a,f){let m="";if(f){let x=`${n.itag||""}:${n.xtags||""}`;m=`sabr://${n.has_video?"video":"audio"}?key=${x}`;}else {let x=new URL(n.decipher(o));x.searchParams.set("cpn",r||""),m=t(x).toString();}if(n.is_type_otf){if(!e)throw new _("Unable to get segment durations for this OTF stream without an Actions instance",{format:n});return {is_oft:true,is_post_live_dvr:false,getSegmentTemplate(){return iA(m,e)}}}if(a){if(!e)throw new _("Unable to get segment count for this Post Live DVR video without an Actions instance",{format:n});let x=n.target_duration_dec;if(typeof x!="number")throw new _("Format is missing target_duration_dec",{format:n});return {is_oft:false,is_post_live_dvr:true,async getSegmentTemplate(){return a.item||(a.item=await u2(m,e)),{media_url:`${m}&sq=$Number$`,timeline:[{duration:x*1e3,repeat_count:a.item.segment_count}]}}}}if(!n.index_range||!n.init_range)throw new _("Index and init ranges not available",{format:n});return {is_oft:false,is_post_live_dvr:false,base_url:m,index_range:n.index_range,init_range:n.init_range}}s(l2,"getSegmentInfo");function oA(n,t,e,o,r,a,f,m){let b=[n.itag.toString()];return n.audio_track&&b.push(n.audio_track.id),n.is_drc&&b.push("drc"),{uid:b.join("-"),bitrate:n.bitrate,codecs:t.includes("codecs")?void 0:nt(n.mime_type,'codecs="','"'),audio_sample_rate:t.includes("audio_sample_rate")?void 0:n.audio_sample_rate,channels:t.includes("AudioChannelConfiguration")?void 0:n.audio_channels||2,segment_info:l2(n,e,o,r,a,f,m)}}s(oA,"getAudioRepresentation");function sA(n,t){if(!n.audio_track&&!t)return;let e=[n.is_original?"main":"alternate"];return (n.is_dubbed||n.is_auto_dubbed)&&e.push("dub"),n.is_descriptive&&e.push("description"),n.is_drc&&e.push("enhanced-audio-intelligibility"),e}s(sA,"getTrackRoles");function rA(n,t,e,o,r,a,f,m){let b=n[0],{audio_track:x}=b,I=[],k=!!f,S;return x?k&&b.is_drc?S=f.label_drc_multiple(x.display_name):S=x.display_name:k&&(S=b.is_drc?f.label_drc:f.label_original),{mime_type:b.mime_type.split(";")[0],language:b.language??void 0,codecs:a2(n,I),audio_sample_rate:c2(n,"audio_sample_rate",I),track_name:S,track_roles:sA(b,k),channels:tA(n,I),drm_families:b.drm_families,drm_track_type:b.drm_track_type,representations:n.map(R=>oA(R,I,t,e,o,r,a,m))}}s(rA,"getAudioSet");var aA={BT709:"1",BT2020:"9"},r2={BT709:"1",BT2020_10:"14",SMPTEST2084:"16",ARIB_STD_B67:"18"},cA={BT709:"1",BT2020_NCL:"14"};function uA(n){let t=n.color_info,e,o,r;if(t){if(t.primaries&&(e=aA[t.primaries]),t.transfer_characteristics&&(o=r2[t.transfer_characteristics]),t.matrix_coefficients&&(r=cA[t.matrix_coefficients],!r)){let f=new URL(n.url),m=JSON.parse(JSON.stringify(n));m.url="REDACTED",m.signature_cipher="REDACTED",m.cipher="REDACTED",ts(Q3,`Unknown matrix coefficients "${t.matrix_coefficients}". The DASH manifest is still usable without this.
Please report it at ${Fe.bugs.url} so we can add support for it.
InnerTube client: ${f.searchParams.get("c")}
format:`,m);}}else nt(n.mime_type,'codecs="','"')?.startsWith("avc1")&&(o=r2.BT709);return {primaries:e,transfer_characteristics:o,matrix_coefficients:r}}s(uA,"getColorInfo");function lA(n,t,e,o,r,a,f,m){return {uid:n.itag.toString(),bitrate:n.bitrate,width:n.width,height:n.height,codecs:e.includes("codecs")?void 0:nt(n.mime_type,'codecs="','"'),fps:e.includes("fps")?void 0:n.fps,segment_info:l2(n,t,r,o,a,f,m)}}s(lA,"getVideoRepresentation");function pA(n,t,e,o,r,a,f){let m=n[0],b=uA(m),x=[];return {mime_type:m.mime_type.split(";")[0],color_info:b,codecs:a2(n,x),fps:c2(n,"fps",x),drm_families:m.drm_families,drm_track_type:m.drm_track_type,representations:n.map(k=>lA(k,t,x,e,o,r,a,f))}}s(pA,"getVideoSet");function fA(n){let t=new Map,e=n.is(_i)?n.boards:[n.board];for(let o of e){let r=new URL(o.template_url).pathname.split(".").pop(),a=`image/${r==="jpg"?"jpeg":r}`;t.has(a)||t.set(a,[]),t.get(a)?.push(o);}return t}s(fA,"getStoryboardInfo");async function dA(n,t,e,o,r){let a=t.template_url,f=e(new URL(a.replace("$M","0"))),m=r.response?r.response:n.session.http.fetch_function(f,{method:"HEAD",headers:Ji});return r.response=m,(await m).headers.get("Content-Type")||o}s(dA,"getStoryboardMimeType");async function mA(n,t,e){let o=t.template_url,r=[],a=Math.min(t.type==="vod"?t.storyboard_count:5,10);for(let b=0;b<a;b++){let x=new URL(o.replace("$M",b.toString())),I=b===0&&e.response?e.response:n.session.http.fetch_function(x,{method:"HEAD",headers:Ji});b===0&&(e.response=I),r.push(I);}let f=await Promise.all(r),m=[];for(let b of f)m.push(parseInt(b.headers.get("Content-Length")||"0"));return Math.ceil(Math.max(...m)/(t.rows*t.columns)*8)}s(mA,"getStoryboardBitrate");function hA(n,t,e,o,r){let a=e.template_url,f=new URL(a.replace("$M","$Number$")),m;return e.type==="vod"?m=n/e.storyboard_count:m=n*e.columns*e.rows,{uid:`thumbnails_${e.thumbnail_width}x${e.thumbnail_height}`,getBitrate(){return mA(t,e,r)},sheet_width:e.thumbnail_width*e.columns,sheet_height:e.thumbnail_height*e.rows,thumbnail_height:e.thumbnail_height,thumbnail_width:e.thumbnail_width,rows:e.rows,columns:e.columns,template_duration:Math.round(m),template_url:o(f).toString(),getURL(x){return f.toString().replace("$Number$",x.toString())}}}s(hA,"getImageRepresentation");function _A(n,t,e,o){let r=fA(e),a={};return Array.from(r.entries()).map(([f,m])=>({probable_mime_type:f,getMimeType(){return dA(t,m[0],o,f,a)},representations:m.map(b=>hA(n,t,b,o,a))}))}s(_A,"getImageSets");function bA(n,t,e){let o=t==="vtt"?"text/vtt":"application/ttml+xml";return n.map(r=>{let a=new URL(r.base_url);a.searchParams.set("fmt",t);let f=["caption"];return a.searchParams.has("tlang")&&f.push("dub"),{mime_type:o,language:r.language_code,track_name:r.name.toString(),track_roles:f,representation:{uid:`text-${r.vss_id}`,base_url:e(a).toString()}}})}s(bA,"getTextSets");function H_(n,t=false,e=I=>I,o,r,a,f,m,b,x){if(!n)throw new _("Streaming data not available");let I=o?n.adaptive_formats.filter(q=>!o(q)):n.adaptive_formats,k,S;if(t){if(S={},!f)throw new _("Unable to get duration or segment count for this Post Live DVR video without an Actions instance");k=s(()=>S?nA(S,I[0],e,f,a,r):Promise.resolve(0),"getDuration");}else {let q=I[0].approx_duration_ms/1e3;k=s(()=>Promise.resolve(q),"getDuration");}let{groups:P,has_multiple_audio_tracks:R}=eA(I,t),{video_groups:E,audio_groups:U}=P.reduce((q,Ft)=>Ft[0].has_audio?(R&&!Ft[0].audio_track||q.audio_groups.push(Ft),q):(q.video_groups.push(Ft),q),{video_groups:[],audio_groups:[]}),A;U.flat().some(q=>q.is_drc)&&(A={label_original:x?.label_original||"Original",label_drc:x?.label_drc||"Stable Volume",label_drc_multiple:x?.label_drc_multiple||(q=>`${q} (Stable Volume)`)});let Ee=U.map(q=>rA(q,e,f,a,r,S,A,x?.is_sabr)),Ce=E.map(q=>pA(q,e,a,f,r,S,x?.is_sabr)),ze=[];if(m&&f){let q;if(m.is(_i))q=I[0].approx_duration_ms/1e3;else {let Ft=I[0].target_duration_dec;if(Ft===void 0)throw new _("Format is missing target_duration_dec",{format:I[0]});q=Ft;}ze=_A(q,f,m,e);}let uo=[];if(b&&x?.captions_format){if(x.captions_format!=="vtt"&&x.captions_format!=="ttml")throw new _("Invalid captions format",x.captions_format);uo=bA(b,x.captions_format,e);}return {getDuration:k,audio_sets:Ee,video_sets:Ce,image_sets:ze,text_sets:uo}}s(H_,"getStreamingInfo");async function yA({info:n}){if(!n.is_oft&&!n.is_post_live_dvr)return null;let t=await n.getSegmentTemplate();return z("segmentTemplate",{startNumber:t.init_url?"1":"0",timescale:"1000",initialization:t.init_url,media:t.media_url},z("segmentTimeline",null,t.timeline.map(e=>z("s",{d:e.duration,r:e.repeat_count}))))}s(yA,"OTFPostLiveDvrSegmentInfo");function p2({info:n}){return n.is_oft||n.is_post_live_dvr?z(yA,{info:n}):z(s2,null,z("baseURL",null,n.base_url),z("segmentBase",{indexRange:`${n.index_range.start}-${n.index_range.end}`},z("initialization",{range:`${n.init_range.start}-${n.init_range.end}`})))}s(p2,"SegmentInfo");function f2(n){switch(n){case "WIDEVINE":return "edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";case "PLAYREADY":return "9a04f079-9840-4286-ab92-e65be0885f95";default:return null}}s(f2,"getDrmSystemId");async function xA({streamingData:n,isPostLiveDvr:t,transformURL:e,rejectFormat:o,cpn:r,player:a,actions:f,storyboards:m,captionTracks:b,options:x}){let{getDuration:I,audio_sets:k,video_sets:S,image_sets:P,text_sets:R}=H_(n,t,e,o,r,a,f,m,b,x);return z("mPD",{xmlns:"urn:mpeg:dash:schema:mpd:2011",minBufferTime:"PT1.500S",profiles:"urn:mpeg:dash:profile:isoff-main:2011",type:"static",mediaPresentationDuration:`PT${await I()}S`,"xmlns:xsi":"http://www.w3.org/2001/XMLSchema-instance","xsi:schemaLocation":"urn:mpeg:dash:schema:mpd:2011 http://standards.iso.org/ittf/PubliclyAvailableStandards/MPEG-DASH_schema_files/DASH-MPD.xsd"},z("period",null,k.map((E,U)=>z("adaptationSet",{id:U,mimeType:E.mime_type,startWithSAP:"1",subsegmentAlignment:"true",lang:E.language,codecs:E.codecs,audioSamplingRate:E.audio_sample_rate,contentType:"audio"},E.drm_families&&E.drm_families.map(A=>z("contentProtection",{schemeIdUri:`urn:uuid:${f2(A)}`})),E.track_roles&&E.track_roles.map(A=>z("role",{schemeIdUri:"urn:mpeg:dash:role:2011",value:A})),E.track_name&&z("label",{id:U},E.track_name),E.channels&&z("audioChannelConfiguration",{schemeIdUri:"urn:mpeg:dash:23003:3:audio_channel_configuration:2011",value:E.channels}),E.representations.map(A=>z("representation",{id:A.uid,bandwidth:A.bitrate,codecs:A.codecs,audioSamplingRate:A.audio_sample_rate},A.channels&&z("audioChannelConfiguration",{schemeIdUri:"urn:mpeg:dash:23003:3:audio_channel_configuration:2011",value:A.channels}),z(p2,{info:A.segment_info}))))),S.map((E,U)=>z("adaptationSet",{id:U+k.length,mimeType:E.mime_type,startWithSAP:"1",subsegmentAlignment:"true",codecs:E.codecs,maxPlayoutRate:"1",frameRate:E.fps,contentType:"video"},E.drm_families&&E.drm_families.map(A=>z("contentProtection",{schemeIdUri:`urn:uuid:${f2(A)}`})),E.color_info.primaries&&z("supplementalProperty",{schemeIdUri:"urn:mpeg:mpegB:cicp:ColourPrimaries",value:E.color_info.primaries}),E.color_info.transfer_characteristics&&z("supplementalProperty",{schemeIdUri:"urn:mpeg:mpegB:cicp:TransferCharacteristics",value:E.color_info.transfer_characteristics}),E.color_info.matrix_coefficients&&z("supplementalProperty",{schemeIdUri:"urn:mpeg:mpegB:cicp:MatrixCoefficients",value:E.color_info.matrix_coefficients}),E.representations.map(A=>z("representation",{id:A.uid,bandwidth:A.bitrate,width:A.width,height:A.height,codecs:A.codecs,frameRate:A.fps},z(p2,{info:A.segment_info}))))),P.map(async(E,U)=>z("adaptationSet",{id:U+k.length+S.length,mimeType:await E.getMimeType(),contentType:"image"},E.representations.map(async A=>z("representation",{id:`thumbnails_${A.thumbnail_width}x${A.thumbnail_height}`,bandwidth:await A.getBitrate(),width:A.sheet_width,height:A.sheet_height},z("essentialProperty",{schemeIdUri:"http://dashif.org/thumbnail_tile",value:`${A.columns}x${A.rows}`}),z("segmentTemplate",{media:A.template_url,duration:A.template_duration,startNumber:"0"}))))),R.map((E,U)=>z("adaptationSet",{id:U+k.length+S.length+P.length,mimeType:E.mime_type,lang:E.language,contentType:"text"},E.track_roles.map(A=>z("role",{schemeIdUri:"urn:mpeg:dash:role:2011",value:A})),z("label",{id:U+k.length},E.track_name),z("representation",{id:E.representation.uid,bandwidth:"0"},z("baseURL",null,E.representation.base_url))))))}s(xA,"DashManifest");function d2(n,t=false,e=I=>I,o,r,a,f,m,b,x){if(!n)throw new _("Streaming data not available");return o2(z(xA,{streamingData:n,isPostLiveDvr:t,transformURL:e,options:x,rejectFormat:o,cpn:r,player:a,actions:f,storyboards:m,captionTracks:b}))}s(d2,"toDash");async function gA(n,t,e,o,r,a){if(e?.status==="UNPLAYABLE")throw new _("Video is unplayable",{error_type:"UNPLAYABLE"});if(e?.status==="LOGIN_REQUIRED")throw new _("Video is login required",{error_type:"LOGIN_REQUIRED"});if(!o)throw new _("Streaming data not available.",{error_type:"NO_STREAMING_DATA"});let f={quality:"360p",type:"video+audio",format:"mp4",range:void 0,...n},m=m2(f,o),b=m.decipher(r);if(f.type==="video+audio"&&!n.range){let R=await t.session.http.fetch_function(`${b}&cpn=${a}`,{method:"GET",headers:Ji,redirect:"follow"});if(!R.ok)throw new _("The server responded with a non 2xx status code",{error_type:"FETCH_FAILED",response:R});let E=R.body;if(!E)throw new _("Could not get ReadableStream from fetch Response.",{error_type:"FETCH_FAILED",response:R});return E}let x=1048576*10,I=n.range?n.range.start:0,k=n.range?n.range.end:x,S=false,P;return new W.shim.ReadableStream({start(){},pull:s(async R=>{if(S){R.close();return}return (k>=(m.content_length?m.content_length:0)||n.range)&&(S=true),new Promise(async(E,U)=>{try{P=new AbortController;let A=await t.session.http.fetch_function(`${b}&cpn=${a}&range=${I}-${k||""}`,{method:"GET",headers:{...Ji},signal:P.signal});if(!A.ok)throw new _("The server responded with a non 2xx status code",{error_type:"FETCH_FAILED",response:A});let Ee=A.body;if(!Ee)throw new _("Could not get ReadableStream from fetch Response.",{error_type:"FETCH_FAILED",response:A});for await(let Ce of XE(Ee))R.enqueue(Ce);I=k+1,k+=x,E();}catch(A){U(A);}})},"pull"),async cancel(R){P.abort(R);}},{highWaterMark:1,size(R){return R.byteLength}})}s(gA,"download");function m2(n,t){if(!t)throw new _("Streaming data not available");let e=[...t.formats||[],...t.adaptive_formats||[]];if(n.itag){let k=e.filter(S=>S.itag===n.itag);if(!k.length)throw new _("No matching formats found",{options:n});return k[0]}let o=n.type?n.type.includes("audio"):true,r=n.type?n.type.includes("video"):true,a=n.language||"original",f=n.quality||"best",m=-1,b=["best","bestefficiency"].includes(f),x=f!=="best",I=e.filter(k=>o&&!k.has_audio||r&&!k.has_video||n.codec&&!k.mime_type.includes(n.codec)||n.format!=="any"&&!k.mime_type.includes(n.format||"mp4")||!b&&k.quality_label!==f?false:(k.width&&m<k.width&&(m=k.width),true));if(!I.length)throw new _("No matching formats found",{options:n});if(b&&r&&(I=I.filter(k=>k.width===m)),o&&!r){let k=I.filter(S=>a!=="original"?!S.has_video&&!S.has_text&&S.language===a:!S.has_video&&!S.has_text&&S.is_original);k.length>0&&(I=k);}return x?I.sort((k,S)=>k.bitrate-S.bitrate):I.sort((k,S)=>S.bitrate-k.bitrate),I[0]}s(m2,"chooseFormat");var Gp,Wp,_l,yo,h2,_2,b2,ZE=class ZE{constructor(t,e,o){g(this,yo);g(this,Gp);g(this,Wp);g(this,_l);w(this,Gp,t),w(this,Wp,e),w(this,_l,o||W.shim.fetch);}get fetch_function(){return p(this,_l)}async fetch(t,e){let o=p(this,Gp),r=ve.API.PRODUCTION_1+o.api_version,a=e?.baseURL||r,f=typeof t=="string"?new URL(`${a}${a.endsWith("/")||t.startsWith("/")?"":"/"}${t}`):t instanceof URL?t:new URL(t.url,a),m=e?.headers||(t instanceof W.shim.Request?t.headers:new W.shim.Headers)||new W.shim.Headers,b=e?.body||(t instanceof W.shim.Request?t.body:void 0),x=new W.shim.Headers(m);N(this,yo,_2).call(this,x,o,f),f.searchParams.set("prettyPrint","false"),f.searchParams.set("alt","json");let I=x.get("Content-Type"),k=b,S=false,P=a===r||a===ve.YT_UPLOAD;if(I==="application/json"&&P&&typeof b=="string"){let{newBody:U,isWebKids:A,clientVersion:Ee,clientNameId:Ce,adjustedClientName:ze}=N(this,yo,h2).call(this,b,o);k=U,S=A,Ee&&x.set("X-Youtube-Client-Version",Ee),Ce&&x.set("X-Youtube-Client-Name",Ce),ze===F.ANDROID.NAME||ze===F.YTMUSIC_ANDROID.NAME?(x.set("User-Agent",F.ANDROID.USER_AGENT),x.set("X-GOOG-API-FORMAT-VERSION","2")):ze===F.IOS.NAME&&x.set("User-Agent",F.IOS.USER_AGENT);}else I==="application/x-protobuf"&&W.shim.server&&(x.set("User-Agent",F.ANDROID.USER_AGENT),x.set("X-GOOG-API-FORMAT-VERSION","2"),x.delete("X-Youtube-Client-Version"));if(o.logged_in&&P&&!S){let U=o.oauth;U.oauth2_tokens&&(U.shouldRefreshToken()&&await U.refreshAccessToken(),x.set("Authorization",`Bearer ${U.oauth2_tokens.access_token}`));let A=p(this,Wp);if(A){let Ee=e1(A,"SAPISID");Ee&&(x.set("Authorization",await QE(Ee)),x.set("X-Goog-Authuser",o.account_index.toString()),o.context.user.onBehalfOfUser&&x.set("X-Goog-PageId",o.context.user.onBehalfOfUser)),x.set("Cookie",A);}}let R=new W.shim.Request(f,t instanceof W.shim.Request?t:e),E=await p(this,_l).call(this,R,{body:k,headers:x,redirect:t instanceof W.shim.Request?t.redirect:e?.redirect||"follow",...W.shim.runtime!=="cf-worker"?{credentials:"include"}:{}});if(E.ok)return E;throw new _(`Request to ${E.url} failed with status code ${E.status}`,await E.text())}};Gp=new WeakMap,Wp=new WeakMap,_l=new WeakMap,yo=new WeakSet,h2=s(function(t,e){let o=JSON.parse(t),r=JSON.parse(JSON.stringify(e.context));N(this,yo,b2).call(this,r,o.client);let a={...o,context:r},f=a.context.client.clientVersion,m=a.context.client.clientName,b=F_[m];delete a.client;let x=a.context.client.clientName===F.WEB_KIDS.NAME;return {newBody:JSON.stringify(a),isWebKids:x,clientVersion:f,clientNameId:b,adjustedClientName:a.context.client.clientName}},"#processJsonPayload"),_2=s(function(t,e,o){t.set("Accept","*/*"),t.set("Accept-Language","*"),t.set("X-Goog-Visitor-Id",e.context.client.visitorData||""),t.set("X-Youtube-Client-Version",e.context.client.clientVersion||"");let r=F_[e.context.client.clientName];r&&t.set("X-Youtube-Client-Name",r),W.shim.server&&(t.set("User-Agent",e.user_agent||""),t.set("Origin",o.origin));},"#setupCommonHeaders"),b2=s(function(t,e){if(!e)return;let o=e.toUpperCase();if(!j_.includes(o))throw new _(`Invalid client: ${e}`,{available_innertube_clients:j_});switch(o!=="WEB"&&delete t.client.configInfo,(o==="ANDROID"||o==="YTMUSIC_ANDROID"||o==="YTSTUDIO_ANDROID")&&(t.client.androidSdkVersion=F.ANDROID.SDK_VERSION,t.client.userAgent=F.ANDROID.USER_AGENT,t.client.osName="Android",t.client.osVersion="13",t.client.platform="MOBILE"),o){case "MWEB":t.client.clientVersion=F.MWEB.VERSION,t.client.clientName=F.MWEB.NAME,t.client.clientFormFactor="SMALL_FORM_FACTOR",t.client.platform="MOBILE";break;case "IOS":t.client.deviceMake="Apple",t.client.deviceModel=F.IOS.DEVICE_MODEL,t.client.clientVersion=F.IOS.VERSION,t.client.clientName=F.IOS.NAME,t.client.platform="MOBILE",t.client.osName=F.IOS.OS_NAME,t.client.osVersion=F.IOS.OS_VERSION,delete t.client.browserName,delete t.client.browserVersion;break;case "YTMUSIC":t.client.clientVersion=F.YTMUSIC.VERSION,t.client.clientName=F.YTMUSIC.NAME;break;case "ANDROID":t.client.clientVersion=F.ANDROID.VERSION,t.client.clientFormFactor="SMALL_FORM_FACTOR",t.client.clientName=F.ANDROID.NAME;break;case "YTMUSIC_ANDROID":t.client.clientVersion=F.YTMUSIC_ANDROID.VERSION,t.client.clientFormFactor="SMALL_FORM_FACTOR",t.client.clientName=F.YTMUSIC_ANDROID.NAME;break;case "YTSTUDIO_ANDROID":t.client.clientVersion=F.YTSTUDIO_ANDROID.VERSION,t.client.clientFormFactor="SMALL_FORM_FACTOR",t.client.clientName=F.YTSTUDIO_ANDROID.NAME;break;case "TV":t.client.clientVersion=F.TV.VERSION,t.client.clientName=F.TV.NAME,t.client.userAgent=F.TV.USER_AGENT;break;case "TV_SIMPLY":t.client.clientVersion=F.TV_SIMPLY.VERSION,t.client.clientName=F.TV_SIMPLY.NAME;break;case "TV_EMBEDDED":t.client.clientName=F.TV_EMBEDDED.NAME,t.client.clientVersion=F.TV_EMBEDDED.VERSION,t.client.clientScreen="EMBED",t.thirdParty={embedUrl:ve.YT_BASE};break;case "YTKIDS":t.client.clientVersion=F.WEB_KIDS.VERSION,t.client.clientName=F.WEB_KIDS.NAME,t.client.kidsAppInfo={categorySettings:{enabledCategories:["approved_for_you","black_joy","camp","collections","earth","explore","favorites","gaming","halloween","hero","learning","move","music","reading","shared_by_parents","shows","soccer","sports","spotlight","winter"]},contentSettings:{corpusPreference:"KIDS_CORPUS_PREFERENCE_YOUNGER",kidsNoSearchMode:"YT_KIDS_NO_SEARCH_MODE_OFF"}};break;case "WEB_EMBEDDED":t.client.clientName=F.WEB_EMBEDDED.NAME,t.client.clientVersion=F.WEB_EMBEDDED.VERSION,t.client.clientScreen="EMBED",t.thirdParty={embedUrl:ve.GOOGLE_SEARCH_BASE};break;case "WEB_CREATOR":t.client.clientName=F.WEB_CREATOR.NAME,t.client.clientVersion=F.WEB_CREATOR.VERSION;break;}},"#adjustContext"),s(ZE,"HTTPClient");var bl=ZE;var y2={};Te(y2,{compress:()=>t1,decompress:()=>i1});function t1(n){let t=[],e={};for(let a=0;a<256;a++)e[String.fromCharCode(a)]=a;let o="",r=256;for(let a=0;a<n.length;a++){let f=n[a],m=o+f;e.hasOwnProperty(m)?o=m:(t.push(e[o]),e[m]=r++,o=f);}return o!==""&&t.push(e[o]),t.map(a=>String.fromCharCode(a)).join("")}s(t1,"compress");function i1(n){let t={},e=n.split(""),o=[e.shift()],r=e.length>>>0,a=256,f=o[0],m=f;for(let b=0;b<r;++b){let x=e[b].charCodeAt(0),I=x<256?e[b]:t[x]?t[x]:m+f;o.push(I),f=I.charAt(0),t[a++]=m+f,m=I;}return o.join("")}s(i1,"decompress");var xo={};Te(xo,{MAGIC_HEADER:()=>n1,VERSION:()=>o1,deserialize:()=>TA,serialize:()=>wA});var n1=5849684,o1=1;function wA(n){let t=JSON.stringify(n),e=t1(t),o=new TextEncoder().encode(e),r=new ArrayBuffer(12+o.byteLength),a=new DataView(r);return a.setUint32(0,n1,true),a.setUint32(4,o1,true),a.setUint32(8,o.byteLength,true),new Uint8Array(r).set(o,12),new Uint8Array(r)}s(wA,"serialize");function TA(n){if(n.byteLength<12)throw new Error("Invalid binary format: buffer too short");let t=new DataView(n.buffer,n.byteOffset);if(t.getUint32(0,true)!==n1)throw new Error("Invalid binary format: magic header mismatch");let o=t.getUint32(4,true);if(o!==o1)throw new Error(`Unsupported binary format version: ${o}`);let r=t.getUint32(8,true),a=n.slice(12,12+r),f=new TextDecoder().decode(a),m=i1(f);return JSON.parse(m)}s(TA,"deserialize");var ss={};Te(ss,{decodeVisitorData:()=>pM,encodeCommentActionParams:()=>Hp,encodeNextParams:()=>fM,encodeVisitorData:()=>lM});function g2(){let n=0,t=0;for(let o=0;o<28;o+=7){let r=this.buf[this.pos++];if(n|=(r&127)<<o,(r&128)==0)return this.assertBounds(),[n,t]}let e=this.buf[this.pos++];if(n|=(e&15)<<28,t=(e&112)>>4,(e&128)==0)return this.assertBounds(),[n,t];for(let o=3;o<=31;o+=7){let r=this.buf[this.pos++];if(t|=(r&127)<<o,(r&128)==0)return this.assertBounds(),[n,t]}throw new Error("invalid varint")}s(g2,"varint64read");function q_(n,t,e){for(let a=0;a<28;a=a+7){let f=n>>>a,m=!(!(f>>>7)&&t==0),b=(m?f|128:f)&255;if(e.push(b),!m)return}let o=n>>>28&15|(t&7)<<4,r=t>>3!=0;if(e.push((r?o|128:o)&255),!!r){for(let a=3;a<31;a=a+7){let f=t>>>a,m=!!(f>>>7),b=(m?f|128:f)&255;if(e.push(b),!m)return}e.push(t>>>31&1);}}s(q_,"varint64write");var K_=4294967296;function s1(n){let t=n[0]==="-";t&&(n=n.slice(1));let e=1e6,o=0,r=0;function a(f,m){let b=Number(n.slice(f,m));r*=e,o=o*e+b,o>=K_&&(r=r+(o/K_|0),o=o%K_);}return s(a,"add1e6digit"),a(-24,-18),a(-18,-12),a(-12,-6),a(-6),t?T2(o,r):a1(o,r)}s(s1,"int64FromString");function w2(n,t){let e=a1(n,t),o=e.hi&2147483648;o&&(e=T2(e.lo,e.hi));let r=r1(e.lo,e.hi);return o?"-"+r:r}s(w2,"int64ToString");function r1(n,t){if({lo:n,hi:t}=vA(n,t),t<=2097151)return String(K_*t+n);let e=n&16777215,o=(n>>>24|t<<8)&16777215,r=t>>16&65535,a=e+o*6777216+r*6710656,f=o+r*8147497,m=r*2,b=1e7;return a>=b&&(f+=Math.floor(a/b),a%=b),f>=b&&(m+=Math.floor(f/b),f%=b),m.toString()+x2(f)+x2(a)}s(r1,"uInt64ToString");function vA(n,t){return {lo:n>>>0,hi:t>>>0}}s(vA,"toUnsigned");function a1(n,t){return {lo:n|0,hi:t|0}}s(a1,"newBits");function T2(n,t){return t=~t,n?n=~n+1:t+=1,a1(n,t)}s(T2,"negate");var x2=s(n=>{let t=String(n);return "0000000".slice(t.length)+t},"decimalFrom1e7WithLeadingZeros");function c1(n,t){if(n>=0){for(;n>127;)t.push(n&127|128),n=n>>>7;t.push(n);}else {for(let e=0;e<9;e++)t.push(n&127|128),n=n>>7;t.push(1);}}s(c1,"varint32write");function v2(){let n=this.buf[this.pos++],t=n&127;if((n&128)==0)return this.assertBounds(),t;if(n=this.buf[this.pos++],t|=(n&127)<<7,(n&128)==0)return this.assertBounds(),t;if(n=this.buf[this.pos++],t|=(n&127)<<14,(n&128)==0)return this.assertBounds(),t;if(n=this.buf[this.pos++],t|=(n&127)<<21,(n&128)==0)return this.assertBounds(),t;n=this.buf[this.pos++],t|=(n&15)<<28;for(let e=5;(n&128)!==0&&e<10;e++)n=this.buf[this.pos++];if((n&128)!=0)throw new Error("invalid varint");return this.assertBounds(),t>>>0}s(v2,"varint32read");var Ht=IA();function IA(){let n=new DataView(new ArrayBuffer(8));if(typeof BigInt=="function"&&typeof n.getBigInt64=="function"&&typeof n.getBigUint64=="function"&&typeof n.setBigInt64=="function"&&typeof n.setBigUint64=="function"&&(typeof process!="object"||typeof process.env!="object"||process.env.BUF_BIGINT_DISABLE!=="1")){let e=BigInt("-9223372036854775808"),o=BigInt("9223372036854775807"),r=BigInt("0"),a=BigInt("18446744073709551615");return {zero:BigInt(0),supported:true,parse(f){let m=typeof f=="bigint"?f:BigInt(f);if(m>o||m<e)throw new Error(`invalid int64: ${f}`);return m},uParse(f){let m=typeof f=="bigint"?f:BigInt(f);if(m>a||m<r)throw new Error(`invalid uint64: ${f}`);return m},enc(f){return n.setBigInt64(0,this.parse(f),true),{lo:n.getInt32(0,true),hi:n.getInt32(4,true)}},uEnc(f){return n.setBigInt64(0,this.uParse(f),true),{lo:n.getInt32(0,true),hi:n.getInt32(4,true)}},dec(f,m){return n.setInt32(0,f,true),n.setInt32(4,m,true),n.getBigInt64(0,true)},uDec(f,m){return n.setInt32(0,f,true),n.setInt32(4,m,true),n.getBigUint64(0,true)}}}return {zero:"0",supported:false,parse(e){return typeof e!="string"&&(e=e.toString()),I2(e),e},uParse(e){return typeof e!="string"&&(e=e.toString()),k2(e),e},enc(e){return typeof e!="string"&&(e=e.toString()),I2(e),s1(e)},uEnc(e){return typeof e!="string"&&(e=e.toString()),k2(e),s1(e)},dec(e,o){return w2(e,o)},uDec(e,o){return r1(e,o)}}}s(IA,"makeInt64Support");function I2(n){if(!/^-?[0-9]+$/.test(n))throw new Error("invalid int64: "+n)}s(I2,"assertInt64String");function k2(n){if(!/^[0-9]+$/.test(n))throw new Error("invalid uint64: "+n)}s(k2,"assertUInt64String");var u1=Symbol.for("@bufbuild/protobuf/text-encoding");function l1(){if(globalThis[u1]==null){let n=new globalThis.TextEncoder,t=new globalThis.TextDecoder;globalThis[u1]={encodeUtf8(e){return n.encode(e)},decodeUtf8(e){return t.decode(e)},checkUtf8(e){try{return encodeURIComponent(e),!0}catch{return  false}}};}return globalThis[u1]}s(l1,"getTextEncoding");var go;(function(n){n[n.Varint=0]="Varint",n[n.Bit64=1]="Bit64",n[n.LengthDelimited=2]="LengthDelimited",n[n.StartGroup=3]="StartGroup",n[n.EndGroup=4]="EndGroup",n[n.Bit32=5]="Bit32";})(go||(go={}));var kA=34028234663852886e22,SA=-34028234663852886e22,EA=4294967295,CA=2147483647,NA=-2147483648,f1=class f1{constructor(t=l1().encodeUtf8){this.encodeUtf8=t,this.stack=[],this.chunks=[],this.buf=[];}finish(){this.chunks.push(new Uint8Array(this.buf));let t=0;for(let r=0;r<this.chunks.length;r++)t+=this.chunks[r].length;let e=new Uint8Array(t),o=0;for(let r=0;r<this.chunks.length;r++)e.set(this.chunks[r],o),o+=this.chunks[r].length;return this.chunks=[],e}fork(){return this.stack.push({chunks:this.chunks,buf:this.buf}),this.chunks=[],this.buf=[],this}join(){let t=this.finish(),e=this.stack.pop();if(!e)throw new Error("invalid state, fork stack empty");return this.chunks=e.chunks,this.buf=e.buf,this.uint32(t.byteLength),this.raw(t)}tag(t,e){return this.uint32((t<<3|e)>>>0)}raw(t){return this.buf.length&&(this.chunks.push(new Uint8Array(this.buf)),this.buf=[]),this.chunks.push(t),this}uint32(t){for(S2(t);t>127;)this.buf.push(t&127|128),t=t>>>7;return this.buf.push(t),this}int32(t){return p1(t),c1(t,this.buf),this}bool(t){return this.buf.push(t?1:0),this}bytes(t){return this.uint32(t.byteLength),this.raw(t)}string(t){let e=this.encodeUtf8(t);return this.uint32(e.byteLength),this.raw(e)}float(t){RA(t);let e=new Uint8Array(4);return new DataView(e.buffer).setFloat32(0,t,true),this.raw(e)}double(t){let e=new Uint8Array(8);return new DataView(e.buffer).setFloat64(0,t,true),this.raw(e)}fixed32(t){S2(t);let e=new Uint8Array(4);return new DataView(e.buffer).setUint32(0,t,true),this.raw(e)}sfixed32(t){p1(t);let e=new Uint8Array(4);return new DataView(e.buffer).setInt32(0,t,true),this.raw(e)}sint32(t){return p1(t),t=(t<<1^t>>31)>>>0,c1(t,this.buf),this}sfixed64(t){let e=new Uint8Array(8),o=new DataView(e.buffer),r=Ht.enc(t);return o.setInt32(0,r.lo,true),o.setInt32(4,r.hi,true),this.raw(e)}fixed64(t){let e=new Uint8Array(8),o=new DataView(e.buffer),r=Ht.uEnc(t);return o.setInt32(0,r.lo,true),o.setInt32(4,r.hi,true),this.raw(e)}int64(t){let e=Ht.enc(t);return q_(e.lo,e.hi,this.buf),this}sint64(t){let e=Ht.enc(t),o=e.hi>>31,r=e.lo<<1^o,a=(e.hi<<1|e.lo>>>31)^o;return q_(r,a,this.buf),this}uint64(t){let e=Ht.uEnc(t);return q_(e.lo,e.hi,this.buf),this}};s(f1,"BinaryWriter");var C=f1,d1=class d1{constructor(t,e=l1().decodeUtf8){this.decodeUtf8=e,this.varint64=g2,this.uint32=v2,this.buf=t,this.len=t.length,this.pos=0,this.view=new DataView(t.buffer,t.byteOffset,t.byteLength);}tag(){let t=this.uint32(),e=t>>>3,o=t&7;if(e<=0||o<0||o>5)throw new Error("illegal tag: field no "+e+" wire type "+o);return [e,o]}skip(t,e){let o=this.pos;switch(t){case go.Varint:for(;this.buf[this.pos++]&128;);break;case go.Bit64:this.pos+=4;case go.Bit32:this.pos+=4;break;case go.LengthDelimited:let r=this.uint32();this.pos+=r;break;case go.StartGroup:for(;;){let[a,f]=this.tag();if(f===go.EndGroup){if(e!==void 0&&a!==e)throw new Error("invalid end group tag");break}this.skip(f,a);}break;default:throw new Error("cant skip wire type "+t)}return this.assertBounds(),this.buf.subarray(o,this.pos)}assertBounds(){if(this.pos>this.len)throw new RangeError("premature EOF")}int32(){return this.uint32()|0}sint32(){let t=this.uint32();return t>>>1^-(t&1)}int64(){return Ht.dec(...this.varint64())}uint64(){return Ht.uDec(...this.varint64())}sint64(){let[t,e]=this.varint64(),o=-(t&1);return t=(t>>>1|(e&1)<<31)^o,e=e>>>1^o,Ht.dec(t,e)}bool(){let[t,e]=this.varint64();return t!==0||e!==0}fixed32(){return this.view.getUint32((this.pos+=4)-4,true)}sfixed32(){return this.view.getInt32((this.pos+=4)-4,true)}fixed64(){return Ht.uDec(this.sfixed32(),this.sfixed32())}sfixed64(){return Ht.dec(this.sfixed32(),this.sfixed32())}float(){return this.view.getFloat32((this.pos+=4)-4,true)}double(){return this.view.getFloat64((this.pos+=8)-8,true)}bytes(){let t=this.uint32(),e=this.pos;return this.pos+=t,this.assertBounds(),this.buf.subarray(e,e+t)}string(){return this.decodeUtf8(this.bytes())}};s(d1,"BinaryReader");var T=d1;function p1(n){if(typeof n=="string")n=Number(n);else if(typeof n!="number")throw new Error("invalid int32: "+typeof n);if(!Number.isInteger(n)||n>CA||n<NA)throw new Error("invalid int32: "+n)}s(p1,"assertInt32");function S2(n){if(typeof n=="string")n=Number(n);else if(typeof n!="number")throw new Error("invalid uint32: "+typeof n);if(!Number.isInteger(n)||n>EA||n<0)throw new Error("invalid uint32: "+n)}s(S2,"assertUInt32");function RA(n){if(typeof n=="string"){let t=n;if(n=Number(n),isNaN(n)&&t!=="NaN")throw new Error("invalid float32: "+t)}else if(typeof n!="number")throw new Error("invalid float32: "+typeof n);if(Number.isFinite(n)&&(n>kA||n<SA))throw new Error("invalid float32: "+n)}s(RA,"assertFloat32");var q2={RELEVANCE:0,0:"RELEVANCE",RATING:1,1:"RATING",UPLOAD_DATE:2,2:"UPLOAD_DATE",VIEW_COUNT:3,3:"VIEW_COUNT",UNRECOGNIZED:-1,"-1":"UNRECOGNIZED"},$2={ANY_DATE:0,0:"ANY_DATE",HOUR:1,1:"HOUR",TODAY:2,2:"TODAY",WEEK:3,3:"WEEK",MONTH:4,4:"MONTH",YEAR:5,5:"YEAR",UNRECOGNIZED:-1,"-1":"UNRECOGNIZED"},z2={ANY_TYPE:0,0:"ANY_TYPE",VIDEO:1,1:"VIDEO",CHANNEL:2,2:"CHANNEL",PLAYLIST:3,3:"PLAYLIST",MOVIE:4,4:"MOVIE",UNRECOGNIZED:-1,"-1":"UNRECOGNIZED"},J2={ANY_DURATION:0,0:"ANY_DURATION",SHORT:1,1:"SHORT",LONG:2,2:"LONG",MEDIUM:3,3:"MEDIUM",UNRECOGNIZED:-1,"-1":"UNRECOGNIZED"};function PA(){return {id:"",timestamp:0}}s(PA,"createBaseVisitorData");var m1={encode(n,t=new C){return n.id!==""&&t.uint32(10).string(n.id),n.timestamp!==0&&t.uint32(40).int32(n.timestamp),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=PA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.id=e.string();continue;case 5:if(a!==40)break;r.timestamp=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function AA(){return {sortBy:void 0,filters:void 0}}s(AA,"createBaseSearchFilter");var $_={encode(n,t=new C){return n.sortBy!==void 0&&t.uint32(8).int32(n.sortBy),n.filters!==void 0&&E2.encode(n.filters,t.uint32(18).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=AA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.sortBy=e.int32();continue;case 2:if(a!==18)break;r.filters=E2.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function MA(){return {uploadDate:void 0,type:void 0,duration:void 0,musicSearchType:void 0,featuresHd:void 0,featuresSubtitles:void 0,featuresCreativeCommons:void 0,features3d:void 0,featuresLive:void 0,featuresPurchased:void 0,features4k:void 0,features360:void 0,featuresLocation:void 0,featuresHdr:void 0,featuresVr180:void 0}}s(MA,"createBaseSearchFilter_Filters");var E2={encode(n,t=new C){return n.uploadDate!==void 0&&t.uint32(8).int32(n.uploadDate),n.type!==void 0&&t.uint32(16).int32(n.type),n.duration!==void 0&&t.uint32(24).int32(n.duration),n.musicSearchType!==void 0&&C2.encode(n.musicSearchType,t.uint32(138).fork()).join(),n.featuresHd!==void 0&&t.uint32(32).bool(n.featuresHd),n.featuresSubtitles!==void 0&&t.uint32(40).bool(n.featuresSubtitles),n.featuresCreativeCommons!==void 0&&t.uint32(48).bool(n.featuresCreativeCommons),n.features3d!==void 0&&t.uint32(56).bool(n.features3d),n.featuresLive!==void 0&&t.uint32(64).bool(n.featuresLive),n.featuresPurchased!==void 0&&t.uint32(72).bool(n.featuresPurchased),n.features4k!==void 0&&t.uint32(112).bool(n.features4k),n.features360!==void 0&&t.uint32(120).bool(n.features360),n.featuresLocation!==void 0&&t.uint32(184).bool(n.featuresLocation),n.featuresHdr!==void 0&&t.uint32(200).bool(n.featuresHdr),n.featuresVr180!==void 0&&t.uint32(208).bool(n.featuresVr180),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=MA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.uploadDate=e.int32();continue;case 2:if(a!==16)break;r.type=e.int32();continue;case 3:if(a!==24)break;r.duration=e.int32();continue;case 17:if(a!==138)break;r.musicSearchType=C2.decode(e,e.uint32());continue;case 4:if(a!==32)break;r.featuresHd=e.bool();continue;case 5:if(a!==40)break;r.featuresSubtitles=e.bool();continue;case 6:if(a!==48)break;r.featuresCreativeCommons=e.bool();continue;case 7:if(a!==56)break;r.features3d=e.bool();continue;case 8:if(a!==64)break;r.featuresLive=e.bool();continue;case 9:if(a!==72)break;r.featuresPurchased=e.bool();continue;case 14:if(a!==112)break;r.features4k=e.bool();continue;case 15:if(a!==120)break;r.features360=e.bool();continue;case 23:if(a!==184)break;r.featuresLocation=e.bool();continue;case 25:if(a!==200)break;r.featuresHdr=e.bool();continue;case 26:if(a!==208)break;r.featuresVr180=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function DA(){return {song:void 0,video:void 0,album:void 0,artist:void 0,playlist:void 0}}s(DA,"createBaseSearchFilter_Filters_MusicSearchType");var C2={encode(n,t=new C){return n.song!==void 0&&t.uint32(8).bool(n.song),n.video!==void 0&&t.uint32(16).bool(n.video),n.album!==void 0&&t.uint32(24).bool(n.album),n.artist!==void 0&&t.uint32(32).bool(n.artist),n.playlist!==void 0&&t.uint32(40).bool(n.playlist),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=DA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.song=e.bool();continue;case 2:if(a!==16)break;r.video=e.bool();continue;case 3:if(a!==24)break;r.album=e.bool();continue;case 4:if(a!==32)break;r.artist=e.bool();continue;case 5:if(a!==40)break;r.playlist=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function OA(){return {channelId:"",prefId:void 0,number0:void 0,number1:void 0}}s(OA,"createBaseNotificationPreferences");var X2={encode(n,t=new C){return n.channelId!==""&&t.uint32(10).string(n.channelId),n.prefId!==void 0&&N2.encode(n.prefId,t.uint32(18).fork()).join(),n.number0!==void 0&&t.uint32(24).int32(n.number0),n.number1!==void 0&&t.uint32(32).int32(n.number1),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=OA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.channelId=e.string();continue;case 2:if(a!==18)break;r.prefId=N2.decode(e,e.uint32());continue;case 3:if(a!==24)break;r.number0=e.int32();continue;case 4:if(a!==32)break;r.number1=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function BA(){return {index:0}}s(BA,"createBaseNotificationPreferences_Preference");var N2={encode(n,t=new C){return n.index!==0&&t.uint32(8).int32(n.index),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=BA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.index=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function LA(){return {params:void 0,number0:void 0,number1:void 0}}s(LA,"createBaseLiveMessageParams");var Z2={encode(n,t=new C){return n.params!==void 0&&R2.encode(n.params,t.uint32(10).fork()).join(),n.number0!==void 0&&t.uint32(16).int32(n.number0),n.number1!==void 0&&t.uint32(24).int32(n.number1),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=LA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.params=R2.decode(e,e.uint32());continue;case 2:if(a!==16)break;r.number0=e.int32();continue;case 3:if(a!==24)break;r.number1=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function UA(){return {ids:void 0}}s(UA,"createBaseLiveMessageParams_Params");var R2={encode(n,t=new C){return n.ids!==void 0&&P2.encode(n.ids,t.uint32(42).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=UA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 5:if(a!==42)break;r.ids=P2.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function YA(){return {channelId:"",videoId:""}}s(YA,"createBaseLiveMessageParams_Params_Ids");var P2={encode(n,t=new C){return n.channelId!==""&&t.uint32(10).string(n.channelId),n.videoId!==""&&t.uint32(18).string(n.videoId),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=YA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.channelId=e.string();continue;case 2:if(a!==18)break;r.videoId=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function VA(){return {ctx:void 0,unkParam:0,params:void 0}}s(VA,"createBaseGetCommentsSectionParams");var Q2={encode(n,t=new C){return n.ctx!==void 0&&A2.encode(n.ctx,t.uint32(18).fork()).join(),n.unkParam!==0&&t.uint32(24).int32(n.unkParam),n.params!==void 0&&M2.encode(n.params,t.uint32(50).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=VA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 2:if(a!==18)break;r.ctx=A2.decode(e,e.uint32());continue;case 3:if(a!==24)break;r.unkParam=e.int32();continue;case 6:if(a!==50)break;r.params=M2.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function FA(){return {videoId:""}}s(FA,"createBaseGetCommentsSectionParams_Context");var A2={encode(n,t=new C){return n.videoId!==""&&t.uint32(18).string(n.videoId),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=FA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 2:if(a!==18)break;r.videoId=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function jA(){return {unkToken:void 0,opts:void 0,repliesOpts:void 0,page:void 0,target:""}}s(jA,"createBaseGetCommentsSectionParams_Params");var M2={encode(n,t=new C){return n.unkToken!==void 0&&t.uint32(10).string(n.unkToken),n.opts!==void 0&&D2.encode(n.opts,t.uint32(34).fork()).join(),n.repliesOpts!==void 0&&O2.encode(n.repliesOpts,t.uint32(26).fork()).join(),n.page!==void 0&&t.uint32(40).int32(n.page),n.target!==""&&t.uint32(66).string(n.target),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=jA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.unkToken=e.string();continue;case 4:if(a!==34)break;r.opts=D2.decode(e,e.uint32());continue;case 3:if(a!==26)break;r.repliesOpts=O2.decode(e,e.uint32());continue;case 5:if(a!==40)break;r.page=e.int32();continue;case 8:if(a!==66)break;r.target=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function GA(){return {videoId:"",sortBy:0,type:0,commentId:void 0}}s(GA,"createBaseGetCommentsSectionParams_Params_Options");var D2={encode(n,t=new C){return n.videoId!==""&&t.uint32(34).string(n.videoId),n.sortBy!==0&&t.uint32(48).int32(n.sortBy),n.type!==0&&t.uint32(120).int32(n.type),n.commentId!==void 0&&t.uint32(130).string(n.commentId),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=GA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 4:if(a!==34)break;r.videoId=e.string();continue;case 6:if(a!==48)break;r.sortBy=e.int32();continue;case 15:if(a!==120)break;r.type=e.int32();continue;case 16:if(a!==130)break;r.commentId=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function WA(){return {commentId:"",unkopts:void 0,channelId:void 0,videoId:"",unkParam1:0,unkParam2:0}}s(WA,"createBaseGetCommentsSectionParams_Params_RepliesOptions");var O2={encode(n,t=new C){return n.commentId!==""&&t.uint32(18).string(n.commentId),n.unkopts!==void 0&&B2.encode(n.unkopts,t.uint32(34).fork()).join(),n.channelId!==void 0&&t.uint32(42).string(n.channelId),n.videoId!==""&&t.uint32(50).string(n.videoId),n.unkParam1!==0&&t.uint32(64).int32(n.unkParam1),n.unkParam2!==0&&t.uint32(72).int32(n.unkParam2),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=WA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 2:if(a!==18)break;r.commentId=e.string();continue;case 4:if(a!==34)break;r.unkopts=B2.decode(e,e.uint32());continue;case 5:if(a!==42)break;r.channelId=e.string();continue;case 6:if(a!==50)break;r.videoId=e.string();continue;case 8:if(a!==64)break;r.unkParam1=e.int32();continue;case 9:if(a!==72)break;r.unkParam2=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function HA(){return {unkParam:0}}s(HA,"createBaseGetCommentsSectionParams_Params_RepliesOptions_UnkOpts");var B2={encode(n,t=new C){return n.unkParam!==0&&t.uint32(8).int32(n.unkParam),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=HA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.unkParam=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function KA(){return {videoId:"",params:void 0,number:0}}s(KA,"createBaseCreateCommentParams");var eR={encode(n,t=new C){return n.videoId!==""&&t.uint32(18).string(n.videoId),n.params!==void 0&&L2.encode(n.params,t.uint32(42).fork()).join(),n.number!==0&&t.uint32(80).int32(n.number),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=KA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 2:if(a!==18)break;r.videoId=e.string();continue;case 5:if(a!==42)break;r.params=L2.decode(e,e.uint32());continue;case 10:if(a!==80)break;r.number=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function qA(){return {index:0}}s(qA,"createBaseCreateCommentParams_Params");var L2={encode(n,t=new C){return n.index!==0&&t.uint32(8).int32(n.index),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=qA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.index=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function $A(){return {type:0,commentId:"",videoId:"",unkNum:void 0,channelId:void 0,translateCommentParams:void 0}}s($A,"createBasePeformCommentActionParams");var tR={encode(n,t=new C){return n.type!==0&&t.uint32(8).int32(n.type),n.commentId!==""&&t.uint32(26).string(n.commentId),n.videoId!==""&&t.uint32(42).string(n.videoId),n.unkNum!==void 0&&t.uint32(16).int32(n.unkNum),n.channelId!==void 0&&t.uint32(186).string(n.channelId),n.translateCommentParams!==void 0&&U2.encode(n.translateCommentParams,t.uint32(250).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=$A();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.type=e.int32();continue;case 3:if(a!==26)break;r.commentId=e.string();continue;case 5:if(a!==42)break;r.videoId=e.string();continue;case 2:if(a!==16)break;r.unkNum=e.int32();continue;case 23:if(a!==186)break;r.channelId=e.string();continue;case 31:if(a!==250)break;r.translateCommentParams=U2.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function zA(){return {params:void 0,commentId:"",targetLanguage:""}}s(zA,"createBasePeformCommentActionParams_TranslateCommentParams");var U2={encode(n,t=new C){return n.params!==void 0&&Y2.encode(n.params,t.uint32(26).fork()).join(),n.commentId!==""&&t.uint32(18).string(n.commentId),n.targetLanguage!==""&&t.uint32(34).string(n.targetLanguage),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=zA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 3:if(a!==26)break;r.params=Y2.decode(e,e.uint32());continue;case 2:if(a!==18)break;r.commentId=e.string();continue;case 4:if(a!==34)break;r.targetLanguage=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function JA(){return {comment:void 0}}s(JA,"createBasePeformCommentActionParams_TranslateCommentParams_Params");var Y2={encode(n,t=new C){return n.comment!==void 0&&V2.encode(n.comment,t.uint32(10).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=JA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.comment=V2.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function XA(){return {text:""}}s(XA,"createBasePeformCommentActionParams_TranslateCommentParams_Params_Comment");var V2={encode(n,t=new C){return n.text!==""&&t.uint32(10).string(n.text),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=XA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.text=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function ZA(){return {params:void 0}}s(ZA,"createBaseHashtag");var iR={encode(n,t=new C){return n.params!==void 0&&F2.encode(n.params,t.uint32(746).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=ZA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 93:if(a!==746)break;r.params=F2.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function QA(){return {hashtag:"",type:0}}s(QA,"createBaseHashtag_Params");var F2={encode(n,t=new C){return n.hashtag!==""&&t.uint32(10).string(n.hashtag),n.type!==0&&t.uint32(24).int32(n.type),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=QA();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.hashtag=e.string();continue;case 3:if(a!==24)break;r.type=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function eM(){return {shortId:"",params:void 0,feature2:0,feature3:0}}s(eM,"createBaseReelSequence");var nR={encode(n,t=new C){return n.shortId!==""&&t.uint32(10).string(n.shortId),n.params!==void 0&&j2.encode(n.params,t.uint32(42).fork()).join(),n.feature2!==0&&t.uint32(80).int32(n.feature2),n.feature3!==0&&t.uint32(104).int32(n.feature3),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=eM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.shortId=e.string();continue;case 5:if(a!==42)break;r.params=j2.decode(e,e.uint32());continue;case 10:if(a!==80)break;r.feature2=e.int32();continue;case 13:if(a!==104)break;r.feature3=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function tM(){return {number:0}}s(tM,"createBaseReelSequence_Params");var j2={encode(n,t=new C){return n.number!==0&&t.uint32(24).int32(n.number),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=tM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 3:if(a!==24)break;r.number=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function iM(){return {videoId:[],playlistTitle:void 0}}s(iM,"createBaseNextParams");var oR={encode(n,t=new C){for(let e of n.videoId)t.uint32(42).string(e);return n.playlistTitle!==void 0&&t.uint32(50).string(n.playlistTitle),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=iM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 5:if(a!==42)break;r.videoId.push(e.string());continue;case 6:if(a!==50)break;r.playlistTitle=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function nM(){return {f1:void 0}}s(nM,"createBaseCommunityPostParams");var sR={encode(n,t=new C){return n.f1!==void 0&&G2.encode(n.f1,t.uint32(450).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=nM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 56:if(a!==450)break;r.f1=G2.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function oM(){return {ucid1:"",postId:"",ucid2:""}}s(oM,"createBaseCommunityPostParams_Field1");var G2={encode(n,t=new C){return n.ucid1!==""&&t.uint32(18).string(n.ucid1),n.postId!==""&&t.uint32(26).string(n.postId),n.ucid2!==""&&t.uint32(90).string(n.ucid2),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=oM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 2:if(a!==18)break;r.ucid1=e.string();continue;case 3:if(a!==26)break;r.postId=e.string();continue;case 11:if(a!==90)break;r.ucid2=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function sM(){return {f0:void 0}}s(sM,"createBaseCommunityPostCommentsParamContainer");var rR={encode(n,t=new C){return n.f0!==void 0&&W2.encode(n.f0,t.uint32(641815778).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=sM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 80226972:if(a!==641815778)break;r.f0=W2.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function rM(){return {location:"",protoData:""}}s(rM,"createBaseCommunityPostCommentsParamContainer_Container");var W2={encode(n,t=new C){return n.location!==""&&t.uint32(18).string(n.location),n.protoData!==""&&t.uint32(26).string(n.protoData),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=rM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 2:if(a!==18)break;r.location=e.string();continue;case 3:if(a!==26)break;r.protoData=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function aM(){return {title:"",commentDataContainer:void 0}}s(aM,"createBaseCommunityPostCommentsParam");var aR={encode(n,t=new C){return n.title!==""&&t.uint32(18).string(n.title),n.commentDataContainer!==void 0&&H2.encode(n.commentDataContainer,t.uint32(426).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=aM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 2:if(a!==18)break;r.title=e.string();continue;case 53:if(a!==426)break;r.commentDataContainer=H2.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function cM(){return {commentData:void 0,f0:0,title:""}}s(cM,"createBaseCommunityPostCommentsParam_CommentDataContainer");var H2={encode(n,t=new C){return n.commentData!==void 0&&K2.encode(n.commentData,t.uint32(34).fork()).join(),n.f0!==0&&t.uint32(56).int32(n.f0),n.title!==""&&t.uint32(66).string(n.title),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=cM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 4:if(a!==34)break;r.commentData=K2.decode(e,e.uint32());continue;case 7:if(a!==56)break;r.f0=e.int32();continue;case 8:if(a!==66)break;r.title=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function uM(){return {sortBy:0,f0:0,f1:0,postId:"",channelId:""}}s(uM,"createBaseCommunityPostCommentsParam_CommentDataContainer_CommentData");var K2={encode(n,t=new C){return n.sortBy!==0&&t.uint32(48).int32(n.sortBy),n.f0!==0&&t.uint32(120).int32(n.f0),n.f1!==0&&t.uint32(200).int32(n.f1),n.postId!==""&&t.uint32(234).string(n.postId),n.channelId!==""&&t.uint32(242).string(n.channelId),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=uM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 6:if(a!==48)break;r.sortBy=e.int32();continue;case 15:if(a!==120)break;r.f0=e.int32();continue;case 25:if(a!==200)break;r.f1=e.int32();continue;case 29:if(a!==234)break;r.postId=e.string();continue;case 30:if(a!==242)break;r.channelId=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function lM(n,t){let e=m1.encode({id:n,timestamp:t});return encodeURIComponent(Ie(e.finish()).replace(/\+/g,"-").replace(/\//g,"_"))}s(lM,"encodeVisitorData");function pM(n){return m1.decode(Kp(decodeURIComponent(n).replace(/-/g,"+").replace(/_/g,"/")))}s(pM,"decodeVisitorData");function Hp(n,t={}){let e={type:n,commentId:t.comment_id||" ",videoId:t.video_id||" ",channelId:" ",unkNum:2};if(t.hasOwnProperty("text")){if(typeof t.target_language!="string")throw new Error("target_language must be a string");t.comment_id&&delete e.unkNum,e.translateCommentParams={params:{comment:{text:t.text}},commentId:t.comment_id||" ",targetLanguage:t.target_language};}let o=tR.encode(e);return encodeURIComponent(Ie(o.finish()))}s(Hp,"encodeCommentActionParams");function fM(n,t){let e=oR.encode({videoId:n,playlistTitle:t});return encodeURIComponent(Ie(e.finish()).replace(/\+/g,"-").replace(/\//g,"_"))}s(fM,"encodeNextParams");var z_=class z_ extends c{constructor(e){super();i$1(this,"popup");i$1(this,"popup_type");this.popup=u.parseItem(e.popup),this.popup_type=e.popupType;}};s(z_,"OpenPopupAction"),i$1(z_,"type","OpenPopupAction");var Xi=z_;var J_=class J_ extends c{constructor(e){super();i$1(this,"text");i$1(this,"label");i$1(this,"tooltip");i$1(this,"style");i$1(this,"size");i$1(this,"icon_type");i$1(this,"is_disabled");i$1(this,"target_id");i$1(this,"endpoint");i$1(this,"accessibility");Reflect.has(e,"text")&&(this.text=new l(e.text).toString()),Reflect.has(e,"accessibility")&&Reflect.has(e.accessibility,"label")&&(this.label=e.accessibility.label),"accessibilityData"in e&&"accessibilityData"in e.accessibilityData&&(this.accessibility={accessibility_data:new pe(e.accessibilityData.accessibilityData)}),Reflect.has(e,"tooltip")&&(this.tooltip=e.tooltip),Reflect.has(e,"style")&&(this.style=e.style),Reflect.has(e,"size")&&(this.size=e.size),Reflect.has(e,"icon")&&Reflect.has(e.icon,"iconType")&&(this.icon_type=e.icon.iconType),Reflect.has(e,"isDisabled")&&(this.is_disabled=e.isDisabled),Reflect.has(e,"targetId")&&(this.target_id=e.targetId),this.endpoint=new d(e.navigationEndpoint||e.serviceEndpoint||e.command);}};s(J_,"Button"),i$1(J_,"type","Button");var v=J_;var X_=class X_ extends c{constructor(e){super();i$1(this,"label");i$1(this,"selected");i$1(this,"value");i$1(this,"icon_type");i$1(this,"description");i$1(this,"endpoint");this.label=new l(e.label).toString(),this.selected=!!e.isSelected,Reflect.has(e,"int32Value")?this.value=e.int32Value:e.stringValue&&(this.value=e.stringValue),Reflect.has(e,"onSelectCommand")&&(this.endpoint=new d(e.onSelectCommand)),Reflect.has(e,"icon")&&(this.icon_type=e.icon?.iconType),Reflect.has(e,"descriptionText")&&(this.description=new l(e.descriptionText));}};s(X_,"DropdownItem"),i$1(X_,"type","DropdownItem");var rs=X_;var Z_=class Z_ extends c{constructor(e){super();i$1(this,"label");i$1(this,"entries");this.label=e.label||"",this.entries=u.parseArray(e.entries,rs);}};s(Z_,"Dropdown"),i$1(Z_,"type","Dropdown");var Kt=Z_;var Q_=class Q_ extends c{constructor(e){super();i$1(this,"title");i$1(this,"title_placeholder");i$1(this,"privacy_option");i$1(this,"cancel_button");i$1(this,"create_button");this.title=new l(e.dialogTitle).toString(),this.title_placeholder=e.titlePlaceholder||"",this.privacy_option=u.parseItem(e.privacyOption,Kt),this.create_button=u.parseItem(e.cancelButton,v),this.cancel_button=u.parseItem(e.cancelButton,v);}};s(Q_,"CreatePlaylistDialog"),i$1(Q_,"type","CreatePlaylistDialog");var as=Q_;var eb=class eb extends c{constructor(e){super();i$1(this,"commands");this.commands=u.parseCommands(e.commands);}};s(eb,"CommandExecutorCommand"),i$1(eb,"type","CommandExecutorCommand");var cs=eb;var yl=class yl extends c{constructor(e){super();i$1(this,"name");i$1(this,"payload");i$1(this,"dialog");i$1(this,"modal");i$1(this,"open_popup");i$1(this,"next_endpoint");i$1(this,"metadata");i$1(this,"command");i$1(this,"commands");if(e){if(e.serialCommand||e.parallelCommand){let o=e.serialCommand||e.parallelCommand;this.commands=o.commands.map(r=>new yl(r));}(e.innertubeCommand||e.command||e.performOnceCommand)&&(e=e.innertubeCommand||e.command||e.performOnceCommand);}this.command=u.parseCommand(e),Reflect.has(e||{},"openPopupAction")&&(this.open_popup=new Xi(e.openPopupAction)),this.name=Object.keys(e||{}).find(o=>o.endsWith("Endpoint")||o.endsWith("Command")),this.payload=this.name?Reflect.get(e,this.name):{},(Reflect.has(this.payload,"dialog")||Reflect.has(this.payload,"content"))&&(this.dialog=u.parseItem(this.payload.dialog||this.payload.content)),Reflect.has(this.payload,"modal")&&(this.modal=u.parseItem(this.payload.modal)),Reflect.has(this.payload,"nextEndpoint")&&(this.next_endpoint=new yl(this.payload.nextEndpoint)),e?.serviceEndpoint&&(e=e.serviceEndpoint),this.metadata={},e?.commandMetadata?.webCommandMetadata?.url&&(this.metadata.url=e.commandMetadata.webCommandMetadata.url),e?.commandMetadata?.webCommandMetadata?.webPageType&&(this.metadata.page_type=e.commandMetadata.webCommandMetadata.webPageType),e?.commandMetadata?.webCommandMetadata?.apiUrl?this.metadata.api_url=e.commandMetadata.webCommandMetadata.apiUrl.replace("/youtubei/v1/",""):this.name&&(this.metadata.api_url=this.getPath(this.name)),e?.commandMetadata?.webCommandMetadata?.sendPost&&(this.metadata.send_post=e.commandMetadata.webCommandMetadata.sendPost),e?.createPlaylistEndpoint&&e?.createPlaylistEndpoint.createPlaylistDialog&&(this.dialog=u.parseItem(e?.createPlaylistEndpoint.createPlaylistDialog,as));}getPath(e){switch(e){case "browseEndpoint":return "/browse";case "watchEndpoint":case "reelWatchEndpoint":return "/player";case "searchEndpoint":return "/search";case "watchPlaylistEndpoint":return "/next";case "liveChatItemContextMenuEndpoint":return "/live_chat/get_item_context_menu"}}call(e,o){if(!e)throw new Error("An API caller must be provided");if(this.command){let r=this.command;return r.is(cs)&&(r=r.commands.at(-1)),e.execute(r.getApiPath(),{...r.buildRequest(),...o})}if(!this.metadata.api_url)throw new Error("Expected an api_url, but none was found.");return e.execute(this.metadata.api_url,{...this.payload,...o})}toURL(){if(this.metadata.url&&this.metadata.page_type)return this.metadata.page_type==="WEB_PAGE_TYPE_UNKNOWN"?this.metadata.url:`https://www.youtube.com${this.metadata.url}`}};s(yl,"NavigationEndpoint"),i$1(yl,"type","NavigationEndpoint");var d=yl;var tb=class tb{constructor(t){i$1(this,"url");i$1(this,"width");i$1(this,"height");this.url=t.url,this.width=t.width,this.height=t.height;}static fromResponse(t){if(!t)return [];let e;return t.thumbnails?e=t.thumbnails:t.sources&&(e=t.sources),e?e.map(o=>new tb(o)).sort((o,r)=>r.width-o.width):[]}};s(tb,"Thumbnail");var y=tb;var h1=class h1{constructor(t){i$1(this,"text");i$1(this,"emoji");this.text=t.emoji?.emojiId||t.emoji?.shortcuts?.[0]||t.text||"",this.emoji={emoji_id:t.emoji.emojiId,shortcuts:t.emoji?.shortcuts||[],search_terms:t.emoji?.searchTerms||[],image:y.fromResponse(t.emoji.image),is_custom:!!t.emoji?.isCustomEmoji};}toString(){return this.text}toHTML(){let t=ib(this.text);return `<img src="${this.emoji.image[0].url}" alt="${t}" title="${t}" style="display: inline-block; vertical-align: text-top; height: var(--yt-emoji-size, 1rem); width: var(--yt-emoji-size, 1rem);" loading="lazy" crossorigin="anonymous" />`}};s(h1,"EmojiRun");var us=h1;var _1=class _1{constructor(t){i$1(this,"text");i$1(this,"text_color");i$1(this,"endpoint");i$1(this,"bold");i$1(this,"bracket");i$1(this,"dark_mode_text_color");i$1(this,"deemphasize");i$1(this,"italics");i$1(this,"strikethrough");i$1(this,"error_underline");i$1(this,"underline");i$1(this,"font_face");i$1(this,"attachment");this.text=t.text,this.bold=!!t.bold,this.bracket=!!t.bracket,this.italics=!!t.italics,this.strikethrough=!!t.strikethrough,this.error_underline=!!t.error_underline,this.underline=!!t.underline,this.deemphasize=!!t.deemphasize,"textColor"in t&&(this.text_color=t.textColor),"navigationEndpoint"in t&&(this.endpoint=new d(t.navigationEndpoint)),"darkModeTextColor"in t&&(this.dark_mode_text_color=t.darkModeTextColor),"fontFace"in t&&(this.font_face=t.fontFace),this.attachment=t.attachment;}toString(){return this.text}toHTML(){let t=[];if(this.bold&&t.push("b"),this.italics&&t.push("i"),this.strikethrough&&t.push("s"),this.deemphasize&&t.push("small"),this.underline&&t.push("u"),this.error_underline&&t.push("u"),!this.text?.length)return "";let e=ib(this.text),r=`<span style="white-space: pre-wrap;">${t.map(a=>`<${a}>`).join("")+e+t.map(a=>`</${a}>`).join("")}</span>`;if(this.attachment&&this.attachment.element.type.imageType.image.sources.length&&this.endpoint){let{url:a}=this.attachment.element.type.imageType.image.sources[0],f="";a&&(f=`<img src="${a}" style="vertical-align: middle; height: ${this.attachment.element.properties.layoutProperties.height.value}px; width: ${this.attachment.element.properties.layoutProperties.width.value}px;" alt="">`);let m=this.endpoint.toURL();if(m)return `<a href="${m}" class="yt-ch-link">${f}${r}</a>`}if(this.endpoint){let a=this.endpoint.toURL();if(a)return `<a href="${a}">${r}</a>`}return r}};s(_1,"TextRun");var ls=_1;function ib(n){return n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}s(ib,"escape");var qp="Text",ob=class ob{constructor(t){i$1(this,"text");i$1(this,"runs");i$1(this,"endpoint");i$1(this,"accessibility");i$1(this,"rtl");this.isRunsData(t)?(this.runs=t.runs.map(e=>e.emoji?new us(e):new ls(e)),this.text=this.runs.map(e=>e.text).join("")):this.text=t?.simpleText,this.isObject(t)&&"accessibility"in t&&"accessibilityData"in t.accessibility&&(this.accessibility={accessibility_data:new pe(t.accessibility.accessibilityData)}),this.rtl=!!t?.rtl,this.parseEndpoint(t);}isRunsData(t){return this.isObject(t)&&Reflect.has(t,"runs")&&Array.isArray(t.runs)}parseEndpoint(t){this.isObject(t)&&("navigationEndpoint"in t?this.endpoint=new d(t.navigationEndpoint):"titleNavigationEndpoint"in t?this.endpoint=new d(t.titleNavigationEndpoint):this.runs?.[0]?.endpoint&&(this.endpoint=(this.runs?.[0]).endpoint));}isObject(t){return typeof t=="object"&&t!==null}static fromAttributed(t){let{content:e,commandRuns:o,attachmentRuns:r}=t,a=[{text:e,startIndex:0}],f=t.styleRuns?.map(m=>({...m,startIndex:m.startIndex??0,length:m.length??e.length}));return f?.length&&this.processStyleRuns(a,f,t),o?.length&&this.processCommandRuns(a,o,t),r?.length&&this.processAttachmentRuns(a,r,t),new ob({runs:a})}static processStyleRuns(t,e,o){for(let r of e)if(r.italic||r.strikethrough==="LINE_STYLE_SINGLE"||r.weightLabel==="FONT_WEIGHT_MEDIUM"||r.weightLabel==="FONT_WEIGHT_BOLD"){let a=b1(t,r);if(!a){Y.warn(qp,"Unable to find matching run for style run. Skipping...",{style_run:r,input_data:o,parsed_runs:JSON.parse(JSON.stringify(t))});continue}nb(t,a,r,{bold:r.weightLabel==="FONT_WEIGHT_MEDIUM"||r.weightLabel==="FONT_WEIGHT_BOLD",italics:r.italic,strikethrough:r.strikethrough==="LINE_STYLE_SINGLE"});}else Y.debug(qp,"Skipping style run as it is doesn't have any information that we parse.",{style_run:r,input_data:o});}static processCommandRuns(t,e,o){for(let r of e)if(r.onTap){let a=b1(t,r);if(!a){Y.warn(qp,"Unable to find matching run for command run. Skipping...",{command_run:r,input_data:o,parsed_runs:JSON.parse(JSON.stringify(t))});continue}nb(t,a,r,{navigationEndpoint:r.onTap});}else Y.debug(qp,'Skipping command run as it is missing the "doTap" property.',{command_run:r,input_data:o});}static processAttachmentRuns(t,e,o){for(let r of e){let a=b1(t,r);if(!a){Y.warn(qp,"Unable to find matching run for attachment run. Skipping...",{attachment_run:r,input_data:o,parsed_runs:JSON.parse(JSON.stringify(t))});continue}if(r.length===0)a.attachment=r;else {let f=r.startIndex-a.startIndex,m=a.text.substring(f,f+r.length),b=/^:[^:]+:$/.test(m);if(r.element?.type?.imageType?.image&&(b||/^(?:\p{Emoji}|\u200d)+$/u.test(m))){let x={image:r.element.type.imageType.image,isCustomEmoji:b,shortcuts:b?[m]:void 0};nb(t,a,r,{emoji:x});}else nb(t,a,r,{attachment:r});}}}toHTML(){return this.runs?this.runs.map(t=>t.toHTML()).join(""):this.text}isEmpty(){return this.text===void 0}toString(){return this.text||"N/A"}};s(ob,"Text");var l=ob;function b1(n,t){return n.find(e=>e.startIndex<=t.startIndex&&t.startIndex+t.length<=e.startIndex+e.text.length)}s(b1,"findMatchingRun");function nb(n,t,e,o){let r=n.indexOf(t),a=[],f=e.startIndex-t.startIndex;e.startIndex>t.startIndex&&a.push({...t,text:t.text.substring(0,f)}),a.push({...t,text:t.text.substring(f,f+e.length),startIndex:e.startIndex,...o}),e.startIndex+e.length<t.startIndex+t.text.length&&a.push({...t,text:t.text.substring(f+e.length),startIndex:e.startIndex+e.length}),n.splice(r,1,...a);}s(nb,"insertSubRun");var sb=class sb extends c{constructor(e){super();i$1(this,"title");i$1(this,"link");i$1(this,"favicon");this.title=l.fromAttributed(e.title),this.link=l.fromAttributed(e.link),this.favicon=y.fromResponse(e.favicon);}};s(sb,"ChannelExternalLinkView"),i$1(sb,"type","ChannelExternalLinkView");var ps=sb;var rb=class rb extends c{constructor(e){super();i$1(this,"description");i$1(this,"description_label");i$1(this,"country");i$1(this,"custom_links_label");i$1(this,"subscriber_count");i$1(this,"view_count");i$1(this,"joined_date");i$1(this,"canonical_channel_url");i$1(this,"channel_id");i$1(this,"additional_info_label");i$1(this,"custom_url_on_tap");i$1(this,"video_count");i$1(this,"sign_in_for_business_email");i$1(this,"links");Reflect.has(e,"description")&&(this.description=e.description),Reflect.has(e,"descriptionLabel")&&(this.description_label=l.fromAttributed(e.descriptionLabel)),Reflect.has(e,"country")&&(this.country=e.country),Reflect.has(e,"customLinksLabel")&&(this.custom_links_label=l.fromAttributed(e.customLinksLabel)),Reflect.has(e,"subscriberCountText")&&(this.subscriber_count=e.subscriberCountText),Reflect.has(e,"viewCountText")&&(this.view_count=e.viewCountText),Reflect.has(e,"joinedDateText")&&(this.joined_date=l.fromAttributed(e.joinedDateText)),Reflect.has(e,"canonicalChannelUrl")&&(this.canonical_channel_url=e.canonicalChannelUrl),Reflect.has(e,"channelId")&&(this.channel_id=e.channelId),Reflect.has(e,"additionalInfoLabel")&&(this.additional_info_label=l.fromAttributed(e.additionalInfoLabel)),Reflect.has(e,"customUrlOnTap")&&(this.custom_url_on_tap=new d(e.customUrlOnTap)),Reflect.has(e,"videoCountText")&&(this.video_count=e.videoCountText),Reflect.has(e,"signInForBusinessEmail")&&(this.sign_in_for_business_email=l.fromAttributed(e.signInForBusinessEmail)),Reflect.has(e,"links")?this.links=u.parseArray(e.links,ps):this.links=[];}};s(rb,"AboutChannelView"),i$1(rb,"type","AboutChannelView");var fs=rb;var ab=class ab extends c{constructor(e){super();i$1(this,"metadata");i$1(this,"share_channel");this.metadata=u.parseItem(e.metadata,fs),this.share_channel=u.parseItem(e.shareChannel,v);}};s(ab,"AboutChannel"),i$1(ab,"type","AboutChannel");var ds=ab;var cb=class cb extends c{constructor(e){super();i$1(this,"title");i$1(this,"endpoint");this.title=new l(e.title),this.endpoint=new d(e.navigationEndpoint);}};s(cb,"AccountChannel"),i$1(cb,"type","AccountChannel");var ms=cb;var ub=class ub extends c{constructor(e){super();i$1(this,"account_name");i$1(this,"account_photo");i$1(this,"is_selected");i$1(this,"is_disabled");i$1(this,"has_channel");i$1(this,"endpoint");i$1(this,"account_byline");i$1(this,"channel_handle");this.account_name=new l(e.accountName),this.account_photo=y.fromResponse(e.accountPhoto),this.is_selected=!!e.isSelected,this.is_disabled=!!e.isDisabled,this.has_channel=!!e.hasChannel,this.endpoint=new d(e.serviceEndpoint),this.account_byline=new l(e.accountByline),this.channel_handle=new l(e.channelHandle);}};s(ub,"AccountItem"),i$1(ub,"type","AccountItem");var Zi=ub;var lb=class lb extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(lb,"AccountItemSectionHeader"),i$1(lb,"type","AccountItemSectionHeader");var hs=lb;var pb=class pb extends c{constructor(e){super();i$1(this,"title");i$1(this,"subtitle");i$1(this,"endpoint");i$1(this,"style");i$1(this,"icon_type");i$1(this,"secondary_icon_type");this.title=new l(e.title).toString(),"subtitle"in e&&(this.subtitle=new l(e.subtitle)),"icon"in e&&"iconType"in e.icon&&(this.icon_type=e.icon.iconType),"secondaryIcon"in e&&"iconType"in e.secondaryIcon&&(this.secondary_icon_type=e.secondaryIcon.iconType),this.endpoint=new d(e.navigationEndpoint||e.serviceEndpoint),this.style=e.style;}};s(pb,"CompactLink"),i$1(pb,"type","CompactLink");var ct=pb;var fb=class fb extends c{constructor(e){super();i$1(this,"contents");i$1(this,"header");this.contents=u.parseArray(e.contents,[Zi,ct]),this.header=u.parseItem(e.header,hs);}};s(fb,"AccountItemSection"),i$1(fb,"type","AccountItemSection");var _s=fb;var db=class db extends c{constructor(e){super();i$1(this,"contents");i$1(this,"footers");this.contents=u.parseArray(e.contents,_s),this.footers=u.parseArray(e.footers,ms);}};s(db,"AccountSectionList"),i$1(db,"type","AccountSectionList");var bs=db;var mb=class mb extends c{constructor(e){super();i$1(this,"contents");i$1(this,"target");this.contents=u.parseArray(e.continuationItems),this.target=e.target;}};s(mb,"AppendContinuationItemsAction"),i$1(mb,"type","AppendContinuationItemsAction");var Re=mb;var hb=class hb extends c{constructor(e){super();i$1(this,"target_id");i$1(this,"visibility");this.target_id=e.targetId,this.visibility=e.visibility;}};s(hb,"ChangeEngagementPanelVisibilityAction"),i$1(hb,"type","ChangeEngagementPanelVisibilityAction");var $p=hb;var _b=class _b extends c{constructor(e){super();i$1(this,"header");i$1(this,"sections");i$1(this,"style");this.header=u.parseItem(e.header),this.sections=u.parseArray(e.sections),this.style=e.style;}};s(_b,"MultiPageMenu"),i$1(_b,"type","MultiPageMenu");var ys=_b;var bb=class bb extends c{constructor(e){super();i$1(this,"menu");this.menu=u.parseItem(e.menu,ys);}};s(bb,"GetMultiPageMenuAction"),i$1(bb,"type","GetMultiPageMenuAction");var zp=bb;var yb=class yb extends c{constructor(e){super();i$1(this,"bucket");this.bucket=e.bucket;}};s(yb,"SendFeedbackAction"),i$1(yb,"type","SendFeedbackAction");var Jp=yb;var xb=class xb extends c{constructor(e){super();i$1(this,"signal");this.signal=e.signal;}};s(xb,"SignalAction"),i$1(xb,"type","SignalAction");var Xp=xb;var gb=class gb extends c{constructor(e){super();i$1(this,"header");i$1(this,"contents");this.header=u.parseItem(e.header),this.contents=u.parse(e.contents,true);}};s(gb,"ChannelSwitcherPage"),i$1(gb,"type","ChannelSwitcherPage");var xs=gb;var wb=class wb extends c{constructor(e){super();i$1(this,"header");i$1(this,"contents");let o=u.parseItem(e.page,xs);o&&(this.header=o.header,this.contents=o.contents);}};s(wb,"UpdateChannelSwitcherPageAction"),i$1(wb,"type","UpdateChannelSwitcherPageAction");var Zp=wb;var Tb=class Tb extends c{constructor(e){super();i$1(this,"title");i$1(this,"icon_type");i$1(this,"tooltip");i$1(this,"sub_menu_items");i$1(this,"accessibility");"title"in e&&(this.title=e.title),"icon"in e&&(this.icon_type=e.icon.iconType),"tooltip"in e&&(this.tooltip=e.tooltip),"subMenuItems"in e&&(this.sub_menu_items=e.subMenuItems.map(o=>({title:o.title,selected:o.selected,continuation:o.continuation?.reloadContinuationData?.continuation,endpoint:new d(o.serviceEndpoint||o.navigationEndpoint),subtitle:o.subtitle||null}))),"accessibility"in e&&"accessibilityData"in e.accessibility&&(this.accessibility={accessibility_data:new pe(e.accessibility.accessibilityData)});}get label(){return this.accessibility?.accessibility_data?.label}};s(Tb,"SortFilterSubMenu"),i$1(Tb,"type","SortFilterSubMenu");var ot=Tb;var vb=class vb extends c{constructor(e){super();i$1(this,"language_menu");this.language_menu=u.parseItem(e.languageMenu,ot);}};s(vb,"TranscriptFooter"),i$1(vb,"type","TranscriptFooter");var gs=vb;var Ib=class Ib extends c{constructor(e){super();i$1(this,"formatted_placeholder");i$1(this,"clear_button");i$1(this,"endpoint");i$1(this,"search_button");this.formatted_placeholder=new l(e.formattedPlaceholder),this.clear_button=u.parseItem(e.clearButton,v),this.endpoint=new d(e.onTextChangeCommand),this.search_button=u.parseItem(e.searchButton,v);}};s(Ib,"TranscriptSearchBox"),i$1(Ib,"type","TranscriptSearchBox");var ws=Ib;var kb=class kb extends c{constructor(e){super();i$1(this,"start_ms");i$1(this,"end_ms");i$1(this,"snippet");this.start_ms=e.startMs,this.end_ms=e.endMs,this.snippet=new l(e.snippet);}};s(kb,"TranscriptSectionHeader"),i$1(kb,"type","TranscriptSectionHeader");var Ts=kb;var Sb=class Sb extends c{constructor(e){super();i$1(this,"start_ms");i$1(this,"end_ms");i$1(this,"snippet");i$1(this,"start_time_text");i$1(this,"target_id");this.start_ms=e.startMs,this.end_ms=e.endMs,this.snippet=new l(e.snippet),this.start_time_text=new l(e.startTimeText),this.target_id=e.targetId;}};s(Sb,"TranscriptSegment"),i$1(Sb,"type","TranscriptSegment");var vs=Sb;var Eb=class Eb extends c{constructor(e){super();i$1(this,"initial_segments");i$1(this,"no_result_label");i$1(this,"retry_label");i$1(this,"touch_captions_enabled");this.initial_segments=u.parseArray(e.initialSegments,[vs,Ts]),this.no_result_label=new l(e.noResultLabel),this.retry_label=new l(e.retryLabel),this.touch_captions_enabled=e.touchCaptionsEnabled;}};s(Eb,"TranscriptSegmentList"),i$1(Eb,"type","TranscriptSegmentList");var Is=Eb;var Cb=class Cb extends c{constructor(e){super();i$1(this,"header");i$1(this,"body");i$1(this,"footer");i$1(this,"target_id");this.header=u.parseItem(e.header,ws),this.body=u.parseItem(e.body,Is),this.footer=u.parseItem(e.footer,gs),this.target_id=e.targetId;}};s(Cb,"TranscriptSearchPanel"),i$1(Cb,"type","TranscriptSearchPanel");var ks=Cb;var Nb=class Nb extends c{constructor(e){super();i$1(this,"content");this.content=u.parseItem(e.content,ks);}};s(Nb,"Transcript"),i$1(Nb,"type","Transcript");var Qi=Nb;var Rb=class Rb extends c{constructor(e){super();i$1(this,"target_id");i$1(this,"content");this.target_id=e.targetId,this.content=u.parseItem(e.content,Qi);}};s(Rb,"UpdateEngagementPanelAction"),i$1(Rb,"type","UpdateEngagementPanelAction");var Qp=Rb;var Pb=class Pb extends c{constructor(e){super();i$1(this,"channel_id");i$1(this,"subscribed");this.channel_id=e.channelId,this.subscribed=e.subscribed;}};s(Pb,"UpdateSubscribeButtonAction"),i$1(Pb,"type","UpdateSubscribeButtonAction");var ef=Pb;var Ab=class Ab extends c{constructor(e){super();i$1(this,"account_name");i$1(this,"account_photo");i$1(this,"endpoint");i$1(this,"manage_account_title");i$1(this,"channel_handle");this.account_name=new l(e.accountName),this.account_photo=y.fromResponse(e.accountPhoto),this.endpoint=new d(e.serviceEndpoint),this.manage_account_title=new l(e.manageAccountTitle),this.channel_handle=new l(e.channelHandle);}};s(Ab,"ActiveAccountHeader"),i$1(Ab,"type","ActiveAccountHeader");var tf=Ab;var Mb=class Mb extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(Mb,"MenuTitle"),i$1(Mb,"type","MenuTitle");var Ss=Mb;var Db=class Db extends c{constructor(e){super();i$1(this,"add_to_playlist_service_endpoint");i$1(this,"contains_selected_videos");i$1(this,"playlist_id");i$1(this,"privacy");i$1(this,"privacy_icon");i$1(this,"remove_from_playlist_service_endpoint");i$1(this,"title");this.add_to_playlist_service_endpoint=new d(e.addToPlaylistServiceEndpoint),this.contains_selected_videos=e.containsSelectedVideos,this.playlist_id=e.playlistId,this.privacy=e.privacy,this.privacy_icon={icon_type:e.privacyIcon?.iconType||null},this.remove_from_playlist_service_endpoint=new d(e.removeFromPlaylistServiceEndpoint),this.title=new l(e.title);}};s(Db,"PlaylistAddToOption"),i$1(Db,"type","PlaylistAddToOption");var Es=Db;var Ob=class Ob extends c{constructor(e){super();i$1(this,"actions");i$1(this,"playlists");this.actions=u.parseArray(e.actions,[Ss,v]),this.playlists=u.parseArray(e.playlists,Es);}};s(Ob,"AddToPlaylist"),i$1(Ob,"type","AddToPlaylist");var nf=Ob;var Bb=class Bb extends c{constructor(e){super();i$1(this,"text");i$1(this,"alert_type");this.text=new l(e.text),this.alert_type=e.type;}};s(Bb,"Alert"),i$1(Bb,"type","Alert");var en=Bb;var Lb=class Lb extends c{constructor(e){super();i$1(this,"text");i$1(this,"alert_type");i$1(this,"dismiss_button");this.text=new l(e.text),this.alert_type=e.type,this.dismiss_button=u.parseItem(e.dismissButton,v);}};s(Lb,"AlertWithButton"),i$1(Lb,"type","AlertWithButton");var Cs=Lb;var Ub=class Ub extends c{constructor(e){super();i$1(this,"thumbnail");this.thumbnail=y.fromResponse(e.thumbnail);}};s(Ub,"AnimatedThumbnailOverlayView"),i$1(Ub,"type","AnimatedThumbnailOverlayView");var Ns=Ub;var Yb=class Yb extends c{constructor(e){super();i$1(this,"text");i$1(this,"suffix");this.text=l.fromAttributed(e.text),this.suffix=l.fromAttributed(e.suffix);}};s(Yb,"AttributionView"),i$1(Yb,"type","AttributionView");var Rs=Yb;var Vb=class Vb extends c{constructor(e){super();i$1(this,"audio_only_availability");this.audio_only_availability=e.audioOnlyAvailability;}};s(Vb,"AudioOnlyPlayability"),i$1(Vb,"type","AudioOnlyPlayability");var Ps=Vb;var Fb=class Fb extends c{constructor(e){super();i$1(this,"playlist_video");e?.content?.automixPlaylistVideoRenderer?.navigationEndpoint&&(this.playlist_video={endpoint:new d(e.content.automixPlaylistVideoRenderer.navigationEndpoint)});}};s(Fb,"AutomixPreviewVideo"),i$1(Fb,"type","AutomixPreviewVideo");var qt=Fb;var jb=class jb extends c{constructor(e){super();i$1(this,"image");i$1(this,"image_processor");i$1(this,"avatar_image_size");this.image=y.fromResponse(e.image),this.avatar_image_size=e.avatarImageSize,e.image.processor&&(this.image_processor={border_image_processor:{circular:e.image.processor.borderImageProcessor.circular}});}};s(jb,"AvatarView"),i$1(jb,"type","AvatarView");var $t=jb;var y1=class y1{constructor(t){i$1(this,"on_focus");i$1(this,"on_hidden");i$1(this,"on_touch_end");i$1(this,"on_touch_move");i$1(this,"on_long_press");i$1(this,"on_tap");i$1(this,"on_touch_start");i$1(this,"on_visible");i$1(this,"on_first_visible");i$1(this,"on_hover");"onFocus"in t&&(this.on_focus=new d(t.onFocus)),"onHidden"in t&&(this.on_hidden=new d(t.onHidden)),"onTouchEnd"in t&&(this.on_touch_end=new d(t.onTouchEnd)),"onTouchMove"in t&&(this.on_touch_move=new d(t.onTouchMove)),"onLongPress"in t&&(this.on_long_press=new d(t.onLongPress)),"onTap"in t&&(this.on_tap=new d(t.onTap)),"onTouchStart"in t&&(this.on_touch_start=new d(t.onTouchStart)),"onVisible"in t&&(this.on_visible=new d(t.onVisible)),"onFirstVisible"in t&&(this.on_first_visible=new d(t.onFirstVisible)),"onHover"in t&&(this.on_hover=new d(t.onHover));}};s(y1,"CommandContext");var As=y1;var x1=class x1{constructor(t){i$1(this,"command_context");i$1(this,"accessibility_context");t&&("commandContext"in t&&(this.command_context=new As(t.commandContext)),"accessibilityContext"in t&&(this.accessibility_context=new ns(t.accessibilityContext)));}};s(x1,"RendererContext");var Oe=x1;var Gb=class Gb extends c{constructor(e){super();i$1(this,"avatars");i$1(this,"text");i$1(this,"renderer_context");this.avatars=u.parseArray(e.avatars,$t),Reflect.has(e,"text")&&(this.text=l.fromAttributed(e.text)),this.renderer_context=new Oe(e.rendererContext);}};s(Gb,"AvatarStackView"),i$1(Gb,"type","AvatarStackView");var tn=Gb;var Wb=class Wb extends c{constructor(e){super();i$1(this,"secondary_icon_image");i$1(this,"icon_name");i$1(this,"enable_icon_button");i$1(this,"tooltip");i$1(this,"icon_image_flip_for_rtl");i$1(this,"button_size");i$1(this,"icon_position");i$1(this,"is_full_width");i$1(this,"state");i$1(this,"on_disabled_tap");i$1(this,"custom_border_color");i$1(this,"on_tap");i$1(this,"style");i$1(this,"icon_image");i$1(this,"custom_dark_theme_border_color");i$1(this,"title");i$1(this,"target_id");i$1(this,"enable_full_width_margins");i$1(this,"custom_font_color");i$1(this,"button_type");i$1(this,"enabled");i$1(this,"accessibility_id");i$1(this,"custom_background_color");i$1(this,"on_long_press");i$1(this,"title_formatted");i$1(this,"on_visible");i$1(this,"icon_trailing");i$1(this,"accessibility_text");"secondaryIconImage"in e&&(this.secondary_icon_image=y.fromResponse(e.secondaryIconImage)),"iconName"in e&&(this.icon_name=e.iconName),"enableIconButton"in e&&(this.enable_icon_button=e.enableIconButton),"tooltip"in e&&(this.tooltip=e.tooltip),"iconImageFlipForRtl"in e&&(this.icon_image_flip_for_rtl=e.iconImageFlipForRtl),"buttonSize"in e&&(this.button_size=e.buttonSize),"iconPosition"in e&&(this.icon_position=e.iconPosition),"isFullWidth"in e&&(this.is_full_width=e.isFullWidth),"state"in e&&(this.state=e.state),"onDisabledTap"in e&&(this.on_disabled_tap=new d(e.onDisabledTap)),"customBorderColor"in e&&(this.custom_border_color=e.customBorderColor),"onTap"in e&&(this.on_tap=new d(e.onTap)),"style"in e&&(this.style=e.style),"iconImage"in e&&(this.icon_image=e.iconImage),"customDarkThemeBorderColor"in e&&(this.custom_dark_theme_border_color=e.customDarkThemeBorderColor),"title"in e&&(this.title=e.title),"targetId"in e&&(this.target_id=e.targetId),"enableFullWidthMargins"in e&&(this.enable_full_width_margins=e.enableFullWidthMargins),"customFontColor"in e&&(this.custom_font_color=e.customFontColor),"type"in e&&(this.button_type=e.type),"enabled"in e&&(this.enabled=e.enabled),"accessibilityId"in e&&(this.accessibility_id=e.accessibilityId),"customBackgroundColor"in e&&(this.custom_background_color=e.customBackgroundColor),"onLongPress"in e&&(this.on_long_press=new d(e.onLongPress)),"titleFormatted"in e&&(this.title_formatted=e.titleFormatted),"onVisible"in e&&(this.on_visible=e.onVisible),"iconTrailing"in e&&(this.icon_trailing=e.iconTrailing),"accessibilityText"in e&&(this.accessibility_text=e.accessibilityText);}};s(Wb,"ButtonView"),i$1(Wb,"type","ButtonView");var J=Wb;var Hb=class Hb extends c{constructor(e){super();i$1(this,"body_text");i$1(this,"cta_button");i$1(this,"icon_type");i$1(this,"title");this.body_text=new l(e.bodyText),this.cta_button=u.parseItem(e.ctaButton,[v,J]),Reflect.has(e,"icon")&&(this.icon_type=e.icon.iconType),this.title=new l(e.title);}};s(Hb,"BackgroundPromo"),i$1(Hb,"type","BackgroundPromo");var of=Hb;var Kb=class Kb extends c{constructor(e){super();i$1(this,"image");i$1(this,"endpoint");this.image=y.fromResponse(e.image),this.endpoint=new d(e.command);}};s(Kb,"BackstageImage"),i$1(Kb,"type","BackstageImage");var Ms=Kb;var qb=class qb extends c{constructor(e){super();i$1(this,"text");i$1(this,"toggled_text");i$1(this,"tooltip");i$1(this,"toggled_tooltip");i$1(this,"is_toggled");i$1(this,"is_disabled");i$1(this,"icon_type");i$1(this,"like_count");i$1(this,"short_like_count");i$1(this,"endpoint");i$1(this,"toggled_endpoint");i$1(this,"button_id");i$1(this,"target_id");this.text=new l(e.defaultText),this.toggled_text=new l(e.toggledText),this.tooltip=e.defaultTooltip,this.toggled_tooltip=e.toggledTooltip,this.is_toggled=e.isToggled,this.is_disabled=e.isDisabled,this.icon_type=e.defaultIcon?.iconType;let o=e?.defaultText?.accessibility?.accessibilityData?.label||e?.accessibilityData?.accessibilityData?.label||e?.accessibility?.label;this.icon_type=="LIKE"&&(this.like_count=parseInt(o.replace(/\D/g,"")),this.short_like_count=new l(e.defaultText).toString()),this.endpoint=e.defaultServiceEndpoint?.commandExecutorCommand?.commands?new d(e.defaultServiceEndpoint.commandExecutorCommand.commands.pop()):new d(e.defaultServiceEndpoint),this.toggled_endpoint=new d(e.toggledServiceEndpoint),Reflect.has(e,"toggleButtonSupportedData")&&Reflect.has(e.toggleButtonSupportedData,"toggleButtonIdData")&&(this.button_id=e.toggleButtonSupportedData.toggleButtonIdData.id),Reflect.has(e,"targetId")&&(this.target_id=e.targetId);}};s(qb,"ToggleButton"),i$1(qb,"type","ToggleButton");var se=qb;var $b=class $b extends c{constructor(e){super();i$1(this,"creator_thumbnail");i$1(this,"heart_icon_type");i$1(this,"heart_color");i$1(this,"hearted_tooltip");i$1(this,"is_hearted");i$1(this,"is_enabled");i$1(this,"kennedy_heart_color_string");this.creator_thumbnail=y.fromResponse(e.creatorThumbnail),Reflect.has(e,"heartIcon")&&Reflect.has(e.heartIcon,"iconType")&&(this.heart_icon_type=e.heartIcon.iconType),this.heart_color={basic_color_palette_data:{foreground_title_color:e.heartColor?.basicColorPaletteData?.foregroundTitleColor}},this.hearted_tooltip=e.heartedTooltip,this.is_hearted=e.isHearted,this.is_enabled=e.isEnabled,this.kennedy_heart_color_string=e.kennedyHeartColorString;}};s($b,"CreatorHeart"),i$1($b,"type","CreatorHeart");var Ds=$b;var zb=class zb extends c{constructor(e){super();i$1(this,"like_button");i$1(this,"dislike_button");i$1(this,"reply_button");i$1(this,"creator_heart");this.like_button=u.parseItem(e.likeButton,se),this.dislike_button=u.parseItem(e.dislikeButton,se),this.reply_button=u.parseItem(e.replyButton,v),this.creator_heart=u.parseItem(e.creatorHeart,Ds);}};s(zb,"CommentActionButtons"),i$1(zb,"type","CommentActionButtons");var Os=zb;var Jb=class Jb extends c{constructor(e){super();i$1(this,"default_button");i$1(this,"toggled_button");i$1(this,"is_toggling_disabled");i$1(this,"identifier");i$1(this,"is_toggled");this.default_button=u.parseItem(e.defaultButtonViewModel,J),this.toggled_button=u.parseItem(e.toggledButtonViewModel,J),this.is_toggling_disabled=e.isTogglingDisabled,this.identifier=e.identifier,Reflect.has(e,"isToggled")&&(this.is_toggled=e.isToggled);}};s(Jb,"ToggleButtonView"),i$1(Jb,"type","ToggleButtonView");var je=Jb;var Xb=class Xb extends c{constructor(e){super();i$1(this,"toggle_button");i$1(this,"like_status_entity_key");i$1(this,"like_status_entity");this.toggle_button=u.parseItem(e.toggleButtonViewModel,je),this.like_status_entity_key=e.likeStatusEntityKey,this.like_status_entity={key:e.likeStatusEntity.key,like_status:e.likeStatusEntity.likeStatus};}};s(Xb,"LikeButtonView"),i$1(Xb,"type","LikeButtonView");var Bs=Xb;var Zb=class Zb extends c{constructor(e){super();i$1(this,"toggle_button");i$1(this,"dislike_entity_key");this.toggle_button=u.parseItem(e.toggleButtonViewModel,je),this.dislike_entity_key=e.dislikeEntityKey;}};s(Zb,"DislikeButtonView"),i$1(Zb,"type","DislikeButtonView");var Ls=Zb;var Qb=class Qb extends c{constructor(e){super();i$1(this,"like_button");i$1(this,"dislike_button");i$1(this,"icon_type");i$1(this,"like_count_entity");i$1(this,"dynamic_like_count_update_data");i$1(this,"like_count");i$1(this,"short_like_count");if(this.like_button=u.parseItem(e.likeButtonViewModel,Bs),this.dislike_button=u.parseItem(e.dislikeButtonViewModel,Ls),this.icon_type=e.iconType,this.like_button&&this.like_button.toggle_button){let o=this.like_button.toggle_button;o.default_button?(this.short_like_count=o.default_button.title,o.default_button.accessibility_text&&(this.like_count=parseInt(o.default_button.accessibility_text.replace(/\D/g,"")))):o.toggled_button&&(this.short_like_count=o.toggled_button.title,o.toggled_button.accessibility_text&&(this.like_count=parseInt(o.toggled_button.accessibility_text.replace(/\D/g,""))));}this.like_count_entity={key:e.likeCountEntity.key},this.dynamic_like_count_update_data={update_status_key:e.dynamicLikeCountUpdateData.updateStatusKey,placeholder_like_count_values_key:e.dynamicLikeCountUpdateData.placeholderLikeCountValuesKey,update_delay_loop_id:e.dynamicLikeCountUpdateData.updateDelayLoopId,update_delay_sec:e.dynamicLikeCountUpdateData.updateDelaySec};}};s(Qb,"SegmentedLikeDislikeButtonView"),i$1(Qb,"type","SegmentedLikeDislikeButtonView");var Pt=Qb;var ey=class ey extends v{constructor(t){super(t);}};s(ey,"MenuServiceItem"),i$1(ey,"type","MenuServiceItem");var ut=ey;var ty=class ty extends c{constructor(e){super();i$1(this,"style");i$1(this,"size");i$1(this,"endpoint");i$1(this,"target_id");this.style=e.style,this.size=e.size,this.endpoint=new d(e.command),this.target_id=e.targetId;}};s(ty,"DownloadButton"),i$1(ty,"type","DownloadButton");var nn=ty;var iy=class iy extends c{constructor(e){super();i$1(this,"has_separator");i$1(this,"endpoint");this.has_separator=!!e.hasSeparator,this.endpoint=new d(e.navigationEndpoint||e.serviceEndpoint);}};s(iy,"MenuServiceItemDownload"),i$1(iy,"type","MenuServiceItemDownload");var Us=iy;var ny=class ny extends c{constructor(e){super();i$1(this,"menu_item");i$1(this,"top_level_button");this.menu_item=u.parseItem(e.menuItem,[ut,Us]),this.top_level_button=u.parseItem(e.topLevelButton,[nn,J,v]);}};s(ny,"MenuFlexibleItem"),i$1(ny,"type","MenuFlexibleItem");var Ys=ny;var oy=class oy extends c{constructor(e){super();i$1(this,"target");i$1(this,"like_status");i$1(this,"likes_allowed");i$1(this,"endpoints");this.target={video_id:e.target.videoId},this.like_status=e.likeStatus,this.likes_allowed=e.likesAllowed,Reflect.has(e,"serviceEndpoints")&&(this.endpoints=e.serviceEndpoints.map(o=>new d(o)));}};s(oy,"LikeButton"),i$1(oy,"type","LikeButton");var on=oy;var sy=class sy extends c{constructor(e){super();i$1(this,"actions_rows");i$1(this,"style");this.actions_rows=e.actionsRows.map(o=>({actions:u.parseArray(o.actions,[J,je])})),this.style=e.style;}};s(sy,"FlexibleActionsView"),i$1(sy,"type","FlexibleActionsView");var sn=sy;var ry=class ry extends c{constructor(e){super();i$1(this,"items");i$1(this,"flexible_items");i$1(this,"top_level_buttons");i$1(this,"accessibility");this.items=u.parseArray(e.items),this.flexible_items=u.parseArray(e.flexibleItems,Ys),this.top_level_buttons=u.parseArray(e.topLevelButtons,[se,on,v,J,Pt,sn]),"accessibility"in e&&"accessibilityData"in e.accessibility&&(this.accessibility={accessibility_data:new pe(e.accessibility.accessibilityData)});}get label(){return this.accessibility?.accessibility_data?.label}get contents(){return this.items}};s(ry,"Menu"),i$1(ry,"type","Menu");var B=ry;var ay=class ay extends c{constructor(e){super();i$1(this,"id");i$1(this,"author");i$1(this,"content");i$1(this,"published");i$1(this,"poll_status");i$1(this,"vote_status");i$1(this,"vote_count");i$1(this,"menu");i$1(this,"action_buttons");i$1(this,"vote_button");i$1(this,"surface");i$1(this,"endpoint");i$1(this,"attachment");this.id=e.postId,this.author=new D({...e.authorText,navigationEndpoint:e.authorEndpoint},null,e.authorThumbnail),this.content=new l(e.contentText),this.published=new l(e.publishedTimeText),Reflect.has(e,"pollStatus")&&(this.poll_status=e.pollStatus),Reflect.has(e,"voteStatus")&&(this.vote_status=e.voteStatus),Reflect.has(e,"voteCount")&&(this.vote_count=new l(e.voteCount)),Reflect.has(e,"actionMenu")&&(this.menu=u.parseItem(e.actionMenu,B)),Reflect.has(e,"actionButtons")&&(this.action_buttons=u.parseItem(e.actionButtons,Os)),Reflect.has(e,"voteButton")&&(this.vote_button=u.parseItem(e.voteButton,v)),Reflect.has(e,"navigationEndpoint")&&(this.endpoint=new d(e.navigationEndpoint)),Reflect.has(e,"backstageAttachment")&&(this.attachment=u.parseItem(e.backstageAttachment)),this.surface=e.surface;}};s(ay,"BackstagePost"),i$1(ay,"type","BackstagePost");var zt=ay;var cy=class cy extends c{constructor(e){super();i$1(this,"post");this.post=u.parseItem(e.post);}};s(cy,"BackstagePostThread"),i$1(cy,"type","BackstagePostThread");var sf=cy;var g1=class g1 extends c{constructor(e){super();i$1(this,"text");i$1(this,"style");i$1(this,"accessibility_label");this.text=e.badgeText,this.style=e.badgeStyle,this.accessibility_label=e.accessibilityLabel;}};s(g1,"BadgeView");var rn=g1;var uy=class uy extends c{constructor(e){super();i$1(this,"name");i$1(this,"is_selected");i$1(this,"endpoint");this.name=new l(e.name),this.is_selected=e.isSelected,this.endpoint=new d(e.navigationEndpoint);}};s(uy,"SubFeedOption"),i$1(uy,"type","SubFeedOption");var Vs=uy;var ly=class ly extends c{constructor(e){super();i$1(this,"title");i$1(this,"options");this.title=new l(e.title),this.options=u.parseArray(e.options,Vs);}};s(ly,"SubFeedSelector"),i$1(ly,"type","SubFeedSelector");var Fs=ly;var py=class py extends c{constructor(e){super();i$1(this,"disclaimer");i$1(this,"info_icon");i$1(this,"usage_scenario");this.disclaimer=new l(e.disclaimer),this.info_icon={icon_type:e.infoIcon.iconType},this.usage_scenario=e.usageScenario;}};s(py,"EomSettingsDisclaimer"),i$1(py,"type","EomSettingsDisclaimer");var js=py;var fy=class fy extends c{constructor(e){super();i$1(this,"endpoint");i$1(this,"search_button");i$1(this,"clear_button");i$1(this,"placeholder_text");this.endpoint=new d(e.endpoint),this.search_button=u.parseItem(e.searchButton,v),this.clear_button=u.parseItem(e.clearButton,v),this.placeholder_text=new l(e.placeholderText);}};s(fy,"SearchBox"),i$1(fy,"type","SearchBox");var Gs=fy;var dy=class dy extends c{constructor(e){super();i$1(this,"contents");this.contents=u.parseArray(e.contents,[Fs,js,se,ct,Gs,v]);}};s(dy,"BrowseFeedActions"),i$1(dy,"type","BrowseFeedActions");var an=dy;var my=class my extends c{constructor(e){super();i$1(this,"album");i$1(this,"thumbnails");this.album=new l(e.album),this.thumbnails=y.fromResponse(e.thumbnailDetails);}};s(my,"BrowserMediaSession"),i$1(my,"type","BrowserMediaSession");var rf=my;var hy=class hy extends c{constructor(e){super();i$1(this,"title");i$1(this,"icon_name");i$1(this,"renderer_context");this.title=e.title,this.icon_name=e.image.sources[0].clientResource.imageName,this.renderer_context=new Oe(e.rendererContext);}};s(hy,"ButtonCardView"),i$1(hy,"type","ButtonCardView");var af=hy;var by=class by extends c{constructor(e){super();i$1(this,"endpoint");i$1(this,"icon");i$1(this,"title");this.endpoint=new d(e.navigationEndpoint),this.icon=y.fromResponse(e.icon),this.title=new l(e.title);}};s(by,"HeaderLink"),i$1(by,"type","HeaderLink");var _y=by,yy=class yy extends c{constructor(e){super();i$1(this,"primary");i$1(this,"secondary");this.primary=V(e.primaryLinks?.map(o=>new _y(o))||[]),this.secondary=V(e.secondaryLinks?.map(o=>new _y(o))||[]);}};s(yy,"ChannelHeaderLinks"),i$1(yy,"type","ChannelHeaderLinks");var Ws=yy;var xy=class xy extends c{constructor(e){super();i$1(this,"first_link");i$1(this,"more");Reflect.has(e,"firstLink")&&(this.first_link=l.fromAttributed(e.firstLink)),Reflect.has(e,"more")&&(this.more=l.fromAttributed(e.more));}};s(xy,"ChannelHeaderLinksView"),i$1(xy,"type","ChannelHeaderLinksView");var Hs=xy;var gy=class gy extends c{constructor(e){super();i$1(this,"placeholder_text");i$1(this,"max_character_limit");this.placeholder_text=new l(e.placeholderText),this.max_character_limit=e.maxCharacterLimit;}};s(gy,"ClipCreationTextInput"),i$1(gy,"type","ClipCreationTextInput");var Ks=gy;var wy=class wy extends c{constructor(e){super();i$1(this,"length_template");i$1(this,"max_length_ms");i$1(this,"min_length_ms");i$1(this,"default_length_ms");i$1(this,"window_size_ms");i$1(this,"start_label");i$1(this,"end_label");i$1(this,"duration_label");this.length_template=e.lengthTemplate,this.max_length_ms=e.maxLengthMs,this.min_length_ms=e.minLengthMs,this.default_length_ms=e.defaultLengthMs,this.window_size_ms=e.windowSizeMs,this.start_label=e.startAccessibility?.accessibilityData?.label,this.end_label=e.endAccessibility?.accessibilityData?.label,this.duration_label=e.durationAccessibility?.accessibilityData?.label;}};s(wy,"ClipCreationScrubber"),i$1(wy,"type","ClipCreationScrubber");var qs=wy;var Ty=class Ty extends c{constructor(e){super();i$1(this,"title");i$1(this,"body");this.title=new l(e.title),this.body=new l(e.body);}};s(Ty,"ClipAdState"),i$1(Ty,"type","ClipAdState");var $s=Ty;var vy=class vy extends c{constructor(e){super();i$1(this,"user_avatar");i$1(this,"title_input");i$1(this,"scrubber");i$1(this,"save_button");i$1(this,"display_name");i$1(this,"publicity_label");i$1(this,"cancel_button");i$1(this,"ad_state_overlay");i$1(this,"external_video_id");i$1(this,"publicity_label_icon");this.user_avatar=y.fromResponse(e.userAvatar),this.title_input=u.parseItem(e.titleInput,[Ks]),this.scrubber=u.parseItem(e.scrubber,[qs]),this.save_button=u.parseItem(e.saveButton,[v]),this.display_name=new l(e.displayName),this.publicity_label=e.publicityLabel,this.cancel_button=u.parseItem(e.cancelButton,[v]),this.ad_state_overlay=u.parseItem(e.adStateOverlay,[$s]),this.external_video_id=e.externalVideoId,this.publicity_label_icon=e.publicityLabelIcon;}};s(vy,"ClipCreation"),i$1(vy,"type","ClipCreation");var zs=vy;var Iy=class Iy extends c{constructor(e){super();i$1(this,"contents");this.contents=u.parse(e.contents,true,[zs]);}};s(Iy,"ClipSection"),i$1(Iy,"type","ClipSection");var Js=Iy;var ky=class ky extends c{constructor(e){super();i$1(this,"trigger");i$1(this,"button");i$1(this,"endpoint");this.trigger=e.trigger,Reflect.has(e,"button")&&(this.button=u.parseItem(e.button,v)),this.endpoint=new d(e.continuationEndpoint);}};s(ky,"ContinuationItem"),i$1(ky,"type","ContinuationItem");var K=ky;var Sy=class Sy extends c{constructor(e){super();i$1(this,"title");i$1(this,"visibility_button");i$1(this,"contextual_info");i$1(this,"menu");this.title=new l(e.title),this.contextual_info=e.contextualInfo?new l(e.contextualInfo):void 0,this.visibility_button=u.parseItem(e.visibilityButton,v),this.menu=u.parseItem(e.menu);}};s(Sy,"EngagementPanelTitleHeader"),i$1(Sy,"type","EngagementPanelTitleHeader");var Xs=Sy;var Ey=class Ey extends c{constructor(e){super();i$1(this,"info_text");i$1(this,"menu");this.info_text=new l(e.infoText),this.menu=u.parseItem(e.menu,B);}};s(Ey,"MacroMarkersInfoItem"),i$1(Ey,"type","MacroMarkersInfoItem");var Zs=Ey;var Cy=class Cy extends c{constructor(e){super();i$1(this,"title");i$1(this,"time_description");i$1(this,"thumbnail");i$1(this,"on_tap_endpoint");i$1(this,"layout");i$1(this,"is_highlighted");this.title=new l(e.title),this.time_description=new l(e.timeDescription),this.thumbnail=y.fromResponse(e.thumbnail),this.on_tap_endpoint=new d(e.onTap),this.layout=e.layout,this.is_highlighted=!!e.isHighlighted;}};s(Cy,"MacroMarkersListItem"),i$1(Cy,"type","MacroMarkersListItem");var cn=Cy;var Ny=class Ny extends c{constructor(e){super();i$1(this,"contents");i$1(this,"sync_button_label");this.contents=u.parseArray(e.contents,[Zs,cn]),this.sync_button_label=new l(e.syncButtonLabel);}};s(Ny,"MacroMarkersList"),i$1(Ny,"type","MacroMarkersList");var Qs=Ny;var Ry=class Ry extends c{constructor(e){super();i$1(this,"contents");this.contents=u.parseArray(e.contents);}};s(Ry,"ProductList"),i$1(Ry,"type","ProductList");var er=Ry;var Py=class Py extends c{constructor(e){super();i$1(this,"contents");i$1(this,"target_id");i$1(this,"continuation");i$1(this,"header");i$1(this,"sub_menu");this.contents=u.parseArray(e.contents),Reflect.has(e,"targetId")&&(this.target_id=e.targetId),Reflect.has(e,"continuations")&&(Reflect.has(e.continuations[0],"nextContinuationData")?this.continuation=e.continuations[0].nextContinuationData.continuation:Reflect.has(e.continuations[0],"reloadContinuationData")&&(this.continuation=e.continuations[0].reloadContinuationData.continuation)),Reflect.has(e,"header")&&(this.header=u.parseItem(e.header)),Reflect.has(e,"subMenu")&&(this.sub_menu=u.parseItem(e.subMenu));}};s(Py,"SectionList"),i$1(Py,"type","SectionList");var G=Py;var Ay=class Ay extends c{constructor(e){super();i$1(this,"show_more_text");i$1(this,"show_less_text");i$1(this,"attributed_description_body_text");this.show_more_text=new l(e.showMoreText),this.show_less_text=new l(e.showLessText),Reflect.has(e,"attributedDescriptionBodyText")&&(this.attributed_description_body_text=l.fromAttributed(e.attributedDescriptionBodyText));}};s(Ay,"ExpandableVideoDescriptionBody"),i$1(Ay,"type","ExpandableVideoDescriptionBody");var tr=Ay;var My=class My extends c{constructor(e){super();i$1(this,"thumbnails");i$1(this,"endpoint");i$1(this,"query");this.thumbnails=y.fromResponse(e.thumbnail),this.endpoint=new d(e.searchEndpoint),this.query=new l(e.query).toString();}};s(My,"SearchRefinementCard"),i$1(My,"type","SearchRefinementCard");var bi=My;var Dy=class Dy extends c{constructor(e){super();i$1(this,"game");this.game=u.parseItem(e.game);}};s(Dy,"GameCard"),i$1(Dy,"type","GameCard");var ir=Dy;var Oy=class Oy extends c{constructor(e){super();i$1(this,"visible_item_count");i$1(this,"items");this.visible_item_count=e.visibleItemCount,this.items=u.parseArray(e.items);}get contents(){return this.items}};s(Oy,"HorizontalList"),i$1(Oy,"type","HorizontalList");var nr=Oy;var By=class By extends c{constructor(e){super();i$1(this,"header");i$1(this,"expanded_content");i$1(this,"expand_button");i$1(this,"collapse_button");Reflect.has(e,"header")&&(this.header={collapsed_title:new l(e.header.collapsedTitle),collapsed_thumbnail:y.fromResponse(e.header.collapsedThumbnail),collapsed_label:new l(e.header.collapsedLabel),expanded_title:new l(e.header.expandedTitle)}),this.expanded_content=u.parseItem(e.expandedContent,[Jt,nr]),this.expand_button=u.parseItem(e.expandButton,v),this.collapse_button=u.parseItem(e.collapseButton,v);}};s(By,"ExpandableMetadata"),i$1(By,"type","ExpandableMetadata");var or=By;var Ly=class Ly extends c{constructor(e){super();i$1(this,"icon_type");i$1(this,"style");i$1(this,"label");i$1(this,"tooltip");Reflect.has(e,"icon")&&(this.icon_type=e.icon.iconType),Reflect.has(e,"style")&&(this.style=e.style),Reflect.has(e,"label")&&(this.label=e.label),(Reflect.has(e,"tooltip")||Reflect.has(e,"iconTooltip"))&&(this.tooltip=e.tooltip||e.iconTooltip);}};s(Ly,"MetadataBadge"),i$1(Ly,"type","MetadataBadge");var Be=Ly;var Uy=class Uy extends c{constructor(e){super();i$1(this,"text");i$1(this,"style");this.text=new l(e.text).toString(),this.style=e.style;}};s(Uy,"ThumbnailOverlayTimeStatus"),i$1(Uy,"type","ThumbnailOverlayTimeStatus");var lt=Uy;var Yy=class Yy extends c{constructor(e){super();i$1(this,"video_id");i$1(this,"title");i$1(this,"untranslated_title");i$1(this,"description_snippet");i$1(this,"snippets");i$1(this,"expandable_metadata");i$1(this,"additional_metadatas");i$1(this,"thumbnails");i$1(this,"thumbnail_overlays");i$1(this,"rich_thumbnail");i$1(this,"author");i$1(this,"badges");i$1(this,"endpoint");i$1(this,"published");i$1(this,"view_count");i$1(this,"short_view_count");i$1(this,"upcoming");i$1(this,"length_text");i$1(this,"show_action_menu");i$1(this,"is_watched");i$1(this,"menu");i$1(this,"byline_text");i$1(this,"search_video_result_entity_key");i$1(this,"service_endpoints");i$1(this,"service_endpoint");i$1(this,"style");this.title=new l(e.title),this.video_id=e.videoId,this.expandable_metadata=u.parseItem(e.expandableMetadata,or),"untranslatedTitle"in e&&(this.untranslated_title=new l(e.untranslatedTitle)),"descriptionSnippet"in e&&(this.description_snippet=new l(e.descriptionSnippet)),"detailedMetadataSnippets"in e&&(this.snippets=e.detailedMetadataSnippets.map(o=>({text:new l(o.snippetText),hover_text:new l(o.snippetHoverText)}))),"additionalMetadatas"in e&&(this.additional_metadatas=e.additionalMetadatas.map(o=>new l(o))),this.thumbnails=y.fromResponse(e.thumbnail),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays),"richThumbnail"in e&&(this.rich_thumbnail=u.parseItem(e.richThumbnail)),this.author=new D(e.ownerText,e.ownerBadges,e.channelThumbnailSupportedRenderers?.channelThumbnailWithLinkRenderer?.thumbnail),this.badges=u.parseArray(e.badges,Be),"navigationEndpoint"in e&&(this.endpoint=new d(e.navigationEndpoint)),"publishedTimeText"in e&&(this.published=new l(e.publishedTimeText)),"viewCountText"in e&&(this.view_count=new l(e.viewCountText)),"shortViewCountText"in e&&(this.short_view_count=new l(e.shortViewCountText)),"upcomingEventData"in e&&(this.upcoming=new Date(+`${e.upcomingEventData.startTime}000`)),this.show_action_menu=!!e.showActionMenu,this.is_watched=!!e.isWatched,this.menu=u.parseItem(e.menu,B),"searchVideoResultEntityKey"in e&&(this.search_video_result_entity_key=e.searchVideoResultEntityKey),"bylineText"in e&&(this.byline_text=new l(e.bylineText)),"lengthText"in e&&(this.length_text=new l(e.lengthText)),"serviceEndpoints"in e&&(this.service_endpoints=e.serviceEndpoints.map(o=>new d(o))),"serviceEndpoint"in e&&(this.service_endpoint=new d(e.serviceEndpoint)),"style"in e&&(this.style=e.style);}get id(){return this.video_id}get description(){return this.snippets?this.snippets.map(e=>e.text.toString()).join(""):this.description_snippet?.toString()||""}get is_live(){return this.badges.some(e=>{if(e.style==="BADGE_STYLE_TYPE_LIVE_NOW"||e.label==="LIVE")return  true})||this.thumbnail_overlays.firstOfType(lt)?.style==="LIVE"}get is_upcoming(){return this.upcoming&&this.upcoming>new Date}get is_premiere(){return this.badges.some(e=>e.label==="PREMIERE")}get is_4k(){return this.badges.some(e=>e.label==="4K")}get has_captions(){return this.badges.some(e=>e.label==="CC")}get best_thumbnail(){return this.thumbnails[0]}get duration(){let e=this.thumbnail_overlays.firstOfType(lt),o=this.length_text?.toString()||e?.text.toString();return {text:o,seconds:o?Me(o):0}}};s(Yy,"Video"),i$1(Yy,"type","Video");var un=Yy;var Vy=class Vy extends un{constructor(e){super(e);i$1(this,"metadata_text");Reflect.has(e,"metadataText")&&(this.metadata_text=new l(e.metadataText),this.metadata_text.text&&(this.short_view_count=new l({simpleText:this.metadata_text.text.split("\xB7")[0]?.trim()}),this.published=new l({simpleText:this.metadata_text.text.split("\xB7")[1]?.trim()}))),Reflect.has(e,"bylineText")&&(this.author=new D(e.bylineText,e.ownerBadges,e.channelThumbnailSupportedRenderers?.channelThumbnailWithLinkRenderer?.thumbnail));}};s(Vy,"VideoCard"),i$1(Vy,"type","VideoCard");var sr=Vy;var Fy=class Fy extends c{constructor(e){super();i$1(this,"image");i$1(this,"style");this.image=y.fromResponse(e.image),this.style=e.style;}};s(Fy,"ContentPreviewImageView"),i$1(Fy,"type","ContentPreviewImageView");var Xt=Fy;var jy=class jy extends c{constructor(e){super();i$1(this,"image");i$1(this,"image_style");i$1(this,"title");i$1(this,"subtitle");i$1(this,"secondary_subtitle");i$1(this,"orientation");i$1(this,"sizing_rule");i$1(this,"overflow_menu_on_tap");i$1(this,"overflow_menu_a11y_label");e.image?.sources?this.image=y.fromResponse(e.image):this.image=u.parseItem(e.image,Xt),this.image_style=e.imageStyle,this.title=e.title,this.subtitle=e.subtitle,Reflect.has(e,"secondarySubtitle")&&(this.secondary_subtitle={content:e.secondarySubtitle.content}),this.orientation=e.orientation,this.sizing_rule=e.sizingRule,this.overflow_menu_on_tap=new d(e.overflowMenuOnTap),this.overflow_menu_a11y_label=e.overflowMenuA11yLabel;}};s(jy,"VideoAttributeView"),i$1(jy,"type","VideoAttributeView");var Zt=jy;var Gy=class Gy extends c{constructor(e){super();i$1(this,"cards");i$1(this,"header");i$1(this,"previous_button");i$1(this,"next_button");this.cards=u.parseArray(e.cards,[Zt,bi,cn,ir,sr]),this.header=u.parseItem(e.header),this.previous_button=u.parseItem(e.previousButton,v),this.next_button=u.parseItem(e.nextButton,v);}};s(Gy,"HorizontalCardList"),i$1(Gy,"type","HorizontalCardList");var Jt=Gy;var Wy=class Wy extends c{constructor(e){super();i$1(this,"label");i$1(this,"value");i$1(this,"accessibility_text");this.label=new l(e.label),this.value=new l(e.value),this.accessibility_text=e.accessibilityText;}};s(Wy,"Factoid"),i$1(Wy,"type","Factoid");var pt=Wy;var Hy=class Hy extends c{constructor(e){super();i$1(this,"factoid");this.factoid=u.parseItem(e.factoid,pt);}};s(Hy,"UploadTimeFactoid"),i$1(Hy,"type","UploadTimeFactoid");var rr=Hy;var Ky=class Ky extends c{constructor(e){super();i$1(this,"view_count_entity_key");i$1(this,"factoid");i$1(this,"view_count_type");this.view_count_entity_key=e.viewCountEntityKey,this.factoid=u.parseItem(e.factoid,[pt]),this.view_count_type=e.viewCountType;}};s(Ky,"ViewCountFactoid"),i$1(Ky,"type","ViewCountFactoid");var ar=Ky;var qy=class qy extends c{constructor(e){super();i$1(this,"factoid");this.factoid=u.parseItem(e.factoid,pt);}};s(qy,"HypePointsFactoid"),i$1(qy,"type","HypePointsFactoid");var cr=qy;var $y=class $y extends c{constructor(e){super();i$1(this,"channel");i$1(this,"channel_navigation_endpoint");i$1(this,"channel_thumbnail");i$1(this,"factoids");i$1(this,"publish_date");i$1(this,"title");i$1(this,"views");this.title=new l(e.title),this.channel=new l(e.channel),this.channel_navigation_endpoint=new d(e.channelNavigationEndpoint),this.channel_thumbnail=y.fromResponse(e.channelThumbnail),this.publish_date=new l(e.publishDate),this.views=new l(e.views),this.factoids=u.parseArray(e.factoid,[pt,cr,ar,rr]);}};s($y,"VideoDescriptionHeader"),i$1($y,"type","VideoDescriptionHeader");var ur=$y;var zy=class zy extends c{constructor(e){super();i$1(this,"section_title");i$1(this,"creator_videos_button");i$1(this,"creator_about_button");i$1(this,"section_subtitle");i$1(this,"channel_avatar");i$1(this,"channel_endpoint");this.section_title=new l(e.sectionTitle),this.creator_videos_button=u.parseItem(e.creatorVideosButton,v),this.creator_about_button=u.parseItem(e.creatorAboutButton,v),this.section_subtitle=new l(e.sectionSubtitle),this.channel_avatar=y.fromResponse(e.channelAvatar),this.channel_endpoint=new d(e.channelEndpoint);}};s(zy,"VideoDescriptionInfocardsSection"),i$1(zy,"type","VideoDescriptionInfocardsSection");var lr=zy;var Jy=class Jy extends c{constructor(e){super();i$1(this,"title");i$1(this,"default_metadata");i$1(this,"expanded_metadata");i$1(this,"info_row_expand_status_key");this.title=new l(e.title),Reflect.has(e,"defaultMetadata")&&(this.default_metadata=new l(e.defaultMetadata)),Reflect.has(e,"expandedMetadata")&&(this.expanded_metadata=new l(e.expandedMetadata)),Reflect.has(e,"infoRowExpandStatusKey")&&(this.info_row_expand_status_key=e.infoRowExpandStatusKey);}};s(Jy,"InfoRow"),i$1(Jy,"type","InfoRow");var pr=Jy;var Xy=class Xy extends c{constructor(e){super();i$1(this,"video_id");i$1(this,"thumbnails");i$1(this,"rich_thumbnail");i$1(this,"title");i$1(this,"author");i$1(this,"view_count");i$1(this,"short_view_count");i$1(this,"short_byline_text");i$1(this,"long_byline_text");i$1(this,"published");i$1(this,"badges");i$1(this,"thumbnail_overlays");i$1(this,"endpoint");i$1(this,"menu");i$1(this,"length_text");i$1(this,"is_watched");i$1(this,"service_endpoints");i$1(this,"service_endpoint");i$1(this,"style");this.video_id=e.videoId,this.thumbnails=y.fromResponse(e.thumbnail),this.title=new l(e.title),this.author=new D(e.longBylineText,e.ownerBadges,e.channelThumbnail),this.is_watched=!!e.isWatched,this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays),this.menu=u.parseItem(e.menu,B),this.badges=u.parseArray(e.badges,Be),"publishedTimeText"in e&&(this.published=new l(e.publishedTimeText)),"shortBylineText"in e&&(this.view_count=new l(e.viewCountText)),"shortViewCountText"in e&&(this.short_view_count=new l(e.shortViewCountText)),"richThumbnail"in e&&(this.rich_thumbnail=u.parseItem(e.richThumbnail)),"shortBylineText"in e&&(this.short_byline_text=new l(e.shortBylineText)),"longBylineText"in e&&(this.long_byline_text=new l(e.longBylineText)),"lengthText"in e&&(this.length_text=new l(e.lengthText)),"serviceEndpoints"in e&&(this.service_endpoints=e.serviceEndpoints.map(o=>new d(o))),"serviceEndpoint"in e&&(this.service_endpoint=new d(e.serviceEndpoint)),"navigationEndpoint"in e&&(this.endpoint=new d(e.navigationEndpoint)),"style"in e&&(this.style=e.style);}get id(){return this.video_id}get duration(){let e=this.thumbnail_overlays.firstOfType(lt),o=this.length_text?.toString()||e?.text.toString();return {text:o,seconds:o?Me(o):0}}get best_thumbnail(){return this.thumbnails[0]}get is_fundraiser(){return this.badges.some(e=>e.label==="Fundraiser")}get is_live(){return this.badges.some(e=>{if(e.style==="BADGE_STYLE_TYPE_LIVE_NOW"||e.label==="LIVE")return  true})}get is_new(){return this.badges.some(e=>e.label==="New")}get is_premiere(){return this.badges.some(e=>e.style==="PREMIERE")}};s(Xy,"CompactVideo"),i$1(Xy,"type","CompactVideo");var ln=Xy;var Zy=class Zy extends c{constructor(e){super();i$1(this,"info_rows");i$1(this,"video_lockup");this.info_rows=u.parseArray(e.infoRows,pr),this.video_lockup=u.parseItem(e.videoLockup,ln);}};s(Zy,"CarouselLockup"),i$1(Zy,"type","CarouselLockup");var fr=Zy;var Qy=class Qy extends c{constructor(e){super();i$1(this,"carousel_lockups");i$1(this,"section_title");this.carousel_lockups=u.parseArray(e.carouselLockups,fr),this.section_title=new l(e.sectionTitle);}};s(Qy,"VideoDescriptionMusicSection"),i$1(Qy,"type","VideoDescriptionMusicSection");var pn=Qy;var ex=class ex extends c{constructor(e){super();i$1(this,"section_title");i$1(this,"sub_header_text");i$1(this,"primary_button");this.section_title=new l(e.sectionTitle),this.sub_header_text=new l(e.subHeaderText),this.primary_button=u.parseItem(e.primaryButton,v);}};s(ex,"VideoDescriptionTranscriptSection"),i$1(ex,"type","VideoDescriptionTranscriptSection");var wo=ex;var tx=class tx extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"title");i$1(this,"short_byline_text");i$1(this,"video_count_short_text");i$1(this,"endpoint");i$1(this,"thumbnail_width");i$1(this,"aspect_ratio");i$1(this,"max_lines_title");i$1(this,"max_lines_short_byline_text");i$1(this,"overlay_position");this.thumbnail=y.fromResponse(e.thumbnail),this.title=new l(e.title),this.short_byline_text=new l(e.shortBylineText),this.video_count_short_text=new l(e.videoCountShortText),this.endpoint=new d(e.navigationEndpoint),this.thumbnail_width=e.thumbnailWidth,this.aspect_ratio=e.aspectRatio,this.max_lines_title=e.maxLinesTitle,this.max_lines_short_byline_text=e.maxLinesShortBylineText,this.overlay_position=e.overlayPosition;}};s(tx,"StructuredDescriptionPlaylistLockup"),i$1(tx,"type","StructuredDescriptionPlaylistLockup");var dr=tx;var ix=class ix extends c{constructor(e){super();i$1(this,"section_title");i$1(this,"media_lockups");this.section_title=new l(e.sectionTitle),this.media_lockups=u.parseArray(e.mediaLockups,[dr]);}};s(ix,"VideoDescriptionCourseSection"),i$1(ix,"type","VideoDescriptionCourseSection");var mr=ix;var nx=class nx extends c{constructor(e){super();i$1(this,"header_title");i$1(this,"header_subtitle");i$1(this,"video_attributes");i$1(this,"previous_button");i$1(this,"next_button");this.header_title=e.headerTitle,this.header_subtitle=e.headerSubtitle,this.video_attributes=u.parseArray(e.videoAttributeViewModels,Zt),this.previous_button=u.parseItem(e.previousButton,J),this.next_button=u.parseItem(e.nextButton,J);}};s(nx,"VideoAttributesSectionView"),i$1(nx,"type","VideoAttributesSectionView");var hr=nx;var ox=class ox extends c{constructor(e){super();i$1(this,"section_title");i$1(this,"body_text");i$1(this,"body_header");Reflect.has(e,"sectionText")&&(this.section_title=l.fromAttributed(e.sectionText)),Reflect.has(e,"bodyText")&&(this.body_text=l.fromAttributed(e.bodyText)),Reflect.has(e,"bodyHeader")&&(this.body_header=l.fromAttributed(e.bodyHeader));}};s(ox,"HowThisWasMadeSectionView"),i$1(ox,"type","HowThisWasMadeSectionView");var _r=ox;var sx=class sx extends c{constructor(e){super();i$1(this,"title");i$1(this,"items");i$1(this,"endpoint");this.title=new l(e.title),this.items=u.parseArray(e.items),Reflect.has(e,"endpoint")&&(this.endpoint=new d(e.endpoint));}get contents(){return this.items}};s(sx,"ReelShelf"),i$1(sx,"type","ReelShelf");var fn=sx;var rx=class rx extends c{constructor(e){super();i$1(this,"items");this.items=u.parseArray(e.items,[ur,tr,pn,lr,mr,wo,wo,Jt,fn,hr,_r]);}};s(rx,"StructuredDescriptionContent"),i$1(rx,"type","StructuredDescriptionContent");var yi=rx;var ax=class ax extends c{constructor(e){super();i$1(this,"header");i$1(this,"content");i$1(this,"target_id");i$1(this,"panel_identifier");i$1(this,"identifier");i$1(this,"visibility");this.header=u.parseItem(e.header,Xs),this.content=u.parseItem(e.content,[Zt,G,K,Js,yi,Qs,er]),this.panel_identifier=e.panelIdentifier,this.identifier=e.identifier?{surface:e.identifier.surface,tag:e.identifier.tag}:void 0,this.target_id=e.targetId,this.visibility=e.visibility;}};s(ax,"EngagementPanelSectionList"),i$1(ax,"type","EngagementPanelSectionList");var Qt=ax;var cx=class cx extends c{constructor(e){super();i$1(this,"content");i$1(this,"max_lines");i$1(this,"more_endpoint");i$1(this,"more_icon_type");i$1(this,"more_label");i$1(this,"target_id");this.content=e.content,this.max_lines=e.maxLines,this.more_endpoint=e.moreEndpoint.showEngagementPanelEndpoint?{show_engagement_panel_endpoint:{engagement_panel:u.parseItem(e.moreEndpoint.showEngagementPanelEndpoint.engagementPanel,Qt),engagement_panel_popup_type:e.moreEndpoint.showEngagementPanelEndpoint.engagementPanelPresentationConfigs.engagementPanelPopupPresentationConfig.popupType,identifier:{surface:e.moreEndpoint.showEngagementPanelEndpoint.identifier.surface,tag:e.moreEndpoint.showEngagementPanelEndpoint.identifier.tag}}}:new d(e.moreEndpoint),this.more_icon_type=e.moreIcon.iconType,this.more_label=e.moreLabel,this.target_id=e.targetId;}};s(cx,"ChannelTagline"),i$1(cx,"type","ChannelTagline");var br=cx;var ux=class ux extends c{constructor(e){super();i$1(this,"states");i$1(this,"current_state_id");i$1(this,"target_id");this.states=e.states.map(o=>({id:o.stateId,next_id:o.nextStateId,state:u.parse(o.state)})),this.current_state_id=e.currentStateId,this.target_id=e.targetId;}};s(ux,"SubscriptionNotificationToggleButton"),i$1(ux,"type","SubscriptionNotificationToggleButton");var yr=ux;var lx=class lx extends c{constructor(e){super();i$1(this,"button_text");i$1(this,"subscribed");i$1(this,"enabled");i$1(this,"item_type");i$1(this,"channel_id");i$1(this,"show_preferences");i$1(this,"subscribed_text");i$1(this,"unsubscribed_text");i$1(this,"unsubscribe_text");i$1(this,"notification_preference_button");i$1(this,"service_endpoints");i$1(this,"on_subscribe_endpoints");i$1(this,"on_unsubscribe_endpoints");i$1(this,"subscribed_entity_key");i$1(this,"target_id");i$1(this,"subscribe_accessibility_label");i$1(this,"unsubscribe_accessibility_label");this.button_text=new l(e.buttonText),this.subscribed=e.subscribed,this.enabled=e.enabled,this.item_type=e.type,this.channel_id=e.channelId,this.show_preferences=e.showPreferences,Reflect.has(e,"subscribedButtonText")&&(this.subscribed_text=new l(e.subscribedButtonText)),Reflect.has(e,"unsubscribedButtonText")&&(this.unsubscribed_text=new l(e.unsubscribedButtonText)),Reflect.has(e,"unsubscribeButtonText")&&(this.unsubscribe_text=new l(e.unsubscribeButtonText)),this.notification_preference_button=u.parseItem(e.notificationPreferenceButton,yr),Reflect.has(e,"serviceEndpoints")&&(this.service_endpoints=e.serviceEndpoints.map(o=>new d(o))),Reflect.has(e,"onSubscribeEndpoints")&&(this.on_subscribe_endpoints=e.onSubscribeEndpoints.map(o=>new d(o))),Reflect.has(e,"onUnsubscribeEndpoints")&&(this.on_unsubscribe_endpoints=e.onUnsubscribeEndpoints.map(o=>new d(o))),Reflect.has(e,"subscribedEntityKey")&&(this.subscribed_entity_key=e.subscribedEntityKey),Reflect.has(e,"targetId")&&(this.target_id=e.targetId),Reflect.has(e,"subscribeAccessibility")&&(this.subscribe_accessibility_label=e.subscribeAccessibility.accessibilityData?.label),Reflect.has(e,"unsubscribeAccessibility")&&(this.unsubscribe_accessibility_label=e.unsubscribeAccessibility.accessibilityData?.label);}};s(lx,"SubscribeButton"),i$1(lx,"type","SubscribeButton");var de=lx;var px=class px extends c{constructor(e){super();i$1(this,"author");i$1(this,"banner");i$1(this,"tv_banner");i$1(this,"mobile_banner");i$1(this,"subscribers");i$1(this,"videos_count");i$1(this,"sponsor_button");i$1(this,"subscribe_button");i$1(this,"header_links");i$1(this,"channel_handle");i$1(this,"channel_id");i$1(this,"tagline");this.author=new D({simpleText:e.title,navigationEndpoint:e.navigationEndpoint},e.badges,e.avatar),Reflect.has(e,"banner")&&(this.banner=y.fromResponse(e.banner)),Reflect.has(e,"tv_banner")&&(this.tv_banner=y.fromResponse(e.tvBanner)),Reflect.has(e,"mobile_banner")&&(this.mobile_banner=y.fromResponse(e.mobileBanner)),Reflect.has(e,"subscriberCountText")&&(this.subscribers=new l(e.subscriberCountText)),Reflect.has(e,"videosCountText")&&(this.videos_count=new l(e.videosCountText)),Reflect.has(e,"sponsorButton")&&(this.sponsor_button=u.parseItem(e.sponsorButton,v)),Reflect.has(e,"subscribeButton")&&(this.subscribe_button=u.parseItem(e.subscribeButton,[de,v])),Reflect.has(e,"headerLinks")&&(this.header_links=u.parseItem(e.headerLinks,[Ws,Hs])),Reflect.has(e,"channelHandleText")&&(this.channel_handle=new l(e.channelHandleText)),Reflect.has(e,"channelId")&&(this.channel_id=e.channelId),Reflect.has(e,"tagline")&&(this.tagline=u.parseItem(e.tagline,br));}};s(px,"C4TabbedHeader"),i$1(px,"type","C4TabbedHeader");var ei=px;var fx=class fx extends c{constructor(e){super();i$1(this,"label");i$1(this,"icon_type");i$1(this,"style");this.label=new l(e.label),this.icon_type=e.icon.iconType,this.style=e.style;}};s(fx,"CallToActionButton"),i$1(fx,"type","CallToActionButton");var cf=fx;var dx=class dx extends c{constructor(e){super();i$1(this,"teaser");i$1(this,"content");i$1(this,"card_id");i$1(this,"feature");i$1(this,"cue_ranges");this.teaser=u.parseItem(e.teaser),this.content=u.parseItem(e.content),Reflect.has(e,"cardId")&&(this.card_id=e.cardId),Reflect.has(e,"feature")&&(this.feature=e.feature),this.cue_ranges=e.cueRanges.map(o=>({start_card_active_ms:o.startCardActiveMs,end_card_active_ms:o.endCardActiveMs,teaser_duration_ms:o.teaserDurationMs,icon_after_teaser_ms:o.iconAfterTeaserMs}));}};s(dx,"Card"),i$1(dx,"type","Card");var uf=dx;var mx=class mx extends c{constructor(e){super();i$1(this,"cards");i$1(this,"header");i$1(this,"allow_teaser_dismiss");this.cards=u.parseArray(e.cards),this.header=new l(e.headerText),this.allow_teaser_dismiss=e.allowTeaserDismiss;}};s(mx,"CardCollection"),i$1(mx,"type","CardCollection");var xr=mx;var hx=class hx extends c{constructor(e){super();i$1(this,"contents");this.contents=u.parseArray(e.contents);}};s(hx,"CarouselHeader"),i$1(hx,"type","CarouselHeader");var gr=hx;var _x=class _x extends c{constructor(e){super();i$1(this,"items");i$1(this,"background_color");i$1(this,"layout_style");i$1(this,"pagination_thumbnails");i$1(this,"paginator_alignment");this.items=u.parseArray(e.carouselItems),this.background_color=e.backgroundColor,this.layout_style=e.layoutStyle,this.pagination_thumbnails=y.fromResponse(e.paginationThumbnails),this.paginator_alignment=e.paginatorAlignment;}get contents(){return this.items}};s(_x,"CarouselItem"),i$1(_x,"type","CarouselItem");var lf=_x;var bx=class bx extends c{constructor(e){super();i$1(this,"icon_name");i$1(this,"text");i$1(this,"on_tap_endpoint");i$1(this,"button");this.icon_name=e.iconName,this.text=l.fromAttributed(e.text),this.on_tap_endpoint=new d(e.onTap),this.button=u.parseItem(e.button,J);}};s(bx,"TextCarouselItemView"),i$1(bx,"type","TextCarouselItemView");var wr=bx;var yx=class yx extends c{constructor(e){super();i$1(this,"item_type");i$1(this,"carousel_item");this.item_type=e.itemType,this.carousel_item=u.parseItem(e.carouselItem,wr);}};s(yx,"CarouselItemView"),i$1(yx,"type","CarouselItemView");var Tr=yx;var xx=class xx extends c{constructor(e){super();i$1(this,"title");i$1(this,"previous_button");i$1(this,"next_button");this.title=e.title,this.previous_button=u.parseItem(e.previousButton,J),this.next_button=u.parseItem(e.nextButton,J);}};s(xx,"CarouselTitleView"),i$1(xx,"type","CarouselTitleView");var vr=xx;var gx=class gx extends c{constructor(e){super();i$1(this,"id");i$1(this,"author");i$1(this,"subscriber_count");i$1(this,"video_count");i$1(this,"long_byline");i$1(this,"short_byline");i$1(this,"endpoint");i$1(this,"subscribe_button");i$1(this,"description_snippet");this.id=e.channelId,this.author=new D({...e.title,navigationEndpoint:e.navigationEndpoint},e.ownerBadges,e.thumbnail),this.subscriber_count=new l(e.subscriberCountText),this.video_count=new l(e.videoCountText),this.long_byline=new l(e.longBylineText),this.short_byline=new l(e.shortBylineText),this.endpoint=new d(e.navigationEndpoint),this.subscribe_button=u.parseItem(e.subscribeButton,[de,v]),this.description_snippet=new l(e.descriptionSnippet);}};s(gx,"Channel"),i$1(gx,"type","Channel");var Ir=gx;var wx=class wx extends c{constructor(e){super();i$1(this,"id");i$1(this,"name");i$1(this,"avatar");i$1(this,"canonical_channel_url");i$1(this,"primary_links");i$1(this,"view_count");i$1(this,"joined_date");i$1(this,"description");i$1(this,"email_reveal");i$1(this,"can_reveal_email");i$1(this,"country");i$1(this,"buttons");this.id=e.channelId,this.name=new l(e.title),this.avatar=y.fromResponse(e.avatar),this.canonical_channel_url=e.canonicalChannelUrl,this.primary_links=e.primaryLinks?.map(o=>({endpoint:new d(o.navigationEndpoint),icon:y.fromResponse(o.icon),title:new l(o.title)}))??[],this.view_count=new l(e.viewCountText),this.joined_date=new l(e.joinedDateText),this.description=new l(e.description),this.email_reveal=new d(e.onBusinessEmailRevealClickCommand),this.can_reveal_email=!e.signInForBusinessEmail,this.country=new l(e.country),this.buttons=u.parseArray(e.actionButtons,v);}};s(wx,"ChannelAboutFullMetadata"),i$1(wx,"type","ChannelAboutFullMetadata");var To=wx;var Tx=class Tx extends c{constructor(e){super();i$1(this,"channel_title");i$1(this,"avatar");i$1(this,"header");i$1(this,"main_text");i$1(this,"sign_in_button");i$1(this,"secondary_text");this.channel_title=e.channelTitle,this.avatar=y.fromResponse(e.avatar),this.header=new l(e.header),this.main_text=new l(e.mainText),this.sign_in_button=u.parseItem(e.signInButton,v),this.secondary_text=new l(e.secondaryText);}};s(Tx,"ChannelAgeGate"),i$1(Tx,"type","ChannelAgeGate");var pf=Tx;var vx=class vx extends c{constructor(e){super();i$1(this,"title");i$1(this,"items");this.title=new l(e.title),this.items=u.parseArray(e.items);}};s(vx,"ChannelFeaturedContent"),i$1(vx,"type","ChannelFeaturedContent");var ff=vx;var Ix=class Ix extends c{constructor(e){super();i$1(this,"title");i$1(this,"description");i$1(this,"url");i$1(this,"rss_url");i$1(this,"vanity_channel_url");i$1(this,"external_id");i$1(this,"is_family_safe");i$1(this,"keywords");i$1(this,"avatar");i$1(this,"music_artist_name");i$1(this,"available_countries");i$1(this,"android_deep_link");i$1(this,"android_appindexing_link");i$1(this,"ios_appindexing_link");this.title=e.title,this.description=e.description,this.url=e.channelUrl,this.rss_url=e.rssUrl,this.vanity_channel_url=e.vanityChannelUrl,this.external_id=e.externalId,this.is_family_safe=e.isFamilySafe,this.keywords=e.keywords,this.avatar=y.fromResponse(e.avatar),this.music_artist_name=typeof e.musicArtistName=="string"&&e.musicArtistName.length>0?e.musicArtistName:void 0,this.available_countries=e.availableCountryCodes,this.android_deep_link=e.androidDeepLink,this.android_appindexing_link=e.androidAppindexingLink,this.ios_appindexing_link=e.iosAppindexingLink;}};s(Ix,"ChannelMetadata"),i$1(Ix,"type","ChannelMetadata");var kr=Ix;var kx=class kx extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(kx,"ChannelMobileHeader"),i$1(kx,"type","ChannelMobileHeader");var df=kx;var Sx=class Sx extends c{constructor(e){super();i$1(this,"avatar");i$1(this,"endpoint");i$1(this,"name");i$1(this,"links");this.avatar=y.fromResponse(e.avatar),this.endpoint=new d(e.avatarEndpoint),this.name=e.name,this.links=e.links.map(o=>new l(o));}};s(Sx,"ChannelOptions"),i$1(Sx,"type","ChannelOptions");var Sr=Sx;var Ex=class Ex extends c{constructor(e){super();i$1(this,"illustration");i$1(this,"description");this.illustration=y.fromResponse(e.illustration),this.description=new l(e.description);}};s(Ex,"ChannelOwnerEmptyState"),i$1(Ex,"type","ChannelOwnerEmptyState");var mf=Ex;var Cx=class Cx extends c{constructor(e){super();i$1(this,"content_type_sub_menu_items");i$1(this,"sort_setting");this.content_type_sub_menu_items=e.contentTypeSubMenuItems.map(o=>({endpoint:new d(o.navigationEndpoint||o.endpoint),selected:o.selected,title:o.title})),this.sort_setting=u.parseItem(e.sortSetting);}};s(Cx,"ChannelSubMenu"),i$1(Cx,"type","ChannelSubMenu");var vo=Cx;var Nx=class Nx extends c{constructor(e){super();i$1(this,"title");i$1(this,"button");this.title=new l(e.title).toString(),Reflect.has(e,"button")&&(this.button=u.parseItem(e.button,v));}};s(Nx,"ChannelSwitcherHeader"),i$1(Nx,"type","ChannelSwitcherHeader");var hf=Nx;var Rx=class Rx extends c{constructor(e){super();i$1(this,"thumbnails");i$1(this,"endpoint");i$1(this,"accessibility");this.thumbnails=y.fromResponse(e.thumbnail),this.endpoint=new d(e.navigationEndpoint),"accessibility"in e&&"accessibilityData"in e.accessibility&&(this.accessibility={accessibility_data:new pe(e.accessibility.accessibilityData)});}get label(){return this.accessibility?.accessibility_data?.label}};s(Rx,"ChannelThumbnailWithLink"),i$1(Rx,"type","ChannelThumbnailWithLink");var _f=Rx;var Px=class Px extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"description");i$1(this,"view_count");i$1(this,"published_time");this.id=e.videoId,this.title=new l(e.title),this.description=new l(e.description),this.view_count=new l(e.viewCountText),this.published_time=new l(e.publishedTimeText);}};s(Px,"ChannelVideoPlayer"),i$1(Px,"type","ChannelVideoPlayer");var bf=Px;var Ax=class Ax extends c{constructor(e){super();i$1(this,"title");i$1(this,"time_range_start_millis");i$1(this,"thumbnail");this.title=new l(e.title),this.time_range_start_millis=e.timeRangeStartMillis,this.thumbnail=y.fromResponse(e.thumbnail);}};s(Ax,"Chapter"),i$1(Ax,"type","Chapter");var Er=Ax;var Mx=class Mx extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"duration");i$1(this,"endpoint");this.id=e.videoId,this.title=new l(e.title),this.duration={text:e.lengthText.simpleText,seconds:Me(e.lengthText.simpleText)},this.endpoint=new d(e.navigationEndpoint);}};s(Mx,"ChildVideo"),i$1(Mx,"type","ChildVideo");var yf=Mx;var Dx=class Dx extends c{constructor(e){super();i$1(this,"text");i$1(this,"display_type");i$1(this,"endpoint");i$1(this,"chip_entity_key");this.text=e.text,this.display_type=e.displayType,this.endpoint=new d(e.tapCommand),this.chip_entity_key=e.chipEntityKey;}};s(Dx,"ChipView"),i$1(Dx,"type","ChipView");var Cr=Dx;var Ox=class Ox extends c{constructor(e){super();i$1(this,"chips");this.chips=u.parseArray(e.chips,Cr);}};s(Ox,"ChipBarView"),i$1(Ox,"type","ChipBarView");var xf=Ox;var Bx=class Bx extends c{constructor(e){super();i$1(this,"is_selected");i$1(this,"endpoint");i$1(this,"text");this.is_selected=e.isSelected,Reflect.has(e,"navigationEndpoint")&&(this.endpoint=new d(e.navigationEndpoint)),this.text=new l(e.text).toString();}};s(Bx,"ChipCloudChip"),i$1(Bx,"type","ChipCloudChip");var ae=Bx;var Lx=class Lx extends c{constructor(e){super();i$1(this,"chips");i$1(this,"next_button");i$1(this,"previous_button");i$1(this,"horizontal_scrollable");this.chips=u.parseArray(e.chips,ae),this.next_button=u.parseItem(e.nextButton,v),this.previous_button=u.parseItem(e.previousButton,v),this.horizontal_scrollable=e.horizontalScrollable;}};s(Lx,"ChipCloud"),i$1(Lx,"type","ChipCloud");var Ge=Lx;var Ux=class Ux extends c{constructor(e){super();i$1(this,"text");i$1(this,"icon_type");i$1(this,"toggled_text");i$1(this,"toggled_icon_type");i$1(this,"is_toggled");i$1(this,"menu_item_identifier");i$1(this,"endpoint");i$1(this,"logging_directives");this.text=new l(e.defaultText),this.icon_type=e.defaultIcon.iconType,this.toggled_text=new l(e.toggledText),this.toggled_icon_type=e.toggledIcon.iconType,Reflect.has(e,"isToggled")&&(this.is_toggled=e.isToggled),this.menu_item_identifier=e.menuItemIdentifier,this.endpoint=new d(e.command),Reflect.has(e,"loggingDirectives")&&(this.logging_directives={visibility:{types:e.loggingDirectives.visibility.types},enable_displaylogger_experiment:e.loggingDirectives.enableDisplayloggerExperiment});}};s(Ux,"ClientSideToggleMenuItem"),i$1(Ux,"type","ClientSideToggleMenuItem");var gf=Ux;var Yx=class Yx extends c{constructor(e){super();i$1(this,"channel_avatar");i$1(this,"custom_text");i$1(this,"channel_name");i$1(this,"subscriber_count");i$1(this,"endpoint");this.channel_avatar=y.fromResponse(e.channelAvatar),this.custom_text=new l(e.customText),this.channel_name=new l(e.channelName),this.subscriber_count=new l(e.subscriberCountText),this.endpoint=new d(e.endpoint);}};s(Yx,"CollaboratorInfoCardContent"),i$1(Yx,"type","CollaboratorInfoCardContent");var wf=Yx;var Vx=class Vx extends c{constructor(e){super();i$1(this,"left");i$1(this,"top_right");i$1(this,"bottom_right");i$1(this,"endpoint");this.left=y.fromResponse(e.leftThumbnail),this.top_right=y.fromResponse(e.topRightThumbnail),this.bottom_right=y.fromResponse(e.bottomRightThumbnail),this.endpoint=new d(e.navigationEndpoint);}};s(Vx,"CollageHeroImage"),i$1(Vx,"type","CollageHeroImage");var Tf=Vx;var Fx=class Fx extends c{constructor(e){super();i$1(this,"icon_name");i$1(this,"text");i$1(this,"style");this.icon_name=e.icon.sources[0].clientResource.imageName,this.text=l.fromAttributed(e.text),this.style=e.style;}};s(Fx,"ThumbnailHoverOverlayView"),i$1(Fx,"type","ThumbnailHoverOverlayView");var Nr=Fx;var jx=class jx extends c{constructor(e){super();i$1(this,"icon_name");i$1(this,"text");i$1(this,"badge_style");i$1(this,"background_color");this.text=e.text,this.badge_style=e.badgeStyle,e.backgroundColor&&(this.background_color={light_theme:e.backgroundColor.lightTheme,dark_theme:e.backgroundColor.darkTheme}),e.iconName&&(this.icon_name=e.icon.sources[0].clientResource.imageName);}};s(jx,"ThumbnailBadgeView"),i$1(jx,"type","ThumbnailBadgeView");var dn=jx;var Gx=class Gx extends c{constructor(e){super();i$1(this,"badges");i$1(this,"position");this.badges=u.parseArray(e.thumbnailBadges,dn),this.position=e.position;}};s(Gx,"ThumbnailOverlayBadgeView"),i$1(Gx,"type","ThumbnailOverlayBadgeView");var Rr=Gx;var Wx=class Wx extends c{constructor(e){super();i$1(this,"buttons");this.buttons=u.parseArray(e.buttons,je);}};s(Wx,"ThumbnailHoverOverlayToggleActionsView"),i$1(Wx,"type","ThumbnailHoverOverlayToggleActionsView");var Pr=Wx;var Hx=class Hx extends c{constructor(e){super();i$1(this,"start_percent");this.start_percent=e.startPercent;}};s(Hx,"ThumbnailOverlayProgressBarView"),i$1(Hx,"type","ThumbnailOverlayProgressBarView");var Ar=Hx;var Kx=class Kx extends c{constructor(e){super();i$1(this,"progress_bar");i$1(this,"badges");this.progress_bar=u.parseItem(e.progressBar,Ar),this.badges=u.parseArray(e.badges,dn);}};s(Kx,"ThumbnailBottomOverlayView"),i$1(Kx,"type","ThumbnailBottomOverlayView");var Mr=Kx;var qx=class qx extends c{constructor(e){super();i$1(this,"image");i$1(this,"overlays");i$1(this,"background_color");this.image=y.fromResponse(e.image),this.overlays=u.parseArray(e.overlays,[Pr,Mr,Rr,Nr,Ns]),"backgroundColor"in e&&(this.background_color={light_theme:e.backgroundColor.lightTheme,dark_theme:e.backgroundColor.darkTheme});}};s(qx,"ThumbnailView"),i$1(qx,"type","ThumbnailView");var mn=qx;var $x=class $x extends c{constructor(e){super();i$1(this,"primary_thumbnail");i$1(this,"stack_color");this.primary_thumbnail=u.parseItem(e.primaryThumbnail,mn),e.stackColor&&(this.stack_color={light_theme:e.stackColor.lightTheme,dark_theme:e.stackColor.darkTheme});}};s($x,"CollectionThumbnailView"),i$1($x,"type","CollectionThumbnailView");var Dr=$x;var zx=class zx extends c{constructor(e){super();i$1(this,"open_miniplayer");i$1(this,"video_id");i$1(this,"list_type");i$1(this,"endpoint");i$1(this,"video_ids");this.open_miniplayer=e.openMiniplayer,this.video_id=e.videoId,this.list_type=e.listType,this.endpoint=new d(e.onCreateListCommand),this.video_ids=e.videoIds;}};s(zx,"AddToPlaylistCommand"),i$1(zx,"type","AddToPlaylistCommand");var vf=zx;var At,Jx=class Jx extends c{constructor(e){super();g(this,At);w(this,At,e);}getApiPath(){switch(p(this,At).request){case "CONTINUATION_REQUEST_TYPE_WATCH_NEXT":return "next";case "CONTINUATION_REQUEST_TYPE_BROWSE":return "browse";case "CONTINUATION_REQUEST_TYPE_SEARCH":return "search";case "CONTINUATION_REQUEST_TYPE_ACCOUNTS_LIST":return "account/accounts_list";case "CONTINUATION_REQUEST_TYPE_COMMENTS_NOTIFICATION_MENU":return "notification/get_notification_menu";case "CONTINUATION_REQUEST_TYPE_COMMENT_REPLIES":return "comment/get_comment_replies";case "CONTINUATION_REQUEST_TYPE_REEL_WATCH_SEQUENCE":return "reel/reel_watch_sequence";case "CONTINUATION_REQUEST_TYPE_GET_PANEL":return "get_panel";default:return ""}}buildRequest(){let e={};return p(this,At).formData&&(e.formData=p(this,At).formData),p(this,At).token&&(e.continuation=p(this,At).token),p(this,At).request==="CONTINUATION_REQUEST_TYPE_COMMENTS_NOTIFICATION_MENU"&&(e.notificationsMenuRequestType="NOTIFICATIONS_MENU_REQUEST_TYPE_COMMENTS",p(this,At).token&&(e.fetchCommentsParams={continuation:p(this,At).token},delete e.continuation)),e}};At=new WeakMap,s(Jx,"ContinuationCommand"),i$1(Jx,"type","ContinuationCommand");var If=Jx;var dM="kids/get_kids_blocklist_picker",xl,Xx=class Xx extends c{constructor(e){super();g(this,xl);w(this,xl,e);}getApiPath(){return dM}buildRequest(){let e={};return p(this,xl).blockedForKidsContent&&(e.blockedForKidsContent=p(this,xl).blockedForKidsContent),e}};xl=new WeakMap,s(Xx,"GetKidsBlocklistPickerCommand"),i$1(Xx,"type","GetKidsBlocklistPickerCommand");var kf=Xx;var Zx=class Zx extends c{constructor(e){super();i$1(this,"engagement_type");i$1(this,"ids");this.engagement_type=e.engagementType,Reflect.has(e,"ids")&&(this.ids=e.ids.map(o=>({encrypted_video_id:o.encryptedVideoId,external_channel_id:o.externalChannelId,comment_id:o.commentId,external_owner_id:o.externalOwnerId,artist_id:o.artistId,playlist_id:o.playlistId,external_post_id:o.externalPostId,share_id:o.shareId})));}};s(Zx,"RunAttestationCommand"),i$1(Zx,"type","RunAttestationCommand");var Or=Zx;var Qx=class Qx extends c{constructor(e){super();i$1(this,"inline_content");i$1(this,"remove_default_padding");this.inline_content=u.parseItem(e.panelLoadingStrategy?.inlineContent),this.remove_default_padding=!!e.removeDefaultPadding;}};s(Qx,"ShowDialogCommand"),i$1(Qx,"type","ShowDialogCommand");var Sf=Qx;var eg=class eg extends c{constructor(e){super();i$1(this,"content_source_panel_identifier");i$1(this,"target_panel_identifier");this.content_source_panel_identifier=e.contentSourcePanelIdentifier,this.target_panel_identifier=e.targetPanelIdentifier;}};s(eg,"UpdateEngagementPanelContentCommand"),i$1(eg,"type","UpdateEngagementPanelContentCommand");var Ef=eg;var Nf,tg=class tg extends c{constructor(e){super();g(this,Nf);i$1(this,"icon_type");i$1(this,"tooltip");i$1(this,"style");Reflect.has(e,"icon")&&Reflect.has(e.icon,"iconType")&&(this.icon_type=e.icon.iconType),this.tooltip=e.iconTooltip,this.tooltip==="Verified"&&(this.style="BADGE_STYLE_TYPE_VERIFIED",e.style="BADGE_STYLE_TYPE_VERIFIED"),w(this,Nf,e);}get orig_badge(){return p(this,Nf)}};Nf=new WeakMap,s(tg,"AuthorCommentBadge"),i$1(tg,"type","AuthorCommentBadge");var Cf=tg;var ig=class ig extends c{constructor(e){super();i$1(this,"id");i$1(this,"categories");i$1(this,"category_buttons");i$1(this,"search_placeholder");i$1(this,"search_no_results");i$1(this,"pick_skin_tone");i$1(this,"clear_search_label");i$1(this,"skin_tone_generic_label");i$1(this,"skin_tone_light_label");i$1(this,"skin_tone_medium_light_label");i$1(this,"skin_tone_medium_label");i$1(this,"skin_tone_medium_dark_label");i$1(this,"skin_tone_dark_label");this.id=e.id,this.categories=u.parseArray(e.categories),this.category_buttons=u.parseArray(e.categoryButtons),this.search_placeholder=new l(e.searchPlaceholderText),this.search_no_results=new l(e.searchNoResultsText),this.pick_skin_tone=new l(e.pickSkinToneText),this.clear_search_label=e.clearSearchLabel,this.skin_tone_generic_label=e.skinToneGenericLabel,this.skin_tone_light_label=e.skinToneLightLabel,this.skin_tone_medium_light_label=e.skinToneMediumLightLabel,this.skin_tone_medium_label=e.skinToneMediumLabel,this.skin_tone_medium_dark_label=e.skinToneMediumDarkLabel,this.skin_tone_dark_label=e.skinToneDarkLabel;}};s(ig,"EmojiPicker"),i$1(ig,"type","EmojiPicker");var Br=ig;var ng=class ng extends c{constructor(e){super();i$1(this,"editable_text");i$1(this,"author_thumbnail");i$1(this,"submit_button");i$1(this,"cancel_button");i$1(this,"placeholder");i$1(this,"emoji_button");i$1(this,"emoji_picker");this.editable_text=new l(e.editableText),this.author_thumbnail=y.fromResponse(e.authorThumbnail),this.submit_button=u.parseItem(e.submitButton,v),this.cancel_button=u.parseItem(e.cancelButton,v),this.placeholder=new l(e.placeholderText),this.emoji_button=u.parseItem(e.emojiButton,v),this.emoji_picker=u.parseItem(e.emojiPicker,Br);}};s(ng,"CommentDialog"),i$1(ng,"type","CommentDialog");var Rf=ng;var og=class og extends c{constructor(e){super();i$1(this,"contents");i$1(this,"view_replies");i$1(this,"hide_replies");i$1(this,"view_replies_creator_thumbnail");i$1(this,"has_channel_owner_replied");this.contents=u.parseArray(e.contents),this.view_replies=u.parseItem(e.viewReplies,v),this.hide_replies=u.parseItem(e.hideReplies,v),this.view_replies_creator_thumbnail=y.fromResponse(e.viewRepliesCreatorThumbnail),this.has_channel_owner_replied=!!e.viewRepliesCreatorThumbnail;}};s(og,"CommentReplies"),i$1(og,"type","CommentReplies");var Lr=og;var sg=class sg extends c{constructor(e){super();i$1(this,"reply_button");i$1(this,"cancel_button");i$1(this,"author_thumbnail");i$1(this,"placeholder");i$1(this,"error_message");this.reply_button=u.parseItem(e.replyButton,v),this.cancel_button=u.parseItem(e.cancelButton,v),this.author_thumbnail=y.fromResponse(e.authorThumbnail),this.placeholder=new l(e.placeholderText),this.error_message=new l(e.errorMessage);}};s(sg,"CommentReplyDialog"),i$1(sg,"type","CommentReplyDialog");var Ur=sg;var rg=class rg extends c{constructor(e){super();i$1(this,"simplebox_avatar");i$1(this,"simplebox_placeholder");this.simplebox_avatar=y.fromResponse(e.simpleboxAvatar),this.simplebox_placeholder=new l(e.simpleboxPlaceholder);}};s(rg,"CommentsSimplebox"),i$1(rg,"type","CommentsSimplebox");var Yr=rg;var ag=class ag extends c{constructor(e){super();i$1(this,"teaser_avatar");i$1(this,"teaser_content");Reflect.has(e,"teaserAvatar")&&(this.teaser_avatar=y.fromResponse(e.teaserAvatar)),Reflect.has(e,"teaserContent")&&(this.teaser_content=new l(e.teaserContent));}};s(ag,"CommentsEntryPointTeaser"),i$1(ag,"type","CommentsEntryPointTeaser");var Vr=ag;var cg=class cg extends c{constructor(e){super();i$1(this,"header");i$1(this,"comment_count");i$1(this,"teaser_avatar");i$1(this,"teaser_content");i$1(this,"content_renderer");i$1(this,"simplebox_placeholder");Reflect.has(e,"headerText")&&(this.header=new l(e.headerText)),Reflect.has(e,"commentCount")&&(this.comment_count=new l(e.commentCount)),(Reflect.has(e,"teaserAvatar")||Reflect.has(e,"simpleboxAvatar"))&&(this.teaser_avatar=y.fromResponse(e.teaserAvatar||e.simpleboxAvatar)),Reflect.has(e,"teaserContent")&&(this.teaser_content=new l(e.teaserContent)),Reflect.has(e,"contentRenderer")&&(this.content_renderer=u.parseItem(e.contentRenderer,[Vr,Yr])),Reflect.has(e,"simpleboxPlaceholder")&&(this.simplebox_placeholder=new l(e.simpleboxPlaceholder));}};s(cg,"CommentsEntryPointHeader"),i$1(cg,"type","CommentsEntryPointHeader");var Fr=cg;var ug=class ug extends c{constructor(e){super();i$1(this,"title");i$1(this,"count");i$1(this,"comments_count");i$1(this,"create_renderer");i$1(this,"sort_menu");i$1(this,"custom_emojis");this.title=new l(e.titleText),this.count=new l(e.countText),this.comments_count=new l(e.commentsCount),this.create_renderer=u.parseItem(e.createRenderer),this.sort_menu=u.parseItem(e.sortMenu,ot),Reflect.has(e,"customEmojis")&&(this.custom_emojis=e.customEmojis.map(o=>({emoji_id:o.emojiId,shortcuts:o.shortcuts,search_terms:o.searchTerms,image:y.fromResponse(o.image),is_custom_emoji:o.isCustomEmoji})));}};s(ug,"CommentsHeader"),i$1(ug,"type","CommentsHeader");var ti=ug;var lg=class lg extends c{constructor(e){super();i$1(this,"submit_button");i$1(this,"cancel_button");i$1(this,"author_thumbnail");i$1(this,"placeholder");i$1(this,"avatar_size");this.submit_button=u.parseItem(e.submitButton,v),this.cancel_button=u.parseItem(e.cancelButton,v),this.author_thumbnail=y.fromResponse(e.authorThumbnail),this.placeholder=new l(e.placeholderText),this.avatar_size=e.avatarSize;}};s(lg,"CommentSimplebox"),i$1(lg,"type","CommentSimplebox");var jr=lg;var pg=class pg extends c{constructor(e){super();i$1(this,"voice_reply_unavailable_text");i$1(this,"transcript_text");this.voice_reply_unavailable_text=l.fromAttributed(e.voiceReplyUnavailableText),this.transcript_text=l.fromAttributed(e.transcriptText);}};s(pg,"VoiceReplyContainerView"),i$1(pg,"type","VoiceReplyContainerView");var Gr=pg;var We,fg=class fg extends c{constructor(e){super();g(this,We);i$1(this,"like_command");i$1(this,"dislike_command");i$1(this,"unlike_command");i$1(this,"undislike_command");i$1(this,"reply_command");i$1(this,"prepare_account_command");i$1(this,"comment_id");i$1(this,"is_pinned");i$1(this,"keys");i$1(this,"content");i$1(this,"published_time");i$1(this,"author_is_channel_owner");i$1(this,"creator_thumbnail_url");i$1(this,"like_button_a11y");i$1(this,"like_count");i$1(this,"like_count_liked");i$1(this,"like_count_a11y");i$1(this,"like_active_tooltip");i$1(this,"like_inactive_tooltip");i$1(this,"dislike_active_tooltip");i$1(this,"dislike_inactive_tooltip");i$1(this,"heart_active_tooltip");i$1(this,"reply_count");i$1(this,"reply_count_a11y");i$1(this,"is_member");i$1(this,"member_badge");i$1(this,"author");i$1(this,"is_liked");i$1(this,"is_disliked");i$1(this,"is_hearted");i$1(this,"voice_reply_container");this.comment_id=e.commentId,this.is_pinned=!!e.pinnedText,this.keys={comment:e.commentKey,comment_surface:e.commentSurfaceKey,toolbar_state:e.toolbarStateKey,toolbar_surface:e.toolbarSurfaceKey,shared:e.sharedKey};}applyMutations(e,o,r,a){e&&(this.content=l.fromAttributed(e.properties.content),this.published_time=e.properties.publishedTime,this.author_is_channel_owner=!!e.author.isCreator,this.creator_thumbnail_url=e.toolbar.creatorThumbnailUrl,this.like_count=e.toolbar.likeCountNotliked?e.toolbar.likeCountNotliked:"0",this.like_count_liked=e.toolbar.likeCountLiked?e.toolbar.likeCountLiked:"0",this.like_count_a11y=e.toolbar.likeCountA11y,this.like_active_tooltip=e.toolbar.likeActiveTooltip,this.like_inactive_tooltip=e.toolbar.likeInactiveTooltip,this.dislike_active_tooltip=e.toolbar.dislikeActiveTooltip,this.dislike_inactive_tooltip=e.toolbar.dislikeInactiveTooltip,this.like_button_a11y=e.toolbar.likeButtonA11y,this.heart_active_tooltip=e.toolbar.heartActiveTooltip,this.reply_count_a11y=e.toolbar.replyCountA11y,this.reply_count=e.toolbar.replyCount?e.toolbar.replyCount:"0",this.is_member=!!e.author.sponsorBadgeUrl,Reflect.has(e.author,"sponsorBadgeUrl")&&(this.member_badge={url:e.author.sponsorBadgeUrl,a11y:e.author.A11y}),this.author=new D({simpleText:e.author.displayName,navigationEndpoint:e.avatar.endpoint},e.author,e.avatar.image,e.author.channelId)),o&&(this.is_hearted=o.heartState==="TOOLBAR_HEART_STATE_HEARTED",this.is_liked=o.likeState==="TOOLBAR_LIKE_STATE_LIKED",this.is_disliked=o.likeState==="TOOLBAR_LIKE_STATE_DISLIKED"),r&&("prepareAccountCommand"in r?this.prepare_account_command=new d(r.prepareAccountCommand):(this.like_command=new d(r.likeCommand),this.dislike_command=new d(r.dislikeCommand),this.unlike_command=new d(r.unlikeCommand),this.undislike_command=new d(r.undislikeCommand),this.reply_command=new d(r.replyCommand))),a&&"voiceReplyContainerViewModel"in a&&(this.voice_reply_container=u.parseItem(a.voiceReplyContainerViewModel,Gr));}async like(){if(!p(this,We))throw new _("Actions instance not set for this comment.");if(!this.like_command)throw new _("Like command not found.");if(this.is_liked)throw new _("This comment is already liked.",{comment_id:this.comment_id});return this.like_command.call(p(this,We))}async dislike(){if(!p(this,We))throw new _("Actions instance not set for this comment.");if(!this.dislike_command)throw new _("Dislike command not found.");if(this.is_disliked)throw new _("This comment is already disliked.",{comment_id:this.comment_id});return this.dislike_command.call(p(this,We))}async unlike(){if(!p(this,We))throw new _("Actions instance not set for this comment.");if(!this.unlike_command)throw new _("Unlike command not found.");if(!this.is_liked)throw new _("This comment is not liked.",{comment_id:this.comment_id});return this.unlike_command.call(p(this,We))}async undislike(){if(!p(this,We))throw new _("Actions instance not set for this comment.");if(!this.undislike_command)throw new _("Undislike command not found.");if(!this.is_disliked)throw new _("This comment is not disliked.",{comment_id:this.comment_id});return this.undislike_command.call(p(this,We))}async reply(e){if(!p(this,We))throw new _("Actions instance not set for this comment.");if(!this.reply_command)throw new _("Reply command not found.");let o=this.reply_command.dialog?.as(Ur);if(!o)throw new _("Reply dialog not found.");let r=o.reply_button;if(!r)throw new _("Reply button not found in the dialog.");if(!r.endpoint)throw new _("Reply button endpoint not found.");return r.endpoint.call(p(this,We),{commentText:e})}async translate(e){if(!p(this,We))throw new _("Actions instance not set for this comment.");if(!this.content)throw new _("Comment content not found.",{comment_id:this.comment_id});let r={text:this.content.toString().replace(/[^\p{L}\p{N}\p{P}\p{Z}]/gu,""),target_language:e},a=Hp(22,r),f=await p(this,We).execute("comment/perform_comment_action",{action:a}),b=f.data.frameworkUpdates?.entityBatchUpdate?.mutations?.[0]?.payload?.commentEntityPayload?.translatedContent?.content;return {...f,content:b}}setActions(e){w(this,We,e);}};We=new WeakMap,s(fg,"CommentView"),i$1(fg,"type","CommentView");var xi=fg;var hn,Io,Pf,w1,dg=class dg extends c{constructor(e){super();g(this,Pf);i$1(this,"comment");i$1(this,"replies");i$1(this,"comment_replies_data");i$1(this,"is_moderated_elq_comment");i$1(this,"has_replies");g(this,hn);g(this,Io);this.comment=u.parseItem(e.commentViewModel,xi),this.comment_replies_data=u.parseItem(e.replies,Lr),this.is_moderated_elq_comment=e.isModeratedElqComment,this.has_replies=!!this.comment_replies_data;}get has_continuation(){if(!this.replies)throw new _("Cannot determine if there is a continuation because this thread's replies have not been loaded.");return !!p(this,Io)}async getReplies(){if(!p(this,hn))throw new _("Actions instance not set for this thread.");if(!this.comment_replies_data)throw new _("This comment has no replies.",this);let e=this.comment_replies_data.contents?.firstOfType(K);if(!e)throw new _("Replies continuation not found.");let o=await e.endpoint.call(p(this,hn),{parse:true});if(!o.on_response_received_endpoints_memo)throw new _("Unexpected response.",o);return this.replies=N(this,Pf,w1).call(this,o.on_response_received_endpoints_memo),w(this,Io,o.on_response_received_endpoints_memo.getType(K)[0]),this}async getContinuation(){if(!this.replies)throw new _("Cannot retrieve continuation because this thread's replies have not been loaded.");if(!p(this,Io))throw new _("Continuation not found.");if(!p(this,hn))throw new _("Actions instance not set for this thread.");let e=p(this,Io).button?.as(v);if(!e)throw new _('"Load more" button not found.');let o=await e.endpoint.call(p(this,hn),{parse:true});if(!o.on_response_received_endpoints_memo)throw new _("Unexpected response.",o);return this.replies=N(this,Pf,w1).call(this,o.on_response_received_endpoints_memo),w(this,Io,o.on_response_received_endpoints_memo.getType(K)[0]),this}setActions(e){w(this,hn,e);}};hn=new WeakMap,Io=new WeakMap,Pf=new WeakSet,w1=s(function(e){return V(e.getType(xi).map(o=>(o.setActions(p(this,hn)),o)))},"#getPatchedReplies"),s(dg,"CommentThread"),i$1(dg,"type","CommentThread");var Wr=dg;var mg=class mg extends c{constructor(e){super();i$1(this,"text");i$1(this,"color_pallette");i$1(this,"icon_type");this.text=new l(e.chipText),this.color_pallette={background_color:e.chipColorPalette?.backgroundColor,foreground_title_color:e.chipColorPalette?.foregroundTitleColor},Reflect.has(e,"chipIcon")&&Reflect.has(e.chipIcon,"iconType")&&(this.icon_type=e.chipIcon.iconType);}};s(mg,"PdgCommentChip"),i$1(mg,"type","PdgCommentChip");var Af=mg;var hg=class hg extends c{constructor(e){super();i$1(this,"custom_badge");i$1(this,"tooltip");this.custom_badge=y.fromResponse(e.customBadge),this.tooltip=e.tooltip;}};s(hg,"SponsorCommentBadge"),i$1(hg,"type","SponsorCommentBadge");var Mf=hg;var _g=class _g extends c{constructor(e){super();i$1(this,"title");i$1(this,"channel_id");i$1(this,"thumbnail");i$1(this,"display_name");i$1(this,"video_count");i$1(this,"subscriber_count");i$1(this,"endpoint");i$1(this,"tv_banner");i$1(this,"menu");this.title=new l(e.title),this.channel_id=e.channelId,this.thumbnail=y.fromResponse(e.thumbnail),this.display_name=new l(e.displayName),this.video_count=new l(e.videoCountText),this.subscriber_count=new l(e.subscriberCountText),this.endpoint=new d(e.navigationEndpoint),this.tv_banner=y.fromResponse(e.tvBanner),this.menu=u.parseItem(e.menu,B);}};s(_g,"CompactChannel"),i$1(_g,"type","CompactChannel");var Df=_g;var bg=class bg extends c{constructor(e){super();i$1(this,"thumbnail");this.thumbnail=y.fromResponse(e.thumbnail);}};s(bg,"PlaylistCustomThumbnail"),i$1(bg,"type","PlaylistCustomThumbnail");var _n=bg;var yg=class yg extends c{constructor(e){super();i$1(this,"thumbnail");this.thumbnail=y.fromResponse(e.thumbnail);}};s(yg,"PlaylistVideoThumbnail"),i$1(yg,"type","PlaylistVideoThumbnail");var bn=yg;var xg=class xg extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"author");i$1(this,"thumbnails");i$1(this,"thumbnail_renderer");i$1(this,"video_count");i$1(this,"video_count_short");i$1(this,"first_videos");i$1(this,"share_url");i$1(this,"menu");i$1(this,"badges");i$1(this,"endpoint");i$1(this,"thumbnail_overlays");i$1(this,"view_playlist");this.id=e.playlistId,this.title=new l(e.title),this.author=e.shortBylineText?.simpleText?new l(e.shortBylineText):new D(e.longBylineText,e.ownerBadges,null),this.thumbnails=y.fromResponse(e.thumbnail||{thumbnails:e.thumbnails.map(o=>o.thumbnails).flat(1)}),this.video_count=new l(e.thumbnailText),this.video_count_short=new l(e.videoCountShortText),this.first_videos=u.parseArray(e.videos),this.share_url=e.shareUrl||null,this.menu=u.parseItem(e.menu),this.badges=u.parseArray(e.ownerBadges),this.endpoint=new d(e.navigationEndpoint),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays),Reflect.has(e,"thumbnailRenderer")&&(this.thumbnail_renderer=u.parseItem(e.thumbnailRenderer,[bn,_n])||void 0),Reflect.has(e,"viewPlaylistText")&&(this.view_playlist=new l(e.viewPlaylistText));}};s(xg,"Playlist"),i$1(xg,"type","Playlist");var ft=xg;var gg=class gg extends ft{constructor(t){super(t);}};s(gg,"CompactMix"),i$1(gg,"type","CompactMix");var Of=gg;var wg=class wg extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"top_metadata_items");i$1(this,"thumbnails");i$1(this,"thumbnail_overlays");i$1(this,"author");i$1(this,"duration");i$1(this,"endpoint");i$1(this,"badges");i$1(this,"use_vertical_poster");i$1(this,"menu");let o=e.thumbnailOverlays.find(a=>a.thumbnailOverlayTimeStatusRenderer)?.thumbnailOverlayTimeStatusRenderer.text||"N/A";this.id=e.videoId,this.title=new l(e.title),this.top_metadata_items=new l(e.topMetadataItems),this.thumbnails=y.fromResponse(e.thumbnail),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays),this.author=new D(e.shortBylineText);let r=e.lengthText?new l(e.lengthText).toString():new l(o).toString();this.duration={text:r,seconds:Me(r)},this.endpoint=new d(e.navigationEndpoint),this.badges=u.parseArray(e.badges),this.use_vertical_poster=e.useVerticalPoster,this.menu=u.parseItem(e.menu,B);}};s(wg,"CompactMovie"),i$1(wg,"type","CompactMovie");var Bf=wg;var Tg=class Tg extends ft{constructor(t){super(t);}};s(Tg,"CompactPlaylist"),i$1(Tg,"type","CompactPlaylist");var T1=Tg,uR=T1;var vg=class vg extends c{constructor(e){super();i$1(this,"title");i$1(this,"description");i$1(this,"video_count");i$1(this,"endpoint");i$1(this,"thumbnail");this.title=new l(e.title),this.description=new l(e.description),this.video_count=new l(e.videoCountText),this.endpoint=new d(e.navigationEndpoint),this.thumbnail=y.fromResponse(e.thumbnail);}};s(vg,"CompactStation"),i$1(vg,"type","CompactStation");var Lf=vg;var Ig=class Ig extends c{constructor(t){super();}};s(Ig,"CompositeVideoPrimaryInfo"),i$1(Ig,"type","CompositeVideoPrimaryInfo");var Uf=Ig;var kg=class kg extends c{constructor(e){super();i$1(this,"title");i$1(this,"confirm_button");i$1(this,"cancel_button");i$1(this,"dialog_messages");this.title=new l(e.title),this.confirm_button=u.parseItem(e.confirmButton,v),this.cancel_button=u.parseItem(e.cancelButton,v),this.dialog_messages=e.dialogMessages.map(o=>new l(o));}};s(kg,"ConfirmDialog"),i$1(kg,"type","ConfirmDialog");var Yf=kg;var Sg=class Sg extends c{constructor(e){super();i$1(this,"metadata_rows");i$1(this,"delimiter");this.metadata_rows=e.metadataRows.map(o=>({metadata_parts:o.metadataParts?.map(r=>({text:r.text?l.fromAttributed(r.text):null,avatar_stack:u.parseItem(r.avatarStack,tn),enable_truncation:e.enableTruncation})),badges:u.parseArray(o.badges,rn)})),this.delimiter=e.delimiter;}};s(Sg,"ContentMetadataView"),i$1(Sg,"type","ContentMetadataView");var yn=Sg;var Eg=class Eg extends c{constructor(e){super();i$1(this,"text");this.text=new l(e.text);}};s(Eg,"Message"),i$1(Eg,"type","Message");var _e=Eg;var Cg=class Cg extends c{constructor(e){super();i$1(this,"availability_message");this.availability_message=u.parseItem(e.availabilityMessage,_e);}};s(Cg,"ConversationBar"),i$1(Cg,"type","ConversationBar");var Vf=Cg;var Ng=class Ng extends c{constructor(e){super();i$1(this,"copy_button");i$1(this,"short_url");i$1(this,"style");this.copy_button=u.parseItem(e.copyButton,v),this.short_url=e.shortUrl,this.style=e.style;}};s(Ng,"CopyLink"),i$1(Ng,"type","CopyLink");var xn=Ng;var Rg=class Rg extends c{constructor(e){super();i$1(this,"label");i$1(this,"placeholder_text");i$1(this,"disabled");i$1(this,"options");i$1(this,"dropdown_type");i$1(this,"id");this.label=new l(e.label),this.placeholder_text=new l(e.placeholderText),this.disabled=!!e.disabled,this.dropdown_type=e.type,this.id=e.id,Reflect.has(e,"options")&&(this.options=e.options.map(o=>({title:new l(o.title),subtitle:new l(o.subtitle),leading_image:y.fromResponse(o.leadingImage),value:{privacy_status_value:o.value?.privacyStatusValue},on_tap:new d(o.onTap),is_selected:!!o.isSelected})));}};s(Rg,"DropdownView"),i$1(Rg,"type","DropdownView");var Hr=Rg;var Pg=class Pg extends c{constructor(e){super();i$1(this,"display_properties");i$1(this,"content_properties");i$1(this,"initial_state");i$1(this,"form_field_metadata");Reflect.has(e,"displayProperties")&&(this.display_properties={isMultiline:!!e.displayProperties.isMultiline,disableNewLines:!!e.displayProperties.disableNewLines}),Reflect.has(e,"contentProperties")&&(this.content_properties={labelText:e.contentProperties.labelText,placeholderText:e.contentProperties.placeholderText,maxCharacterCount:e.contentProperties.maxCharacterCount}),Reflect.has(e,"initialState")&&(this.initial_state={isFocused:!!e.initialState.isFocused}),Reflect.has(e,"formFieldMetadata")&&(this.form_field_metadata={formId:e.formFieldMetadata.formId,fieldId:e.formFieldMetadata.fieldId});}};s(Pg,"TextFieldView"),i$1(Pg,"type","TextFieldView");var Kr=Pg;var Ag=class Ag extends c{constructor(e){super();i$1(this,"playlist_title");i$1(this,"playlist_visibility");i$1(this,"disable_playlist_collaborate");i$1(this,"create_playlist_params_collaboration_enabled");i$1(this,"create_playlist_params_collaboration_disabled");i$1(this,"video_ids");this.playlist_title=u.parseItem(e.playlistTitle,Kr),this.playlist_visibility=u.parseItem(e.playlistVisibility,Hr),this.disable_playlist_collaborate=!!e.disablePlaylistCollaborate,this.create_playlist_params_collaboration_enabled=e.createPlaylistParamsCollaborationEnabled,this.create_playlist_params_collaboration_disabled=e.createPlaylistParamsCollaborationDisabled,this.video_ids=e.videoIds;}};s(Ag,"CreatePlaylistDialogFormView"),i$1(Ag,"type","CreatePlaylistDialogFormView");var qr=Ag;var Mg=class Mg extends c{constructor(e){super();i$1(this,"avatar");i$1(this,"a11y_label");i$1(this,"renderer_context");this.avatar=u.parseItem(e.avatar,$t),this.a11y_label=e.a11yLabel,this.renderer_context=new Oe(e.rendererContext);}};s(Mg,"DecoratedAvatarView"),i$1(Mg,"type","DecoratedAvatarView");var gn=Mg;var Dg=class Dg extends c{constructor(e){super();i$1(this,"time_range_start_millis");i$1(this,"marker_duration_millis");i$1(this,"heat_marker_intensity_score_normalized");this.time_range_start_millis=Number.parseInt(e.startMillis,10),this.marker_duration_millis=Number.parseInt(e.durationMillis,10),this.heat_marker_intensity_score_normalized=e.intensityScoreNormalized;}};s(Dg,"HeatMarker"),i$1(Dg,"type","HeatMarker");var wn=Dg;var Og=class Og extends c{constructor(e){super();i$1(this,"visible_time_range_start_millis");i$1(this,"visible_time_range_end_millis");i$1(this,"decoration_time_millis");i$1(this,"label");i$1(this,"icon");this.visible_time_range_start_millis=e.visibleTimeRangeStartMillis,this.visible_time_range_end_millis=e.visibleTimeRangeEndMillis,this.decoration_time_millis=e.decorationTimeMillis,this.label=new l(e.label),this.icon=e.icon;}};s(Og,"TimedMarkerDecoration"),i$1(Og,"type","TimedMarkerDecoration");var Tn=Og;var Bg=class Bg extends c{constructor(e){super();i$1(this,"max_height_dp");i$1(this,"min_height_dp");i$1(this,"show_hide_animation_duration_millis");i$1(this,"heat_markers");i$1(this,"heat_markers_decorations");this.max_height_dp=e.maxHeightDp,this.min_height_dp=e.minHeightDp,this.show_hide_animation_duration_millis=e.showHideAnimationDurationMillis,this.heat_markers=u.parseArray(e.heatMarkers,wn),this.heat_markers_decorations=u.parseArray(e.heatMarkersDecorations,Tn);}};s(Bg,"Heatmap"),i$1(Bg,"type","Heatmap");var vn=Bg;var Lg=class Lg extends c{constructor(e){super();i$1(this,"marker_key");i$1(this,"value");this.marker_key=e.key,this.value={},Reflect.has(e,"value")&&(Reflect.has(e.value,"heatmap")&&(this.value.heatmap=u.parseItem(e.value.heatmap,vn)),Reflect.has(e.value,"chapters")&&(this.value.chapters=u.parseArray(e.value.chapters,Er)));}};s(Lg,"Marker"),i$1(Lg,"type","Marker");var v1=Lg,Ug=class Ug extends c{constructor(e){super();i$1(this,"markers_map");this.markers_map=V(e.markersMap?.map(o=>new v1(o))||[]);}};s(Ug,"MultiMarkersPlayerBar"),i$1(Ug,"type","MultiMarkersPlayerBar");var $r=Ug;var Yg=class Yg extends c{constructor(e){super();i$1(this,"player_bar");i$1(this,"player_bar_action_button");this.player_bar=u.parseItem(e.playerBar,$r),this.player_bar_action_button=u.parseItem(e.playerBarActionButton,v);}};s(Yg,"DecoratedPlayerBar"),i$1(Yg,"type","DecoratedPlayerBar");var zr=Yg;var Vg=class Vg extends c{constructor(e){super();i$1(this,"title");i$1(this,"description");i$1(this,"endpoint");i$1(this,"large_form_factor_background_thumbnail");i$1(this,"small_form_factor_background_thumbnail");i$1(this,"scrim_color_values");i$1(this,"min_panel_display_duration_ms");i$1(this,"min_video_play_duration_ms");i$1(this,"scrim_duration");i$1(this,"metadata_order");i$1(this,"panel_layout");this.title=new l(e.title),this.description=new l(e.description),this.endpoint=new d(e.navigationEndpoint),this.large_form_factor_background_thumbnail=u.parseItem(e.largeFormFactorBackgroundThumbnail),this.small_form_factor_background_thumbnail=u.parseItem(e.smallFormFactorBackgroundThumbnail),this.scrim_color_values=e.scrimColorValues,this.min_panel_display_duration_ms=e.minPanelDisplayDurationMs,this.min_video_play_duration_ms=e.minVideoPlayDurationMs,this.scrim_duration=e.scrimDuration,this.metadata_order=e.metadataOrder,this.panel_layout=e.panelLayout;}};s(Vg,"DefaultPromoPanel"),i$1(Vg,"type","DefaultPromoPanel");var Ff=Vg;var Fg=class Fg extends c{constructor(e){super();i$1(this,"description");i$1(this,"max_lines");i$1(this,"truncation_text");i$1(this,"always_show_truncation_text");i$1(this,"more_endpoint");i$1(this,"renderer_context");if(Reflect.has(e,"description")&&(this.description=l.fromAttributed(e.description)),Reflect.has(e,"maxLines")&&(this.max_lines=parseInt(e.maxLines)),Reflect.has(e,"truncationText")&&(this.truncation_text=l.fromAttributed(e.truncationText)),this.always_show_truncation_text=!!e.alwaysShowTruncationText,e.rendererContext.commandContext?.onTap?.innertubeCommand?.showEngagementPanelEndpoint){let o=e.rendererContext.commandContext?.onTap?.innertubeCommand?.showEngagementPanelEndpoint;this.more_endpoint={show_engagement_panel_endpoint:{engagement_panel:u.parseItem(o.engagementPanel,Qt),engagement_panel_popup_type:o.engagementPanelPresentationConfigs.engagementPanelPopupPresentationConfig.popupType,identifier:{surface:o.identifier.surface,tag:o.identifier.tag}}};}this.renderer_context=new Oe(e.rendererContext);}};s(Fg,"DescriptionPreviewView"),i$1(Fg,"type","DescriptionPreviewView");var Jr=Fg;var jg=class jg extends c{constructor(e){super();i$1(this,"headline");this.headline=l.fromAttributed(e.headline);}};s(jg,"DialogHeaderView"),i$1(jg,"type","DialogHeaderView");var Xr=jg;var Gg=class Gg extends c{constructor(e){super();i$1(this,"primary_button");i$1(this,"secondary_button");i$1(this,"should_hide_divider");this.primary_button=u.parseItem(e.primaryButton,J),this.secondary_button=u.parseItem(e.secondaryButton,J),this.should_hide_divider=!!e.shouldHideDivider;}};s(Gg,"PanelFooterView"),i$1(Gg,"type","PanelFooterView");var In=Gg;var Wg=class Wg extends c{constructor(e){super();i$1(this,"panel_footer");i$1(this,"form_id");i$1(this,"container_type");this.panel_footer=u.parseItem(e.panelFooter,In),this.form_id=e.formId,this.container_type=e.containerType;}};s(Wg,"FormFooterView"),i$1(Wg,"type","FormFooterView");var Zr=Wg;var jf,I1,Hg=class Hg extends c{constructor(e){super();g(this,jf);i$1(this,"subscribe_button_content");i$1(this,"unsubscribe_button_content");i$1(this,"disable_notification_bell");i$1(this,"button_style");i$1(this,"is_signed_out");i$1(this,"background_style");i$1(this,"disable_subscribe_button");i$1(this,"on_show_subscription_options");i$1(this,"channel_id");i$1(this,"enable_subscribe_button_post_click_animation");i$1(this,"bell_accessiblity_data");this.subscribe_button_content=N(this,jf,I1).call(this,e.subscribeButtonContent),this.unsubscribe_button_content=N(this,jf,I1).call(this,e.unsubscribeButtonContent),this.disable_notification_bell=e.disableNotificationBell,this.button_style={unsubscribed_state_style:e.buttonStyle.unsubscribedStateStyle,subscribed_state_style:e.buttonStyle.subscribedStateStyle},this.is_signed_out=e.isSignedOut,this.background_style=e.backgroundStyle,this.disable_subscribe_button=e.disableSubscribeButton,this.on_show_subscription_options=new d(e.onShowSubscriptionOptions),this.channel_id=e.channelId,this.enable_subscribe_button_post_click_animation=e.enableSubscribeButtonPostClickAnimation,this.bell_accessiblity_data={off_label:e.bellAccessibilityData.offLabel,all_label:e.bellAccessibilityData.allLabel,occasional_label:e.bellAccessibilityData.occasionalLabel,disabled_label:e.bellAccessibilityData.disabledLabel};}};jf=new WeakSet,I1=s(function(e){return {button_text:e.buttonText,accessibility_text:e.accessibilityText,image_name:e.imageName,subscribe_state_subscribed:e.subscribeState.subscribed,endpoint:new d(e.onTapCommand)}},"#parseButtonContent"),s(Hg,"SubscribeButtonView"),i$1(Hg,"type","SubscribeButtonView");var Qr=Hg;var Kg=class Kg extends c{constructor(e){super();i$1(this,"title");i$1(this,"subtitle");i$1(this,"leading_accessory");i$1(this,"renderer_context");i$1(this,"trailing_buttons");this.title=l.fromAttributed(e.title),this.subtitle=l.fromAttributed(e.subtitle),this.leading_accessory=u.parseItem(e.leadingAccessory,$t),this.renderer_context=new Oe(e.rendererContext),"trailingButtons"in e&&(this.trailing_buttons=u.parseArray(e.trailingButtons.buttons,Qr));}};s(Kg,"ListItemView"),i$1(Kg,"type","ListItemView");var ea=Kg;var qg=class qg extends c{constructor(e){super();i$1(this,"items");this.items=u.parseArray(e.listItems,ea);}};s(qg,"ListView"),i$1(qg,"type","ListView");var ta=qg;var $g=class $g extends c{constructor(e){super();i$1(this,"header");i$1(this,"footer");i$1(this,"custom_content");this.header=u.parseItem(e.header,Xr),this.footer=u.parseItem(e.footer,[Zr,In]),this.custom_content=u.parseItem(e.customContent,[qr,ta]);}};s($g,"DialogView"),i$1($g,"type","DialogView");var Gf=$g;var zg=class zg extends c{constructor(e){super();i$1(this,"text");i$1(this,"corrected_query");i$1(this,"endpoint");this.text=new l(e.didYouMean).toString(),this.corrected_query=new l(e.correctedQuery),this.endpoint=new d(e.navigationEndpoint||e.correctedQueryEndpoint);}};s(zg,"DidYouMean"),i$1(zg,"type","DidYouMean");var ia=zg;var Jg=class Jg extends c{constructor(e){super();i$1(this,"title");i$1(this,"subtitle");this.title=new l(e.title),this.subtitle=new l(e.subtitle);}};s(Jg,"DismissableDialogContentSection"),i$1(Jg,"type","DismissableDialogContentSection");var na=Jg;var Xg=class Xg extends c{constructor(e){super();i$1(this,"title");i$1(this,"sections");i$1(this,"metadata");i$1(this,"display_style");this.title=e.title,this.sections=u.parseArray(e.sections,na),this.metadata=u.parseItem(e.metadata),this.display_style=e.displayStyle;}};s(Xg,"DismissableDialog"),i$1(Xg,"type","DismissableDialog");var Wf=Xg;var Zg=class Zg extends c{constructor(e){super();i$1(this,"text");i$1(this,"max_lines");this.text=l.fromAttributed(e.text),this.max_lines=parseInt(e.maxLines);}};s(Zg,"DynamicTextView"),i$1(Zg,"type","DynamicTextView");var oa=Zg;var Hf=class Hf extends c{constructor(e){super();i$1(this,"text");i$1(this,"properties");i$1(this,"child_elements");Reflect.has(e,"type")&&Reflect.has(e.type,"textType")&&(this.text=e.type.textType.text?.content),this.properties=e.properties,Reflect.has(e,"childElements")&&(this.child_elements=e.childElements.map(o=>new Hf(o)));}};s(Hf,"ChildElement"),i$1(Hf,"type","ChildElement");var sa=Hf;var Kf=class Kf extends c{constructor(e){super();i$1(this,"model");i$1(this,"child_elements");if(Reflect.has(e,"elementRenderer"))return u.parseItem(e,Kf);let o=e.newElement.type.componentType;this.model=u.parseItem(o?.model),Reflect.has(e,"newElement")&&Reflect.has(e.newElement,"childElements")&&(this.child_elements=V(e.newElement.childElements?.map(r=>new sa(r))||[]));}};s(Kf,"Element"),i$1(Kf,"type","Element");var ra=Kf;var Qg=class Qg extends c{constructor(e){super();i$1(this,"title");i$1(this,"first_option");i$1(this,"menu");this.title=new l(e.title),this.first_option=u.parseItem(e.firstOption),this.menu=u.parseItem(e.menu,B);}};s(Qg,"EmergencyOnebox"),i$1(Qg,"type","EmergencyOnebox");var qf=Qg;var ew=class ew extends c{constructor(e){super();i$1(this,"category_id");i$1(this,"title");i$1(this,"emoji_ids");i$1(this,"image_loading_lazy");i$1(this,"category_type");this.category_id=e.categoryId,this.title=new l(e.title),this.emoji_ids=e.emojiIds,this.image_loading_lazy=!!e.imageLoadingLazy,this.category_type=e.categoryType;}};s(ew,"EmojiPickerCategory"),i$1(ew,"type","EmojiPickerCategory");var $f=ew;var tw=class tw extends c{constructor(e){super();i$1(this,"category_id");i$1(this,"icon_type");i$1(this,"tooltip");this.category_id=e.categoryId,Reflect.has(e,"icon")&&(this.icon_type=e.icon?.iconType),this.tooltip=e.tooltip;}};s(tw,"EmojiPickerCategoryButton"),i$1(tw,"type","EmojiPickerCategoryButton");var zf=tw;var iw=class iw extends c{constructor(e){super();i$1(this,"category_id");i$1(this,"title");i$1(this,"upsell");i$1(this,"emoji_tooltip");i$1(this,"endpoint");i$1(this,"emoji_ids");this.category_id=e.categoryId,this.title=new l(e.title),this.upsell=new l(e.upsell),this.emoji_tooltip=e.emojiTooltip,this.endpoint=new d(e.command),this.emoji_ids=e.emojiIds;}};s(iw,"EmojiPickerUpsellCategory"),i$1(iw,"type","EmojiPickerUpsellCategory");var Jf=iw;var mM="playlist/get_add_to_playlist",Mt,nw=class nw extends c{constructor(e){super();g(this,Mt);w(this,Mt,e);}getApiPath(){return mM}buildRequest(){let e={};return e.videoIds=p(this,Mt).videoIds?p(this,Mt).videoIds:[p(this,Mt).videoId],p(this,Mt).playlistId&&(e.playlistId=p(this,Mt).playlistId),p(this,Mt).params&&(e.params=p(this,Mt).params),e.excludeWatchLater=!!p(this,Mt).excludeWatchLater,e}};Mt=new WeakMap,s(nw,"AddToPlaylistServiceEndpoint"),i$1(nw,"type","AddToPlaylistServiceEndpoint");var aa=nw;var ow=class ow extends aa{constructor(t){super(t);}};s(ow,"AddToPlaylistEndpoint"),i$1(ow,"type","AddToPlaylistEndpoint");var Xf=ow;var hM="browse",Pe,sw=class sw extends c{constructor(e){super();g(this,Pe);w(this,Pe,e);}getApiPath(){return hM}buildRequest(){let e={};return p(this,Pe).browseId&&(e.browseId=p(this,Pe).browseId),p(this,Pe).params&&(e.params=p(this,Pe).params),p(this,Pe).query&&(e.query=p(this,Pe).query),p(this,Pe).browseId==="FEsubscriptions"&&(e.subscriptionSettingsState=p(this,Pe).subscriptionSettingsState||"MY_SUBS_SETTINGS_STATE_LAYOUT_FORMAT_LIST"),p(this,Pe).browseId==="SPaccount_playback"&&(e.formData=p(this,Pe).formData||{accountSettingsFormData:{flagCaptionsDefaultOff:false,flagAutoCaptionsDefaultOn:false,flagDisableInlinePreview:false,flagAudioDescriptionDefaultOn:false}}),p(this,Pe).browseId==="FEwhat_to_watch"&&(p(this,Pe).browseRequestSupportedMetadata&&(e.browseRequestSupportedMetadata=p(this,Pe).browseRequestSupportedMetadata),p(this,Pe).inlineSettingStatus&&(e.inlineSettingStatus=p(this,Pe).inlineSettingStatus)),e}};Pe=new WeakMap,s(sw,"BrowseEndpoint"),i$1(sw,"type","BrowseEndpoint");var Zf=sw;var _M="comment/create_comment",ge,rw=class rw extends c{constructor(e){super();g(this,ge);w(this,ge,e);}getApiPath(){return _M}buildRequest(){let e={};if(p(this,ge).createCommentParams&&(e.createCommentParams=p(this,ge).createCommentParams),p(this,ge).commentText&&(e.commentText=p(this,ge).commentText),p(this,ge).attachedVideoId?e.videoAttachment={videoId:p(this,ge).attachedVideoId}:p(this,ge).pollOptions?e.pollAttachment={choices:p(this,ge).pollOptions}:p(this,ge).imageBlobId?e.imageAttachment={encryptedBlobId:p(this,ge).imageBlobId}:p(this,ge).sharedPostId&&(e.sharedPostAttachment={postId:p(this,ge).sharedPostId}),p(this,ge).accessRestrictions&&typeof p(this,ge).accessRestrictions=="number"){let o=p(this,ge).accessRestrictions===1?"RESTRICTION_TYPE_EVERYONE":"RESTRICTION_TYPE_SPONSORS_ONLY";e.accessRestrictions={restriction:o};}return p(this,ge).botguardResponse&&(e.botguardResponse=p(this,ge).botguardResponse),e}};ge=new WeakMap,s(rw,"CreateCommentEndpoint"),i$1(rw,"type","CreateCommentEndpoint");var Qf=rw;var bM="playlist/create",He,aw=class aw extends c{constructor(e){super();g(this,He);w(this,He,e);}getApiPath(){return bM}buildRequest(){let e={};return p(this,He).title&&(e.title=p(this,He).title),p(this,He).privacyStatus&&(e.privacyStatus=p(this,He).privacyStatus),p(this,He).description&&(e.description=p(this,He).description),p(this,He).videoIds&&(e.videoIds=p(this,He).videoIds),p(this,He).params&&(e.params=p(this,He).params),p(this,He).sourcePlaylistId&&(e.sourcePlaylistId=p(this,He).sourcePlaylistId),e}};He=new WeakMap,s(aw,"CreatePlaylistServiceEndpoint"),i$1(aw,"type","CreatePlaylistServiceEndpoint");var ed=aw;var yM="playlist/delete",gl,cw=class cw extends c{constructor(e){super();g(this,gl);w(this,gl,e);}getApiPath(){return yM}buildRequest(){let e={};return p(this,gl).playlistId&&(e.playlistId=p(this,gl).sourcePlaylistId),e}};gl=new WeakMap,s(cw,"DeletePlaylistEndpoint"),i$1(cw,"type","DeletePlaylistEndpoint");var td=cw;var xM="feedback",gi,uw=class uw extends c{constructor(e){super();g(this,gi);w(this,gi,e);}getApiPath(){return xM}buildRequest(){let e={};return p(this,gi).feedbackToken&&(e.feedbackTokens=[p(this,gi).feedbackToken]),p(this,gi).cpn&&(e.feedbackContext={cpn:p(this,gi).cpn}),e.isFeedbackTokenUnencrypted=!!p(this,gi).isFeedbackTokenUnencrypted,e.shouldMerge=!!p(this,gi).shouldMerge,e}};gi=new WeakMap,s(uw,"FeedbackEndpoint"),i$1(uw,"type","FeedbackEndpoint");var id=uw;var gM="account/accounts_list",me,lw=class lw extends c{constructor(e){super();g(this,me);w(this,me,e);}getApiPath(){return gM}buildRequest(){let e={};return p(this,me).requestType&&(e.requestType=p(this,me).requestType,(p(this,me).requestType==="ACCOUNTS_LIST_REQUEST_TYPE_CHANNEL_SWITCHER"||p(this,me).requestType==="ACCOUNTS_LIST_REQUEST_TYPE_IDENTITY_PROMPT")&&p(this,me).nextUrl&&(e.nextNavendpoint={urlEndpoint:{url:p(this,me).nextUrl}})),p(this,me).channelSwitcherQuery&&(e.channelSwitcherQuery=p(this,me).channelSwitcherQuery),p(this,me).triggerChannelCreation&&(e.triggerChannelCreation=p(this,me).triggerChannelCreation),p(this,me).contentOwnerConfig&&p(this,me).contentOwnerConfig.externalContentOwnerId&&(e.contentOwnerConfig=p(this,me).contentOwnerConfig),p(this,me).obfuscatedSelectedGaiaId&&(e.obfuscatedSelectedGaiaId=p(this,me).obfuscatedSelectedGaiaId),p(this,me).selectedSerializedDelegationContext&&(e.selectedSerializedDelegationContext=p(this,me).selectedSerializedDelegationContext),p(this,me).callCircumstance&&(e.callCircumstance=p(this,me).callCircumstance),e}};me=new WeakMap,s(lw,"GetAccountsListInnertubeEndpoint"),i$1(lw,"type","GetAccountsListInnertubeEndpoint");var nd=lw;var pw=class pw extends c{constructor(e){super();i$1(this,"panel_identifier");this.panel_identifier=e.panelIdentifier;}};s(pw,"HideEngagementPanelEndpoint"),i$1(pw,"type","HideEngagementPanelEndpoint");var od=pw;var wM="like/like",TM="like/dislike",vM="like/removelike",Dt,fw=class fw extends c{constructor(e){super();g(this,Dt);w(this,Dt,e);}getApiPath(){return p(this,Dt).status==="DISLIKE"?TM:p(this,Dt).status==="INDIFFERENT"?vM:wM}buildRequest(){let e={};p(this,Dt).target&&(e.target=p(this,Dt).target);let o=this.getParams();return o&&(e.params=o),e}getParams(){switch(p(this,Dt).status){case "LIKE":return p(this,Dt).likeParams;case "DISLIKE":return p(this,Dt).dislikeParams;case "INDIFFERENT":return p(this,Dt).removeLikeParams;default:return}}};Dt=new WeakMap,s(fw,"LikeEndpoint"),i$1(fw,"type","LikeEndpoint");var sd=fw;var IM="live_chat/get_item_context_menu",wl,dw=class dw extends c{constructor(e){super();g(this,wl);w(this,wl,e);}getApiPath(){return IM}buildRequest(){let e={};return p(this,wl).params&&(e.params=p(this,wl).params),e}};wl=new WeakMap,s(dw,"LiveChatItemContextMenuEndpoint"),i$1(dw,"type","LiveChatItemContextMenuEndpoint");var rd=dw;var kM="notification/modify_channel_preference",ko,mw=class mw extends c{constructor(e){super();g(this,ko);w(this,ko,e);}getApiPath(){return kM}buildRequest(){let e={};return p(this,ko).params&&(e.params=p(this,ko).params),p(this,ko).secondaryParams&&(e.secondaryParams=p(this,ko).secondaryParams),e}};ko=new WeakMap,s(mw,"ModifyChannelNotificationPreferenceEndpoint"),i$1(mw,"type","ModifyChannelNotificationPreferenceEndpoint");var ad=mw;var SM="comment/perform_comment_action",So,hw=class hw extends c{constructor(e){super();g(this,So);w(this,So,e);}getApiPath(){return SM}buildRequest(){let e={};return p(this,So).actions&&(e.actions=p(this,So).actions),p(this,So).action&&(e.actions=[p(this,So).action]),e}};So=new WeakMap,s(hw,"PerformCommentActionEndpoint"),i$1(hw,"type","PerformCommentActionEndpoint");var cd=hw;var EM="browse/edit_playlist",wi,_w=class _w extends c{constructor(e){super();g(this,wi);w(this,wi,e);}getApiPath(){return EM}buildRequest(){let e={};return p(this,wi).actions&&(e.actions=p(this,wi).actions),p(this,wi).playlistId&&(e.playlistId=p(this,wi).playlistId),p(this,wi).params&&(e.params=p(this,wi).params),e}};wi=new WeakMap,s(_w,"PlaylistEditEndpoint"),i$1(_w,"type","PlaylistEditEndpoint");var ud=_w;var CM="player",be,bw=class bw extends c{constructor(e){super();g(this,be);w(this,be,e);}getApiPath(){return CM}buildRequest(){let e={};return p(this,be).videoId&&(e.videoId=p(this,be).videoId),p(this,be).playlistId&&(e.playlistId=p(this,be).playlistId),(p(this,be).index!==void 0||p(this,be).playlistIndex!==void 0)&&(e.playlistIndex=p(this,be).index||p(this,be).playlistIndex),(p(this,be).playerParams||p(this,be).params)&&(e.params=p(this,be).playerParams||p(this,be).params),p(this,be).startTimeSeconds&&(e.startTimeSecs=p(this,be).startTimeSeconds),p(this,be).overrideMutedAtStart&&(e.overrideMutedAtStart=p(this,be).overrideMutedAtStart),e.racyCheckOk=!!p(this,be).racyCheckOk,e.contentCheckOk=!!p(this,be).contentCheckOk,e}};be=new WeakMap,s(bw,"WatchEndpoint"),i$1(bw,"type","WatchEndpoint");var ca=bw;var yw=class yw extends ca{constructor(t){super(t);}};s(yw,"PrefetchWatchCommand"),i$1(yw,"type","PrefetchWatchCommand");var ld=yw;var NM="reel/reel_item_watch",Le,xw=class xw extends c{constructor(e){super();g(this,Le);w(this,Le,e);}getApiPath(){return NM}buildRequest(){let e={};return p(this,Le).videoId&&(e.playerRequest={videoId:p(this,Le).videoId}),e.playerRequest&&(p(this,Le).playerParams&&(e.playerRequest.params=p(this,Le).playerParams),p(this,Le).racyCheckOk&&(e.playerRequest.racyCheckOk=!!p(this,Le).racyCheckOk),p(this,Le).contentCheckOk&&(e.playerRequest.contentCheckOk=!!p(this,Le).contentCheckOk)),p(this,Le).params&&(e.params=p(this,Le).params),p(this,Le).inputType&&(e.inputType=p(this,Le).inputType),e.disablePlayerResponse=!!p(this,Le).disablePlayerResponse,e}};Le=new WeakMap,s(xw,"ReelWatchEndpoint"),i$1(xw,"type","ReelWatchEndpoint");var pd=xw;var RM="search",Ot,gw=class gw extends c{constructor(e){super();g(this,Ot);w(this,Ot,e);}getApiPath(){return RM}buildRequest(){let e={};return p(this,Ot).query&&(e.query=p(this,Ot).query),p(this,Ot).params&&(e.params=p(this,Ot).params),p(this,Ot).webSearchboxStatsUrl&&(e.webSearchboxStatsUrl=p(this,Ot).webSearchboxStatsUrl),p(this,Ot).suggestStats&&(e.suggestStats=p(this,Ot).suggestStats),e}};Ot=new WeakMap,s(gw,"SearchEndpoint"),i$1(gw,"type","SearchEndpoint");var fd=gw;var PM="share/get_share_panel",Eo,ww=class ww extends c{constructor(e){super();g(this,Eo);w(this,Eo,e);}getApiPath(){return PM}buildRequest(){let e={};return p(this,Eo).serializedShareEntity&&(e.serializedSharedEntity=p(this,Eo).serializedShareEntity),p(this,Eo).clientParams&&(e.clientParams=p(this,Eo).clientParams),e}};Eo=new WeakMap,s(ww,"ShareEntityServiceEndpoint"),i$1(ww,"type","ShareEntityServiceEndpoint");var kn=ww;var Tw=class Tw extends kn{constructor(t){super(t);}};s(Tw,"ShareEndpoint"),i$1(Tw,"type","ShareEndpoint");var dd=Tw;var vw=class vw extends kn{constructor(t){super(t);}};s(vw,"ShareEntityEndpoint"),i$1(vw,"type","ShareEntityEndpoint");var md=vw;var Iw=class Iw extends c{constructor(e){super();i$1(this,"panel_identifier");i$1(this,"source_panel_identifier");this.panel_identifier=e.panelIdentifier,this.source_panel_identifier=e.sourcePanelIdentifier;}};s(Iw,"ShowEngagementPanelEndpoint"),i$1(Iw,"type","ShowEngagementPanelEndpoint");var hd=Iw;var kw$1=class kw extends c{constructor(e){super();i$1(this,"actions");i$1(this,"signal");Array.isArray(e.actions)&&(this.actions=u.parseArray(e.actions.map(o=>(delete o.clickTrackingParams,o)))),this.signal=e.signal;}};s(kw$1,"SignalServiceEndpoint"),i$1(kw$1,"type","SignalServiceEndpoint");var _d=kw$1;var AM="subscription/subscribe",st,Sw=class Sw extends c{constructor(e){super();g(this,st);w(this,st,e);}getApiPath(){return AM}buildRequest(){let e={};return p(this,st).channelIds&&(e.channelIds=p(this,st).channelIds),p(this,st).siloName&&(e.siloName=p(this,st).siloName),p(this,st).params&&(e.params=p(this,st).params),p(this,st).botguardResponse&&(e.botguardResponse=p(this,st).botguardResponse),p(this,st).feature&&(e.clientFeature=p(this,st).feature),e}};st=new WeakMap,s(Sw,"SubscribeEndpoint"),i$1(Sw,"type","SubscribeEndpoint");var bd=Sw;var MM="subscription/unsubscribe",Ti,Ew=class Ew extends c{constructor(e){super();g(this,Ti);w(this,Ti,e);}getApiPath(){return MM}buildRequest(){let e={};return p(this,Ti).channelIds&&(e.channelIds=p(this,Ti).channelIds),p(this,Ti).siloName&&(e.siloName=p(this,Ti).siloName),p(this,Ti).params&&(e.params=p(this,Ti).params),e}};Ti=new WeakMap,s(Ew,"UnsubscribeEndpoint"),i$1(Ew,"type","UnsubscribeEndpoint");var yd=Ew;var DM="next",De,Cw=class Cw extends c{constructor(e){super();g(this,De);w(this,De,e);}getApiPath(){return DM}buildRequest(){let e={};return p(this,De).videoId&&(e.videoId=p(this,De).videoId),p(this,De).playlistId&&(e.playlistId=p(this,De).playlistId),(p(this,De).index!==void 0||p(this,De).playlistIndex!==void 0)&&(e.playlistIndex=p(this,De).index||p(this,De).playlistIndex),(p(this,De).playerParams||p(this,De).params)&&(e.params=p(this,De).playerParams||p(this,De).params),e.racyCheckOk=!!p(this,De).racyCheckOk,e.contentCheckOk=!!p(this,De).contentCheckOk,e}};De=new WeakMap,s(Cw,"WatchNextEndpoint"),i$1(Cw,"type","WatchNextEndpoint");var xd=Cw;var Nw=class Nw extends c{constructor(e){super();i$1(this,"elements");i$1(this,"start_ms");this.elements=u.parseArray(e.elements),this.start_ms=e.startMs;}};s(Nw,"Endscreen"),i$1(Nw,"type","Endscreen");var ua=Nw;var Rw=class Rw extends c{constructor(e){super();i$1(this,"style");i$1(this,"title");i$1(this,"endpoint");i$1(this,"image");i$1(this,"icon");i$1(this,"metadata");i$1(this,"call_to_action");i$1(this,"hovercard_button");i$1(this,"is_subscribe");i$1(this,"playlist_length");i$1(this,"thumbnail_overlays");i$1(this,"left");i$1(this,"top");i$1(this,"width");i$1(this,"aspect_ratio");i$1(this,"start_ms");i$1(this,"end_ms");i$1(this,"id");this.style=e.style,this.title=new l(e.title),this.endpoint=new d(e.endpoint),Reflect.has(e,"image")&&(this.image=y.fromResponse(e.image)),Reflect.has(e,"icon")&&(this.icon=y.fromResponse(e.icon)),Reflect.has(e,"metadata")&&(this.metadata=new l(e.metadata)),Reflect.has(e,"callToAction")&&(this.call_to_action=new l(e.callToAction)),Reflect.has(e,"hovercardButton")&&(this.hovercard_button=u.parseItem(e.hovercardButton)),Reflect.has(e,"isSubscribe")&&(this.is_subscribe=!!e.isSubscribe),Reflect.has(e,"playlistLength")&&(this.playlist_length=new l(e.playlistLength)),Reflect.has(e,"thumbnailOverlays")&&(this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays)),this.left=parseFloat(e.left),this.width=parseFloat(e.width),this.top=parseFloat(e.top),this.aspect_ratio=parseFloat(e.aspectRatio),this.start_ms=parseFloat(e.startMs),this.end_ms=parseFloat(e.endMs),this.id=e.id;}};s(Rw,"EndscreenElement"),i$1(Rw,"type","EndscreenElement");var gd=Rw;var Pw=class Pw extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"author");i$1(this,"endpoint");i$1(this,"thumbnails");i$1(this,"video_count");this.id=e.playlistId,this.title=new l(e.title),this.author=new l(e.longBylineText),this.endpoint=new d(e.navigationEndpoint),this.thumbnails=y.fromResponse(e.thumbnail),this.video_count=new l(e.videoCountText);}};s(Pw,"EndScreenPlaylist"),i$1(Pw,"type","EndScreenPlaylist");var la=Pw;var Aw=class Aw extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"thumbnails");i$1(this,"thumbnail_overlays");i$1(this,"author");i$1(this,"endpoint");i$1(this,"short_view_count");i$1(this,"badges");i$1(this,"duration");this.id=e.videoId,this.title=new l(e.title),this.thumbnails=y.fromResponse(e.thumbnail),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays),this.author=new D(e.shortBylineText,e.ownerBadges),this.endpoint=new d(e.navigationEndpoint),this.short_view_count=new l(e.shortViewCountText),this.badges=u.parseArray(e.badges),this.duration={text:new l(e.lengthText).toString(),seconds:e.lengthInSeconds};}};s(Aw,"EndScreenVideo"),i$1(Aw,"type","EndScreenVideo");var pa=Aw;var Mw=class Mw extends c{constructor(e){super();i$1(this,"title");i$1(this,"endpoint");i$1(this,"selected");i$1(this,"content");this.title=e.title,this.endpoint=new d(e.endpoint),this.selected=e.selected,this.content=u.parseItem(e.content);}};s(Mw,"ExpandableTab"),i$1(Mw,"type","ExpandableTab");var vi=Mw;var Dw=class Dw extends c{constructor(e){super();i$1(this,"items");this.items=u.parseArray(e.items);}get contents(){return this.items}};s(Dw,"ExpandedShelfContents"),i$1(Dw,"type","ExpandedShelfContents");var wd=Dw;var Ow=class Ow extends c{constructor(e){super();i$1(this,"dialog_message");i$1(this,"confirm_label");this.dialog_message=new l(e.dialogMessage),this.confirm_label=new l(e.confirmLabel);}};s(Ow,"FancyDismissibleDialog"),i$1(Ow,"type","FancyDismissibleDialog");var Td=Ow;var Bw=class Bw extends c{constructor(e){super();i$1(this,"contents");this.contents=u.parseArray(e.contents,ae);}};s(Bw,"FeedFilterChipBar"),i$1(Bw,"type","FeedFilterChipBar");var rt=Bw;var Lw=class Lw extends c{constructor(e){super();i$1(this,"title");i$1(this,"subtitle");i$1(this,"endpoint");i$1(this,"apply_modernized_style");i$1(this,"trim_style");i$1(this,"background_style");this.title=new l(e.title),this.subtitle=new l(e.subtitle),this.endpoint=new d(e.impressionEndpoint),this.apply_modernized_style=e.applyModernizedStyle,this.trim_style=e.trimStyle,this.background_style=e.backgroundStyle;}};s(Lw,"FeedNudge"),i$1(Lw,"type","FeedNudge");var vd=Lw;var Uw=class Uw extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(Uw,"FeedTabbedHeader"),i$1(Uw,"type","FeedTabbedHeader");var fa=Uw;var Yw=class Yw extends c{constructor(e){super();i$1(this,"title");i$1(this,"box_art");i$1(this,"box_art_overlay_text");i$1(this,"endpoint");i$1(this,"is_official_box_art");this.title=new l(e.title),this.box_art=y.fromResponse(e.boxArt),this.box_art_overlay_text=new l(e.boxArtOverlayText),this.endpoint=new d(e.endpoint),this.is_official_box_art=!!e.isOfficialBoxArt;}};s(Yw,"GameDetails"),i$1(Yw,"type","GameDetails");var Id=Yw;var Vw=class Vw extends c{constructor(e){super();i$1(this,"items");i$1(this,"is_collapsible");i$1(this,"visible_row_count");i$1(this,"target_id");i$1(this,"continuation");i$1(this,"header");this.items=u.parseArray(e.items),Reflect.has(e,"header")&&(this.header=u.parseItem(e.header)),Reflect.has(e,"isCollapsible")&&(this.is_collapsible=e.isCollapsible),Reflect.has(e,"visibleRowCount")&&(this.visible_row_count=e.visibleRowCount),Reflect.has(e,"targetId")&&(this.target_id=e.targetId),this.continuation=e.continuations?.[0]?.nextContinuationData?.continuation||null;}get contents(){return this.items}};s(Vw,"Grid"),i$1(Vw,"type","Grid");var Ii=Vw;var Fw=class Fw extends c{constructor(e){super();i$1(this,"id");i$1(this,"author");i$1(this,"subscribers");i$1(this,"video_count");i$1(this,"endpoint");i$1(this,"subscribe_button");this.id=e.channelId,this.author=new D({...e.title,navigationEndpoint:e.navigationEndpoint},e.ownerBadges,e.thumbnail),this.subscribers=new l(e.subscriberCountText),this.video_count=new l(e.videoCountText),this.endpoint=new d(e.navigationEndpoint),this.subscribe_button=u.parseItem(e.subscribeButton);}};s(Fw,"GridChannel"),i$1(Fw,"type","GridChannel");var da=Fw;var jw=class jw extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(jw,"GridHeader"),i$1(jw,"type","GridHeader");var kd=jw;var Gw=class Gw extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"author");i$1(this,"thumbnails");i$1(this,"video_count");i$1(this,"video_count_short");i$1(this,"endpoint");i$1(this,"secondary_endpoint");i$1(this,"thumbnail_overlays");this.id=e.playlistId,this.title=new l(e.title),this.author=e.shortBylineText?.simpleText?new l(e.shortBylineText):e.longBylineText?.simpleText?new l(e.longBylineText):null,this.thumbnails=y.fromResponse(e.thumbnail),this.video_count=new l(e.videoCountText),this.video_count_short=new l(e.videoCountShortText),this.endpoint=new d(e.navigationEndpoint),this.secondary_endpoint=new d(e.secondaryNavigationEndpoint),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays);}};s(Gw,"GridMix"),i$1(Gw,"type","GridMix");var Sd=Gw;var Ww=class Ww extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"thumbnails");i$1(this,"duration");i$1(this,"endpoint");i$1(this,"badges");i$1(this,"metadata");i$1(this,"thumbnail_overlays");let o=e.thumbnailOverlays.find(r=>r.hasOwnProperty("thumbnailOverlayTimeStatusRenderer"))?.thumbnailOverlayTimeStatusRenderer;this.id=e.videoId,this.title=new l(e.title),this.thumbnails=y.fromResponse(e.thumbnail),this.duration=e.lengthText?new l(e.lengthText):o?.text?new l(o.text):null,this.endpoint=new d(e.navigationEndpoint),this.badges=u.parseArray(e.badges,Be),this.metadata=new l(e.metadata),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays);}};s(Ww,"GridMovie"),i$1(Ww,"type","GridMovie");var Ed=Ww;var Hw=class Hw extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"author");i$1(this,"badges");i$1(this,"endpoint");i$1(this,"view_playlist");i$1(this,"thumbnails");i$1(this,"thumbnail_renderer");i$1(this,"sidebar_thumbnails");i$1(this,"video_count");i$1(this,"video_count_short");this.id=e.playlistId,this.title=new l(e.title),Reflect.has(e,"shortBylineText")&&(this.author=new D(e.shortBylineText,e.ownerBadges)),this.badges=u.parseArray(e.ownerBadges),this.endpoint=new d(e.navigationEndpoint),this.view_playlist=new l(e.viewPlaylistText),this.thumbnails=y.fromResponse(e.thumbnail),this.thumbnail_renderer=u.parseItem(e.thumbnailRenderer),this.sidebar_thumbnails=[].concat(...e.sidebarThumbnails?.map(o=>y.fromResponse(o))||[])||null,this.video_count=new l(e.thumbnailText),this.video_count_short=new l(e.videoCountShortText);}};s(Hw,"GridPlaylist"),i$1(Hw,"type","GridPlaylist");var ma=Hw;var Kw=class Kw extends c{constructor(e){super();i$1(this,"contents");i$1(this,"header");i$1(this,"content_aspect_ratio");i$1(this,"enable_vertical_expansion");i$1(this,"show_more_button");i$1(this,"show_less_button");i$1(this,"min_collapsed_item_count");this.contents=u.parseArray(e.contents),this.header=u.parseItem(e.header),this.content_aspect_ratio=e.contentAspectRatio,this.enable_vertical_expansion=e.enableVerticalExpansion,this.show_more_button=u.parseItem(e.showMoreButton,J),this.show_less_button=u.parseItem(e.showLessButton,J),this.min_collapsed_item_count=e.minCollapsedItemCount;}};s(Kw,"GridShelfView"),i$1(Kw,"type","GridShelfView");var Cd=Kw;var qw=class qw extends c{constructor(e){super();i$1(this,"thumbnail");this.thumbnail=y.fromResponse(e.thumbnail);}};s(qw,"ShowCustomThumbnail"),i$1(qw,"type","ShowCustomThumbnail");var ha=qw;var $w=class $w extends c{constructor(e){super();i$1(this,"text");i$1(this,"icon_type");Reflect.has(e,"text")&&(this.text=new l(e.text)),Reflect.has(e,"icon")&&Reflect.has(e.icon,"iconType")&&(this.icon_type=e.icon.iconType);}};s($w,"ThumbnailOverlayBottomPanel"),i$1($w,"type","ThumbnailOverlayBottomPanel");var _a=$w;var zw=class zw extends c{constructor(e){super();i$1(this,"title");i$1(this,"thumbnail_renderer");i$1(this,"endpoint");i$1(this,"long_byline_text");i$1(this,"thumbnail_overlays");i$1(this,"author");this.title=new l(e.title),this.thumbnail_renderer=ee(e.thumbnailRenderer,ha),this.endpoint=new d(e.navigationEndpoint),this.long_byline_text=new l(e.longBylineText),this.thumbnail_overlays=Ke(e.thumbnailOverlays,_a),this.author=new D(e.shortBylineText,void 0);}};s(zw,"GridShow"),i$1(zw,"type","GridShow");var Nd=zw;var Jw=class Jw extends c{constructor(e){super();i$1(this,"video_id");i$1(this,"title");i$1(this,"thumbnails");i$1(this,"thumbnail_overlays");i$1(this,"rich_thumbnail");i$1(this,"published");i$1(this,"duration");i$1(this,"author");i$1(this,"views");i$1(this,"short_view_count");i$1(this,"endpoint");i$1(this,"menu");i$1(this,"buttons");i$1(this,"upcoming");i$1(this,"upcoming_text");i$1(this,"is_reminder_set");let o=e.thumbnailOverlays.find(r=>r.hasOwnProperty("thumbnailOverlayTimeStatusRenderer"))?.thumbnailOverlayTimeStatusRenderer;this.video_id=e.videoId,this.title=new l(e.title),this.thumbnails=y.fromResponse(e.thumbnail),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays),this.rich_thumbnail=u.parseItem(e.richThumbnail),this.published=new l(e.publishedTimeText),this.duration=e.lengthText?new l(e.lengthText):o?.text?new l(o.text):null,this.author=e.shortBylineText&&new D(e.shortBylineText,e.ownerBadges),this.views=new l(e.viewCountText),this.short_view_count=new l(e.shortViewCountText),this.endpoint=new d(e.navigationEndpoint),this.menu=u.parseItem(e.menu,B),Reflect.has(e,"buttons")&&(this.buttons=u.parseArray(e.buttons)),Reflect.has(e,"upcomingEventData")&&(this.upcoming=new Date(+`${e.upcomingEventData.startTime}000`),this.upcoming_text=new l(e.upcomingEventData.upcomingEventText),this.is_reminder_set=!!e.upcomingEventData?.isReminderSet);}get id(){return this.video_id}get is_upcoming(){return !!(this.upcoming&&this.upcoming>new Date)}};s(Jw,"GridVideo"),i$1(Jw,"type","GridVideo");var ba=Jw;var Xw=class Xw extends c{constructor(e){super();i$1(this,"title");i$1(this,"endpoint");i$1(this,"icon_type");i$1(this,"thumbnails");i$1(this,"badges");i$1(this,"is_primary");this.title=new l(e.formattedTitle),this.endpoint=new d(e.navigationEndpoint||e.serviceEndpoint),Reflect.has(e,"icon")&&Reflect.has(e.icon,"iconType")&&(this.icon_type=e.icon.iconType),Reflect.has(e,"thumbnail")&&(this.thumbnails=y.fromResponse(e.thumbnail)),Reflect.has(e,"badges")&&(this.badges=e.badges),this.is_primary=!!e.isPrimary;}};s(Xw,"GuideEntry"),i$1(Xw,"type","GuideEntry");var ki=Xw;var Zw=class Zw extends c{constructor(e){super();i$1(this,"expander_item");i$1(this,"collapser_item");i$1(this,"expandable_items");this.expander_item=ee(e.expanderItem,ki),this.collapser_item=ee(e.collapserItem,ki),this.expandable_items=Ke(e.expandableItems);}};s(Zw,"GuideCollapsibleEntry"),i$1(Zw,"type","GuideCollapsibleEntry");var Rd=Zw;var Qw=class Qw extends c{constructor(e){super();i$1(this,"header_entry");i$1(this,"expander_icon");i$1(this,"collapser_icon");i$1(this,"section_items");this.header_entry=ee(e.headerEntry),this.expander_icon=e.expanderIcon.iconType,this.collapser_icon=e.collapserIcon.iconType,this.section_items=Ke(e.sectionItems);}};s(Qw,"GuideCollapsibleSectionEntry"),i$1(Qw,"type","GuideCollapsibleSectionEntry");var Pd=Qw;var eT=class eT extends ki{constructor(e){super(e.entryRenderer.guideEntryRenderer);i$1(this,"always_show");this.always_show=!!e.alwaysShow;}};s(eT,"GuideDownloadsEntry"),i$1(eT,"type","GuideDownloadsEntry");var Ad=eT;var tT=class tT extends c{constructor(e){super();i$1(this,"title");i$1(this,"items");Reflect.has(e,"formattedTitle")&&(this.title=new l(e.formattedTitle)),this.items=Ke(e.items);}};s(tT,"GuideSection"),i$1(tT,"type","GuideSection");var Sn=tT;var iT=class iT extends Sn{};s(iT,"GuideSubscriptionsSection"),i$1(iT,"type","GuideSubscriptionsSection");var ya=iT;var nT=class nT extends c{constructor(e){super();i$1(this,"hashtag");i$1(this,"hashtag_info");this.hashtag=new l(e.hashtag),this.hashtag_info=new l(e.hashtagInfoText);}};s(nT,"HashtagHeader"),i$1(nT,"type","HashtagHeader");var xa=nT;var oT=class oT extends c{constructor(e){super();i$1(this,"hashtag");i$1(this,"hashtag_info_text");i$1(this,"hashtag_thumbnail");i$1(this,"endpoint");i$1(this,"hashtag_background_color");i$1(this,"hashtag_video_count");i$1(this,"hashtag_channel_count");this.hashtag=new l(e.hashtag),this.hashtag_info_text=new l(e.hashtagInfoText),this.hashtag_thumbnail=y.fromResponse(e.hashtagThumbnail),this.endpoint=new d(e.onTapCommand),this.hashtag_background_color=e.hashtagBackgroundColor,this.hashtag_video_count=new l(e.hashtagVideoCount),this.hashtag_channel_count=new l(e.hashtagChannelCount);}};s(oT,"HashtagTile"),i$1(oT,"type","HashtagTile");var Md=oT;var sT=class sT extends c{constructor(e){super();i$1(this,"thumbnails");i$1(this,"on_tap_endpoint");this.thumbnails=y.fromResponse(e.thumbnail),this.on_tap_endpoint=new d(e.onTap);}};s(sT,"HeroPlaylistThumbnail"),i$1(sT,"type","HeroPlaylistThumbnail");var Dd=sT;var rT=class rT extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"background_image");i$1(this,"strapline");i$1(this,"title");i$1(this,"description");i$1(this,"text_on_tap_endpoint");i$1(this,"cta");e.thumbnail&&(this.thumbnail={image:y.fromResponse(e.thumbnail.image),endpoint:new d(e.thumbnail.onTap),on_long_press_endpoint:new d(e.thumbnail.onLongPress),content_mode:e.thumbnail.contentMode,crop_options:e.thumbnail.cropOptions}),this.background_image={image:y.fromResponse(e.backgroundImage.image),gradient_image:y.fromResponse(e.backgroundImage.gradientImage)},this.strapline=e.strapline,this.title=e.title,this.description=e.description,this.cta={icon_name:e.cta.iconName,title:e.cta.title,endpoint:new d(e.cta.onTap),accessibility_text:e.cta.accessibilityText,state:e.cta.state},this.text_on_tap_endpoint=new d(e.textOnTap);}};s(rT,"Panel"),i$1(rT,"type","Panel");var k1=rT,aT=class aT extends c{constructor(e){super();i$1(this,"panels");this.panels=V(e.highlightsCarousel.panels.map(o=>new k1(o)));}};s(aT,"HighlightsCarousel"),i$1(aT,"type","HighlightsCarousel");var Co=aT;var cT=class cT extends c{constructor(e){super();i$1(this,"suggestion");i$1(this,"endpoint");i$1(this,"icon_type");i$1(this,"service_endpoint");this.suggestion=new l(e.suggestion),this.endpoint=new d(e.navigationEndpoint),Reflect.has(e,"icon")&&(this.icon_type=e.icon.iconType),Reflect.has(e,"serviceEndpoint")&&(this.service_endpoint=new d(e.serviceEndpoint));}};s(cT,"SearchSuggestion"),i$1(cT,"type","SearchSuggestion");var ga=cT;var uT=class uT extends ga{constructor(t){super(t);}};s(uT,"HistorySuggestion"),i$1(uT,"type","HistorySuggestion");var Od=uT;var lT=class lT extends c{constructor(e){super();i$1(this,"items");i$1(this,"previous_button");i$1(this,"next_button");this.items=u.parseArray(e.items),this.previous_button=u.parseItem(e.previousButton,v),this.next_button=u.parseItem(e.nextButton,v);}get contents(){return this.items}};s(lT,"HorizontalMovieList"),i$1(lT,"type","HorizontalMovieList");var Bd=lT;var pT=class pT extends c{constructor(e){super();i$1(this,"icon_type");i$1(this,"tooltip");i$1(this,"endpoint");this.icon_type=e.icon?.iconType,Reflect.has(e,"tooltip")&&(this.tooltip=new l(e.tooltip).toString()),this.endpoint=new d(e.navigationEndpoint);}};s(pT,"IconLink"),i$1(pT,"type","IconLink");var wa=pT;var fT=class fT extends c{constructor(e){super();i$1(this,"image");i$1(this,"style");this.image=y.fromResponse(e.image),this.style=e.style;}};s(fT,"ImageBannerView"),i$1(fT,"type","ImageBannerView");var Ta=fT;var dT=class dT extends c{constructor(e){super();i$1(this,"including_results_for");i$1(this,"corrected_query");i$1(this,"corrected_query_endpoint");i$1(this,"search_only_for");i$1(this,"original_query");i$1(this,"original_query_endpoint");this.including_results_for=new l(e.includingResultsFor),this.corrected_query=new l(e.correctedQuery),this.corrected_query_endpoint=new d(e.correctedQueryEndpoint),this.search_only_for=Reflect.has(e,"searchOnlyFor")?new l(e.searchOnlyFor):void 0,this.original_query=Reflect.has(e,"originalQuery")?new l(e.originalQuery):void 0,this.original_query_endpoint=Reflect.has(e,"originalQueryEndpoint")?new d(e.originalQueryEndpoint):void 0;}};s(dT,"IncludingResultsFor"),i$1(dT,"type","IncludingResultsFor");var Ld=dT;var mT=class mT extends c{constructor(e){super();i$1(this,"title");i$1(this,"source");i$1(this,"paragraphs");i$1(this,"attributed_paragraphs");i$1(this,"thumbnail");i$1(this,"source_endpoint");i$1(this,"truncate_paragraphs");i$1(this,"background");i$1(this,"inline_link_icon_type");this.title=new l(e.title),this.source=new l(e.source),Reflect.has(e,"paragraphs")&&(this.paragraphs=e.paragraphs.map(o=>new l(o))),Reflect.has(e,"attributedParagraphs")&&(this.attributed_paragraphs=e.attributedParagraphs.map(o=>l.fromAttributed(o))),this.thumbnail=y.fromResponse(e.thumbnail),this.source_endpoint=new d(e.sourceEndpoint),this.truncate_paragraphs=!!e.truncateParagraphs,this.background=e.background,Reflect.has(e,"inlineLinkIcon")&&Reflect.has(e.inlineLinkIcon,"iconType")&&(this.inline_link_icon_type=e.inlineLinkIcon.iconType);}};s(mT,"InfoPanelContent"),i$1(mT,"type","InfoPanelContent");var va=mT;var hT=class hT extends c{constructor(e){super();i$1(this,"title");i$1(this,"menu");i$1(this,"content");i$1(this,"header_endpoint");i$1(this,"background");i$1(this,"title_style");i$1(this,"icon_type");this.title=new l(e.title),this.menu=u.parseItem(e.menu,B),this.content=u.parseItem(e.content,va),e.headerEndpoint&&(this.header_endpoint=new d(e.headerEndpoint)),this.background=e.background,this.title_style=e.titleStyle,Reflect.has(e,"icon")&&(this.icon_type=e.icon?.iconType);}};s(hT,"InfoPanelContainer"),i$1(hT,"type","InfoPanelContainer");var Ia=hT;var _T=class _T extends c{constructor(e){super();i$1(this,"header_type");i$1(this,"title");i$1(this,"description");i$1(this,"metadata");i$1(this,"badges");i$1(this,"box_art");i$1(this,"banner");i$1(this,"buttons");i$1(this,"auto_generated");this.header_type=e.type,this.title=new l(e.title),this.description=new l(e.description),this.metadata=new l(e.metadata),this.badges=u.parseArray(e.badges,Be),this.box_art=y.fromResponse(e.boxArt),this.banner=y.fromResponse(e.banner),this.buttons=u.parseArray(e.buttons,[de,v]),this.auto_generated=new l(e.autoGenerated);}};s(_T,"InteractiveTabbedHeader"),i$1(_T,"type","InteractiveTabbedHeader");var ka=_T;var bT=class bT extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(bT,"ItemSectionHeader"),i$1(bT,"type","ItemSectionHeader");var En=bT;var yT=class yT extends c{constructor(e){super();i$1(this,"title");i$1(this,"selected");i$1(this,"endpoint");this.title=new l(e.title),this.selected=!!e.selected,this.endpoint=new d(e.endpoint);}};s(yT,"ItemSectionTab"),i$1(yT,"type","Tab");var Sa=yT;var xT=class xT extends c{constructor(e){super();i$1(this,"title");i$1(this,"tabs");i$1(this,"end_items");this.title=new l(e.title),this.tabs=u.parseArray(e.tabs,Sa),Reflect.has(e,"endItems")&&(this.end_items=u.parseArray(e.endItems));}};s(xT,"ItemSectionTabbedHeader"),i$1(xT,"type","ItemSectionTabbedHeader");var Cn=xT;var gT=class gT extends c{constructor(e){super();i$1(this,"filter_menu");this.filter_menu=u.parseItem(e.filterMenu,Tl.SortFilterSubMenu);}};s(gT,"SortFilterHeader"),i$1(gT,"type","SortFilterHeader");var Ea=gT;var wT=class wT extends c{constructor(e){super();i$1(this,"header");i$1(this,"contents");i$1(this,"target_id");i$1(this,"continuation");this.header=u.parseItem(e.header,[ti,En,Cn,Ea,rt]),this.contents=u.parseArray(e.contents),(e.targetId||e.sectionIdentifier)&&(this.target_id=e.targetId||e.sectionIdentifier),e.continuations&&(this.continuation=e.continuations?.at(0)?.nextContinuationData?.continuation);}};s(wT,"ItemSection"),i$1(wT,"type","ItemSection");var ce=wT;var TT=class TT extends c{constructor(e){super();i$1(this,"header");i$1(this,"initial_display_state");i$1(this,"continuation");i$1(this,"client_messages");i$1(this,"is_replay");this.header=u.parseItem(e.header),this.initial_display_state=e.initialDisplayState,this.continuation=e.continuations[0]?.reloadContinuationData?.continuation,this.client_messages={reconnect_message:new l(e.clientMessages.reconnectMessage),unable_to_reconnect_message:new l(e.clientMessages.unableToReconnectMessage),fatal_error:new l(e.clientMessages.fatalError),reconnected_message:new l(e.clientMessages.reconnectedMessage),generic_error:new l(e.clientMessages.genericError)},this.is_replay=!!e.isReplay;}};s(TT,"LiveChat"),i$1(TT,"type","LiveChat");var Ca=TT;var vT=class vT extends c{constructor(e){super();i$1(this,"text");i$1(this,"icon_type");i$1(this,"context_menu_button");this.text=new l(e.text),Reflect.has(e,"icon")&&Reflect.has(e.icon,"iconType")&&(this.icon_type=e.icon.iconType),this.context_menu_button=u.parseItem(e.contextMenuButton,v);}};s(vT,"LiveChatBannerHeader"),i$1(vT,"type","LiveChatBannerHeader");var Na=vT;var IT=class IT extends c{constructor(e){super();i$1(this,"header");i$1(this,"contents");i$1(this,"action_id");i$1(this,"viewer_is_creator");i$1(this,"target_id");i$1(this,"is_stackable");i$1(this,"background_type");i$1(this,"banner_type");i$1(this,"banner_properties_is_ephemeral");i$1(this,"banner_properties_auto_collapse_delay_seconds");this.header=u.parseItem(e.header,Na),this.contents=u.parseItem(e.contents),this.action_id=e.actionId,Reflect.has(e,"viewerIsCreator")&&(this.viewer_is_creator=e.viewerIsCreator),this.target_id=e.targetId,this.is_stackable=e.isStackable,Reflect.has(e,"backgroundType")&&(this.background_type=e.backgroundType),this.banner_type=e.bannerType,Reflect.has(e,"bannerProperties")&&Reflect.has(e.bannerProperties,"isEphemeral")&&(this.banner_properties_is_ephemeral=!!e.bannerProperties.isEphemeral),Reflect.has(e,"bannerProperties")&&Reflect.has(e.bannerProperties,"autoCollapseDelay")&&Reflect.has(e.bannerProperties.autoCollapseDelay,"seconds")&&(this.banner_properties_auto_collapse_delay_seconds=e.bannerProperties.autoCollapseDelay.seconds);}};s(IT,"LiveChatBanner"),i$1(IT,"type","LiveChatBanner");var Ra=IT;var kT=class kT extends c{constructor(e){super();i$1(this,"banner");this.banner=u.parseItem(e.bannerRenderer,Ra);}};s(kT,"AddBannerToLiveChatCommand"),i$1(kT,"type","AddBannerToLiveChatCommand");var Ud=kT;var ST=class ST extends c{constructor(e){super();i$1(this,"item");i$1(this,"client_id");this.item=u.parseItem(e.item),Reflect.has(e,"clientId")&&(this.client_id=e.clientId);}};s(ST,"AddChatItemAction"),i$1(ST,"type","AddChatItemAction");var Pa=ST;var ET=class ET extends c{constructor(e){super();i$1(this,"item");i$1(this,"duration_sec");this.item=u.parseItem(e.item),this.duration_sec=e.durationSec;}};s(ET,"AddLiveChatTickerItemAction"),i$1(ET,"type","AddLiveChatTickerItemAction");var Yd=ET;var CT=class CT extends c{constructor(e){super();i$1(this,"client_assigned_id");this.client_assigned_id=e.clientAssignedId;}};s(CT,"DimChatItemAction"),i$1(CT,"type","DimChatItemAction");var Vd=CT;var NT=class NT extends c{constructor(e){super();i$1(this,"text");i$1(this,"image_name");i$1(this,"image_color");this.text=l.fromAttributed(e.text),this.image_name=e.image.sources[0].clientResource.imageName,this.image_color=e.image.sources[0].clientResource.imageColor;}};s(NT,"BumperUserEduContentView"),i$1(NT,"type","BumperUserEduContentView");var Aa=NT;var RT=class RT extends c{constructor(e){super();i$1(this,"creator_thumbnail");i$1(this,"hearted_icon_name");i$1(this,"unhearted_icon_name");i$1(this,"unhearted_icon_processor");i$1(this,"hearted_hover_text");i$1(this,"hearted_accessibility_label");i$1(this,"unhearted_accessibility_label");i$1(this,"engagement_state_key");this.creator_thumbnail=y.fromResponse(e.creatorThumbnail),this.hearted_icon_name=e.heartedIcon.sources[0].clientResource.imageName,this.unhearted_icon_name=e.unheartedIcon.sources[0].clientResource.imageName,this.unhearted_icon_processor={border_image_processor:{image_tint:{color:e.unheartedIcon.processor.borderImageProcessor.imageTint.color}}},this.hearted_hover_text=e.heartedHoverText,this.hearted_accessibility_label=e.heartedAccessibilityLabel,this.unhearted_accessibility_label=e.unheartedAccessibilityLabel,this.engagement_state_key=e.engagementStateKey;}};s(RT,"CreatorHeartView"),i$1(RT,"type","CreatorHeartView");var Ma=RT;var PT=class PT extends c{constructor(e){super();i$1(this,"menu_endpoint");i$1(this,"moderation_buttons");i$1(this,"auto_moderated_item");i$1(this,"header_text");i$1(this,"timestamp");i$1(this,"id");this.menu_endpoint=new d(e.contextMenuEndpoint),this.moderation_buttons=u.parseArray(e.moderationButtons,v),this.auto_moderated_item=u.parseItem(e.autoModeratedItem),this.header_text=new l(e.headerText),this.timestamp=Math.floor(parseInt(e.timestampUsec)/1e3),this.id=e.id;}};s(PT,"LiveChatAutoModMessage"),i$1(PT,"type","LiveChatAutoModMessage");var Fd=PT;var AT=class AT extends c{constructor(e){super();i$1(this,"id");i$1(this,"chat_summary");i$1(this,"icon_type");i$1(this,"like_feedback_button");i$1(this,"dislike_feedback_button");this.id=e.liveChatSummaryId,this.chat_summary=new l(e.chatSummary),this.icon_type=e.icon.iconType,this.like_feedback_button=u.parseItem(e.likeFeedbackButton,je),this.dislike_feedback_button=u.parseItem(e.dislikeFeedbackButton,je);}};s(AT,"LiveChatBannerChatSummary"),i$1(AT,"type","LiveChatBannerChatSummary");var jd=AT;var MT=class MT extends c{constructor(e){super();i$1(this,"poll_question");i$1(this,"author_photo");i$1(this,"choices");i$1(this,"collapsed_state_entity_key");i$1(this,"live_chat_poll_state_entity_key");i$1(this,"context_menu_button");this.poll_question=new l(e.pollQuestion),this.author_photo=y.fromResponse(e.authorPhoto),this.choices=e.pollChoices.map(o=>({option_id:o.pollOptionId,text:new l(o.text).toString()})),this.collapsed_state_entity_key=e.collapsedStateEntityKey,this.live_chat_poll_state_entity_key=e.liveChatPollStateEntityKey,this.context_menu_button=u.parseItem(e.contextMenuButton,v);}};s(MT,"LiveChatBannerPoll"),i$1(MT,"type","LiveChatBannerPoll");var Gd=MT;var DT=class DT extends c{constructor(e){super();i$1(this,"banner_message");i$1(this,"author_photo");i$1(this,"inline_action_button");i$1(this,"context_menu_button");this.banner_message=new l(e.bannerMessage),this.author_photo=y.fromResponse(e.authorPhoto),this.inline_action_button=u.parseItem(e.inlineActionButton,v),this.context_menu_button=u.parseItem(e.contextMenuButton,v);}};s(DT,"LiveChatBannerRedirect"),i$1(DT,"type","LiveChatBannerRedirect");var Wd=DT;var OT=class OT extends c{constructor(e){super();i$1(this,"content");this.content=u.parseItem(e.content,Aa);}};s(OT,"LiveChatItemBumperView"),i$1(OT,"type","LiveChatItemBumperView");var Da=OT;var BT=class BT extends c{constructor(e){super();i$1(this,"id");i$1(this,"timestamp");i$1(this,"timestamp_usec");i$1(this,"timestamp_text");i$1(this,"header_primary_text");i$1(this,"header_subtext");i$1(this,"message");i$1(this,"author");i$1(this,"menu_endpoint");i$1(this,"context_menu_accessibility_label");this.id=e.id,this.timestamp=Math.floor(parseInt(e.timestampUsec)/1e3),this.timestamp_usec=e.timestampUsec,Reflect.has(e,"timestampText")&&(this.timestamp_text=new l(e.timestampText)),Reflect.has(e,"headerPrimaryText")&&(this.header_primary_text=new l(e.headerPrimaryText)),this.header_subtext=new l(e.headerSubtext),Reflect.has(e,"message")&&(this.message=new l(e.message)),this.author=new D(e.authorName,e.authorBadges,e.authorPhoto,e.authorExternalChannelId),this.menu_endpoint=new d(e.contextMenuEndpoint),this.context_menu_accessibility_label=e.contextMenuAccessibility.accessibilityData.label;}};s(BT,"LiveChatMembershipItem"),i$1(BT,"type","LiveChatMembershipItem");var Hd=BT;var LT=class LT extends c{constructor(e){super();i$1(this,"id");i$1(this,"icon_type");i$1(this,"text");i$1(this,"subtext");i$1(this,"timestamp");i$1(this,"timestamp_usec");i$1(this,"timestamp_text");this.id=e.id,this.icon_type=e.icon.iconType,this.text=new l(e.text),this.subtext=new l(e.subtext),this.timestamp=Math.floor(parseInt(e.timestampUsec)/1e3),this.timestamp_usec=e.timestampUsec,this.timestamp_text=new l(e.timestampText);}};s(LT,"LiveChatModeChangeMessage"),i$1(LT,"type","LiveChatModeChangeMessage");var Kd=LT;var UT=class UT extends c{constructor(e){super();i$1(this,"reply_button");i$1(this,"reply_count_entity_key");i$1(this,"reply_count_placeholder");this.reply_button=u.parseItem(e.replyButton,J),this.reply_count_entity_key=e.replyCountEntityKey,this.reply_count_placeholder=l.fromAttributed(e.replyCountPlaceholder);}};s(UT,"PdgReplyButtonView"),i$1(UT,"type","PdgReplyButtonView");var Oa=UT;var YT=class YT extends c{constructor(e){super();i$1(this,"id");i$1(this,"message");i$1(this,"author");i$1(this,"author_name_text_color");i$1(this,"header_background_color");i$1(this,"header_text_color");i$1(this,"body_background_color");i$1(this,"body_text_color");i$1(this,"purchase_amount");i$1(this,"menu_endpoint");i$1(this,"context_menu_accessibility_label");i$1(this,"timestamp");i$1(this,"timestamp_usec");i$1(this,"timestamp_text");i$1(this,"timestamp_color");i$1(this,"header_overlay_image");i$1(this,"text_input_background_color");i$1(this,"lower_bumper");i$1(this,"creator_heart_button");i$1(this,"is_v2_style");i$1(this,"reply_button");this.id=e.id,this.message=new l(e.message),this.author=new D(e.authorName,e.authorBadges,e.authorPhoto,e.authorExternalChannelId),this.author_name_text_color=e.authorNameTextColor,this.header_background_color=e.headerBackgroundColor,this.header_text_color=e.headerTextColor,this.body_background_color=e.bodyBackgroundColor,this.body_text_color=e.bodyTextColor,this.purchase_amount=new l(e.purchaseAmountText).toString(),this.menu_endpoint=new d(e.contextMenuEndpoint),this.context_menu_accessibility_label=e.contextMenuAccessibility.accessibilityData.label,this.timestamp=Math.floor(parseInt(e.timestampUsec)/1e3),this.timestamp_usec=e.timestampUsec,Reflect.has(e,"timestampText")&&(this.timestamp_text=new l(e.timestampText).toString()),this.timestamp_color=e.timestampColor,Reflect.has(e,"headerOverlayImage")&&(this.header_overlay_image=y.fromResponse(e.headerOverlayImage)),this.text_input_background_color=e.textInputBackgroundColor,this.lower_bumper=u.parseItem(e.lowerBumper,Da),this.creator_heart_button=u.parseItem(e.creatorHeartButton,Ma),this.is_v2_style=e.isV2Style,this.reply_button=u.parseItem(e.replyButton,Oa);}};s(YT,"LiveChatPaidMessage"),i$1(YT,"type","LiveChatPaidMessage");var qd=YT;var VT=class VT extends c{constructor(e){super();i$1(this,"id");i$1(this,"author");i$1(this,"money_chip_background_color");i$1(this,"money_chip_text_color");i$1(this,"background_color");i$1(this,"author_name_text_color");i$1(this,"sticker");i$1(this,"sticker_accessibility_label");i$1(this,"sticker_display_width");i$1(this,"sticker_display_height");i$1(this,"purchase_amount");i$1(this,"menu_endpoint");i$1(this,"context_menu");i$1(this,"context_menu_accessibility_label");i$1(this,"timestamp");i$1(this,"timestamp_usec");i$1(this,"is_v2_style");this.id=e.id,this.author=new D(e.authorName,e.authorBadges,e.authorPhoto,e.authorExternalChannelId),this.money_chip_background_color=e.moneyChipBackgroundColor,this.money_chip_text_color=e.moneyChipTextColor,this.background_color=e.backgroundColor,this.author_name_text_color=e.authorNameTextColor,this.sticker=y.fromResponse(e.sticker),this.sticker_accessibility_label=e.sticker.accessibility.accessibilityData.label,this.sticker_display_width=e.stickerDisplayWidth,this.sticker_display_height=e.stickerDisplayHeight,this.purchase_amount=new l(e.purchaseAmountText).toString(),this.menu_endpoint=new d(e.contextMenuEndpoint),this.context_menu=this.menu_endpoint,this.context_menu_accessibility_label=e.contextMenuAccessibility.accessibilityData.label,this.timestamp=Math.floor(parseInt(e.timestampUsec)/1e3),this.timestamp_usec=e.timestampUsec,this.is_v2_style=e.isV2Style;}};s(VT,"LiveChatPaidSticker"),i$1(VT,"type","LiveChatPaidSticker");var $d=VT;var FT=class FT extends c{constructor(e){super();i$1(this,"id");i$1(this,"timestamp");this.id=e.id,this.timestamp=Math.floor(parseInt(e.timestampUsec)/1e3);}};s(FT,"LiveChatPlaceholderItem"),i$1(FT,"type","LiveChatPlaceholderItem");var zd=FT;var jT=class jT extends c{constructor(e){super();i$1(this,"title");i$1(this,"accessibility_title");i$1(this,"thumbnail");i$1(this,"price");i$1(this,"vendor_name");i$1(this,"from_vendor_text");i$1(this,"information_button");i$1(this,"endpoint");i$1(this,"creator_message");i$1(this,"creator_name");i$1(this,"author_photo");i$1(this,"information_dialog");i$1(this,"is_verified");i$1(this,"creator_custom_message");this.title=e.title,this.accessibility_title=e.accessibilityTitle,this.thumbnail=y.fromResponse(e.thumbnail),this.price=e.price,this.vendor_name=e.vendorName,this.from_vendor_text=e.fromVendorText,this.information_button=u.parseItem(e.informationButton),this.endpoint=new d(e.onClickCommand),this.creator_message=e.creatorMessage,this.creator_name=e.creatorName,this.author_photo=y.fromResponse(e.authorPhoto),this.information_dialog=u.parseItem(e.informationDialog),this.is_verified=e.isVerified,this.creator_custom_message=new l(e.creatorCustomMessage);}};s(jT,"LiveChatProductItem"),i$1(jT,"type","LiveChatProductItem");var Jd=jT;var GT=class GT extends c{constructor(e){super();i$1(this,"message");i$1(this,"icon_type");this.message=new l(e.message),Reflect.has(e,"icon")&&Reflect.has(e.icon,"iconType")&&(this.icon_type=e.icon.iconType);}};s(GT,"LiveChatRestrictedParticipation"),i$1(GT,"type","LiveChatRestrictedParticipation");var Xd=GT;var WT=class WT extends Be{constructor(e){super(e);i$1(this,"custom_thumbnail");this.custom_thumbnail=y.fromResponse(e.customThumbnail);}};s(WT,"LiveChatAuthorBadge"),i$1(WT,"type","LiveChatAuthorBadge");var Ba=WT;var HT=class HT extends c{constructor(e){super();i$1(this,"author_name");i$1(this,"author_photo");i$1(this,"author_badges");i$1(this,"primary_text");i$1(this,"menu_endpoint");i$1(this,"context_menu_accessibility_label");i$1(this,"image");this.author_name=new l(e.authorName),this.author_photo=y.fromResponse(e.authorPhoto),this.author_badges=u.parseArray(e.authorBadges,Ba),this.primary_text=new l(e.primaryText),this.menu_endpoint=new d(e.contextMenuEndpoint),this.context_menu_accessibility_label=e.contextMenuAccessibility.accessibilityData.label,this.image=y.fromResponse(e.image);}};s(HT,"LiveChatSponsorshipsHeader"),i$1(HT,"type","LiveChatSponsorshipsHeader");var La=HT;var KT=class KT extends c{constructor(e){super();i$1(this,"id");i$1(this,"timestamp_usec");i$1(this,"author_external_channel_id");i$1(this,"header");this.id=e.id,this.timestamp_usec=e.timestampUsec,this.author_external_channel_id=e.authorExternalChannelId,this.header=u.parseItem(e.header,La);}};s(KT,"LiveChatSponsorshipsGiftPurchaseAnnouncement"),i$1(KT,"type","LiveChatSponsorshipsGiftPurchaseAnnouncement");var Zd=KT;var qT=class qT extends c{constructor(e){super();i$1(this,"id");i$1(this,"timestamp_usec");i$1(this,"timestamp_text");i$1(this,"author");i$1(this,"message");i$1(this,"menu_endpoint");i$1(this,"context_menu_accessibility_label");this.id=e.id,this.timestamp_usec=e.timestampUsec,this.timestamp_text=new l(e.timestampText),this.author=new D(e.authorName,e.authorBadges,e.authorPhoto,e.authorExternalChannelId),this.message=new l(e.message),this.menu_endpoint=new d(e.contextMenuEndpoint),this.context_menu_accessibility_label=e.contextMenuAccessibility.accessibilityData.label;}};s(qT,"LiveChatSponsorshipsGiftRedemptionAnnouncement"),i$1(qT,"type","LiveChatSponsorshipsGiftRedemptionAnnouncement");var Qd=qT;var $T=class $T extends c{constructor(e){super();i$1(this,"id");i$1(this,"message");i$1(this,"inline_action_buttons");i$1(this,"timestamp");i$1(this,"timestamp_usec");i$1(this,"timestamp_text");i$1(this,"author");i$1(this,"menu_endpoint");i$1(this,"context_menu_accessibility_label");i$1(this,"before_content_buttons");this.id=e.id,this.message=new l(e.message),this.inline_action_buttons=u.parseArray(e.inlineActionButtons,v),this.timestamp=Math.floor(parseInt(e.timestampUsec)/1e3),this.timestamp_usec=e.timestampUsec,Reflect.has(e,"timestampText")&&(this.timestamp_text=new l(e.timestampText).toString()),this.author=new D(e.authorName,e.authorBadges,e.authorPhoto,e.authorExternalChannelId),Reflect.has(e,"contextMenuEndpoint")&&(this.menu_endpoint=new d(e.contextMenuEndpoint)),Reflect.has(e,"contextMenuAccessibility")&&Reflect.has(e.contextMenuAccessibility,"accessibilityData")&&Reflect.has(e.contextMenuAccessibility.accessibilityData,"label")&&(this.context_menu_accessibility_label=e.contextMenuAccessibility.accessibilityData.label),this.before_content_buttons=u.parseArray(e.beforeContentButtons,J);}};s($T,"LiveChatTextMessage"),i$1($T,"type","LiveChatTextMessage");var em=$T;var zT=class zT extends c{constructor(e){super();i$1(this,"id");i$1(this,"author");i$1(this,"amount");i$1(this,"amount_text_color");i$1(this,"start_background_color");i$1(this,"end_background_color");i$1(this,"duration_sec");i$1(this,"full_duration_sec");i$1(this,"show_item");i$1(this,"show_item_endpoint");i$1(this,"animation_origin");i$1(this,"open_engagement_panel_command");this.id=e.id,this.author=new D(e.authorName||e.authorUsername,e.authorBadges,e.authorPhoto,e.authorExternalChannelId),Reflect.has(e,"amount")&&(this.amount=new l(e.amount)),this.amount_text_color=e.amountTextColor,this.start_background_color=e.startBackgroundColor,this.end_background_color=e.endBackgroundColor,this.duration_sec=e.durationSec,this.full_duration_sec=e.fullDurationSec,this.show_item=u.parseItem(e.showItemEndpoint?.showLiveChatItemEndpoint?.renderer),this.show_item_endpoint=new d(e.showItemEndpoint),this.animation_origin=e.animationOrigin,this.open_engagement_panel_command=new d(e.openEngagementPanelCommand);}};s(zT,"LiveChatTickerPaidMessageItem"),i$1(zT,"type","LiveChatTickerPaidMessageItem");var tm=zT;var JT=class JT extends c{constructor(e){super();i$1(this,"id");i$1(this,"author_external_channel_id");i$1(this,"author_photo");i$1(this,"start_background_color");i$1(this,"end_background_color");i$1(this,"duration_sec");i$1(this,"full_duration_sec");i$1(this,"show_item");i$1(this,"show_item_endpoint");i$1(this,"ticker_thumbnails");this.id=e.id,this.author_external_channel_id=e.authorExternalChannelId,this.author_photo=y.fromResponse(e.authorPhoto),this.start_background_color=e.startBackgroundColor,this.end_background_color=e.endBackgroundColor,this.duration_sec=e.durationSec,this.full_duration_sec=e.fullDurationSec,this.show_item=u.parseItem(e.showItemEndpoint?.showLiveChatItemEndpoint?.renderer),this.show_item_endpoint=new d(e.showItemEndpoint),this.ticker_thumbnails=e.tickerThumbnails.map(o=>({thumbnails:y.fromResponse(o),label:o?.accessibility?.accessibilityData?.label}));}};s(JT,"LiveChatTickerPaidStickerItem"),i$1(JT,"type","LiveChatTickerPaidStickerItem");var im=JT;var XT=class XT extends c{constructor(e){super();i$1(this,"id");i$1(this,"detail");i$1(this,"author");i$1(this,"duration_sec");this.id=e.id,this.detail=new l(e.detailText),this.author=new D(e.authorName,e.authorBadges,e.sponsorPhoto,e.authorExternalChannelId),this.duration_sec=e.durationSec;}};s(XT,"LiveChatTickerSponsorItem"),i$1(XT,"type","LiveChatTickerSponsorItem");var nm=XT;var ZT=class ZT extends c{constructor(e){super();i$1(this,"id");i$1(this,"timestamp");i$1(this,"timestamp_usec");i$1(this,"icon_type");i$1(this,"message");i$1(this,"action_button");i$1(this,"menu_endpoint");i$1(this,"context_menu_accessibility_label");this.id=e.id,Reflect.has(e,"timestampUsec")&&(this.timestamp=Math.floor(parseInt(e.timestampUsec)/1e3),this.timestamp_usec=e.timestampUsec),Reflect.has(e,"icon")&&Reflect.has(e.icon,"iconType")&&(this.icon_type=e.icon.iconType),this.message=new l(e.message),this.action_button=u.parseItem(e.actionButton),Reflect.has(e,"contextMenuEndpoint")&&(this.menu_endpoint=new d(e.contextMenuEndpoint)),Reflect.has(e,"contextMenuAccessibility")&&Reflect.has(e.contextMenuAccessibility,"accessibilityData")&&Reflect.has(e.contextMenuAccessibility.accessibilityData,"label")&&(this.context_menu_accessibility_label=e.contextMenuAccessibility.accessibilityData.label);}};s(ZT,"LiveChatViewerEngagementMessage"),i$1(ZT,"type","LiveChatViewerEngagementMessage");var om=ZT;var QT=class QT extends c{constructor(e){super();i$1(this,"poll_question");i$1(this,"thumbnails");i$1(this,"metadata");i$1(this,"live_chat_poll_type");i$1(this,"context_menu_button");this.poll_question=new l(e.pollQuestion),this.thumbnails=y.fromResponse(e.thumbnail),this.metadata=new l(e.metadataText),this.live_chat_poll_type=e.liveChatPollType,this.context_menu_button=u.parseItem(e.contextMenuButton,v);}};s(QT,"PollHeader"),i$1(QT,"type","PollHeader");var sm=QT;var ev=class ev extends c{constructor(e){super();i$1(this,"id");i$1(this,"contents");i$1(this,"target_id");this.id=e.id,this.contents=u.parse(e.contents),this.target_id=e.targetId;}};s(ev,"LiveChatActionPanel"),i$1(ev,"type","LiveChatActionPanel");var Ua=ev;var tv=class tv extends c{constructor(e){super();i$1(this,"deleted_state_message");i$1(this,"target_item_id");this.deleted_state_message=new l(e.deletedStateMessage),this.target_item_id=e.targetItemId;}};s(tv,"MarkChatItemAsDeletedAction"),i$1(tv,"type","MarkChatItemAsDeletedAction");var rm=tv;var iv=class iv extends c{constructor(e){super();i$1(this,"deleted_state_message");i$1(this,"external_channel_id");this.deleted_state_message=new l(e.deletedStateMessage),this.external_channel_id=e.externalChannelId;}};s(iv,"MarkChatItemsByAuthorAsDeletedAction"),i$1(iv,"type","MarkChatItemsByAuthorAsDeletedAction");var am=iv;var nv=class nv extends c{constructor(e){super();i$1(this,"target_action_id");this.target_action_id=e.targetActionId;}};s(nv,"RemoveBannerForLiveChatCommand"),i$1(nv,"type","RemoveBannerForLiveChatCommand");var cm=nv;var ov=class ov extends c{constructor(e){super();i$1(this,"target_item_id");this.target_item_id=e.targetItemId;}};s(ov,"RemoveChatItemAction"),i$1(ov,"type","RemoveChatItemAction");var um=ov;var sv=class sv extends c{constructor(e){super();i$1(this,"external_channel_id");this.external_channel_id=e.externalChannelId;}};s(sv,"RemoveChatItemByAuthorAction"),i$1(sv,"type","RemoveChatItemByAuthorAction");var lm=sv;var rv=class rv extends c{constructor(e){super();i$1(this,"target_item_id");i$1(this,"replacement_item");this.target_item_id=e.targetItemId,this.replacement_item=u.parseItem(e.replacementItem);}};s(rv,"ReplaceChatItemAction"),i$1(rv,"type","ReplaceChatItemAction");var pm=rv;var av=class av extends c{constructor(e){super();i$1(this,"to_replace");i$1(this,"replacement");this.to_replace=e.toReplace,this.replacement=u.parseItem(e.replacement);}};s(av,"ReplaceLiveChatAction"),i$1(av,"type","ReplaceLiveChatAction");var fm=av;var cv=class cv extends c{constructor(e){super();i$1(this,"actions");i$1(this,"video_offset_time_msec");this.actions=u.parseArray(e.actions?.map(o=>(delete o.clickTrackingParams,o))),this.video_offset_time_msec=e.videoOffsetTimeMsec;}};s(cv,"ReplayChatItemAction"),i$1(cv,"type","ReplayChatItemAction");var dm=cv;var uv=class uv extends c{constructor(e){super();i$1(this,"panel_to_show");this.panel_to_show=u.parseItem(e.panelToShow,Ua);}};s(uv,"ShowLiveChatActionPanelAction"),i$1(uv,"type","ShowLiveChatActionPanelAction");var mm=uv;var lv=class lv extends c{constructor(e){super();i$1(this,"dialog");this.dialog=u.parseItem(e.dialog);}};s(lv,"ShowLiveChatDialogAction"),i$1(lv,"type","ShowLiveChatDialogAction");var hm=lv;var pv=class pv extends c{constructor(e){super();i$1(this,"tooltip");this.tooltip=u.parseItem(e.tooltip);}};s(pv,"ShowLiveChatTooltipCommand"),i$1(pv,"type","ShowLiveChatTooltipCommand");var _m=pv;var fv=class fv extends c{constructor(e){super();i$1(this,"date_text");this.date_text=new l(e.dateText).toString();}};s(fv,"UpdateDateTextAction"),i$1(fv,"type","UpdateDateTextAction");var Ya=fv;var dv=class dv extends c{constructor(e){super();i$1(this,"description");this.description=new l(e.description);}};s(dv,"UpdateDescriptionAction"),i$1(dv,"type","UpdateDescriptionAction");var Va=dv;var mv=class mv extends c{constructor(e){super();i$1(this,"poll_to_update");this.poll_to_update=u.parseItem(e.pollToUpdate);}};s(mv,"UpdateLiveChatPollAction"),i$1(mv,"type","UpdateLiveChatPollAction");var bm=mv;var hv=class hv extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(hv,"UpdateTitleAction"),i$1(hv,"type","UpdateTitleAction");var Fa=hv;var _v=class _v extends c{constructor(e){super();i$1(this,"default_text");i$1(this,"toggled_text");i$1(this,"button_id");this.default_text=new l(e.defaultText).toString(),this.toggled_text=new l(e.toggledText).toString(),this.button_id=e.buttonId;}};s(_v,"UpdateToggleButtonTextAction"),i$1(_v,"type","UpdateToggleButtonTextAction");var ja=_v;var bv=class bv extends c{constructor(e){super();i$1(this,"view_count");i$1(this,"extra_short_view_count");i$1(this,"original_view_count");i$1(this,"unlabeled_view_count_value");i$1(this,"is_live");let o=e.viewCount.videoViewCountRenderer;this.view_count=new l(o.viewCount),this.extra_short_view_count=new l(o.extraShortViewCount),this.original_view_count=parseInt(o.originalViewCount),this.unlabeled_view_count_value=new l(o.unlabeledViewCountValue),this.is_live=o.isLive;}};s(bv,"UpdateViewershipAction"),i$1(bv,"type","UpdateViewershipAction");var Ga=bv;var yv=class yv extends c{constructor(e){super();i$1(this,"confirm_button");i$1(this,"dialog_messages");this.confirm_button=u.parseItem(e.confirmButton,v),this.dialog_messages=e.dialogMessages.map(o=>new l(o));}};s(yv,"LiveChatDialog"),i$1(yv,"type","LiveChatDialog");var ym=yv;var xv=class xv extends c{constructor(e){super();i$1(this,"overflow_menu");i$1(this,"collapse_button");i$1(this,"view_selector");this.overflow_menu=u.parseItem(e.overflowMenu,B),this.collapse_button=u.parseItem(e.collapseButton,v),this.view_selector=u.parseItem(e.viewSelector,ot);}};s(xv,"LiveChatHeader"),i$1(xv,"type","LiveChatHeader");var Wa=xv;var gv=class gv extends c{constructor(e){super();i$1(this,"max_items_to_display");i$1(this,"more_comments_below_button");this.max_items_to_display=e.maxItemsToDisplay,this.more_comments_below_button=u.parseItem(e.moreCommentsBelowButton,v);}};s(gv,"LiveChatItemList"),i$1(gv,"type","LiveChatItemList");var Ha=gv;var wv=class wv extends c{constructor(e){super();i$1(this,"author_name");i$1(this,"author_photo");i$1(this,"send_button");i$1(this,"target_id");this.author_name=new l(e.authorName),this.author_photo=y.fromResponse(e.authorPhoto),this.send_button=u.parseItem(e.sendButton,v),this.target_id=e.targetId;}};s(wv,"LiveChatMessageInput"),i$1(wv,"type","LiveChatMessageInput");var xm=wv;var Tv=class Tv extends c{constructor(e){super();i$1(this,"name");i$1(this,"photo");i$1(this,"badges");this.name=new l(e.authorName),this.photo=y.fromResponse(e.authorPhoto),this.badges=u.parseArray(e.authorBadges);}};s(Tv,"LiveChatParticipant"),i$1(Tv,"type","LiveChatParticipant");var Ka=Tv;var vv=class vv extends c{constructor(e){super();i$1(this,"title");i$1(this,"participants");this.title=new l(e.title),this.participants=u.parseArray(e.participants,Ka);}};s(vv,"LiveChatParticipantsList"),i$1(vv,"type","LiveChatParticipantsList");var qa=vv;var Iv=class Iv extends c{constructor(e){super();i$1(this,"title");i$1(this,"metadata");i$1(this,"image");i$1(this,"menu_button");this.title=l.fromAttributed(e.title),this.metadata=u.parseItem(e.metadata,yn),this.image=u.parseItem(e.image,[gn,tn]),this.menu_button=u.parseItem(e.menuButton,J);}};s(Iv,"LockupMetadataView"),i$1(Iv,"type","LockupMetadataView");var $a=Iv;var kv=class kv extends c{constructor(e){super();i$1(this,"content_image");i$1(this,"metadata");i$1(this,"content_id");i$1(this,"content_type");i$1(this,"renderer_context");this.content_image=u.parseItem(e.contentImage,[Dr,mn]),this.metadata=u.parseItem(e.metadata,$a),this.content_id=e.contentId,this.content_type=e.contentType.replace("LOCKUP_CONTENT_TYPE_",""),this.renderer_context=new Oe(e.rendererContext);}};s(kv,"LockupView"),i$1(kv,"type","LockupView");var za=kv;var Sv=class Sv extends c{constructor(e){super();i$1(this,"marker_entity_key");i$1(this,"external_video_id");i$1(this,"marker_type");i$1(this,"markers");i$1(this,"max_height_dp");i$1(this,"min_height_dp");i$1(this,"show_hide_animation_duration_millis");i$1(this,"timed_marker_decorations");i$1(this,"raw_api_markers");i$1(this,"raw_api_decorations");this.marker_entity_key=e.key,this.external_video_id=e.externalVideoId,this.marker_type=e.markersList?.markerType||"",this.raw_api_markers=e.markersList?.markers||[],this.raw_api_decorations=e.markersList?.markersDecoration?.timedMarkerDecorations||[],this.markers=V(this.raw_api_markers.map(r=>new wn(r)));let o=e.markersList?.markersMetadata?.heatmapMetadata;this.max_height_dp=o?.maxHeightDp||40,this.min_height_dp=o?.minHeightDp||4,this.show_hide_animation_duration_millis=o?.showHideAnimationDurationMillis||200,this.timed_marker_decorations=V(this.raw_api_decorations.map(r=>new Tn(r)));}isHeatmap(){return this.marker_type==="MARKER_TYPE_HEATMAP"}toHeatmap(){if(!this.isHeatmap())return null;let e=this.raw_api_markers.map(a=>({HeatMarker:a})),o=this.raw_api_decorations.map(a=>({TimedMarkerDecoration:a})),r={maxHeightDp:this.max_height_dp,minHeightDp:this.min_height_dp,showHideAnimationDurationMillis:this.show_hide_animation_duration_millis,heatMarkers:e,heatMarkersDecorations:o};return ee({Heatmap:r},vn)}};s(Sv,"MacroMarkersListEntity"),i$1(Sv,"type","MacroMarkersListEntity");var Nn=Sv;var Ev=class Ev extends v{constructor(t){super(t);}};s(Ev,"MenuNavigationItem"),i$1(Ev,"type","MenuNavigationItem");var Ja=Ev;var Cv=class Cv extends c{constructor(e){super();i$1(this,"items");this.items=u.parseArray(e.items,[Ja,ut]);}};s(Cv,"MenuPopup"),i$1(Cv,"type","MenuPopup");var gm=Cv;var Nv=class Nv extends c{constructor(e){super();i$1(this,"thumbnails");i$1(this,"video_thumbnails");i$1(this,"short_message");i$1(this,"sent_time");i$1(this,"notification_id");i$1(this,"endpoint");i$1(this,"record_click_endpoint");i$1(this,"menu");i$1(this,"read");this.thumbnails=y.fromResponse(e.thumbnail),this.video_thumbnails=y.fromResponse(e.videoThumbnail),this.short_message=new l(e.shortMessage),this.sent_time=new l(e.sentTimeText),this.notification_id=e.notificationId,this.endpoint=new d(e.navigationEndpoint),this.record_click_endpoint=new d(e.recordClickEndpoint),this.menu=u.parseItem(e.contextualMenu),this.read=e.read;}};s(Nv,"Notification"),i$1(Nv,"type","Notification");var Rn=Nv;var Rv=class Rv extends c{constructor(e){super();i$1(this,"notification_section_title");i$1(this,"items");"notificationSectionTitle"in e&&(this.notification_section_title=new l(e.notificationSectionTitle)),this.items=u.parseArray(e.items,[Rn,_e,K]);}get contents(){return this.items}};s(Rv,"MultiPageMenuNotificationSection"),i$1(Rv,"type","MultiPageMenuNotificationSection");var wm=Rv;var Pv=class Pv extends c{constructor(t){super();}};s(Pv,"MusicMenuItemDivider"),i$1(Pv,"type","MusicMenuItemDivider");var Xa=Pv;var Av=class Av extends c{constructor(e){super();i$1(this,"title");i$1(this,"form_item_entity_key");i$1(this,"selected_icon_type");i$1(this,"endpoint");i$1(this,"selected");this.title=new l(e.title).toString(),this.form_item_entity_key=e.formItemEntityKey,Reflect.has(e,"selectedIcon")&&(this.selected_icon_type=e.selectedIcon.iconType),Reflect.has(e,"selectedCommand")&&(this.endpoint=new d(e.selectedCommand)),this.selected=!!this.endpoint;}};s(Av,"MusicMultiSelectMenuItem"),i$1(Av,"type","MusicMultiSelectMenuItem");var dt=Av;var Mv=class Mv extends c{constructor(e){super();i$1(this,"title");i$1(this,"options");Reflect.has(e,"title")&&Reflect.has(e.title,"musicMenuTitleRenderer")&&(this.title=new l(e.title.musicMenuTitleRenderer?.primaryText)),this.options=u.parseArray(e.options,[dt,Xa]);}};s(Mv,"MusicMultiSelectMenu"),i$1(Mv,"type","MusicMultiSelectMenu");var Za=Mv;var Dv=class Dv extends c{constructor(e){super();i$1(this,"title");i$1(this,"buttons");this.title=new l(e.title),this.buttons=u.parseArray(e.buttons,v);}};s(Dv,"SimpleMenuHeader"),i$1(Dv,"type","SimpleMenuHeader");var Qa=Dv;var Ov=class Ov extends c{constructor(e){super();i$1(this,"title");i$1(this,"description");i$1(this,"thumbnails");i$1(this,"price");i$1(this,"vendor_name");i$1(this,"button_text");i$1(this,"button_accessibility_text");i$1(this,"from_vendor_text");i$1(this,"additional_fees_text");i$1(this,"region_format");i$1(this,"endpoint");this.title=e.title,this.description=e.description,this.thumbnails=y.fromResponse(e.thumbnail),this.price=e.price,this.vendor_name=e.vendorName,this.button_text=e.buttonText,this.button_accessibility_text=e.buttonAccessibilityText,this.from_vendor_text=e.fromVendorText,this.additional_fees_text=e.additionalFeesText,this.region_format=e.regionFormat,this.endpoint=new d(e.buttonCommand);}};s(Ov,"MerchandiseItem"),i$1(Ov,"type","MerchandiseItem");var Tm=Ov;var Bv=class Bv extends c{constructor(e){super();i$1(this,"title");i$1(this,"menu");i$1(this,"items");this.title=e.title,this.menu=u.parseItem(e.actionButton),this.items=u.parseArray(e.items);}get contents(){return this.items}};s(Bv,"MerchandiseShelf"),i$1(Bv,"type","MerchandiseShelf");var ec=Bv;var Lv=class Lv extends c{constructor(e){super();i$1(this,"title");i$1(this,"contents");this.title=new l(e.title),this.contents=e.contents.map(o=>new l(o));}};s(Lv,"MetadataRow"),i$1(Lv,"type","MetadataRow");var vm=Lv;var Uv=class Uv extends c{constructor(e){super();i$1(this,"rows");i$1(this,"collapsed_item_count");this.rows=u.parseArray(e.rows),this.collapsed_item_count=e.collapsedItemCount;}};s(Uv,"MetadataRowContainer"),i$1(Uv,"type","MetadataRowContainer");var tc=Uv;var Yv=class Yv extends c{constructor(e){super();i$1(this,"content");i$1(this,"has_divider_line");this.content=new l(e.content),this.has_divider_line=e.hasDividerLine;}};s(Yv,"MetadataRowHeader"),i$1(Yv,"type","MetadataRowHeader");var Im=Yv;var Vv=class Vv extends c{constructor(e){super();i$1(this,"section_list");this.section_list=u.parseItem(e);}};s(Vv,"MetadataScreen"),i$1(Vv,"type","MetadataScreen");var km=Vv;var Fv=class Fv extends c{constructor(e){super();i$1(this,"url_canonical");i$1(this,"title");i$1(this,"description");i$1(this,"thumbnail");i$1(this,"site_name");i$1(this,"app_name");i$1(this,"android_package");i$1(this,"ios_app_store_id");i$1(this,"ios_app_arguments");i$1(this,"og_type");i$1(this,"url_applinks_web");i$1(this,"url_applinks_ios");i$1(this,"url_applinks_android");i$1(this,"url_twitter_ios");i$1(this,"url_twitter_android");i$1(this,"twitter_card_type");i$1(this,"twitter_site_handle");i$1(this,"schema_dot_org_type");i$1(this,"noindex");i$1(this,"is_unlisted");i$1(this,"is_family_safe");i$1(this,"tags");i$1(this,"available_countries");this.url_canonical=e.urlCanonical,this.title=e.title,this.description=e.description,this.thumbnail=y.fromResponse(e.thumbnail),this.site_name=e.siteName,this.app_name=e.appName,this.android_package=e.androidPackage,this.ios_app_store_id=e.iosAppStoreId,this.ios_app_arguments=e.iosAppArguments,this.og_type=e.ogType,this.url_applinks_web=e.urlApplinksWeb,this.url_applinks_ios=e.urlApplinksIos,this.url_applinks_android=e.urlApplinksAndroid,this.url_twitter_ios=e.urlTwitterIos,this.url_twitter_android=e.urlTwitterAndroid,this.twitter_card_type=e.twitterCardType,this.twitter_site_handle=e.twitterSiteHandle,this.schema_dot_org_type=e.schemaDotOrgType,this.noindex=e.noindex,this.is_unlisted=e.unlisted,this.is_family_safe=e.familySafe,this.tags=e.tags,this.available_countries=e.availableCountries;}};s(Fv,"MicroformatData"),i$1(Fv,"type","MicroformatData");var mt=Fv;var jv=class jv extends ft{constructor(t){super(t);}};s(jv,"Mix"),i$1(jv,"type","Mix");var Sm=jv;var Gv=class Gv extends c{constructor(e){super();i$1(this,"title");i$1(this,"content");i$1(this,"button");this.title=new l(e.title),this.content=new l(e.content),this.button=u.parseItem(e.button,v);}};s(Gv,"ModalWithTitleAndButton"),i$1(Gv,"type","ModalWithTitleAndButton");var Em=Gv;var Wv=class Wv extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"description_snippet");i$1(this,"top_metadata_items");i$1(this,"thumbnails");i$1(this,"thumbnail_overlays");i$1(this,"author");i$1(this,"duration");i$1(this,"endpoint");i$1(this,"badges");i$1(this,"use_vertical_poster");i$1(this,"show_action_menu");i$1(this,"menu");let o=e.thumbnailOverlays.find(r=>r.thumbnailOverlayTimeStatusRenderer)?.thumbnailOverlayTimeStatusRenderer.text||"N/A";this.id=e.videoId,this.title=new l(e.title),Reflect.has(e,"descriptionSnippet")&&(this.description_snippet=new l(e.descriptionSnippet)),this.top_metadata_items=new l(e.topMetadataItems),this.thumbnails=y.fromResponse(e.thumbnail),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays),this.author=new D(e.longBylineText,e.ownerBadges,e.channelThumbnailSupportedRenderers?.channelThumbnailWithLinkRenderer?.thumbnail),this.duration={text:e.lengthText?new l(e.lengthText).toString():new l(o).toString(),seconds:Me(e.lengthText?new l(e.lengthText).toString():new l(o).toString())},this.endpoint=new d(e.navigationEndpoint),this.badges=u.parseArray(e.badges),this.use_vertical_poster=e.useVerticalPoster,this.show_action_menu=e.showActionMenu,this.menu=u.parseItem(e.menu,B);}};s(Wv,"Movie"),i$1(Wv,"type","Movie");var Cm=Wv;var Hv=class Hv extends c{constructor(t){return super(),t.movingThumbnailDetails?.thumbnails.map(e=>new y(e)).sort((e,o)=>o.width-e.width)}};s(Hv,"MovingThumbnail"),i$1(Hv,"type","MovingThumbnail");var Nm=Hv;var Kv=class Kv extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(Kv,"MusicCardShelfHeaderBasic"),i$1(Kv,"type","MusicCardShelfHeaderBasic");var ic=Kv;var qv=class qv extends c{constructor(e){super();i$1(this,"icon_type");i$1(this,"accessibility");this.icon_type=e.icon.iconType,"accessibilityData"in e&&"accessibilityData"in e.accessibilityData&&(this.accessibility={accessibility_data:new pe(e.accessibilityData.accessibilityData)});}get label(){return this.accessibility?.accessibility_data?.label}};s(qv,"MusicInlineBadge"),i$1(qv,"type","MusicInlineBadge");var Pn=qv;var $v=class $v extends c{constructor(e){super();i$1(this,"endpoint");i$1(this,"play_icon_type");i$1(this,"pause_icon_type");i$1(this,"icon_color");i$1(this,"accessibility_play_data");i$1(this,"accessibility_pause_data");this.endpoint=new d(e.playNavigationEndpoint),this.play_icon_type=e.playIcon.iconType,this.pause_icon_type=e.pauseIcon.iconType,"accessibilityPlayData"in e&&"accessibilityData"in e.accessibilityPlayData&&(this.accessibility_play_data={accessibility_data:new pe(e.accessibilityPlayData.accessibilityData)}),"accessibilityPauseData"in e&&"accessibilityData"in e.accessibilityPauseData&&(this.accessibility_pause_data={accessibility_data:new pe(e.accessibilityPauseData.accessibilityData)}),this.icon_color=e.iconColor;}get play_label(){return this.accessibility_play_data?.accessibility_data?.label}get pause_label(){return this.accessibility_pause_data?.accessibility_data?.label}};s($v,"MusicPlayButton"),i$1($v,"type","MusicPlayButton");var An=$v;var zv=class zv extends c{constructor(e){super();i$1(this,"content");i$1(this,"content_position");i$1(this,"display_style");this.content=u.parseItem(e.content,An),this.content_position=e.contentPosition,this.display_style=e.displayStyle;}};s(zv,"MusicItemThumbnailOverlay"),i$1(zv,"type","MusicItemThumbnailOverlay");var ht=zv;var Jv=class Jv extends c{constructor(e){super();i$1(this,"contents");this.contents=y.fromResponse(e.thumbnail);}};s(Jv,"MusicThumbnail"),i$1(Jv,"type","MusicThumbnail");var ke=Jv;var Xv=class Xv extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"title");i$1(this,"subtitle");i$1(this,"buttons");i$1(this,"menu");i$1(this,"on_tap");i$1(this,"header");i$1(this,"end_icon_type");i$1(this,"subtitle_badges");i$1(this,"thumbnail_overlay");i$1(this,"contents");this.thumbnail=u.parseItem(e.thumbnail,ke),this.title=new l(e.title),this.subtitle=new l(e.subtitle),this.buttons=u.parseArray(e.buttons,v),this.menu=u.parseItem(e.menu,B),this.on_tap=new d(e.onTap),this.header=u.parseItem(e.header,ic),Reflect.has(e,"endIcon")&&Reflect.has(e.endIcon,"iconType")&&(this.end_icon_type=e.endIcon.iconType),this.subtitle_badges=u.parseArray(e.subtitleBadges,Pn),this.thumbnail_overlay=u.parseItem(e.thumbnailOverlay,ht),Reflect.has(e,"contents")&&(this.contents=u.parseArray(e.contents));}};s(Xv,"MusicCardShelf"),i$1(Xv,"type","MusicCardShelf");var nc=Xv;var Zv=class Zv extends c{constructor(e){super();i$1(this,"title");i$1(this,"strapline");i$1(this,"thumbnail");i$1(this,"more_content");i$1(this,"end_icons");this.title=new l(e.title),Reflect.has(e,"strapline")&&(this.strapline=new l(e.strapline)),Reflect.has(e,"thumbnail")&&(this.thumbnail=u.parseItem(e.thumbnail,ke)),Reflect.has(e,"moreContentButton")&&(this.more_content=u.parseItem(e.moreContentButton,v)),Reflect.has(e,"endIcons")&&(this.end_icons=u.parseArray(e.endIcons,wa));}};s(Zv,"MusicCarouselShelfBasicHeader"),i$1(Zv,"type","MusicCarouselShelfBasicHeader");var oc=Zv;var Qv=class Qv extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"overlay");i$1(this,"on_tap");i$1(this,"menu");i$1(this,"subtitle");i$1(this,"title");i$1(this,"second_title");i$1(this,"description");i$1(this,"display_style");this.thumbnail=u.parseItem(e.thumbnail,ke),this.overlay=u.parseItem(e.overlay,ht),this.on_tap=new d(e.onTap),this.menu=u.parseItem(e.menu,B),this.subtitle=new l(e.subtitle),this.title=new l(e.title),Reflect.has(e,"secondTitle")&&(this.second_title=new l(e.secondTitle)),Reflect.has(e,"description")&&(this.description=new l(e.description)),Reflect.has(e,"displayStyle")&&(this.display_style=e.displayStyle);}};s(Qv,"MusicMultiRowListItem"),i$1(Qv,"type","MusicMultiRowListItem");var sc=Qv;var e0=class e0 extends c{constructor(e){super();i$1(this,"button_text");i$1(this,"endpoint");this.button_text=new l(e.buttonText).toString(),this.endpoint=new d(e.clickCommand);}};s(e0,"MusicNavigationButton"),i$1(e0,"type","MusicNavigationButton");var Mn=e0;var t0=class t0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"display_priority");this.title=new l(e.text),this.display_priority=e.displayPriority;}};s(t0,"MusicResponsiveListItemFixedColumn"),i$1(t0,"type","musicResponsiveListItemFlexColumnRenderer");var rc=t0;var i0=class i0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"display_priority");this.title=new l(e.text),this.display_priority=e.displayPriority;}};s(i0,"MusicResponsiveListItemFlexColumn"),i$1(i0,"type","MusicResponsiveListItemFlexColumn");var ac=i0;var he,S1,lR,pR,fR,dR,mR,hR,_R,bR,yR,n0=class n0 extends c{constructor(e){super();g(this,he);i$1(this,"flex_columns");i$1(this,"fixed_columns");i$1(this,"endpoint");i$1(this,"item_type");i$1(this,"index");i$1(this,"thumbnail");i$1(this,"badges");i$1(this,"menu");i$1(this,"overlay");i$1(this,"id");i$1(this,"title");i$1(this,"duration");i$1(this,"album");i$1(this,"artists");i$1(this,"views");i$1(this,"authors");i$1(this,"name");i$1(this,"subtitle");i$1(this,"subscribers");i$1(this,"song_count");i$1(this,"author");i$1(this,"item_count");i$1(this,"year");this.flex_columns=u.parseArray(e.flexColumns,ac),this.fixed_columns=u.parseArray(e.fixedColumns,rc);let o={video_id:e?.playlistItemData?.videoId||null,playlist_set_video_id:e?.playlistItemData?.playlistSetVideoId||null};Reflect.has(e,"navigationEndpoint")&&(this.endpoint=new d(e.navigationEndpoint));let r=this.endpoint?.payload?.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType;switch(r||this.flex_columns.find(f=>f.title.endpoint?.payload?.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType==="MUSIC_PAGE_TYPE_NON_MUSIC_AUDIO_TRACK_PAGE")&&(r="MUSIC_PAGE_TYPE_NON_MUSIC_AUDIO_TRACK_PAGE"),r){case "MUSIC_PAGE_TYPE_ALBUM":this.item_type="album",N(this,he,bR).call(this);break;case "MUSIC_PAGE_TYPE_PLAYLIST":this.item_type="playlist",N(this,he,yR).call(this);break;case "MUSIC_PAGE_TYPE_ARTIST":case "MUSIC_PAGE_TYPE_USER_CHANNEL":this.item_type="artist",N(this,he,dR).call(this);break;case "MUSIC_PAGE_TYPE_LIBRARY_ARTIST":this.item_type="library_artist",N(this,he,mR).call(this);break;case "MUSIC_PAGE_TYPE_NON_MUSIC_AUDIO_TRACK_PAGE":this.item_type="non_music_track",N(this,he,hR).call(this,o);break;case "MUSIC_PAGE_TYPE_PODCAST_SHOW_DETAIL_PAGE":this.item_type="podcast_show",N(this,he,_R).call(this);break;default:this.flex_columns[1]?N(this,he,lR).call(this,o):N(this,he,S1).call(this);}Reflect.has(e,"index")&&(this.index=new l(e.index)),Reflect.has(e,"thumbnail")&&(this.thumbnail=u.parseItem(e.thumbnail,ke)),Reflect.has(e,"badges")&&(this.badges=u.parseArray(e.badges)),Reflect.has(e,"menu")&&(this.menu=u.parseItem(e.menu,B)),Reflect.has(e,"overlay")&&(this.overlay=u.parseItem(e.overlay,ht));}get thumbnails(){return this.thumbnail?.contents||[]}};he=new WeakSet,S1=s(function(){this.title=this.flex_columns[0].title.toString(),this.endpoint?this.item_type="endpoint":this.item_type="unknown";},"#parseOther"),lR=s(function(e){switch(this.flex_columns.at(0)?.title.runs?.at(0)?.endpoint?.payload?.watchEndpointMusicSupportedConfigs?.watchEndpointMusicConfig?.musicVideoType){case "MUSIC_VIDEO_TYPE_UGC":case "MUSIC_VIDEO_TYPE_OMV":this.item_type="video",N(this,he,fR).call(this,e);break;case "MUSIC_VIDEO_TYPE_ATV":this.item_type="song",N(this,he,pR).call(this,e);break;default:N(this,he,S1).call(this);}},"#parseVideoOrSong"),pR=s(function(e){this.id=e.video_id||this.endpoint?.payload?.videoId,this.title=this.flex_columns[0].title.toString();let o=this.flex_columns.at(1)?.title.runs?.find(f=>/^\d+$/.test(f.text.replace(/:/g,"")))?.text||this.fixed_columns[0]?.title?.toString();o&&(this.duration={text:o,seconds:Me(o)});let r=this.flex_columns.at(1)?.title.runs?.find(f=>Xe(f)&&f.endpoint&&f.endpoint.payload.browseId.startsWith("MPR"))||this.flex_columns.at(2)?.title.runs?.find(f=>Xe(f)&&f.endpoint&&f.endpoint.payload.browseId.startsWith("MPR"));r&&Xe(r)&&(this.album={id:r.endpoint?.payload?.browseId,name:r.text,endpoint:r.endpoint});let a=this.flex_columns.at(1)?.title.runs?.filter(f=>Xe(f)&&f.endpoint&&f.endpoint.payload.browseId.startsWith("UC"));a&&(this.artists=a.map(f=>({name:f.text,channel_id:Xe(f)?f.endpoint?.payload?.browseId:void 0,endpoint:Xe(f)?f.endpoint:void 0})));},"#parseSong"),fR=s(function(e){this.id=e.video_id,this.title=this.flex_columns[0].title.toString(),this.views=this.flex_columns.at(1)?.title.runs?.find(a=>a.text.match(/(.*?) views/))?.toString();let o=this.flex_columns.at(1)?.title.runs?.filter(a=>Xe(a)&&a.endpoint&&a.endpoint.payload.browseId.startsWith("UC"));o&&(this.authors=o.map(a=>({name:a.text,channel_id:Xe(a)?a.endpoint?.payload?.browseId:void 0,endpoint:Xe(a)?a.endpoint:void 0})));let r=this.flex_columns[1].title.runs?.find(a=>/^\d+$/.test(a.text.replace(/:/g,"")))?.text||this.fixed_columns[0]?.title.runs?.find(a=>/^\d+$/.test(a.text.replace(/:/g,"")))?.text;r&&(this.duration={text:r,seconds:Me(r)});},"#parseVideo"),dR=s(function(){this.id=this.endpoint?.payload?.browseId,this.name=this.flex_columns[0].title.toString(),this.subtitle=this.flex_columns.at(1)?.title,this.subscribers=this.subtitle?.runs?.find(e=>/^(\d*\.)?\d+[M|K]? subscribers?$/i.test(e.text))?.text||"";},"#parseArtist"),mR=s(function(){this.name=this.flex_columns[0].title.toString(),this.subtitle=this.flex_columns.at(1)?.title,this.song_count=this.subtitle?.runs?.find(e=>/^\d+(,\d+)? songs?$/i.test(e.text))?.text||"";},"#parseLibraryArtist"),hR=s(function(e){this.id=e.video_id||this.endpoint?.payload?.videoId,this.title=this.flex_columns[0].title.toString();},"#parseNonMusicTrack"),_R=s(function(){this.id=this.endpoint?.payload?.browseId,this.title=this.flex_columns[0].title.toString();},"#parsePodcastShow"),bR=s(function(){this.id=this.endpoint?.payload?.browseId,this.title=this.flex_columns[0].title.toString();let e=this.flex_columns.at(1)?.title.runs?.find(o=>Xe(o)&&o.endpoint&&o.endpoint.payload.browseId.startsWith("UC"));e&&Xe(e)&&(this.author={name:e.text,channel_id:e.endpoint?.payload?.browseId,endpoint:e.endpoint}),this.year=this.flex_columns.at(1)?.title.runs?.find(o=>/^[12][0-9]{3}$/.test(o.text))?.text;},"#parseAlbum"),yR=s(function(){this.id=this.endpoint?.payload?.browseId,this.title=this.flex_columns[0].title.toString();let e=this.flex_columns.at(1)?.title.runs?.find(r=>r.text.match(/\d+ (song|songs)/));this.item_count=e?e.text:void 0;let o=this.flex_columns.at(1)?.title.runs?.find(r=>Xe(r)&&r.endpoint&&r.endpoint.payload.browseId.startsWith("UC"));o&&Xe(o)&&(this.author={name:o.text,channel_id:o.endpoint?.payload?.browseId,endpoint:o.endpoint});},"#parsePlaylist"),s(n0,"MusicResponsiveListItem"),i$1(n0,"type","MusicResponsiveListItem");var Ue=n0;var o0=class o0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"endpoint");i$1(this,"id");i$1(this,"subtitle");i$1(this,"badges");i$1(this,"item_type");i$1(this,"subscribers");i$1(this,"item_count");i$1(this,"year");i$1(this,"views");i$1(this,"artists");i$1(this,"author");i$1(this,"thumbnail");i$1(this,"thumbnail_overlay");i$1(this,"menu");switch(this.title=new l(e.title),this.endpoint=new d(e.navigationEndpoint),this.id=this.endpoint?.payload?.browseId||this.endpoint?.payload?.videoId,this.subtitle=new l(e.subtitle),this.badges=u.parse(e.subtitleBadges),this.endpoint?.payload?.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType){case "MUSIC_PAGE_TYPE_ARTIST":this.item_type="artist";break;case "MUSIC_PAGE_TYPE_PLAYLIST":this.item_type="playlist";break;case "MUSIC_PAGE_TYPE_ALBUM":this.item_type="album";break;default:this.endpoint?.metadata?.api_url==="/next"?this.item_type="endpoint":this.subtitle.runs?.[0]?this.subtitle.runs[0].text!=="Song"?this.item_type="video":this.item_type="song":this.endpoint?this.item_type="endpoint":this.item_type="unknown";break}if(this.item_type=="artist")this.subscribers=this.subtitle.runs?.find(r=>/^(\d*\.)?\d+[M|K]? subscribers?$/i.test(r.text))?.text||"";else if(this.item_type=="playlist"){let r=this.subtitle.runs?.find(a=>a.text.match(/\d+ songs|song/));this.item_count=r?r.text:null;}else if(this.item_type=="album"){let r=this.subtitle.runs?.filter(a=>a.endpoint?.payload?.browseId.startsWith("UC"));r&&(this.artists=r.map(a=>({name:a.text,channel_id:a.endpoint?.payload?.browseId,endpoint:a.endpoint}))),this.year=this.subtitle.runs?.slice(-1)[0].text,isNaN(Number(this.year))&&delete this.year;}else if(this.item_type=="video"){this.views=this?.subtitle.runs?.find(a=>a?.text.match(/(.*?) views/))?.text||"N/A";let r=this.subtitle.runs?.find(a=>a.endpoint?.payload?.browseId?.startsWith("UC"));r&&(this.author={name:r?.text,channel_id:r?.endpoint?.payload?.browseId,endpoint:r?.endpoint});}else if(this.item_type=="song"){let r=this.subtitle.runs?.filter(a=>a.endpoint?.payload?.browseId.startsWith("UC"));r&&(this.artists=r.map(a=>({name:a?.text,channel_id:a?.endpoint?.payload?.browseId,endpoint:a?.endpoint})));}this.thumbnail=y.fromResponse(e.thumbnailRenderer.musicThumbnailRenderer.thumbnail),this.thumbnail_overlay=u.parseItem(e.thumbnailOverlay,ht),this.menu=u.parseItem(e.menu,B);}};s(o0,"MusicTwoRowItem"),i$1(o0,"type","MusicTwoRowItem");var Dn=o0;var s0=class s0 extends c{constructor(e){super();i$1(this,"header");i$1(this,"contents");i$1(this,"num_items_per_column");this.header=u.parseItem(e.header,oc),this.contents=u.parseArray(e.contents,[Dn,Ue,sc,Mn]),Reflect.has(e,"numItemsPerColumn")&&(this.num_items_per_column=parseInt(e.numItemsPerColumn));}};s(s0,"MusicCarouselShelf"),i$1(s0,"type","MusicCarouselShelf");var we=s0;var r0=class r0 extends c{constructor(e){super();i$1(this,"description");i$1(this,"max_collapsed_lines");i$1(this,"max_expanded_lines");i$1(this,"footer");this.description=new l(e.description),Reflect.has(e,"maxCollapsedLines")&&(this.max_collapsed_lines=e.maxCollapsedLines),Reflect.has(e,"maxExpandedLines")&&(this.max_expanded_lines=e.maxExpandedLines),this.footer=new l(e.footer);}};s(r0,"MusicDescriptionShelf"),i$1(r0,"type","MusicDescriptionShelf");var ii=r0;var a0=class a0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"description");i$1(this,"subtitle");i$1(this,"second_subtitle");i$1(this,"year");i$1(this,"song_count");i$1(this,"total_duration");i$1(this,"thumbnails");i$1(this,"badges");i$1(this,"author");i$1(this,"menu");this.title=new l(e.title),this.description=new l(e.description),this.subtitle=new l(e.subtitle),this.second_subtitle=new l(e.secondSubtitle),this.year=this.subtitle.runs?.find(r=>/^[12][0-9]{3}$/.test(r.text))?.text||"",this.song_count=this.second_subtitle.runs?.[0]?.text||"",this.total_duration=this.second_subtitle.runs?.[2]?.text||"",this.thumbnails=y.fromResponse(e.thumbnail.croppedSquareThumbnailRenderer.thumbnail),this.badges=u.parseArray(e.subtitleBadges);let o=this.subtitle.runs?.find(r=>r?.endpoint?.payload?.browseId.startsWith("UC"));o&&(this.author={name:o.text,channel_id:o.endpoint?.payload?.browseId,endpoint:o.endpoint}),this.menu=u.parseItem(e.menu);}};s(a0,"MusicDetailHeader"),i$1(a0,"type","MusicDetailHeader");var On=a0;var c0=class c0 extends c{constructor(e){super();i$1(this,"playlist_id");i$1(this,"supported_download_states");this.playlist_id=e.playlistId,this.supported_download_states=e.supportedDownloadStates;}};s(c0,"MusicDownloadStateBadge"),i$1(c0,"type","MusicDownloadStateBadge");var Rm=c0;var u0=class u0 extends c{constructor(e){super();i$1(this,"header");i$1(this,"edit_header");i$1(this,"playlist_id");this.header=u.parseItem(e.header),this.edit_header=u.parseItem(e.editHeader),this.playlist_id=e.playlistId;}};s(u0,"MusicEditablePlaylistDetailHeader"),i$1(u0,"type","MusicEditablePlaylistDetailHeader");var cc=u0;var l0=class l0 extends c{constructor(e){super();i$1(this,"element");this.element=Reflect.has(e,"elementRenderer")?u.parseItem(e,ra):null;}};s(l0,"MusicElementHeader"),i$1(l0,"type","MusicElementHeader");var No=l0;var p0=class p0 extends c{constructor(e){super();i$1(this,"header");i$1(this,"title");Reflect.has(e,"header")&&(this.header=u.parseItem(e.header)),Reflect.has(e,"title")&&(this.title=new l(e.title));}};s(p0,"MusicHeader"),i$1(p0,"type","MusicHeader");var ni=p0;var f0=class f0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"menu");i$1(this,"more_button");i$1(this,"play_button");i$1(this,"share_endpoint");i$1(this,"start_radio_button");i$1(this,"subscription_button");i$1(this,"description");i$1(this,"thumbnail");this.title=new l(e.title),this.menu=u.parseItem(e.menu,B),this.more_button=u.parseItem(e.moreButton,se),this.play_button=u.parseItem(e.playButton,v),"shareEndpoint"in e&&(this.share_endpoint=new d(e.shareEndpoint)),this.start_radio_button=u.parseItem(e.startRadioButton,v),this.subscription_button=u.parseItem(e.subscriptionButton,de),this.description=new l(e.description),this.thumbnail=u.parseItem(e.thumbnail,ke);}};s(f0,"MusicImmersiveHeader"),i$1(f0,"type","MusicImmersiveHeader");var uc=f0;var d0=class d0{constructor(t){i$1(this,"icon_name");i$1(this,"endpoint");i$1(this,"a11y_text");i$1(this,"style");this.icon_name=t.iconName,this.endpoint=new d(t.onTap),this.a11y_text=t.a11yText,this.style=t.style;}};s(d0,"ActionButton"),i$1(d0,"type","ActionButton");var E1=d0,m0=class m0{constructor(t){i$1(this,"image");i$1(this,"content_mode");i$1(this,"crop_options");i$1(this,"image_aspect_ratio");i$1(this,"caption");i$1(this,"action_buttons");this.image=y.fromResponse(t.image.image),this.content_mode=t.image.contentMode,this.crop_options=t.image.cropOptions,this.image_aspect_ratio=t.imageAspectRatio,this.caption=t.caption,this.action_buttons=t.actionButtons.map(e=>new E1(e));}};s(m0,"Panel"),i$1(m0,"type","Panel");var C1=m0,h0=class h0 extends c{constructor(e){super();i$1(this,"panels");i$1(this,"header");this.header=e.shelf.header,this.panels=e.shelf.panels.map(o=>new C1(o));}};s(h0,"MusicLargeCardItemCarousel"),i$1(h0,"type","MusicLargeCardItemCarousel");var Pm=h0;var _0=class _0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"edit_title");i$1(this,"edit_description");i$1(this,"privacy");i$1(this,"playlist_id");i$1(this,"endpoint");i$1(this,"privacy_dropdown");this.title=new l(e.title),this.edit_title=new l(e.editTitle),this.edit_description=new l(e.editDescription),this.privacy=e.privacy,this.playlist_id=e.playlistId,this.endpoint=new d(e.collaborationSettingsCommand),this.privacy_dropdown=u.parseItem(e.privacyDropdown,Kt);}};s(_0,"MusicPlaylistEditHeader"),i$1(_0,"type","MusicPlaylistEditHeader");var Am=_0;var b0=class b0 extends c{constructor(e){super();i$1(this,"playlist_id");i$1(this,"contents");i$1(this,"collapsed_item_count");i$1(this,"continuation");this.playlist_id=e.playlistId,this.contents=u.parseArray(e.contents,[Ue,K]),this.collapsed_item_count=e.collapsedItemCount,this.continuation=e.continuations?.[0]?.nextContinuationData?.continuation||null;}};s(b0,"MusicPlaylistShelf"),i$1(b0,"type","MusicPlaylistShelf");var Si=b0;var y0=class y0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"thumbnail");i$1(this,"endpoint");i$1(this,"selected");i$1(this,"video_id");i$1(this,"duration");i$1(this,"author");i$1(this,"album");i$1(this,"artists");i$1(this,"badges");i$1(this,"menu");i$1(this,"set_video_id");this.title=new l(e.title),this.thumbnail=y.fromResponse(e.thumbnail),this.endpoint=new d(e.navigationEndpoint),this.selected=e.selected,this.video_id=e.videoId,this.duration={text:new l(e.lengthText).toString(),seconds:Me(new l(e.lengthText).toString())};let o=new l(e.longBylineText).runs?.find(a=>a.endpoint?.payload?.browseId?.startsWith("MPR")),r=new l(e.longBylineText).runs?.filter(a=>a.endpoint?.payload?.browseId?.startsWith("UC"));this.author=new l(e.shortBylineText).toString(),o&&(this.album={id:o.endpoint?.payload?.browseId,name:o.text,year:new l(e.longBylineText).runs?.slice(-1)[0].text,endpoint:o.endpoint}),r&&(this.artists=r.map(a=>({name:a.text,channel_id:a.endpoint?.payload?.browseId,endpoint:a.endpoint}))),this.badges=u.parseArray(e.badges),this.menu=u.parseItem(e.menu),this.set_video_id=e.playlistSetVideoId;}};s(y0,"PlaylistPanelVideo"),i$1(y0,"type","PlaylistPanelVideo");var Bt=y0;var x0=class x0 extends c{constructor(e){super();i$1(this,"primary");i$1(this,"counterpart");this.primary=u.parseItem(e.primaryRenderer,Bt),Reflect.has(e,"counterpart")&&(this.counterpart=V(e.counterpart.map(o=>u.parseItem(o.counterpartRenderer,Bt))||[]));}};s(x0,"PlaylistPanelVideoWrapper"),i$1(x0,"type","PlaylistPanelVideoWrapper");var lc=x0;var g0=class g0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"title_text");i$1(this,"contents");i$1(this,"playlist_id");i$1(this,"is_infinite");i$1(this,"continuation");i$1(this,"is_editable");i$1(this,"preview_description");i$1(this,"num_items_to_show");this.title=e.title,this.title_text=new l(e.titleText),this.contents=u.parseArray(e.contents,[lc,Bt,qt]),this.playlist_id=e.playlistId,this.is_infinite=e.isInfinite,this.continuation=e.continuations?.[0]?.nextRadioContinuationData?.continuation||e.continuations?.[0]?.nextContinuationData?.continuation,this.is_editable=e.isEditable,this.preview_description=e.previewDescription,this.num_items_to_show=e.numItemsToShow;}};s(g0,"PlaylistPanel"),i$1(g0,"type","PlaylistPanel");var at=g0;var w0=class w0 extends c{constructor(e){super();i$1(this,"content");this.content=u.parseItem(e.content,at);}};s(w0,"MusicQueue"),i$1(w0,"type","MusicQueue");var Bn=w0;var T0=class T0 extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"buttons");i$1(this,"title");i$1(this,"subtitle");i$1(this,"strapline_text_one");i$1(this,"strapline_thumbnail");i$1(this,"second_subtitle");i$1(this,"subtitle_badge");i$1(this,"description");this.thumbnail=u.parseItem(e.thumbnail,ke),this.buttons=u.parseArray(e.buttons,[nn,se,An,v,B]),this.title=new l(e.title),this.subtitle=new l(e.subtitle),this.strapline_text_one=new l(e.straplineTextOne),this.strapline_thumbnail=u.parseItem(e.straplineThumbnail,ke),this.second_subtitle=new l(e.secondSubtitle),Reflect.has(e,"subtitleBadge")&&(this.subtitle_badge=u.parseArray(e.subtitleBadge,Pn)),Reflect.has(e,"description")&&(this.description=u.parseItem(e.description,ii));}};s(T0,"MusicResponsiveHeader"),i$1(T0,"type","MusicResponsiveHeader");var Ln=T0;var v0=class v0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"contents");i$1(this,"endpoint");i$1(this,"continuation");i$1(this,"bottom_text");i$1(this,"bottom_button");i$1(this,"subheaders");this.title=new l(e.title),this.contents=u.parseArray(e.contents,Ue),Reflect.has(e,"bottomEndpoint")&&(this.endpoint=new d(e.bottomEndpoint)),Reflect.has(e,"continuations")&&(this.continuation=e.continuations?.[0].nextContinuationData?.continuation||e.continuations?.[0].reloadContinuationData?.continuation),Reflect.has(e,"bottomText")&&(this.bottom_text=new l(e.bottomText)),Reflect.has(e,"bottomButton")&&(this.bottom_button=u.parseItem(e.bottomButton,v)),Reflect.has(e,"subheaders")&&(this.subheaders=u.parseArray(e.subheaders));}};s(v0,"MusicShelf"),i$1(v0,"type","MusicShelf");var ue=v0;var I0=class I0 extends c{constructor(e){super();i$1(this,"start_items");i$1(this,"end_items");Reflect.has(e,"startItems")&&(this.start_items=u.parseArray(e.startItems)),Reflect.has(e,"endItems")&&(this.end_items=u.parseArray(e.endItems));}};s(I0,"MusicSideAlignedItem"),i$1(I0,"type","MusicSideAlignedItem");var pc=I0;var k0=class k0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"icon_type");i$1(this,"menu");this.title=new l(e.title).toString(),Reflect.has(e,"icon")&&(this.icon_type=e.icon.iconType),this.menu=u.parseItem(e.menu,Za);}};s(k0,"MusicSortFilterButton"),i$1(k0,"type","MusicSortFilterButton");var Ro=k0;var S0=class S0 extends c{constructor(e){super();i$1(this,"thumbnail");this.thumbnail=y.fromResponse(e.thumbnail);}};s(S0,"MusicTastebuilderShelfThumbnail"),i$1(S0,"type","MusicTastebuilderShelfThumbnail");var fc=S0;var E0=class E0 extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"primary_text");i$1(this,"secondary_text");i$1(this,"action_button");i$1(this,"is_visible");this.thumbnail=u.parseItem(e.thumbnail,fc),this.primary_text=new l(e.primaryText),this.secondary_text=new l(e.secondaryText),this.action_button=u.parseItem(e.actionButton,v),this.is_visible=e.isVisible;}};s(E0,"MusicTasteBuilderShelf"),i$1(E0,"type","MusicTasteBuilderShelf");var dc=E0;var C0=class C0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"thumbnail");i$1(this,"menu");i$1(this,"foreground_thumbnail");this.title=new l(e.title),this.thumbnail=e.thumbnail?y.fromResponse(e.thumbnail.musicThumbnailRenderer?.thumbnail):[],this.menu=u.parseItem(e.menu,B),this.foreground_thumbnail=e.foregroundThumbnail?y.fromResponse(e.foregroundThumbnail.musicThumbnailRenderer?.thumbnail):[];}};s(C0,"MusicVisualHeader"),i$1(C0,"type","MusicVisualHeader");var mc=C0;var N0=class N0 extends c{constructor(e){super();i$1(this,"placeholder_text");i$1(this,"buttons");i$1(this,"logo_type");this.placeholder_text=new l(e.placeholderText),this.buttons=u.parseArray(e.buttons),Reflect.has(e,"logo")&&Reflect.has(e.logo,"iconType")&&(this.logo_type=e.logo.iconType);}};s(N0,"MobileTopbar"),i$1(N0,"type","MobileTopbar");var Mm=N0;var R0=class R0 extends c{constructor(e){super();i$1(this,"items");this.items=u.parseArray(e.items);}};s(R0,"MultiPageMenuSection"),i$1(R0,"type","MultiPageMenuSection");var Dm=R0;var P0=class P0 extends c{constructor(e){super();i$1(this,"items");this.items=u.parseArray(e.items);}};s(P0,"PivotBar"),i$1(P0,"type","PivotBar");var Om=P0;var A0=class A0 extends c{constructor(e){super();i$1(this,"pivot_identifier");i$1(this,"endpoint");i$1(this,"title");i$1(this,"accessibility_label");i$1(this,"icon_type");i$1(this,"accessibility");this.pivot_identifier=e.pivotIdentifier,this.endpoint=new d(e.navigationEndpoint),this.title=new Text(e.title),"accessibility"in e&&"accessibilityData"in e.accessibility&&(this.accessibility={accessibility_data:new pe(e.accessibility.accessibilityData)}),Reflect.has(e,"icon")&&Reflect.has(e.icon,"iconType")&&(this.icon_type=e.icon.iconType);}get label(){return this.accessibility?.accessibility_data?.label}};s(A0,"PivotBarItem"),i$1(A0,"type","PivotBarItem");var Bm=A0;var M0=class M0 extends c{constructor(e){super();i$1(this,"icon_type");i$1(this,"menu_renderer");i$1(this,"target_id");Reflect.has(e,"icon")&&Reflect.has(e.icon,"iconType")&&(this.icon_type=e.icon.iconType),this.menu_renderer=u.parseItem(e.menuRenderer),this.target_id=e.targetId;}};s(M0,"TopbarMenuButton"),i$1(M0,"type","TopbarMenuButton");var Lm=M0;var D0=class D0 extends c{constructor(e){super();i$1(this,"response_text");this.response_text=new l(e.responseText);}};s(D0,"NotificationAction"),i$1(D0,"type","NotificationAction");var Um=D0;var O0=class O0 extends c{constructor(e){super();i$1(this,"list_id");i$1(this,"modal_title");i$1(this,"select_button_label");this.list_id=e.listId,this.modal_title=e.modalTitle,this.select_button_label=e.selectButtonLabel;}};s(O0,"OpenOnePickAddVideoModalCommand"),i$1(O0,"type","OpenOnePickAddVideoModalCommand");var Ym=O0;var B0=class B0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"image");i$1(this,"animated_image");i$1(this,"hero_image");i$1(this,"metadata");i$1(this,"actions");i$1(this,"description");i$1(this,"attributation");i$1(this,"banner");this.title=u.parseItem(e.title,oa),this.image=u.parseItem(e.image,[Xt,gn]),this.animated_image=u.parseItem(e.animatedImage,Xt),this.hero_image=u.parseItem(e.heroImage,Xt),this.metadata=u.parseItem(e.metadata,yn),this.actions=u.parseItem(e.actions,sn),this.description=u.parseItem(e.description,Jr),this.attributation=u.parseItem(e.attributation,Rs),this.banner=u.parseItem(e.banner,Ta);}};s(B0,"PageHeaderView"),i$1(B0,"type","PageHeaderView");var hc=B0;var L0=class L0 extends c{constructor(e){super();i$1(this,"page_title");i$1(this,"content");this.page_title=e.pageTitle,this.content=u.parseItem(e.content,hc);}};s(L0,"PageHeader"),i$1(L0,"type","PageHeader");var _t=L0;var U0=class U0 extends c{constructor(e){super();i$1(this,"header_text");i$1(this,"body_text");i$1(this,"page_title");i$1(this,"header_icon_type");this.header_text=new l(e.headerText).toString(),this.body_text=new l(e.bodyText).toString(),this.page_title=new l(e.pageTitle).toString(),this.header_icon_type=e.headerIcon.iconType;}};s(U0,"PageIntroduction"),i$1(U0,"type","PageIntroduction");var _c=U0;var Y0=class Y0 extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"endpoint");i$1(this,"content_description");i$1(this,"target_id");i$1(this,"sound_attribution_title");i$1(this,"waveform_animation_style");i$1(this,"background_animation_style");this.thumbnail=y.fromResponse(e.thumbnail),this.endpoint=new d(e.onClickCommand),this.content_description=new l(e.contentDescription),this.target_id=e.targetId,this.sound_attribution_title=new l(e.soundAttributionTitle),this.waveform_animation_style=e.waveformAnimationStyle,this.background_animation_style=e.backgroundAnimationStyle;}};s(Y0,"PivotButton"),i$1(Y0,"type","PivotButton");var bc=Y0;var V0=class V0 extends c{constructor(e){super();i$1(this,"featured_channel");i$1(this,"allow_swipe_dismiss");i$1(this,"annotation_id");Reflect.has(e,"featuredChannel")&&(this.featured_channel={start_time_ms:e.featuredChannel.startTimeMs,end_time_ms:e.featuredChannel.endTimeMs,watermark:y.fromResponse(e.featuredChannel.watermark),channel_name:e.featuredChannel.channelName,endpoint:new d(e.featuredChannel.navigationEndpoint),subscribe_button:u.parseItem(e.featuredChannel.subscribeButton)}),this.allow_swipe_dismiss=e.allowSwipeDismiss,this.annotation_id=e.annotationId;}};s(V0,"PlayerAnnotationsExpanded"),i$1(V0,"type","PlayerAnnotationsExpanded");var yc=V0;var F0=class F0 extends c{constructor(e){super();i$1(this,"caption_tracks");i$1(this,"audio_tracks");i$1(this,"default_audio_track_index");i$1(this,"translation_languages");Reflect.has(e,"captionTracks")&&(this.caption_tracks=e.captionTracks.map(o=>({base_url:o.baseUrl,name:new l(o.name),vss_id:o.vssId,language_code:o.languageCode,kind:o.kind,is_translatable:o.isTranslatable}))),Reflect.has(e,"audioTracks")&&(this.audio_tracks=e.audioTracks.map(o=>({audio_track_id:o.audioTrackId,captions_initial_state:o.captionsInitialState,default_caption_track_index:o.defaultCaptionTrackIndex,has_default_track:o.hasDefaultTrack,visibility:o.visibility,caption_track_indices:o.captionTrackIndices}))),Reflect.has(e,"defaultAudioTrackIndex")&&(this.default_audio_track_index=e.defaultAudioTrackIndex),Reflect.has(e,"translationLanguages")&&(this.translation_languages=e.translationLanguages.map(o=>({language_code:o.languageCode,language_name:new l(o.languageName)})));}};s(F0,"PlayerCaptionsTracklist"),i$1(F0,"type","PlayerCaptionsTracklist");var xc=F0;var j0=class j0 extends c{constructor(e){super();i$1(this,"endpoint");i$1(this,"enable_listen_first");this.endpoint=new d(e.endpoint),this.enable_listen_first=e.enableListenFirst;}};s(j0,"PlayerOverflow"),i$1(j0,"type","PlayerOverflow");var gc=j0;var G0=class G0 extends c{constructor(e){super();i$1(this,"overflow");this.overflow=u.parseItem(e.overflow,gc);}};s(G0,"PlayerControlsOverlay"),i$1(G0,"type","PlayerControlsOverlay");var Vm=G0;var W0=class W0 extends c{constructor(e){super();i$1(this,"subreason");i$1(this,"reason");i$1(this,"proceed_button");i$1(this,"thumbnails");i$1(this,"icon_type");this.subreason=new l(e.subreason),this.reason=new l(e.reason),this.proceed_button=u.parseItem(e.proceedButton,v),this.thumbnails=y.fromResponse(e.thumbnail),Reflect.has(e,"icon")&&(this.icon_type=e.icon.iconType);}};s(W0,"PlayerErrorMessage"),i$1(W0,"type","PlayerErrorMessage");var Fm=W0;var H0=class H0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"thumbnail");i$1(this,"offer_description");i$1(this,"offer_id");this.title=e.itemTitle,this.thumbnail=e.itemThumbnail,this.offer_description=e.offerDescription,this.offer_id=e.offerId;}};s(H0,"PlayerLegacyDesktopYpcOffer"),i$1(H0,"type","PlayerLegacyDesktopYpcOffer");var jm=H0;var K0=class K0 extends c{constructor(e){super();i$1(this,"video_message");i$1(this,"player_response");this.video_message=e.fullVideoMessage,this.player_response=e.unserializedPlayerResponse;}};s(K0,"YpcTrailer"),i$1(K0,"type","YpcTrailer");var Ei=K0;var q0=class q0 extends c{constructor(e){super();i$1(this,"video_id");i$1(this,"title");i$1(this,"thumbnail");i$1(this,"offer_headline");i$1(this,"offer_description");i$1(this,"offer_id");i$1(this,"offer_button_text");i$1(this,"video_message");i$1(this,"trailer");this.video_id=e.trailerVideoId,this.title=e.itemTitle,this.thumbnail=e.itemThumbnail,this.offer_headline=e.offerHeadline,this.offer_description=e.offerDescription,this.offer_id=e.offerId,this.offer_button_text=e.offerButtonText,this.video_message=e.fullVideoMessage,this.trailer=u.parseItem(e.ypcTrailer,Ei);}};s(q0,"PlayerLegacyDesktopYpcTrailer"),i$1(q0,"type","PlayerLegacyDesktopYpcTrailer");var Po=q0;var $0=class $0 extends c{constructor(e){super();i$1(this,"board");let[o,r,a,f,m]=e.spec.split("#");this.board={type:"live",template_url:o,thumbnail_width:parseInt(r,10),thumbnail_height:parseInt(a,10),columns:parseInt(f,10),rows:parseInt(m,10)};}};s($0,"PlayerLiveStoryboardSpec"),i$1($0,"type","PlayerLiveStoryboardSpec");var wc=$0;var z0=class z0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"description");i$1(this,"thumbnails");i$1(this,"embed");i$1(this,"length_seconds");i$1(this,"channel");i$1(this,"is_family_safe");i$1(this,"is_unlisted");i$1(this,"has_ypc_metadata");i$1(this,"view_count");i$1(this,"category");i$1(this,"publish_date");i$1(this,"upload_date");i$1(this,"available_countries");i$1(this,"start_timestamp");i$1(this,"end_timestamp");this.title=new l(e.title),this.description=new l(e.description),this.thumbnails=y.fromResponse(e.thumbnail),Reflect.has(e,"embed")&&(this.embed={iframe_url:e.embed.iframeUrl,flash_url:e.embed.flashUrl,flash_secure_url:e.embed.flashSecureUrl,width:e.embed.width,height:e.embed.height}),this.length_seconds=parseInt(e.lengthSeconds),this.channel={id:e.externalChannelId,name:e.ownerChannelName,url:e.ownerProfileUrl},this.is_family_safe=!!e.isFamilySafe,this.is_unlisted=!!e.isUnlisted,this.has_ypc_metadata=!!e.hasYpcMetadata,this.view_count=parseInt(e.viewCount),this.category=e.category,this.publish_date=e.publishDate,this.upload_date=e.uploadDate,this.available_countries=e.availableCountries,this.start_timestamp=e.liveBroadcastDetails?.startTimestamp?new Date(e.liveBroadcastDetails.startTimestamp):null,this.end_timestamp=e.liveBroadcastDetails?.endTimestamp?new Date(e.liveBroadcastDetails.endTimestamp):null;}};s(z0,"PlayerMicroformat"),i$1(z0,"type","PlayerMicroformat");var qe=z0;var J0=class J0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"video_id");i$1(this,"video_title");i$1(this,"short_view_count");i$1(this,"prefer_immediate_redirect");i$1(this,"count_down_secs_for_fullscreen");i$1(this,"published");i$1(this,"background");i$1(this,"thumbnail_overlays");i$1(this,"author");i$1(this,"cancel_button");i$1(this,"next_button");i$1(this,"close_button");this.title=new l(e.title),this.video_id=e.videoId,this.video_title=new l(e.videoTitle),this.short_view_count=new l(e.shortViewCountText),this.prefer_immediate_redirect=e.preferImmediateRedirect,this.count_down_secs_for_fullscreen=e.countDownSecsForFullscreen,this.published=new l(e.publishedTimeText),this.background=y.fromResponse(e.background),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays),this.author=new D(e.byline),this.cancel_button=u.parseItem(e.cancelButton,v),this.next_button=u.parseItem(e.nextButton,v),this.close_button=u.parseItem(e.closeButton,v);}};s(J0,"PlayerOverlayAutoplay"),i$1(J0,"type","PlayerOverlayAutoplay");var Tc=J0;var X0=class X0 extends c{constructor(e){super();i$1(this,"title");i$1(this,"subtitle");this.title=new l(e.title),this.subtitle=new l(e.subtitle);}};s(X0,"PlayerOverlayVideoDetails"),i$1(X0,"type","PlayerOverlayVideoDetails");var vc=X0;var Z0=class Z0 extends c{constructor(e){super();i$1(this,"results");i$1(this,"title");this.results=u.parseArray(e.results,[pa,la]),this.title=new l(e.title).toString();}};s(Z0,"WatchNextEndScreen"),i$1(Z0,"type","WatchNextEndScreen");var Ic=Z0;var Q0=class Q0 extends c{constructor(e){super();i$1(this,"end_screen");i$1(this,"autoplay");i$1(this,"share_button");i$1(this,"add_to_menu");i$1(this,"fullscreen_engagement");i$1(this,"actions");i$1(this,"browser_media_session");i$1(this,"decorated_player_bar");i$1(this,"video_details");this.end_screen=u.parseItem(e.endScreen,Ic),this.autoplay=u.parseItem(e.autoplay,Tc),this.share_button=u.parseItem(e.shareButton,v),this.add_to_menu=u.parseItem(e.addToMenu,B),this.fullscreen_engagement=u.parseItem(e.fullscreenEngagement),this.actions=u.parseArray(e.actions),this.browser_media_session=u.parseItem(e.browserMediaSession),this.decorated_player_bar=u.parseItem(e.decoratedPlayerBarRenderer,zr),this.video_details=u.parseItem(e.videoDetails,vc);}};s(Q0,"PlayerOverlay"),i$1(Q0,"type","PlayerOverlay");var oi=Q0;var eI=class eI extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"subtitle");i$1(this,"stats");i$1(this,"brief_stats");i$1(this,"author");i$1(this,"description");i$1(this,"num_videos");i$1(this,"view_count");i$1(this,"can_share");i$1(this,"can_delete");i$1(this,"is_editable");i$1(this,"privacy");i$1(this,"save_button");i$1(this,"shuffle_play_button");i$1(this,"menu");i$1(this,"banner");this.id=e.playlistId,this.title=new l(e.title),this.subtitle=e.subtitle?new l(e.subtitle):null,this.stats=e.stats.map(o=>new l(o)),this.brief_stats=e.briefStats.map(o=>new l(o)),this.author=e.ownerText||e.ownerEndpoint?new D({...e.ownerText,navigationEndpoint:e.ownerEndpoint},e.ownerBadges,null):null,this.description=new l(e.descriptionText),this.num_videos=new l(e.numVideosText),this.view_count=new l(e.viewCountText),this.can_share=e.shareData.canShare,this.can_delete=e.editableDetails.canDelete,this.is_editable=e.isEditable,this.privacy=e.privacy,this.save_button=u.parseItem(e.saveButton),this.shuffle_play_button=u.parseItem(e.shufflePlayButton),this.menu=u.parseItem(e.moreActionsMenu),this.banner=u.parseItem(e.playlistHeaderBanner);}};s(eI,"PlaylistHeader"),i$1(eI,"type","PlaylistHeader");var kc=eI;var tI=class tI extends c{constructor(e){super();i$1(this,"title");i$1(this,"thumbnails");i$1(this,"video_count");i$1(this,"channel_name");i$1(this,"endpoint");this.title=new l(e.playlistTitle),this.thumbnails=y.fromResponse(e.thumbnail),this.video_count=new l(e.playlistVideoCount),this.channel_name=new l(e.channelName),this.endpoint=new d(e.action);}};s(tI,"PlaylistInfoCardContent"),i$1(tI,"type","PlaylistInfoCardContent");var Gm=tI;var iI=class iI extends c{constructor(e){super();i$1(this,"title");i$1(this,"description");this.title=e.title,this.description=e.description||null;}};s(iI,"PlaylistMetadata"),i$1(iI,"type","PlaylistMetadata");var Sc=iI;var nI=class nI extends c{constructor(e){super();i$1(this,"items");this.items=u.parseArray(e.items);}get contents(){return this.items}};s(nI,"PlaylistSidebar"),i$1(nI,"type","PlaylistSidebar");var Wm=nI;var oI=class oI extends c{constructor(e){super();i$1(this,"stats");i$1(this,"thumbnail_renderer");i$1(this,"title");i$1(this,"menu");i$1(this,"endpoint");i$1(this,"description");this.stats=e.stats.map(o=>new l(o)),this.thumbnail_renderer=u.parseItem(e.thumbnailRenderer),this.title=new l(e.title),this.menu=u.parseItem(e.menu),this.endpoint=new d(e.navigationEndpoint),this.description=new l(e.description);}};s(oI,"PlaylistSidebarPrimaryInfo"),i$1(oI,"type","PlaylistSidebarPrimaryInfo");var Ec=oI;var sI=class sI extends c{constructor(e){super();i$1(this,"owner");i$1(this,"button");this.owner=u.parseItem(e.videoOwner),this.button=u.parseItem(e.button);}};s(sI,"PlaylistSidebarSecondaryInfo"),i$1(sI,"type","PlaylistSidebarSecondaryInfo");var Cc=sI;var rI=class rI extends c{constructor(e){super();i$1(this,"icon_type");i$1(this,"text");Reflect.has(e,"icon")&&(this.icon_type=e.icon.iconType),this.text=new l(e.text);}};s(rI,"PlaylistThumbnailOverlay"),i$1(rI,"type","PlaylistThumbnailOverlay");var Hm=rI;var aI=class aI extends c{constructor(e){super();i$1(this,"id");i$1(this,"index");i$1(this,"title");i$1(this,"author");i$1(this,"thumbnails");i$1(this,"thumbnail_overlays");i$1(this,"set_video_id");i$1(this,"endpoint");i$1(this,"is_playable");i$1(this,"menu");i$1(this,"upcoming");i$1(this,"video_info");i$1(this,"accessibility_label");i$1(this,"style");i$1(this,"duration");this.id=e.videoId,this.index=new l(e.index),this.title=new l(e.title),this.author=new D(e.shortBylineText),this.thumbnails=y.fromResponse(e.thumbnail),this.thumbnail_overlays=u.parseArray(e.thumbnailOverlays),this.set_video_id=e?.setVideoId,this.endpoint=new d(e.navigationEndpoint),this.is_playable=e.isPlayable,this.menu=u.parseItem(e.menu,B),this.video_info=new l(e.videoInfo),this.accessibility_label=e.title.accessibility.accessibilityData.label,Reflect.has(e,"style")&&(this.style=e.style);let o=e.upcomingEventData&&+`${e.upcomingEventData.startTime}000`;o&&(this.upcoming=new Date(o)),this.duration={text:new l(e.lengthText).toString(),seconds:parseInt(e.lengthSeconds)};}get is_live(){return this.thumbnail_overlays.firstOfType(lt)?.style==="LIVE"}get is_upcoming(){return this.thumbnail_overlays.firstOfType(lt)?.style==="UPCOMING"}};s(aI,"PlaylistVideo"),i$1(aI,"type","PlaylistVideo");var Un=aI;var cI=class cI extends c{constructor(e){super();i$1(this,"id");i$1(this,"is_editable");i$1(this,"can_reorder");i$1(this,"videos");this.id=e.playlistId,this.is_editable=e.isEditable,this.can_reorder=e.canReorder,this.videos=u.parseArray(e.contents);}};s(cI,"PlaylistVideoList"),i$1(cI,"type","PlaylistVideoList");var Nc=cI;var uI=class uI extends c{constructor(e){super();i$1(this,"choices");i$1(this,"poll_type");i$1(this,"total_votes");i$1(this,"live_chat_poll_id");this.choices=e.choices.map(o=>({text:new l(o.text),select_endpoint:o.selectServiceEndpoint?new d(o.selectServiceEndpoint):null,deselect_endpoint:o.deselectServiceEndpoint?new d(o.deselectServiceEndpoint):null,vote_ratio_if_selected:o?.voteRatioIfSelected||null,vote_percentage_if_selected:new l(o.votePercentageIfSelected),vote_ratio_if_not_selected:o?.voteRatioIfSelected||null,vote_percentage_if_not_selected:new l(o.votePercentageIfSelected),image:o.image?y.fromResponse(o.image):null})),Reflect.has(e,"type")&&(this.poll_type=e.type),Reflect.has(e,"totalVotes")&&(this.total_votes=new l(e.totalVotes)),Reflect.has(e,"liveChatPollId")&&(this.live_chat_poll_id=e.liveChatPollId);}};s(uI,"Poll"),i$1(uI,"type","Poll");var Km=uI;var lI=class lI extends zt{constructor(t){super(t);}};s(lI,"Post"),i$1(lI,"type","Post");var Yn=lI;var pI=class pI extends c{constructor(e){super();i$1(this,"images");this.images=u.parseArray(e.images,Ms);}};s(pI,"PostMultiImage"),i$1(pI,"type","PostMultiImage");var qm=pI;var fI=class fI extends c{constructor(e){super();i$1(this,"label");this.label=new l(e.label);}};s(fI,"PremiereTrailerBadge"),i$1(fI,"type","PremiereTrailerBadge");var $m=fI;var dI=class dI extends c{constructor(e){super();i$1(this,"title");i$1(this,"suppress_padding_disclaimer");this.title=new l(e.title),this.suppress_padding_disclaimer=!!e.suppressPaddingDisclaimer;}};s(dI,"ProductListHeader"),i$1(dI,"type","ProductListHeader");var zm=dI;var mI=class mI extends c{constructor(e){super();i$1(this,"title");i$1(this,"accessibility_title");i$1(this,"thumbnail");i$1(this,"price");i$1(this,"endpoint");i$1(this,"merchant_name");i$1(this,"stay_in_app");i$1(this,"view_button");this.title=new l(e.title),this.accessibility_title=e.accessibilityTitle,this.thumbnail=y.fromResponse(e.thumbnail),this.price=e.price,this.endpoint=new d(e.onClickCommand),this.merchant_name=e.merchantName,this.stay_in_app=!!e.stayInApp,this.view_button=u.parseItem(e.viewButton,v);}};s(mI,"ProductListItem"),i$1(mI,"type","ProductListItem");var Jm=mI;var hI=class hI extends c{constructor(e){super();i$1(this,"items");this.items=u.parseArray(e.items);}get contents(){return this.items}};s(hI,"ProfileColumn"),i$1(hI,"type","ProfileColumn");var Rc=hI;var _I=class _I extends c{constructor(e){super();i$1(this,"items");this.items=u.parseArray(e.items);}get contents(){return this.items}};s(_I,"ProfileColumnStats"),i$1(_I,"type","ProfileColumnStats");var Xm=_I;var bI=class bI extends c{constructor(e){super();i$1(this,"label");i$1(this,"value");this.label=new l(e.label),this.value=new l(e.value);}};s(bI,"ProfileColumnStatsEntry"),i$1(bI,"type","ProfileColumnStatsEntry");var Zm=bI;var yI=class yI extends c{constructor(e){super();i$1(this,"title");i$1(this,"thumbnails");this.title=new l(e.title),this.thumbnails=y.fromResponse(e.thumbnail);}};s(yI,"ProfileColumnUserInfo"),i$1(yI,"type","ProfileColumnUserInfo");var Qm=yI;var xI=class xI extends c{constructor(e){super();i$1(this,"choices");i$1(this,"total_votes");this.choices=e.choices.map(o=>({text:new l(o.text),is_correct:o.isCorrect})),this.total_votes=new l(e.totalVotes);}};s(xI,"Quiz"),i$1(xI,"type","Quiz");var eh=xI;var gI=class gI extends c{constructor(e){super();i$1(this,"title");i$1(this,"subtitle");i$1(this,"avatars");i$1(this,"button");i$1(this,"surface");this.title=new l(e.title),this.subtitle=new l(e.subtitle),this.avatars=e.avatars.map(o=>new y(o)),this.button=u.parseItem(e.button,v),this.surface=e.surface;}};s(gI,"RecognitionShelf"),i$1(gI,"type","RecognitionShelf");var th=gI;var wI=class wI extends c{constructor(e){super();i$1(this,"id");i$1(this,"title");i$1(this,"thumbnails");i$1(this,"views");i$1(this,"endpoint");i$1(this,"accessibility");this.id=e.videoId,this.title=new l(e.headline),this.thumbnails=y.fromResponse(e.thumbnail),this.views=new l(e.viewCountText),this.endpoint=new d(e.navigationEndpoint),"accessibility"in e&&"accessibilityData"in e.accessibility&&(this.accessibility={accessibility_data:new pe(e.accessibility.accessibilityData)});}get label(){return this.accessibility?.accessibility_data?.label}};s(wI,"ReelItem"),i$1(wI,"type","ReelItem");var Vn=wI;var TI=class TI extends c{constructor(e){super();i$1(this,"reel_title_text");i$1(this,"timestamp_text");i$1(this,"channel_title_text");i$1(this,"channel_thumbnail");i$1(this,"author");this.reel_title_text=new l(e.reelTitleText),this.timestamp_text=new l(e.timestampText),this.channel_title_text=new l(e.channelTitleText),this.channel_thumbnail=y.fromResponse(e.channelThumbnail),this.author=new D(e.channelNavigationEndpoint,void 0);}};s(TI,"ReelPlayerHeader"),i$1(TI,"type","ReelPlayerHeader");var Pc=TI;var vI=class vI extends c{constructor(e){super();i$1(this,"like_button");i$1(this,"reel_player_header_supported_renderers");i$1(this,"menu");i$1(this,"next_item_button");i$1(this,"prev_item_button");i$1(this,"subscribe_button_renderer");i$1(this,"style");i$1(this,"view_comments_button");i$1(this,"share_button");i$1(this,"pivot_button");i$1(this,"info_panel");this.like_button=u.parseItem(e.likeButton,on),this.reel_player_header_supported_renderers=u.parseItem(e.reelPlayerHeaderSupportedRenderers,Pc),this.menu=u.parseItem(e.menu,B),this.next_item_button=u.parseItem(e.nextItemButton,v),this.prev_item_button=u.parseItem(e.prevItemButton,v),this.subscribe_button_renderer=u.parseItem(e.subscribeButtonRenderer,[v,de]),this.style=e.style,this.view_comments_button=u.parseItem(e.viewCommentsButton,v),this.share_button=u.parseItem(e.shareButton,v),this.pivot_button=u.parseItem(e.pivotButton,bc),this.info_panel=u.parseItem(e.infoPanel,Ia);}};s(vI,"ReelPlayerOverlay"),i$1(vI,"type","ReelPlayerOverlay");var ih=vI;var II=class II extends c{constructor(e){super();i$1(this,"content");this.content=u.parseItem(e.content);}};s(II,"RelatedChipCloud"),i$1(II,"type","RelatedChipCloud");var Ac=II;var kI=class kI extends c{constructor(e){super();i$1(this,"header");i$1(this,"contents");i$1(this,"target_id");this.header=u.parseItem(e.header),this.contents=u.parseArray(e.contents),Reflect.has(e,"targetId")&&(this.target_id=e.targetId);}};s(kI,"RichGrid"),i$1(kI,"type","RichGrid");var bt=kI;var SI=class SI extends c{constructor(e){super();i$1(this,"content");this.content=u.parseItem(e.content);}};s(SI,"RichItem"),i$1(SI,"type","RichItem");var nh=SI;var EI=class EI extends c{constructor(e){super();i$1(this,"title");i$1(this,"subtitle");i$1(this,"title_style");i$1(this,"icon_type");this.title=new l(e.title),this.subtitle=new l(e.subtitle),Reflect.has(e,"titleStyle")&&(this.title_style=e.titleStyle.style),Reflect.has(e,"icon")&&(this.icon_type=e.icon.iconType);}};s(EI,"RichListHeader"),i$1(EI,"type","RichListHeader");var oh=EI;var CI=class CI extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"title");i$1(this,"subtitle");i$1(this,"call_to_action");i$1(this,"icon_type");i$1(this,"endpoint");this.thumbnail=y.fromResponse(e.thumbnail),this.title=new l(e.title),this.subtitle=new l(e.subtitle),this.call_to_action=new l(e.callToAction),Reflect.has(e,"callToActionIcon")&&(this.icon_type=e.callToActionIcon.iconType),this.endpoint=new d(e.endpoint);}};s(CI,"RichMetadata"),i$1(CI,"type","RichMetadata");var Ao=CI;var NI=class NI extends c{constructor(e){super();i$1(this,"contents");this.contents=u.parseArray(e.contents);}};s(NI,"RichMetadataRow"),i$1(NI,"type","RichMetadataRow");var Mo=NI;var RI=class RI extends c{constructor(e){super();i$1(this,"content");i$1(this,"full_bleed");i$1(this,"target_id");this.content=u.parseItem(e.content),this.full_bleed=!!e.fullBleed,"targetId"in e&&(this.target_id=e.targetId);}};s(RI,"RichSection"),i$1(RI,"type","RichSection");var sh=RI;var PI=class PI extends c{constructor(e){super();i$1(this,"title");i$1(this,"contents");i$1(this,"endpoint");i$1(this,"subtitle");i$1(this,"is_expanded");i$1(this,"is_bottom_divider_hidden");i$1(this,"is_top_divider_hidden");i$1(this,"layout_sizing");i$1(this,"icon_type");i$1(this,"menu");i$1(this,"next_button");i$1(this,"previous_button");this.title=new l(e.title),this.contents=u.parseArray(e.contents),this.is_expanded=!!e.is_expanded,this.is_bottom_divider_hidden=!!e.isBottomDividerHidden,this.is_top_divider_hidden=!!e.isTopDividerHidden,"endpoint"in e&&(this.endpoint=new d(e.endpoint)),"subtitle"in e&&(this.subtitle=new l(e.subtitle)),"layoutSizing"in e&&(this.layout_sizing=e.layoutSizing),"icon"in e&&(this.icon_type=e.icon.iconType),this.menu=u.parseItem(e.menu),this.next_button=u.parseItem(e.nextButton),this.previous_button=u.parseItem(e.previousButton);}};s(PI,"RichShelf"),i$1(PI,"type","RichShelf");var Mc=PI;var AI=class AI extends c{constructor(e){super();i$1(this,"label");i$1(this,"endpoint");i$1(this,"tooltip");i$1(this,"status");this.label=new l(e.label),this.endpoint=new d(e.endpoint||e.navigationEndpoint),this.tooltip=e.tooltip,Reflect.has(e,"status")&&(this.status=e.status);}get disabled(){return this.status==="FILTER_STATUS_DISABLED"}get selected(){return this.status==="FILTER_STATUS_SELECTED"}};s(AI,"SearchFilter"),i$1(AI,"type","SearchFilter");var Dc=AI;var MI=class MI extends c{constructor(e){super();i$1(this,"title");i$1(this,"filters");this.title=new l(e.title),this.filters=u.parseArray(e.filters,Dc);}};s(MI,"SearchFilterGroup"),i$1(MI,"type","SearchFilterGroup");var Fn=MI;var DI=class DI extends c{constructor(e){super();i$1(this,"title");i$1(this,"groups");this.title=new l(e.title),this.groups=u.parseArray(e.groups,Fn);}};s(DI,"SearchFilterOptionsDialog"),i$1(DI,"type","SearchFilterOptionsDialog");var rh=DI;var OI=class OI extends c{constructor(e){super();i$1(this,"chip_bar");i$1(this,"search_filter_button");this.chip_bar=u.parseItem(e.chipBar,Ge),this.search_filter_button=u.parseItem(e.searchFilterButton,v);}};s(OI,"SearchHeader"),i$1(OI,"type","SearchHeader");var Oc=OI;var BI=class BI extends c{constructor(e){super();i$1(this,"title");i$1(this,"groups");i$1(this,"button");Reflect.has(e,"title")&&(this.title=new l(e.title)),Reflect.has(e,"groups")&&(this.groups=u.parseArray(e.groups,Fn)),Reflect.has(e,"button")&&(this.button=u.parseItem(e.button,se));}};s(BI,"SearchSubMenu"),i$1(BI,"type","SearchSubMenu");var Bc=BI;var LI=class LI extends c{constructor(e){super();i$1(this,"contents");this.contents=u.parseArray(e.contents);}};s(LI,"SearchSuggestionsSection"),i$1(LI,"type","SearchSuggestionsSection");var Lc=LI;var UI=class UI extends c{constructor(e){super();i$1(this,"header");i$1(this,"call_to_action");i$1(this,"sections");i$1(this,"collapsed_label");this.header=u.parseItem(e.header),this.call_to_action=u.parseItem(e.callToAction),this.sections=u.parseArray(e.sections),Reflect.has(e,"collapsedLabel")&&(this.collapsed_label=new l(e.collapsedLabel));}};s(UI,"UniversalWatchCard"),i$1(UI,"type","UniversalWatchCard");var jn=UI;var YI=class YI extends c{constructor(e){super();i$1(this,"target_id");i$1(this,"contents");this.contents=u.parseArray(e.contents,[jn]);}};s(YI,"SecondarySearchContainer"),i$1(YI,"type","SecondarySearchContainer");var Uc=YI;var VI=class VI extends c{constructor(e){super();i$1(this,"headline");this.headline=l.fromAttributed(e.headline);}};s(VI,"SectionHeaderView"),i$1(VI,"type","SectionHeaderView");var ah=VI;var FI=class FI extends c{constructor(e){super();i$1(this,"like_button");i$1(this,"dislike_button");this.like_button=u.parseItem(e.likeButton,[se,v]),this.dislike_button=u.parseItem(e.dislikeButton,[se,v]);}};s(FI,"SegmentedLikeDislikeButton"),i$1(FI,"type","SegmentedLikeDislikeButton");var Ci=FI;var jI=class jI extends c{constructor(e){super();i$1(this,"title");i$1(this,"summary");i$1(this,"enable_endpoint");i$1(this,"disable_endpoint");i$1(this,"item_id");Reflect.has(e,"title")&&(this.title=new l(e.title)),Reflect.has(e,"summary")&&(this.summary=new l(e.summary)),Reflect.has(e,"enableServiceEndpoint")&&(this.enable_endpoint=new d(e.enableServiceEndpoint)),Reflect.has(e,"disableServiceEndpoint")&&(this.disable_endpoint=new d(e.disableServiceEndpoint)),this.item_id=e.itemId;}};s(jI,"SettingBoolean"),i$1(jI,"type","SettingBoolean");var ch=jI;var GI=class GI extends c{constructor(e){super();i$1(this,"title");i$1(this,"help_text");i$1(this,"enabled");i$1(this,"disabled");i$1(this,"id");this.title=new l(e.title),this.help_text=new l(e.helpText),this.enabled=e.enabled,this.disabled=e.disabled,this.id=e.id;}};s(GI,"SettingsCheckbox"),i$1(GI,"type","SettingsCheckbox");var Yc=GI;var WI=class WI extends c{constructor(e){super();i$1(this,"title");i$1(this,"subtitle");i$1(this,"enabled");i$1(this,"enable_endpoint");i$1(this,"disable_endpoint");this.title=new l(e.title),this.subtitle=new l(e.subtitle),this.enabled=e.enabled,this.enable_endpoint=new d(e.enableServiceEndpoint),this.disable_endpoint=new d(e.disableServiceEndpoint);}};s(WI,"SettingsSwitch"),i$1(WI,"type","SettingsSwitch");var Gn=WI;var HI=class HI extends c{constructor(e){super();i$1(this,"title");i$1(this,"text");i$1(this,"options");this.title=new l(e.title),Reflect.has(e,"text")&&(this.text=new l(e.text).toString()),Reflect.has(e,"options")&&(this.options=u.parseArray(e.options,[Gn,Kt,xn,Yc,Sr]));}};s(HI,"SettingsOptions"),i$1(HI,"type","SettingsOptions");var Wn=HI;var KI=class KI extends c{constructor(e){super();i$1(this,"title");i$1(this,"items");this.title=new l(e.title),this.items=u.parseArray(e.items,ct);}get contents(){return this.items}};s(KI,"SettingsSidebar"),i$1(KI,"type","SettingsSidebar");var Vc=KI;var qI=class qI extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"content");i$1(this,"published");i$1(this,"menu");i$1(this,"original_post");i$1(this,"id");i$1(this,"endpoint");i$1(this,"expand_button");i$1(this,"author");this.thumbnail=y.fromResponse(e.thumbnail),this.content=new l(e.content),this.published=new l(e.publishedTimeText),this.menu=u.parseItem(e.actionMenu,B),this.original_post=u.parseItem(e.originalPost,[zt,Yn]),this.id=e.postId,this.endpoint=new d(e.navigationEndpoint),this.expand_button=u.parseItem(e.expandButton,v),this.author=new D(e.displayName,void 0);}};s(qI,"SharedPost"),i$1(qI,"type","SharedPost");var Fc=qI;var $I=class $I extends c{constructor(e){super();i$1(this,"title");this.title=u.parseItem(e.title);}};s($I,"SharePanelHeader"),i$1($I,"type","SharePanelHeader");var jc=$I;var zI=class zI extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(zI,"SharePanelTitleV15"),i$1(zI,"type","SharePanelTitleV15");var uh=zI;var JI=class JI extends c{constructor(e){super();i$1(this,"endpoint");i$1(this,"service_name");i$1(this,"target_id");i$1(this,"title");Reflect.has(e,"serviceEndpoint")?this.endpoint=new d(e.serviceEndpoint):Reflect.has(e,"navigationEndpoint")&&(this.endpoint=new d(e.navigationEndpoint)),this.service_name=e.serviceName,this.target_id=e.targetId,this.title=new l(e.title);}};s(JI,"ShareTarget"),i$1(JI,"type","ShareTarget");var Gc=JI;var XI=class XI extends c{constructor(e){super();i$1(this,"title");i$1(this,"endpoint");i$1(this,"content");i$1(this,"icon_type");i$1(this,"menu");i$1(this,"play_all_button");i$1(this,"subtitle");this.title=new l(e.title),Reflect.has(e,"endpoint")&&(this.endpoint=new d(e.endpoint)),this.content=u.parseItem(e.content),Reflect.has(e,"icon")&&(this.icon_type=e.icon.iconType),Reflect.has(e,"menu")&&(this.menu=u.parseItem(e.menu)),Reflect.has(e,"playAllButton")&&(this.play_all_button=u.parseItem(e.playAllButton,v)),Reflect.has(e,"subtitle")&&(this.subtitle=new l(e.subtitle));}};s(XI,"Shelf"),i$1(XI,"type","Shelf");var Hn=XI;var ZI=class ZI extends c{constructor(e){super();i$1(this,"entity_id");i$1(this,"accessibility_text");i$1(this,"thumbnail");i$1(this,"on_tap_endpoint");i$1(this,"menu_on_tap");i$1(this,"index_in_collection");i$1(this,"menu_on_tap_a11y_label");i$1(this,"overlay_metadata");i$1(this,"inline_player_data");i$1(this,"badge");this.entity_id=e.entityId,this.accessibility_text=e.accessibilityText,this.thumbnail=y.fromResponse(e.thumbnail),this.on_tap_endpoint=new d(e.onTap),this.menu_on_tap=new d(e.menuOnTap),this.index_in_collection=e.indexInCollection,this.menu_on_tap_a11y_label=e.menuOnTapA11yLabel,this.overlay_metadata={primary_text:e.overlayMetadata.primaryText?l.fromAttributed(e.overlayMetadata.primaryText):void 0,secondary_text:e.overlayMetadata.secondaryText?l.fromAttributed(e.overlayMetadata.secondaryText):void 0},e.inlinePlayerData?.onVisible&&(this.inline_player_data=new d(e.inlinePlayerData.onVisible)),e.badge&&(this.badge=u.parseItem(e.badge,rn));}};s(ZI,"ShortsLockupView"),i$1(ZI,"type","ShortsLockupView");var Kn=ZI;var QI=class QI extends c{constructor(e){super();i$1(this,"corrected_query");i$1(this,"original_query");i$1(this,"corrected_query_endpoint");i$1(this,"original_query_endpoint");i$1(this,"search_instead_for");i$1(this,"showing_results_for");this.corrected_query=new l(e.correctedQuery),this.original_query=new l(e.originalQuery),this.corrected_query_endpoint=new d(e.correctedQueryEndpoint),this.original_query_endpoint=new d(e.originalQueryEndpoint),this.search_instead_for=new l(e.searchInsteadFor),this.showing_results_for=new l(e.showingResultsFor);}};s(QI,"ShowingResultsFor"),i$1(QI,"type","ShowingResultsFor");var Wc=QI;var ek=class ek extends c{constructor(e){super();i$1(this,"image");i$1(this,"title");i$1(this,"display_domain");i$1(this,"show_link_icon");i$1(this,"call_to_action");i$1(this,"endpoint");this.image=y.fromResponse(e.image),this.title=new l(e.title),this.display_domain=new l(e.displayDomain),this.show_link_icon=e.showLinkIcon,this.call_to_action=new l(e.callToAction),this.endpoint=new d(e.command);}};s(ek,"SimpleCardContent"),i$1(ek,"type","SimpleCardContent");var lh=ek;var tk=class tk extends c{constructor(e){super();i$1(this,"message");i$1(this,"prominent");this.message=new l(e.message),this.prominent=e.prominent;}};s(tk,"SimpleCardTeaser"),i$1(tk,"type","SimpleCardTeaser");var ph=tk;var ik=class ik extends c{constructor(e){super();i$1(this,"lines");i$1(this,"style");this.lines=e.lines.map(o=>new l(o)),this.style=e.layoutStyle;}};s(ik,"SimpleTextSection"),i$1(ik,"type","SimpleTextSection");var fh=ik;var nk=class nk extends c{constructor(e){super();i$1(this,"action_text");i$1(this,"nav_text");i$1(this,"details");i$1(this,"icon_type");i$1(this,"endpoint");this.action_text=new l(e.actionText),this.nav_text=new l(e.navigationText),this.details=new l(e.detailsText),this.icon_type=e.icon.iconType,this.endpoint=new d(e.navigationEndpoint);}};s(nk,"SingleActionEmergencySupport"),i$1(nk,"type","SingleActionEmergencySupport");var dh=nk;var ok=class ok extends c{constructor(e){super();i$1(this,"title");i$1(this,"selected");i$1(this,"endpoint");i$1(this,"content");this.title=e.title||"N/A",this.selected=!!e.selected,this.endpoint=new d(e.endpoint),this.content=u.parseItem(e.content,[G,Bn,bt]);}};s(ok,"Tab"),i$1(ok,"type","Tab");var re=ok;var sk=class sk extends c{constructor(e){super();i$1(this,"tabs");this.tabs=u.parseArray(e.tabs,re);}};s(sk,"SingleColumnBrowseResults"),i$1(sk,"type","SingleColumnBrowseResults");var si=sk;var rk=class rk extends c{constructor(e){super();i$1(this,"contents");this.contents=u.parse(e);}};s(rk,"SingleColumnMusicWatchNextResults"),i$1(rk,"type","SingleColumnMusicWatchNextResults");var mh=rk;var ak=class ak extends c{constructor(e){super();i$1(this,"thumbnails");i$1(this,"style");this.thumbnails=y.fromResponse(e.thumbnail),this.style=e.style;}};s(ak,"SingleHeroImage"),i$1(ak,"type","SingleHeroImage");var hh=ak;var ck=class ck extends c{constructor(e){super();i$1(this,"thumbnail");i$1(this,"title");i$1(this,"endpoint");i$1(this,"subscribe_button");this.thumbnail=y.fromResponse(e.thumbnail),this.title=new l(e.title),this.endpoint=new d(e.navigationEndpoint),this.subscribe_button=u.parseItem(e.subscribeButton,de);}};s(ck,"SlimOwner"),i$1(ck,"type","SlimOwner");var _h=ck;var uk=class uk extends c{constructor(e){super();i$1(this,"title");i$1(this,"collapsed_subtitle");i$1(this,"expanded_subtitle");i$1(this,"owner");i$1(this,"description");i$1(this,"video_id");i$1(this,"date");this.title=new l(e.title),this.collapsed_subtitle=new l(e.collapsedSubtitle),this.expanded_subtitle=new l(e.expandedSubtitle),this.owner=u.parseItem(e.owner),this.description=new l(e.description),this.video_id=e.videoId,this.date=new l(e.dateText);}};s(uk,"SlimVideoMetadata"),i$1(uk,"type","SlimVideoMetadata");var Hc=uk;var lk=class lk extends c{constructor(e){super();i$1(this,"start_at_option_label");this.start_at_option_label=new l(e.startAtOptionLabel);}};s(lk,"StartAt"),i$1(lk,"type","StartAt");var Kc=lk;var pk=class pk extends c{constructor(e){super();i$1(this,"contents");this.contents=u.parse(e);}};s(pk,"Tabbed"),i$1(pk,"type","Tabbed");var bh=pk;var fk=class fk extends c{constructor(e){super();i$1(this,"tabs");this.tabs=u.parseArray(e.tabs,re);}};s(fk,"TabbedSearchResults"),i$1(fk,"type","TabbedSearchResults");var qc=fk;var dk=class dk extends c{constructor(e){super();i$1(this,"title");i$1(this,"style");this.title=new l(e.title),this.style=e.style;}};s(dk,"TextHeader"),i$1(dk,"type","TextHeader");var yh=dk;var mk=class mk extends c{constructor(e){super();i$1(this,"share_targets");this.share_targets=u.parseArray(e.shareTargets,Gc);}};s(mk,"ThirdPartyShareTargetSection"),i$1(mk,"type","ThirdPartyShareTargetSection");var $c=mk;var hk=class hk extends c{constructor(e){super();i$1(this,"landscape");i$1(this,"portrait");this.landscape=y.fromResponse(e.landscape),this.portrait=y.fromResponse(e.portrait);}};s(hk,"ThumbnailLandscapePortrait"),i$1(hk,"type","ThumbnailLandscapePortrait");var xh=hk;var _k=class _k extends c{constructor(e){super();i$1(this,"text");this.text=new l(e.text).toString();}};s(_k,"ThumbnailOverlayEndorsement"),i$1(_k,"type","ThumbnailOverlayEndorsement");var gh=_k;var bk=class bk extends c{constructor(e){super();i$1(this,"text");i$1(this,"icon_type");this.text=new l(e.text),this.icon_type=e.icon.iconType;}};s(bk,"ThumbnailOverlayHoverText"),i$1(bk,"type","ThumbnailOverlayHoverText");var wh=bk;var yk=class yk extends c{constructor(e){super();i$1(this,"text");i$1(this,"icon_type");this.text=new l(e.text).toString(),this.icon_type=e.icon.iconType;}};s(yk,"ThumbnailOverlayInlineUnplayable"),i$1(yk,"type","ThumbnailOverlayInlineUnplayable");var Th=yk;var xk=class xk extends c{constructor(e){super();i$1(this,"text");this.text=new l(e.text);}};s(xk,"ThumbnailOverlayLoadingPreview"),i$1(xk,"type","ThumbnailOverlayLoadingPreview");var vh=xk;var gk=class gk extends c{constructor(e){super();i$1(this,"text");this.text=new l(e.text).toString();}};s(gk,"ThumbnailOverlayNowPlaying"),i$1(gk,"type","ThumbnailOverlayNowPlaying");var Ih=gk;var wk=class wk extends c{constructor(e){super();i$1(this,"hack");this.hack=e.hack;}};s(wk,"ThumbnailOverlayPinking"),i$1(wk,"type","ThumbnailOverlayPinking");var kh=wk;var Tk=class Tk extends c{constructor(e){super();i$1(this,"texts");this.texts=e.texts.map(o=>new l(o));}};s(Tk,"ThumbnailOverlayPlaybackStatus"),i$1(Tk,"type","ThumbnailOverlayPlaybackStatus");var Sh=Tk;var vk=class vk extends c{constructor(e){super();i$1(this,"percent_duration_watched");this.percent_duration_watched=e.percentDurationWatched;}};s(vk,"ThumbnailOverlayResumePlayback"),i$1(vk,"type","ThumbnailOverlayResumePlayback");var Eh=vk;var Ik=class Ik extends c{constructor(e){super();i$1(this,"text");i$1(this,"icon_type");this.text=new l(e.text),this.icon_type=e.icon.iconType;}};s(Ik,"ThumbnailOverlaySidePanel"),i$1(Ik,"type","ThumbnailOverlaySidePanel");var Ch=Ik;var kk=class kk extends c{constructor(e){super();i$1(this,"is_toggled");i$1(this,"icon_type");i$1(this,"tooltip");i$1(this,"toggled_endpoint");i$1(this,"untoggled_endpoint");Reflect.has(e,"isToggled")&&(this.is_toggled=e.isToggled),this.icon_type={toggled:e.toggledIcon.iconType,untoggled:e.untoggledIcon.iconType},this.tooltip={toggled:e.toggledTooltip,untoggled:e.untoggledTooltip},e.toggledServiceEndpoint&&(this.toggled_endpoint=new d(e.toggledServiceEndpoint)),e.untoggledServiceEndpoint&&(this.untoggled_endpoint=new d(e.untoggledServiceEndpoint));}};s(kk,"ThumbnailOverlayToggleButton"),i$1(kk,"type","ThumbnailOverlayToggleButton");var Nh=kk;var Sk=class Sk extends c{constructor(e){super();i$1(this,"title");this.title=new l(e.title);}};s(Sk,"TitleAndButtonListHeader"),i$1(Sk,"type","TitleAndButtonListHeader");var Rh=Sk;var Ek=class Ek extends c{constructor(e){super();i$1(this,"label");i$1(this,"toggled");i$1(this,"toggle_on_action");i$1(this,"toggle_off_action");this.label=new Text(e.label),this.toggled=e.toggled,"toggleOnAction"in e&&(this.toggle_on_action=new d(e.toggleOnAction)),"toggleOffAction"in e&&(this.toggle_off_action=new d(e.toggleOffAction));}};s(Ek,"ToggleFormField"),i$1(Ek,"type","ToggleFormField");var Ph=Ek;var Ck=class Ck extends c{constructor(e){super();i$1(this,"text");i$1(this,"toggled_text");i$1(this,"icon_type");i$1(this,"toggled_icon_type");i$1(this,"default_endpoint");i$1(this,"toggled_endpoint");this.text=new l(e.defaultText),this.toggled_text=new l(e.toggledText),this.icon_type=e.defaultIcon.iconType,this.toggled_icon_type=e.toggledIcon.iconType,this.default_endpoint=new d(e.defaultServiceEndpoint),this.toggled_endpoint=new d(e.toggledServiceEndpoint);}};s(Ck,"ToggleMenuServiceItem"),i$1(Ck,"type","ToggleMenuServiceItem");var Ah=Ck;var Nk=class Nk extends c{constructor(e){super();i$1(this,"promo_config");i$1(this,"target_id");i$1(this,"details");i$1(this,"suggested_position");i$1(this,"dismiss_stratedy");i$1(this,"dwell_time_ms");this.promo_config={promo_id:e.promoConfig.promoId,impression_endpoints:e.promoConfig.impressionEndpoints.map(o=>new d(o)),accept:new d(e.promoConfig.acceptCommand),dismiss:new d(e.promoConfig.dismissCommand)},this.target_id=e.targetId,this.details=new l(e.detailsText),this.suggested_position=e.suggestedPosition.type,this.dismiss_stratedy=e.dismissStrategy.type,this.dwell_time_ms=parseInt(e.dwellTimeMs);}};s(Nk,"Tooltip"),i$1(Nk,"type","Tooltip");var Mh=Nk;var Rk=class Rk extends c{constructor(e){super();i$1(this,"title");i$1(this,"avatar");i$1(this,"subtitle");i$1(this,"subscribe_button");i$1(this,"endpoint");this.title=new l(e.title),this.avatar=y.fromResponse(e.thumbnail??e.avatar),this.subtitle=new l(e.subtitle),this.subscribe_button=u.parseItem(e.subscribeButton,de),this.endpoint=new d(e.navigationEndpoint);}};s(Rk,"TopicChannelDetails"),i$1(Rk,"type","TopicChannelDetails");var Dh=Rk;var Pk=class Pk extends c{constructor(e){super();i$1(this,"tabs");i$1(this,"secondary_contents");this.tabs=u.parseArray(e.tabs,[re,vi]),this.secondary_contents=u.parseItem(e.secondaryContents,[G,an,Rc]);}};s(Pk,"TwoColumnBrowseResults"),i$1(Pk,"type","TwoColumnBrowseResults");var yt=Pk;var Ak=class Ak extends c{constructor(e){super();i$1(this,"header");i$1(this,"primary_contents");i$1(this,"secondary_contents");i$1(this,"target_id");this.header=u.parseItem(e.header),this.primary_contents=u.parseItem(e.primaryContents,[bt,G]),this.secondary_contents=u.parseItem(e.secondaryContents,[Uc]),"targetId"in e&&(this.target_id=e.targetId);}};s(Ak,"TwoColumnSearchResults"),i$1(Ak,"type","TwoColumnSearchResults");var zc=Ak;var Oh,N1,Mk=class Mk extends c{constructor(e){super();g(this,Oh);i$1(this,"results");i$1(this,"secondary_results");i$1(this,"conversation_bar");i$1(this,"playlist");i$1(this,"autoplay");this.results=u.parseArray(e.results?.results.contents),this.secondary_results=u.parseArray(e.secondaryResults?.secondaryResults.results),this.conversation_bar=u.parseItem(e?.conversationBar);let o=e.playlist?.playlist;o&&(this.playlist={id:o.playlistId,title:o.title,author:o.shortBylineText?.simpleText?new l(o.shortBylineText):new D(o.longBylineText),contents:u.parseArray(o.contents),current_index:o.currentIndex,is_infinite:!!o.isInfinite,menu:u.parseItem(o.menu,B)});let r=e.autoplay?.autoplay;r&&(this.autoplay={sets:r.sets.map(a=>N(this,Oh,N1).call(this,a))},r.modifiedSets&&(this.autoplay.modified_sets=r.modifiedSets.map(a=>N(this,Oh,N1).call(this,a))),r.countDownSecs&&(this.autoplay.count_down_secs=r.countDownSecs));}};Oh=new WeakSet,N1=s(function(e){let o={autoplay_video:new d(e.autoplayVideo)};return e.nextButtonVideo&&(o.next_button_video=new d(e.nextButtonVideo)),o},"#parseAutoplaySet"),s(Mk,"TwoColumnWatchNextResults"),i$1(Mk,"type","TwoColumnWatchNextResults");var qn=Mk;var Dk=class Dk extends c{constructor(e){super();i$1(this,"third_party_network_section");i$1(this,"header");i$1(this,"share_panel_version");i$1(this,"show_loading_spinner");if(e.contents){let o=e.contents.find(r=>r.thirdPartyNetworkSection);o&&(this.third_party_network_section={share_target_container:u.parseItem(o.thirdPartyNetworkSection.shareTargetContainer,$c),copy_link_container:u.parseItem(o.thirdPartyNetworkSection.copyLinkContainer,xn),start_at_container:u.parseItem(o.thirdPartyNetworkSection.startAtContainer,Kc)});}this.header=u.parseItem(e.header,jc),this.share_panel_version=e.sharePanelVersion,Reflect.has(e,"showLoadingSpinner")&&(this.show_loading_spinner=e.showLoadingSpinner);}};s(Dk,"UnifiedSharePanel"),i$1(Dk,"type","UnifiedSharePanel");var Bh=Dk;var Ok=class Ok extends c{constructor(e){super();i$1(this,"message_title");i$1(this,"message_text");i$1(this,"action_button");i$1(this,"dismiss_button");i$1(this,"is_visible");this.message_title=new l(e.dialogMessageTitle),this.message_text=new l(e.dialogMessageText),this.action_button=u.parseItem(e.actionButton,v),this.dismiss_button=u.parseItem(e.dismissButton,v),this.is_visible=e.isVisible;}};s(Ok,"UpsellDialog"),i$1(Ok,"type","UpsellDialog");var Lh=Ok;var Bk=class Bk extends c{constructor(e){super();i$1(this,"items");i$1(this,"collapsed_item_count");i$1(this,"collapsed_state_button_text");this.items=u.parseArray(e.items),this.collapsed_item_count=e.collapsedItemCount,this.collapsed_state_button_text=new l(e.collapsedStateButtonText);}get contents(){return this.items}};s(Bk,"VerticalList"),i$1(Bk,"type","VerticalList");var Uh=Bk;var Lk=class Lk extends c{constructor(e){super();i$1(this,"items");i$1(this,"view_all_text");i$1(this,"view_all_endpoint");this.items=u.parseArray(e.items),this.view_all_text=new l(e.viewAllText),this.view_all_endpoint=new d(e.viewAllEndpoint);}get contents(){return this.items}};s(Lk,"VerticalWatchCardList"),i$1(Lk,"type","VerticalWatchCardList");var Yh=Lk;var Uk=class Uk extends c{constructor(e){super();i$1(this,"title");i$1(this,"channel_name");i$1(this,"view_count");i$1(this,"video_thumbnails");i$1(this,"duration");i$1(this,"endpoint");this.title=new l(e.videoTitle),this.channel_name=new l(e.channelName),this.view_count=new l(e.viewCountText),this.video_thumbnails=y.fromResponse(e.videoThumbnail),this.duration=new l(e.lengthString),this.endpoint=new d(e.action);}};s(Uk,"VideoInfoCardContent"),i$1(Uk,"type","VideoInfoCardContent");var Vh=Uk;var Yk=class Yk extends c{constructor(e){super();i$1(this,"carousel_titles");i$1(this,"carousel_items");this.carousel_titles=u.parse(e.carouselTitles,true,vr),this.carousel_items=u.parse(e.carouselItems,true,Tr);}};s(Yk,"VideoMetadataCarouselView"),i$1(Yk,"type","VideoMetadataCarouselView");var Fh=Yk;var Vk=class Vk{constructor(t){i$1(this,"text");i$1(this,"subscribed");i$1(this,"subscription_type");this.text=new l(t.text),this.subscribed=t.isSubscribed,"subscriptionType"in t&&(this.subscription_type=t.subscriptionType);}};s(Vk,"SubscriptionButton"),i$1(Vk,"type","SubscriptionButton");var Jc=Vk;var Fk=class Fk extends c{constructor(e){super();i$1(this,"subscription_button");i$1(this,"subscriber_count");i$1(this,"author");"subscriptionButton"in e&&(this.subscription_button=new Jc(e.subscriptionButton)),this.subscriber_count=new l(e.subscriberCountText),this.author=new D({...e.title,navigationEndpoint:e.navigationEndpoint},e.badges,e.thumbnail);}};s(Fk,"VideoOwner"),i$1(Fk,"type","VideoOwner");var $n=Fk;var jk=class jk extends c{constructor(e){super();i$1(this,"original_view_count");i$1(this,"short_view_count");i$1(this,"extra_short_view_count");i$1(this,"view_count");this.original_view_count=e.originalViewCount,this.short_view_count=new l(e.shortViewCount),this.extra_short_view_count=new l(e.extraShortViewCount),this.view_count=new l(e.viewCount);}};s(jk,"VideoViewCount"),i$1(jk,"type","VideoViewCount");var Xc=jk;var Gk=class Gk extends c{constructor(e){super();i$1(this,"title");i$1(this,"super_title_link");i$1(this,"station_name");i$1(this,"view_count");i$1(this,"badges");i$1(this,"published");i$1(this,"relative_date");i$1(this,"menu");this.title=new l(e.title),"superTitleLink"in e&&(this.super_title_link=new l(e.superTitleLink)),"stationName"in e&&(this.station_name=new l(e.stationName)),this.view_count=u.parseItem(e.viewCount,Xc),this.badges=u.parseArray(e.badges,Be),this.published=new l(e.dateText),this.relative_date=new l(e.relativeDateText),this.menu=u.parseItem(e.videoActions,B);}};s(Gk,"VideoPrimaryInfo"),i$1(Gk,"type","VideoPrimaryInfo");var Zc=Gk;var Wk=class Wk extends c{constructor(e){super();i$1(this,"owner");i$1(this,"description");i$1(this,"description_placeholder");i$1(this,"subscribe_button");i$1(this,"metadata");i$1(this,"show_more_text");i$1(this,"show_less_text");i$1(this,"default_expanded");i$1(this,"description_collapsed_lines");this.owner=u.parseItem(e.owner,$n),this.description=new l(e.description),"attributedDescription"in e&&(this.description=l.fromAttributed(e.attributedDescription)),"descriptionPlaceholder"in e&&(this.description_placeholder=new l(e.descriptionPlaceholder)),this.subscribe_button=u.parseItem(e.subscribeButton,[de,v]),this.metadata=u.parseItem(e.metadataRowContainer,tc),this.show_more_text=new l(e.showMoreText),this.show_less_text=new l(e.showLessText),this.default_expanded=e.defaultExpanded,this.description_collapsed_lines=e.descriptionCollapsedLines;}};s(Wk,"VideoSecondaryInfo"),i$1(Wk,"type","VideoSecondaryInfo");var Do=Wk;var Hk=class Hk extends c{constructor(e){super();i$1(this,"title");i$1(this,"subtitle");i$1(this,"duration");i$1(this,"style");this.title=new l(e.title),this.subtitle=new l(e.subtitle),this.duration={text:new l(e.lengthText).toString(),seconds:Me(e.lengthText.simpleText)},this.style=e.style;}};s(Hk,"WatchCardCompactVideo"),i$1(Hk,"type","WatchCardCompactVideo");var Qc=Hk;var Kk=class Kk extends c{constructor(e){super();i$1(this,"endpoint");i$1(this,"call_to_action_button");i$1(this,"hero_image");i$1(this,"label");this.endpoint=new d(e.navigationEndpoint),this.call_to_action_button=u.parseItem(e.callToActionButton),this.hero_image=u.parseItem(e.heroImage),this.label=e.lengthText?.accessibility.accessibilityData.label||"";}};s(Kk,"WatchCardHeroVideo"),i$1(Kk,"type","WatchCardHeroVideo");var jh=Kk;var qk=class qk extends c{constructor(e){super();i$1(this,"title");i$1(this,"title_endpoint");i$1(this,"subtitle");i$1(this,"author");i$1(this,"style");this.title=new l(e.title),this.title_endpoint=new d(e.titleNavigationEndpoint),this.subtitle=new l(e.subtitle),this.author=new D(e,e.titleBadge?[e.titleBadge]:null,e.avatar),this.author.name=this.title.toString(),this.style=e.style;}};s(qk,"WatchCardRichHeader"),i$1(qk,"type","WatchCardRichHeader");var Gh=qk;var $k=class $k extends c{constructor(e){super();i$1(this,"lists");this.lists=u.parseArray(e.lists);}};s($k,"WatchCardSectionSequence"),i$1($k,"type","WatchCardSectionSequence");var Wh=$k;var zk=class zk extends yt{constructor(t){super(t);}};s(zk,"WatchNextTabbedResults"),i$1(zk,"type","WatchNextTabbedResults");var eu=zk;var Jk=class Jk extends c{constructor(e){super();i$1(this,"title");i$1(this,"content");i$1(this,"endpoint");i$1(this,"category_assets");i$1(this,"category_type");this.title=e.title,this.content=u.parseItem(e.content,G),this.endpoint=new d(e.navigationEndpoint),this.category_assets={asset_key:e.categoryAssets?.assetKey,background_color:e.categoryAssets?.backgroundColor},this.category_type=e.categoryType;}};s(Jk,"AnchoredSection"),i$1(Jk,"type","AnchoredSection");var tu=Jk;var vl,Xk=class Xk extends c{constructor(e){super();g(this,vl);i$1(this,"child_display_name");i$1(this,"child_account_description");i$1(this,"avatar");i$1(this,"block_button");i$1(this,"blocked_entity_key");this.child_display_name=new l(e.childDisplayName),this.child_account_description=new l(e.childAccountDescription),this.avatar=y.fromResponse(e.avatar),this.block_button=u.parseItem(e.blockButton,[se]),this.blocked_entity_key=e.blockedEntityKey;}async blockChannel(){if(!p(this,vl))throw new _("An active caller must be provide to perform this operation.");let e=this.block_button;if(!e)throw new _("Block button was not found.",{child_display_name:this.child_display_name});if(e.is_toggled)throw new _("This channel is already blocked.",{child_display_name:this.child_display_name});return await e.endpoint.call(p(this,vl),{parse:false})}setActions(e){w(this,vl,e);}};vl=new WeakMap,s(Xk,"KidsBlocklistPickerItem"),i$1(Xk,"type","KidsBlocklistPickerItem");var zn=Xk;var Zk=class Zk extends c{constructor(e){super();i$1(this,"title");i$1(this,"child_rows");i$1(this,"done_button");i$1(this,"successful_toast_action_message");this.title=new l(e.title),this.child_rows=u.parse(e.childRows,true,[zn]),this.done_button=u.parseItem(e.doneButton,[v]),this.successful_toast_action_message=new l(e.successfulToastActionMessage);}};s(Zk,"KidsBlocklistPicker"),i$1(Zk,"type","KidsBlocklistPicker");var Hh=Zk;var Qk=class Qk extends c{constructor(e){super();i$1(this,"title");i$1(this,"category_assets");i$1(this,"category_type");i$1(this,"endpoint");this.title=new l(e.title),this.category_assets={asset_key:e.categoryAssets?.assetKey,background_color:e.categoryAssets?.backgroundColor},this.category_type=e.categoryType,this.endpoint=new d(e.endpoint);}};s(Qk,"KidsCategoryTab"),i$1(Qk,"type","KidsCategoryTab");var Jn=Qk;var eS=class eS extends c{constructor(e){super();i$1(this,"category_tabs");i$1(this,"privacy_button");this.category_tabs=u.parseArray(e.categoryTabs,Jn),this.privacy_button=u.parseItem(e.privacyButtonRenderer,v);}};s(eS,"KidsCategoriesHeader"),i$1(eS,"type","kidsCategoriesHeader");var iu=eS;var tS=class tS extends c{constructor(e){super();i$1(this,"anchors");this.anchors=u.parseArray(e.anchors,tu);}};s(tS,"KidsHomeScreen"),i$1(tS,"type","kidsHomeScreen");var nu=tS;var NR={};Te(NR,{camelToSnake:()=>ou,createRuntimeClass:()=>CR,generateRuntimeClass:()=>qh,generateTypescriptClass:()=>nS,inferType:()=>iS,introspect:()=>A1,isArrayType:()=>SR,isIgnoredKey:()=>ER,isMiscType:()=>kR,isRenderer:()=>P1,isRendererList:()=>IR,mergeKeyInfo:()=>Kh,parse:()=>O1,toParser:()=>D1,toTypeDeclaration:()=>M1});var OM=new Set(["trackingParams","accessibility","accessibilityData"]),R1={};function ou(n){return n.replace(/[A-Z]/g,t=>`_${t.toLowerCase()}`)}s(ou,"camelToSnake");function iS(n,t){let e=false;if(typeof t=="object"&&t!=null){if(e=P1(t))return R1[e]=Reflect.get(t,Reflect.ownKeys(t)[0]),{type:"renderer",renderers:[e],optional:false};if(e=IR(t)){for(let[r,a]of Object.entries(e))R1[r]=a;return {type:"array",array_type:"renderer",renderers:Object.keys(e),optional:false}}if((e=kR(n,t))||(e=SR(t)))return e}let o=typeof t;return o==="object"?{type:"object",keys:Object.entries(t).map(([r,a])=>[r,iS(r,a)]),optional:false}:{type:"primitive",typeof:[o],optional:false}}s(iS,"inferType");function IR(n){let t=Array.isArray(n);return t&&n.length===0?false:t&&n.every(o=>P1(o))?Object.fromEntries(n.map(o=>{let r=Reflect.ownKeys(o)[0].toString();return [kl(r),o[r]]})):false}s(IR,"isRendererList");function kR(n,t){if(typeof t=="object"&&t!==null){if(n.endsWith("Endpoint")||n.endsWith("Command")||n==="endpoint")return {type:"misc",endpoint:new d(t),optional:false,misc_type:"NavigationEndpoint"};if(Reflect.has(t,"simpleText")||Reflect.has(t,"runs")){let e=new l(t);return {type:"misc",misc_type:"Text",optional:false,endpoint:e.endpoint,text:e.toString()}}if(Reflect.has(t,"thumbnails")&&Array.isArray(Reflect.get(t,"thumbnails")))return {type:"misc",misc_type:"Thumbnail",optional:false}}return  false}s(kR,"isMiscType");function P1(n){if(!(typeof n=="object"))return  false;let e=Reflect.ownKeys(n);if(e.length===1){let o=e[0].toString();if(o.endsWith("Renderer")||o.endsWith("Model"))return kl(o)}return  false}s(P1,"isRenderer");function SR(n){if(!Array.isArray(n))return  false;if(n.length===0)return {type:"array",array_type:"primitive",items:{type:"primitive",typeof:["never"],optional:false},optional:false};let t=n.map(a=>typeof a);if(!t.every(a=>a===t[0]))return {type:"array",array_type:"primitive",items:{type:"primitive",typeof:["unknown"],optional:false},optional:false};let o=t[0];if(o!=="object")return {type:"array",array_type:"primitive",items:{type:"primitive",typeof:[o],optional:false},optional:false};let r=[];for(let a=0;a<n.length;a++){let f=Object.entries(n[a]).map(([m,b])=>[m,iS(m,b)]);if(a===0){r=f;continue}r=Kh(r,f).resolved_key_info;}return {type:"array",array_type:"object",items:{type:"object",keys:r,optional:false},optional:false}}s(SR,"isArrayType");function BM(n){if(typeof n!="object"||n===null)throw new _("Generator: Cannot introspect non-object",{classdata:n});return Reflect.ownKeys(n).filter(e=>!ER(e)).filter(e=>typeof e=="string").map(e=>{let o=Reflect.get(n,e),r=iS(e,o);return [e,r]})}s(BM,"introspectKeysFirstPass");function LM(n){let e=n.filter(([,f])=>f.type!=="misc"||!(f.misc_type==="NavigationEndpoint"||f.misc_type==="Text")?false:f.endpoint?.metadata.page_type==="WEB_PAGE_TYPE_CHANNEL").sort(([,f],[,m])=>f.type!=="misc"||m.type!=="misc"||f.misc_type!=="Text"||m.misc_type!=="Text"?0:m.text.length-f.text.length),o=new Set,r=e[0],a;if(r){o.add(r[0]);let m=n.map(([S])=>S).filter(S=>S.endsWith("Badges")||S==="badges"),x=m.filter(S=>S.startsWith("owner")||S.startsWith("author"))[0]??m[0],I=n.find(([S])=>S===x),k=I?I[1].type==="array"&&I[1].array_type==="renderer"&&Reflect.has(I[1].renderers,"MetadataBadge"):false;k&&x&&o.add(x),a={type:"misc",misc_type:"Author",optional:false,params:[r[0],k?x:void 0]};}return a&&n.push(["author",a]),n.filter(([f])=>!o.has(f))}s(LM,"introspectKeysSecondPass");function UM(n){let t=BM(n);return LM(t)}s(UM,"introspect2");function A1(n){let t=UM(n),e=new Map;for(let[,r]of t)if(r.type==="renderer"||r.type==="array"&&r.array_type==="renderer")for(let a of r.renderers){let f=R1[a];f&&e.set(a,f);}let o=Array.from(e).filter(([r])=>!$h(r));return {key_info:t,unimplemented_dependencies:o}}s(A1,"introspect");function ER(n){return typeof n=="string"&&OM.has(n)}s(ER,"isIgnoredKey");function CR(n,t,e){var r,a;e({error_type:"class_not_found",classname:n,key_info:t});let o=(r=class extends c{static set key_info(m){w(this,a,new Map(m));}static get key_info(){return [...p(this,a).entries()]}constructor(m){super();let{key_info:b,unimplemented_dependencies:x}=A1(m),{resolved_key_info:I,changed_keys:k}=Kh(o.key_info,b);k.length>0&&(o.key_info=I,e({error_type:"class_changed",classname:n,key_info:o.key_info,changed_keys:k}));for(let[P,R]of x)qh(P,R,e);for(let[P,R]of b){let E=ou(P);R.type==="misc"&&R.misc_type==="NavigationEndpoint"&&(E="endpoint"),Reflect.set(this,E,O1(P,R,m));}}},a=new WeakMap,s(r,"node"),i$1(r,"type",n),g(r,a,new Map),r);return o.key_info=t,Object.defineProperty(o,"name",{value:n,writable:false}),o}s(CR,"createRuntimeClass");function qh(n,t,e){let{key_info:o,unimplemented_dependencies:r}=A1(t),a=CR(n,o,e);B1(n,a);for(let[f,m]of r)qh(f,m,e);return a}s(qh,"generateRuntimeClass");function nS(n,t){let e=[],o=["super();"];for(let[r,a]of t){let f=ou(r);a.type==="misc"&&a.misc_type==="NavigationEndpoint"&&(f="endpoint"),e.push(`${f}${a.optional?"?":""}: ${M1(a)};`),o.push(`this.${f} = ${D1(r,a)};`);}return `class ${n} extends YTNode {
  static type = '${n}';

  ${e.join(`
  `)}

  constructor(data: RawNode) {
    ${o.join(`
    `)}
  }
}
`}s(nS,"generateTypescriptClass");function xR(n,t){return `{
${t.map(([e,o])=>`${" ".repeat((n+2)*2)}${ou(e)}${o.optional?"?":""}: ${M1(o,n+1)}`).join(`,
`)}
${" ".repeat((n+1)*2)}}`}s(xR,"toTypeDeclarationObject");function M1(n,t=0){switch(n.type){case "renderer":return `${n.renderers.map(e=>`YTNodes.${e}`).join(" | ")} | null`;case "array":switch(n.array_type){case "renderer":return `ObservedArray<${n.renderers.map(e=>`YTNodes.${e}`).join(" | ")}> | null`;case "primitive":{let e=n.items.typeof;return n.items.optional&&!e.includes("undefined")&&e.push("undefined"),`${e.length===1?`${e[0]}`:`(${e.join(" | ")})`}[]`}case "object":return `${xR(t,n.items.keys)}[]`;default:throw new Error("Unreachable code reached! Switch missing case!")}case "object":return xR(t,n.keys);case "misc":switch(n.misc_type){case "Thumbnail":return "Thumbnail[]";default:return n.misc_type}case "primitive":return n.typeof.join(" | ")}}s(M1,"toTypeDeclaration");function gR(n,t,e,o){let r=[...e,o];return `{
${t.map(([a,f])=>`${" ".repeat((n+2)*2)}${ou(a)}: ${D1(a,f,r,n+1)}`).join(`,
`)}
${" ".repeat((n+1)*2)}}`}s(gR,"toParserObject");function D1(n,t,e=["data"],o=1){let r="undefined";switch(t.type){case "renderer":r=`Parser.parseItem(${e.join(".")}.${n}, ${wR(t.renderers)})`;break;case "array":switch(t.array_type){case "renderer":r=`Parser.parse(${e.join(".")}.${n}, true, ${wR(t.renderers)})`;break;case "object":r=`${e.join(".")}.${n}.map((item: any) => (${gR(o,t.items.keys,[],"item")}))`;break;case "primitive":r=`${e.join(".")}.${n}`;break;default:throw new Error("Unreachable code reached! Switch missing case!")}break;case "object":r=gR(o,t.keys,e,n);break;case "misc":switch(t.misc_type){case "Thumbnail":r=`Thumbnail.fromResponse(${e.join(".")}.${n})`;break;case "Author":{let a=`new Author(${e.join(".")}.${t.params[0]}, ${t.params[1]?`${e.join(".")}.${t.params[1]}`:"undefined"})`;return t.optional?`Reflect.has(${e.join(".")}, '${t.params[0]}') ? ${a} : undefined`:a}default:r=`new ${t.misc_type}(${e.join(".")}.${n})`;break}if(r==="undefined")throw new Error("Unreachable code reached! Switch missing case!");break;case "primitive":r=`${e.join(".")}.${n}`;break}return t.optional?`Reflect.has(${e.join(".")}, '${n}') ? ${r} : undefined`:r}s(D1,"toParser");function wR(n){return n.length===1?`YTNodes.${n[0]}`:`[ ${n.map(t=>`YTNodes.${t}`).join(", ")} ]`}s(wR,"toParserValidTypes");function Ni(n,t){let e=n;for(let o of t)e=e[o];return e}s(Ni,"accessDataFromKeyPath");function TR(n,t){let e=n;for(let o of t)if(Reflect.has(e,o))e=e[o];else return  false;return  true}s(TR,"hasDataFromKeyPath");function vR(n,t,e,o,r){let a={},f=[...e,n];for(let[m,b]of o)a[m]=r?O1(m,b,t,f):void 0;return a}s(vR,"parseObject");function O1(n,t,e,o=["data"]){let r=!t.optional||TR({data:e},[...o,n]);switch(t.type){case "renderer":return r?ee(Ni({data:e},[...o,n]),t.renderers.map(a=>Il(a))):void 0;case "array":switch(t.array_type){case "renderer":return r?Ze(Ni({data:e},[...o,n]),true,t.renderers.map(a=>Il(a))):void 0;case "object":return r?Ni({data:e},[...o,n]).map((a,f)=>vR(`${f}`,e,[...o,n],t.items.keys,r)):void 0;case "primitive":return r?Ni({data:e},[...o,n]):void 0;default:throw new Error("Unreachable code reached! Switch missing case!")}case "object":return vR(n,e,o,t.keys,r);case "misc":switch(t.misc_type){case "NavigationEndpoint":return r?new d(Ni({data:e},[...o,n])):void 0;case "Text":return r?new l(Ni({data:e},[...o,n])):void 0;case "Thumbnail":return r?y.fromResponse(Ni({data:e},[...o,n])):void 0;case "Author":return !t.optional||TR({data:e},[...o,t.params[0]])?new D(Ni({data:e},[...o,t.params[0]]),t.params[1]?Ni({data:e},[...o,t.params[1]]):void 0):void 0;default:throw new Error("Unreachable code reached! Switch missing case!")}case "primitive":return Ni({data:e},[...o,n])}}s(O1,"parse");function Kh(n,t){let e=new Map,o=new Set(n.map(([S])=>S)),r=new Set(t.map(([S])=>S)),a=t.filter(([S])=>!o.has(S)),f=n.filter(([S])=>!r.has(S)),m=n.filter(([S])=>r.has(S)),b=new Map(t);for(let[S,P]of m){let R=b.get(S);if(R){if(P.type!==R.type){e.set(S,{type:"primitive",typeof:["unknown"],optional:true});continue}switch(P.type){case "object":{if(R.type!=="object")continue;let{resolved_key_info:E}=Kh(P.keys,R.keys),U={type:"object",keys:E,optional:P.optional||R.optional};JSON.stringify(U)!==JSON.stringify(P)&&e.set(S,U);}break;case "renderer":{if(R.type!=="renderer")continue;let E={...P.renderers,...R.renderers},U=P.optional||R.optional,A={type:"renderer",renderers:E,optional:U};JSON.stringify({...A,renderers:Object.keys(A.renderers)})!==JSON.stringify({...P,renderers:Object.keys(P.renderers)})&&e.set(S,A);}break;case "array":{if(R.type!=="array")continue;switch(P.array_type){case "renderer":{if(R.array_type!=="renderer"){e.set(S,{type:"array",array_type:"primitive",items:{type:"primitive",typeof:["unknown"],optional:true},optional:true});continue}let E={...P.renderers,...R.renderers},U=P.optional||R.optional,A={type:"array",array_type:"renderer",renderers:E,optional:U};JSON.stringify({...A,renderers:Object.keys(A.renderers)})!==JSON.stringify({...P,renderers:Object.keys(P.renderers)})&&e.set(S,A);}break;case "object":{if(R.array_type==="primitive"&&R.items.typeof.length==1&&R.items.typeof[0]==="never")continue;if(R.array_type!=="object"){e.set(S,{type:"array",array_type:"primitive",items:{type:"primitive",typeof:["unknown"],optional:true},optional:true});continue}let{resolved_key_info:E}=Kh(P.items.keys,R.items.keys),U={type:"array",array_type:"object",items:{type:"object",keys:E,optional:P.items.optional||R.items.optional},optional:P.optional||R.optional};JSON.stringify(U)!==JSON.stringify(P)&&e.set(S,U);}break;case "primitive":{if(P.items.typeof.includes("never")&&R.array_type==="object"){e.set(S,R);continue}if(R.array_type!=="primitive"){e.set(S,{type:"array",array_type:"primitive",items:{type:"primitive",typeof:["unknown"],optional:true},optional:true});continue}let E=new Set([...R.items.typeof,...P.items.typeof]);E.size>1&&E.has("never")&&E.delete("never");let U={type:"array",array_type:"primitive",items:{type:"primitive",typeof:Array.from(E),optional:P.items.optional||R.items.optional},optional:P.optional||R.optional};JSON.stringify(U)!==JSON.stringify(P)&&e.set(S,U);}break;default:throw new Error("Unreachable code reached! Switch missing case!")}break}case "misc":{if(R.type!=="misc")continue;switch(P.misc_type!==R.misc_type&&e.set(S,{type:"primitive",typeof:["unknown"],optional:true}),P.misc_type){case "Author":{if(R.misc_type!=="Author")break;let E=P.params[1]||R.params[1],A={type:"misc",misc_type:"Author",optional:P.optional||R.optional,params:[R.params[0],E]};JSON.stringify(A)!==JSON.stringify(P)&&e.set(S,A);}break}}break;case "primitive":{if(R.type!=="primitive")continue;let E={type:"primitive",typeof:Array.from(new Set([...R.typeof,...P.typeof])),optional:P.optional||R.optional};JSON.stringify(E)!==JSON.stringify(P)&&e.set(S,E);}break}}}for(let[S,P]of a)e.set(S,{...P,optional:true});for(let[S,P]of f)e.set(S,{...P,optional:true});let x=n.filter(([S])=>!e.has(S));return {resolved_key_info:[...new Map([...x,...e]).entries()],changed_keys:[...e.entries()]}}s(Kh,"mergeKeyInfo");var sS=class sS extends c{constructor(e){super();i$1(this,"contents");i$1(this,"continuation");this.contents=Ke(e.contents),Array.isArray(e.continuations)&&(this.continuation=e.continuations?.at(0)?.nextContinuationData?.continuation);}};s(sS,"ItemSectionContinuation"),i$1(sS,"type","itemSectionContinuation");var Sl=sS,rS=class rS extends c{constructor(e){super();i$1(this,"endpoint");this.endpoint=new d(e.endpoint);}};s(rS,"NavigateAction"),i$1(rS,"type","navigateAction");var Oo=rS,aS=class aS extends c{constructor(e){super();i$1(this,"miniplayer_command");i$1(this,"show_premium_branding");this.miniplayer_command=new d(e.miniplayerCommand),this.show_premium_branding=e.showPremiumBranding;}};s(aS,"ShowMiniplayerCommand"),i$1(aS,"type","showMiniplayerCommand");var oS=aS,cS=class cS extends c{constructor(e){super();i$1(this,"target_id");i$1(this,"contents");i$1(this,"slot");this.target_id=e.targetId,this.contents=Ze(e.continuationItems,true),this.slot=e?.slot;}};s(cS,"ReloadContinuationItemsCommand"),i$1(cS,"type","reloadContinuationItemsCommand");var xt=cS,uS=class uS extends c{constructor(e){super();i$1(this,"continuation");i$1(this,"contents");this.contents=Ze(e.contents,true),this.continuation=e.continuations?.[0]?.nextContinuationData?.continuation||e.continuations?.[0]?.reloadContinuationData?.continuation||null;}};s(uS,"SectionListContinuation"),i$1(uS,"type","sectionListContinuation");var Lt=uS,lS=class lS extends c{constructor(e){super();i$1(this,"continuation");i$1(this,"contents");this.contents=Ze(e.contents,true),this.continuation=e.continuations?.[0].nextContinuationData.continuation||null;}};s(lS,"MusicPlaylistShelfContinuation"),i$1(lS,"type","musicPlaylistShelfContinuation");var El=lS,pS=class pS extends c{constructor(e){super();i$1(this,"continuation");i$1(this,"contents");this.contents=Ke(e.contents),this.continuation=e.continuations?.[0].nextContinuationData?.continuation||e.continuations?.[0].reloadContinuationData?.continuation||null;}};s(pS,"MusicShelfContinuation"),i$1(pS,"type","musicShelfContinuation");var Bo=pS,fS=class fS extends c{constructor(e){super();i$1(this,"continuation");i$1(this,"items");this.items=Ze(e.items,true),this.continuation=e.continuations?.[0].nextContinuationData.continuation||null;}get contents(){return this.items}};s(fS,"GridContinuation"),i$1(fS,"type","gridContinuation");var Cl=fS,dS=class dS extends c{constructor(e){super();i$1(this,"continuation");i$1(this,"contents");this.contents=Ke(e.contents),this.continuation=e.continuations?.[0]?.nextContinuationData?.continuation||e.continuations?.[0]?.nextRadioContinuationData?.continuation||null;}};s(dS,"PlaylistPanelContinuation"),i$1(dS,"type","playlistPanelContinuation");var Nl=dS,mS=class mS extends c{constructor(e){super();i$1(this,"continuation_type");i$1(this,"timeout_ms");i$1(this,"time_until_last_message_ms");i$1(this,"token");this.continuation_type=e.type,this.timeout_ms=e.continuation?.timeoutMs,this.time_until_last_message_ms=e.continuation?.timeUntilLastMessageMsec,this.token=e.continuation?.continuation;}};s(mS,"Continuation"),i$1(mS,"type","continuation");var zh=mS,hS=class hS extends c{constructor(e){super();i$1(this,"actions");i$1(this,"action_panel");i$1(this,"item_list");i$1(this,"header");i$1(this,"participants_list");i$1(this,"popout_message");i$1(this,"emojis");i$1(this,"continuation");i$1(this,"viewer_name");this.actions=Ze(e.actions?.map(a=>(delete a.clickTrackingParams,a)),true)||V([]),this.action_panel=ee(e.actionPanel),this.item_list=ee(e.itemList,Ha),this.header=ee(e.header,Wa),this.participants_list=ee(e.participantsList,qa),this.popout_message=ee(e.popoutMessage,_e),this.emojis=e.emojis?.map(a=>({emoji_id:a.emojiId,shortcuts:a.shortcuts,search_terms:a.searchTerms,image:y.fromResponse(a.image),is_custom_emoji:a.isCustomEmoji}))||[];let o,r;e.continuations?.[0].timedContinuationData?(r="timed",o=e.continuations?.[0].timedContinuationData):e.continuations?.[0].invalidationContinuationData?(r="invalidation",o=e.continuations?.[0].invalidationContinuationData):e.continuations?.[0].liveChatReplayContinuationData&&(r="replay",o=e.continuations?.[0].liveChatReplayContinuationData),this.continuation=new zh({continuation:o,type:r}),this.viewer_name=e.viewerName;}};s(hS,"LiveChatContinuation"),i$1(hS,"type","liveChatContinuation");var Rl=hS,_S=class _S extends c{constructor(e){super();i$1(this,"request");i$1(this,"token");this.request=e.request,this.token=e.token;}};s(_S,"ContinuationCommand"),i$1(_S,"type","ContinuationCommand");var su=_S;function YM(){return {key:void 0,value:void 0}}s(YM,"createBaseKeyValuePair");var Ri={encode(n,t=new C){return n.key!==void 0&&t.uint32(10).string(n.key),n.value!==void 0&&t.uint32(18).string(n.value),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=YM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.key=e.string();continue;case 2:if(a!==18)break;r.value=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function VM(){return {xtags:[]}}s(VM,"createBaseFormatXTags");var RR={encode(n,t=new C){for(let e of n.xtags)Ri.encode(e,t.uint32(10).fork()).join();return t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=VM();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.xtags.push(Ri.decode(e,e.uint32()));continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};var Jh,L1=class L1{constructor(t,e){g(this,Jh);i$1(this,"itag");i$1(this,"url");i$1(this,"width");i$1(this,"height");i$1(this,"last_modified");i$1(this,"last_modified_ms");i$1(this,"content_length");i$1(this,"quality");i$1(this,"xtags");i$1(this,"drm_families");i$1(this,"fps");i$1(this,"quality_label");i$1(this,"projection_type");i$1(this,"average_bitrate");i$1(this,"bitrate");i$1(this,"spatial_audio_type");i$1(this,"target_duration_dec");i$1(this,"fair_play_key_uri");i$1(this,"stereo_layout");i$1(this,"max_dvr_duration_sec");i$1(this,"high_replication");i$1(this,"audio_quality");i$1(this,"approx_duration_ms");i$1(this,"audio_sample_rate");i$1(this,"audio_channels");i$1(this,"loudness_db");i$1(this,"signature_cipher");i$1(this,"is_drc");i$1(this,"drm_track_type");i$1(this,"distinct_params");i$1(this,"track_absolute_loudness_lkfs");i$1(this,"mime_type");i$1(this,"is_type_otf");i$1(this,"init_range");i$1(this,"index_range");i$1(this,"cipher");i$1(this,"audio_track");i$1(this,"has_audio");i$1(this,"has_video");i$1(this,"has_text");i$1(this,"language");i$1(this,"is_dubbed");i$1(this,"is_auto_dubbed");i$1(this,"is_descriptive");i$1(this,"is_secondary");i$1(this,"is_original");i$1(this,"color_info");i$1(this,"caption_track");if(e&&w(this,Jh,e),this.itag=t.itag,this.mime_type=t.mimeType,this.is_type_otf=t.type==="FORMAT_STREAM_TYPE_OTF",this.bitrate=t.bitrate,this.average_bitrate=t.averageBitrate,Reflect.has(t,"width")&&Reflect.has(t,"height")&&(this.width=parseInt(t.width),this.height=parseInt(t.height)),Reflect.has(t,"projectionType")&&(this.projection_type=t.projectionType),Reflect.has(t,"stereoLayout")&&(this.stereo_layout=t.stereoLayout?.replace("STEREO_LAYOUT_","")),Reflect.has(t,"initRange")&&(this.init_range={start:parseInt(t.initRange.start),end:parseInt(t.initRange.end)}),Reflect.has(t,"indexRange")&&(this.index_range={start:parseInt(t.indexRange.start),end:parseInt(t.indexRange.end)}),this.last_modified=new Date(Math.floor(parseInt(t.lastModified)/1e3)),this.last_modified_ms=t.lastModified,Reflect.has(t,"contentLength")&&(this.content_length=parseInt(t.contentLength)),Reflect.has(t,"quality")&&(this.quality=t.quality),Reflect.has(t,"qualityLabel")&&(this.quality_label=t.qualityLabel),Reflect.has(t,"fps")&&(this.fps=t.fps),Reflect.has(t,"url")&&(this.url=t.url),Reflect.has(t,"cipher")&&(this.cipher=t.cipher),Reflect.has(t,"signatureCipher")&&(this.signature_cipher=t.signatureCipher),Reflect.has(t,"audioQuality")&&(this.audio_quality=t.audioQuality),this.approx_duration_ms=parseInt(t.approxDurationMs),Reflect.has(t,"audioSampleRate")&&(this.audio_sample_rate=parseInt(t.audioSampleRate)),Reflect.has(t,"audioChannels")&&(this.audio_channels=t.audioChannels),Reflect.has(t,"loudnessDb")&&(this.loudness_db=t.loudnessDb),Reflect.has(t,"spatialAudioType")&&(this.spatial_audio_type=t.spatialAudioType?.replace("SPATIAL_AUDIO_TYPE_","")),Reflect.has(t,"maxDvrDurationSec")&&(this.max_dvr_duration_sec=t.maxDvrDurationSec),Reflect.has(t,"targetDurationSec")&&(this.target_duration_dec=t.targetDurationSec),this.has_audio=!!t.audioBitrate||!!t.audioQuality,this.has_video=!!t.qualityLabel,this.has_text=!!t.captionTrack,Reflect.has(t,"xtags")&&(this.xtags=t.xtags),Reflect.has(t,"fairPlayKeyUri")&&(this.fair_play_key_uri=t.fairPlayKeyUri),Reflect.has(t,"drmFamilies")&&(this.drm_families=t.drmFamilies),Reflect.has(t,"drmTrackType")&&(this.drm_track_type=t.drmTrackType),Reflect.has(t,"distinctParams")&&(this.distinct_params=t.distinctParams),Reflect.has(t,"trackAbsoluteLoudnessLkfs")&&(this.track_absolute_loudness_lkfs=t.trackAbsoluteLoudnessLkfs),Reflect.has(t,"highReplication")&&(this.high_replication=t.highReplication),Reflect.has(t,"colorInfo")&&(this.color_info={primaries:t.colorInfo.primaries?.replace("COLOR_PRIMARIES_",""),transfer_characteristics:t.colorInfo.transferCharacteristics?.replace("COLOR_TRANSFER_CHARACTERISTICS_",""),matrix_coefficients:t.colorInfo.matrixCoefficients?.replace("COLOR_MATRIX_COEFFICIENTS_","")}),Reflect.has(t,"audioTrack")&&(this.audio_track={audio_is_default:t.audioTrack.audioIsDefault,display_name:t.audioTrack.displayName,id:t.audioTrack.id}),Reflect.has(t,"captionTrack")&&(this.caption_track={display_name:t.captionTrack.displayName,vss_id:t.captionTrack.vssId,language_code:t.captionTrack.languageCode,kind:t.captionTrack.kind,id:t.captionTrack.id}),this.has_audio||this.has_text){let o=this.xtags?RR.decode(Kp(decodeURIComponent(this.xtags).replace(/-/g,"+").replace(/_/g,"/"))).xtags:[];if(this.language=o.find(r=>r.key==="lang")?.value||null,this.has_audio){this.is_drc=!!t.isDrc||o.some(a=>a.key==="drc"&&a.value==="1");let r=o.find(a=>a.key==="acont")?.value;this.is_dubbed=r==="dubbed",this.is_descriptive=r==="descriptive",this.is_secondary=r==="secondary",this.is_auto_dubbed=r==="dubbed-auto",this.is_original=r==="original"||!this.is_dubbed&&!this.is_descriptive&&!this.is_secondary&&!this.is_auto_dubbed&&!this.is_drc;}this.has_text&&!this.language&&this.caption_track&&(this.language=this.caption_track.language_code);}}decipher(t){return t?t.decipher(this.url,this.signature_cipher,this.cipher,p(this,Jh)):this.url||""}};Jh=new WeakMap,s(L1,"Format");var ru=L1;var U1=class U1{constructor(t){i$1(this,"id");i$1(this,"channel_id");i$1(this,"title");i$1(this,"duration");i$1(this,"keywords");i$1(this,"is_owner_viewing");i$1(this,"short_description");i$1(this,"thumbnail");i$1(this,"allow_ratings");i$1(this,"view_count");i$1(this,"author");i$1(this,"is_private");i$1(this,"is_live");i$1(this,"is_live_content");i$1(this,"is_live_dvr_enabled");i$1(this,"is_upcoming");i$1(this,"is_crawlable");i$1(this,"is_post_live_dvr");i$1(this,"is_low_latency_live_stream");i$1(this,"live_chunk_readahead");this.id=t.videoId,this.channel_id=t.channelId,this.title=t.title,this.duration=parseInt(t.lengthSeconds),this.keywords=t.keywords,this.is_owner_viewing=!!t.isOwnerViewing,this.short_description=t.shortDescription,this.thumbnail=y.fromResponse(t.thumbnail),this.allow_ratings=!!t.allowRatings,this.view_count=parseInt(t.viewCount),this.author=t.author,this.is_private=!!t.isPrivate,this.is_live=!!t.isLive,this.is_live_content=!!t.isLiveContent,this.is_live_dvr_enabled=!!t.isLiveDvrEnabled,this.is_low_latency_live_stream=!!t.isLowLatencyLiveStream,this.is_upcoming=!!t.isUpcoming,this.is_post_live_dvr=!!t.isPostLiveDvr,this.is_crawlable=!!t.isCrawlable,this.live_chunk_readahead=t.liveChunkReadahead;}};s(U1,"VideoDetails");var au=U1;var cu="Parser",FM=new Set(["AdSlot","DisplayAd","SearchPyv","MealbarPromo","PrimetimePromo","PromotedSparklesWeb","CompactPromotedVideo","BrandVideoShelf","BrandVideoSingleton","StatementBanner","GuideSigninPromo","AdsEngagementPanelContent","MiniGameCardView"]),j1=new Map(Object.entries(Tl)),PR=new Map,uu=null,Xn=s(({classname:n,...t})=>{switch(t.error_type){case "parse":t.error instanceof Error&&Y.warn(cu,new _(`Something went wrong at ${n}!
This is a bug, please report it at ${Fe.bugs.url}`,{stack:t.error.stack,classdata:JSON.stringify(t.classdata,null,2)}));break;case "typecheck":Y.warn(cu,new Rt(`Type mismatch, got ${n} expected ${Array.isArray(t.expected)?t.expected.join(" | "):t.expected}.`,t.classdata));break;case "mutation_data_missing":Y.warn(cu,new _(`Mutation data required for processing ${n}, but none found.
This is a bug, please report it at ${Fe.bugs.url}`));break;case "mutation_data_invalid":Y.warn(cu,new _(`Mutation data missing or invalid for ${t.failed} out of ${t.total} MusicMultiSelectMenuItems. The titles of the failed items are: ${t.titles.join(", ")}.
This is a bug, please report it at ${Fe.bugs.url}`));break;case "class_not_found":Y.warn(cu,new _(`${n} not found!
This is a bug, want to help us fix it? Follow the instructions at ${Fe.homepage.split("#",1)[0]}/blob/main/docs/updating-the-parser.md or report it at ${Fe.bugs.url}!
Introspected and JIT generated this class in the meantime:
${nS(n,t.key_info)}`));break;case "class_changed":Y.warn(cu,`${n} changed!
The following keys where altered: ${t.changed_keys.map(([e])=>ou(e)).join(", ")}
The class has changed to:
${nS(n,t.key_info)}`);break;default:Y.warn(cu,"Unreachable code reached at ParserErrorHandler");break}},"ERROR_HANDLER");function jM(n){Xn=n;}s(jM,"setParserErrorHandler");function Pi(){uu=null;}s(Pi,"_clearMemo");function Ai(){uu=new is;}s(Ai,"_createMemo");function GM(n,t){if(!uu)return;let e=uu.get(n);if(!e)return uu.set(n,[t]);e.push(t);}s(GM,"_addToMemo");function Mi(){if(!uu)throw new Error("Parser#getMemo() called before Parser#createMemo()");return uu}s(Mi,"_getMemo");function G1(n){return FM.has(n)}s(G1,"shouldIgnore");function kl(n){return (n.charAt(0).toUpperCase()+n.slice(1)).replace(/Renderer|Model/g,"").replace(/Radio/g,"Mix").trim()}s(kl,"sanitizeClassName");function Il(n){let t=j1.get(n);if(!t){let e=new Error(`Module not found: ${n}`);throw e.code="MODULE_NOT_FOUND",e}return t}s(Il,"getParserByName");function $h(n){return j1.has(n)}s($h,"hasParser");function B1(n,t){j1.set(n,t),PR.set(n,t);}s(B1,"addRuntimeParser");function WM(){return Object.fromEntries(PR)}s(WM,"getDynamicParsers");function Y1(n){let t={};Ai();let e=Ze(n.contents),o=Mi();e&&(t.contents=e,t.contents_memo=o),Pi(),Ai();let r=n.onResponseReceivedActions?bS(n.onResponseReceivedActions):null,a=Mi();r&&(t.on_response_received_actions=r,t.on_response_received_actions_memo=a),Pi(),Ai();let f=n.onResponseReceivedEndpoints?bS(n.onResponseReceivedEndpoints):null,m=Mi();f&&(t.on_response_received_endpoints=f,t.on_response_received_endpoints_memo=m),Pi(),Ai();let b=n.onResponseReceivedCommands?bS(n.onResponseReceivedCommands):null,x=Mi();b&&(t.on_response_received_commands=b,t.on_response_received_commands_memo=x),Pi(),Ai();let I=n.continuationContents?V1(n.continuationContents):null,k=Mi();I&&(t.continuation_contents=I,t.continuation_contents_memo=k),Pi(),Ai();let S=n.actions?DR(n.actions):null,P=Mi();S&&(t.actions=S,t.actions_memo=P),Pi(),Ai();let R=n.liveChatItemContextMenuSupportedRenderers?ee(n.liveChatItemContextMenuSupportedRenderers):null,E=Mi();R&&(t.live_chat_item_context_menu_supported_renderers=R,t.live_chat_item_context_menu_supported_renderers_memo=E),Pi(),Ai();let U=n.header?Ze(n.header):null,A=Mi();U&&(t.header=U,t.header_memo=A),Pi(),Ai();let Ee=n.sidebar?ee(n.sidebar):null,Ce=Mi();Ee&&(t.sidebar=Ee,t.sidebar_memo=Ce),Pi(),Ai();let ze=Ze(n.items);ze&&(t.items=ze,t.items_memo=Mi()),Pi(),OR(o,n.frameworkUpdates?.entityBatchUpdate?.mutations),m&&BR(m,n.frameworkUpdates?.entityBatchUpdate?.mutations);let uo=n.continuation?MR(n.continuation):null;uo&&(t.continuation=uo);let Wi=n.continuationEndpoint?V1(n.continuationEndpoint):null;Wi&&(t.continuation_endpoint=Wi);let q=Ze(n.metadata);q&&(t.metadata=q);let Ft=ee(n.microformat);Ft&&(t.microformat=Ft);let Qo=ee(n.overlay);Qo&&(t.overlay=Qo);let y_=Ke(n.alerts,[en,Cs]);y_.length&&(t.alerts=y_);let x_=n.refinements;x_&&(t.refinements=x_);let g_=n.estimatedResults?parseInt(n.estimatedResults):null;g_&&(t.estimated_results=g_);let jC=Ze(n.playerOverlays);jC&&(t.player_overlays=jC);let GC=ee(n.background,ke);GC&&(t.background=GC);let WC=n.playbackTracking?{videostats_watchtime_url:n.playbackTracking.videostatsWatchtimeUrl.baseUrl,videostats_playback_url:n.playbackTracking.videostatsPlaybackUrl.baseUrl}:null;WC&&(t.playback_tracking=WC);let HC=n.playabilityStatus?{status:n.playabilityStatus.status,reason:n.playabilityStatus.reason||"",embeddable:!!n.playabilityStatus.playableInEmbed||false,audio_only_playability:ee(n.playabilityStatus.audioOnlyPlayability,Ps),error_screen:ee(n.playabilityStatus.errorScreen)}:null;if(HC&&(t.playability_status=HC),n.streamingData){let ol=new Map;t.streaming_data={expires:new Date(Date.now()+parseInt(n.streamingData.expiresInSeconds)*1e3),formats:F1(n.streamingData.formats,ol),adaptive_formats:F1(n.streamingData.adaptiveFormats,ol),dash_manifest_url:n.streamingData.dashManifestUrl,hls_manifest_url:n.streamingData.hlsManifestUrl,server_abr_streaming_url:n.streamingData.serverAbrStreamingUrl};}n.playerConfig&&(t.player_config={audio_config:{loudness_db:n.playerConfig.audioConfig?.loudnessDb,perceptual_loudness_db:n.playerConfig.audioConfig?.perceptualLoudnessDb,enable_per_format_loudness:n.playerConfig.audioConfig?.enablePerFormatLoudness},stream_selection_config:{max_bitrate:n.playerConfig.streamSelectionConfig?.maxBitrate||"0"},media_common_config:{dynamic_readahead_config:{max_read_ahead_media_time_ms:n.playerConfig.mediaCommonConfig?.dynamicReadaheadConfig?.maxReadAheadMediaTimeMs||0,min_read_ahead_media_time_ms:n.playerConfig.mediaCommonConfig?.dynamicReadaheadConfig?.minReadAheadMediaTimeMs||0,read_ahead_growth_rate_ms:n.playerConfig.mediaCommonConfig?.dynamicReadaheadConfig?.readAheadGrowthRateMs||0},media_ustreamer_request_config:{video_playback_ustreamer_config:n.playerConfig.mediaCommonConfig?.mediaUstreamerRequestConfig?.videoPlaybackUstreamerConfig}}});let KC=n.currentVideoEndpoint?new d(n.currentVideoEndpoint):null;KC&&(t.current_video_endpoint=KC);let qC=n.endpoint?new d(n.endpoint):null;qC&&(t.endpoint=qC);let $C=ee(n.captions,xc);$C&&(t.captions=$C);let zC=n.videoDetails?new au(n.videoDetails):null;zC&&(t.video_details=zC);let JC=Ke(n.annotations,yc);JC.length&&(t.annotations=JC);let XC=ee(n.storyboards,[_i,wc]);XC&&(t.storyboards=XC);let ZC=ee(n.endscreen,ua);ZC&&(t.endscreen=ZC);let QC=ee(n.cards,xr);QC&&(t.cards=QC);let eN=Ke(n.engagementPanels,Qt);if(eN.length&&(t.engagement_panels=eN),n.bgChallenge){let ol={private_do_not_access_or_else_trusted_resource_url_wrapped_value:n.bgChallenge.interpreterUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue,private_do_not_access_or_else_safe_script_wrapped_value:n.bgChallenge.interpreterUrl.privateDoNotAccessOrElseSafeScriptWrappedValue};t.bg_challenge={interpreter_url:ol,interpreter_hash:n.bgChallenge.interpreterHash,program:n.bgChallenge.program,global_name:n.bgChallenge.globalName,client_experiments_state_blob:n.bgChallenge.clientExperimentsStateBlob};}return n.challenge&&(t.challenge=n.challenge),n.playerResponse&&(t.player_response=Y1(n.playerResponse)),n.watchNextResponse&&(t.watch_next_response=Y1(n.watchNextResponse)),n.cpnInfo&&(t.cpn_info={cpn:n.cpnInfo.cpn,cpn_source:n.cpnInfo.cpnSource}),n.entries&&(t.entries=n.entries.map(ol=>new d(ol))),n.targetId&&(t.target_id=n.targetId),t}s(Y1,"parseResponse");function ee(n,t){if(!n)return null;let e=Object.keys(n);if(!e.length)return null;let o=kl(e[0]);if(!G1(o))try{let a=$h(o)?Il(o):qh(o,n[e[0]],Xn);if(t){if(Array.isArray(t)){if(!t.some(m=>m.type===a.type))return Xn({classdata:n[e[0]],classname:o,error_type:"typecheck",expected:t.map(m=>m.type)}),null}else if(a.type!==t.type)return Xn({classdata:n[e[0]],classname:o,error_type:"typecheck",expected:t.type}),null}let f=new a(n[e[0]]);return GM(o,f),f}catch(r){return Xn({classname:o,classdata:n[e[0]],error:r,error_type:"parse"}),null}return null}s(ee,"parseItem");function Ke(n,t){if(Array.isArray(n)){let e=[];for(let o of n){let r=ee(o,t);r&&e.push(r);}return V(e)}else if(!n)return V([]);throw new Rt("Expected array but got a single item")}s(Ke,"parseArray");function Ze(n,t,e){if(!n)return null;if(Array.isArray(n)){let o=[];for(let a of n){let f=ee(a,e);f&&o.push(f);}let r=V(o);return t?r:new zi(r)}else if(t)throw new Rt("Expected array but got a single item");return new zi(ee(n,e))}s(Ze,"parse");var HM=/Command$/,KM=/Endpoint$/,qM=/Action$/;function AR(n){let t=[];try{t=Object.keys(n);}catch{}for(let e of t){let o=n[e];if(HM.test(e)||KM.test(e)||qM.test(e)){let r=kl(e);if(G1(r))return;try{if($h(r))return new(Il(r))(o)}catch(a){Xn({error:a,classname:r,classdata:o,error_type:"parse"});}}}}s(AR,"parseCommand");function $M(n){if(Array.isArray(n)){let t=[];for(let e of n){let o=AR(e);o&&t.push(o);}return V(t)}else if(!n)return V([]);throw new Rt("Expected array but got a single item")}s($M,"parseCommands");function MR(n){return n.timedContinuationData?new zh({continuation:n.timedContinuationData,type:"timed"}):null}s(MR,"parseC");function V1(n){return n.itemSectionContinuation?new Sl(n.itemSectionContinuation):n.sectionListContinuation?new Lt(n.sectionListContinuation):n.liveChatContinuation?new Rl(n.liveChatContinuation):n.musicPlaylistShelfContinuation?new El(n.musicPlaylistShelfContinuation):n.musicShelfContinuation?new Bo(n.musicShelfContinuation):n.gridContinuation?new Cl(n.gridContinuation):n.playlistPanelContinuation?new Nl(n.playlistPanelContinuation):n.continuationCommand?new su(n.continuationCommand):null}s(V1,"parseLC");function bS(n){return V(n.map(t=>{if(t.navigateAction)return new Oo(t.navigateAction);if(t.showMiniplayerCommand)return new oS(t.showMiniplayerCommand);if(t.reloadContinuationItemsCommand)return new xt(t.reloadContinuationItemsCommand);if(t.appendContinuationItemsAction)return new Re(t.appendContinuationItemsAction);if(t.openPopupAction)return new Xi(t.openPopupAction)}).filter(t=>t))}s(bS,"parseRR");function DR(n){return Array.isArray(n)?Ze(n.map(t=>(delete t.clickTrackingParams,t))):new zi(ee(n))}s(DR,"parseActions");function F1(n,t){return n?.map(e=>new ru(e,t))||[]}s(F1,"parseFormats");function OR(n,t){let e=n.getType(dt);if(e.length>0&&!t)Xn({error_type:"mutation_data_missing",classname:"MusicMultiSelectMenuItem"});else {let o=[];for(let r of e){let f=t.find(m=>m.payload?.musicFormBooleanChoice?.id===r.form_item_entity_key)?.payload.musicFormBooleanChoice;f?.selected!==void 0&&f?.opaqueToken?r.selected=f.selected:o.push(`'${r.title}'`);}o.length>0&&Xn({error_type:"mutation_data_invalid",classname:"MusicMultiSelectMenuItem",total:e.length,failed:o.length,titles:o});}if(t){let o=t.filter(r=>r.payload?.macroMarkersListEntity&&r.payload.macroMarkersListEntity.markersList?.markerType==="MARKER_TYPE_HEATMAP");for(let r of o){let a=new Nn(r.payload.macroMarkersListEntity),f=n.get("MacroMarkersListEntity");f?f.push(a):n.set("MacroMarkersListEntity",[a]);}}}s(OR,"applyMutations");function BR(n,t){let e=n.getType(xi);if(e.length>0){t||Xn({error_type:"mutation_data_missing",classname:"CommentView"});for(let o of e){let r=t.find(b=>b.payload?.commentEntityPayload?.key===o.keys.comment)?.payload?.commentEntityPayload,a=t.find(b=>b.payload?.engagementToolbarStateEntityPayload?.key===o.keys.toolbar_state)?.payload?.engagementToolbarStateEntityPayload,f=t.find(b=>b.entityKey===o.keys.toolbar_surface)?.payload?.engagementToolbarSurfaceEntityPayload,m=t.find(b=>b.payload?.commentSurfaceEntityPayload?.key===o.keys.comment_surface)?.payload?.commentSurfaceEntityPayload;o.applyMutations(r,a,f,m);}}}s(BR,"applyCommentsMutations");var VR={};Te(VR,{AccountInfo:()=>pu,Channel:()=>hu,ChannelListContinuation:()=>yS,Comments:()=>jo,FilteredChannelList:()=>xS,Guide:()=>xu,HashtagFeed:()=>wu,History:()=>Qn,HomeFeed:()=>gu,ItemMenu:()=>Tu,Library:()=>vu,LiveChat:()=>Su,NotificationsMenu:()=>Eu,Playlist:()=>ci,Search:()=>Cu,Settings:()=>Nu,SmoothedQueue:()=>Iu,TranscriptInfo:()=>mu,VideoInfo:()=>Ko});var lu,W1=class W1{constructor(t){g(this,lu);i$1(this,"contents");if(w(this,lu,u.parseResponse(t.data)),!p(this,lu).contents)throw new _("Page contents not found");let e=p(this,lu).contents.array().as(bs)[0];if(!e)throw new _("Account section list not found");this.contents=e.contents[0];}get page(){return p(this,lu)}};lu=new WeakMap,s(W1,"AccountInfo");var pu=W1;var Ye,Al,Qe,Lo,fu,LR,H1,Pl=class Pl{constructor(t,e,o=false){g(this,fu);g(this,Ye);g(this,Al);g(this,Qe);g(this,Lo);N(this,fu,LR).call(this,e)||o?w(this,Ye,e):w(this,Ye,u.parseResponse(e.data));let r=K1(p(this,Ye).contents_memo,p(this,Ye).continuation_contents_memo,p(this,Ye).on_response_received_commands_memo,p(this,Ye).on_response_received_endpoints_memo,p(this,Ye).on_response_received_actions_memo,p(this,Ye).sidebar_memo,p(this,Ye).header_memo);if(!r)throw new _("No memo found in feed");w(this,Qe,r),w(this,Al,t);}static getVideosFromMemo(t){return t.getType(un,ba,Vn,Kn,ln,Un,Bt,Qc)}static getPlaylistsFromMemo(t){let e=t.getType(ft,ma),o=t.getType(za).filter(r=>["PLAYLIST","ALBUM","PODCAST"].includes(r.content_type));return o.length>0&&e.push(...o),e}get videos(){return Pl.getVideosFromMemo(p(this,Qe))}get posts(){return p(this,Qe).getType(zt,Yn,Fc)}get channels(){return p(this,Qe).getType(Ir,da)}get playlists(){return Pl.getPlaylistsFromMemo(p(this,Qe))}get memo(){return p(this,Qe)}get page_contents(){let t=p(this,Qe).getType(re)?.[0].content,e=p(this,Qe).getType(xt)[0],o=p(this,Qe).getType(Re)[0];return t||e||o}get shelves(){return p(this,Qe).getType(Hn,Mc,fn)}getShelf(t){return this.shelves.find(e=>e.title.toString()===t)}get secondary_contents(){if(!p(this,Ye).contents?.is_node)return null;let t=p(this,Ye).contents?.item();return t.is(yt,zc)?t.secondary_contents:null}get actions(){return p(this,Al)}get page(){return p(this,Ye)}get has_continuation(){return N(this,fu,H1).call(this).length>0}async getContinuationData(){if(p(this,Lo)){if(p(this,Lo).length===0)throw new _("There are no continuations.");return await p(this,Lo)[0].endpoint.call(p(this,Al),{parse:true})}if(w(this,Lo,N(this,fu,H1).call(this)),p(this,Lo))return this.getContinuationData()}async getContinuation(){let t=await this.getContinuationData();if(!t)throw new _("Could not get continuation data");return new Pl(this.actions,t,true)}};Ye=new WeakMap,Al=new WeakMap,Qe=new WeakMap,Lo=new WeakMap,fu=new WeakSet,LR=s(function(t){return !("data"in t)},"#isParsed"),H1=s(function(){if(p(this,Ye).header_memo){let t=p(this,Ye).header_memo.getType(K);return p(this,Qe).getType(K).filter(e=>!t.includes(e))}return p(this,Qe).getType(K)},"#getBodyContinuations"),s(Pl,"Feed");var te=Pl;var du,q1=class q1 extends te{constructor(e,o,r=false){super(e,o,r);g(this,du);}get filter_chips(){if(p(this,du))return p(this,du)||[];if(this.memo.getType(rt)?.length>1)throw new _("There are too many feed filter chipbars, you'll need to find the correct one yourself in this.page");if(this.memo.getType(rt)?.length===0)throw new _("There are no feed filter chipbars");return w(this,du,this.memo.getType(ae)),p(this,du)||[]}get filters(){return this.filter_chips.map(e=>e.text.toString())||[]}async getFilteredFeed(e){let o;if(typeof e=="string"){if(!this.filters.includes(e))throw new _("Filter not found",{available_filters:this.filters});o=this.filter_chips.find(a=>a.text.toString()===e);}else if(e.type==="ChipCloudChip")o=e;else throw new _("Invalid filter");if(!o)throw new _("Filter not found");if(o.is_selected)return this;let r=await o.endpoint?.call(this.actions,{parse:true});if(!r)throw new _("Failed to get filtered feed");return new te(this.actions,r,true)}};du=new WeakMap,s(q1,"FilterableFeed");var ri=q1;var UR={};Te(UR,{Feed:()=>te,FilterableFeed:()=>ri,MediaInfo:()=>wt,TabbedFeed:()=>Di});var Zn,gt,Uo,Yo,$1=class $1{constructor(t,e,o){g(this,Zn);g(this,gt);g(this,Uo);g(this,Yo);i$1(this,"basic_info");i$1(this,"annotations");i$1(this,"storyboards");i$1(this,"endscreen");i$1(this,"captions");i$1(this,"cards");i$1(this,"streaming_data");i$1(this,"playability_status");i$1(this,"player_config");w(this,gt,e);let r=u.parseResponse(t[0].data.playerResponse?t[0].data.playerResponse:t[0].data),a=t[1]?.data?u.parseResponse(t[1].data):void 0;if(w(this,Zn,[r,a]),w(this,Uo,o),r.playability_status?.status==="ERROR")throw new _("This video is unavailable",r.playability_status);if(r.microformat&&!r.microformat?.is(qe,mt))throw new _("Unsupported microformat",r.microformat);this.basic_info={...r.video_details,embed:r.microformat?.is(qe)?r.microformat?.embed:null,channel:r.microformat?.is(qe)?r.microformat?.channel:null,is_unlisted:r.microformat?.is_unlisted,is_family_safe:r.microformat?.is_family_safe,category:r.microformat?.is(qe)?r.microformat?.category:null,has_ypc_metadata:r.microformat?.is(qe)?r.microformat?.has_ypc_metadata:null,start_timestamp:r.microformat?.is(qe)?r.microformat.start_timestamp:null,end_timestamp:r.microformat?.is(qe)?r.microformat.end_timestamp:null,view_count:r.microformat?.is(qe)&&isNaN(r.video_details?.view_count)?r.microformat.view_count:r.video_details?.view_count,url_canonical:r.microformat?.is(mt)?r.microformat?.url_canonical:null,tags:r.microformat?.is(mt)?r.microformat?.tags:null,like_count:void 0,is_liked:void 0,is_disliked:void 0},this.annotations=r.annotations,this.storyboards=r.storyboards,this.endscreen=r.endscreen,this.captions=r.captions,this.cards=r.cards,this.streaming_data=r.streaming_data,this.playability_status=r.playability_status,this.player_config=r.player_config,w(this,Yo,r.playback_tracking);}async toDash(t={}){let e=p(this,Zn)[0],o=t.manifest_options||{};if(e.video_details&&e.video_details.is_live)throw new _("Generating DASH manifests for live videos is not supported. Please use the DASH and HLS manifests provided by YouTube in `streaming_data.dash_manifest_url` and `streaming_data.hls_manifest_url` instead.");let r,a;return o.include_thumbnails&&e.storyboards&&(r=e.storyboards),typeof o.captions_format=="string"&&e.captions?.caption_tracks&&(a=e.captions.caption_tracks),hl.toDash(this.streaming_data,this.page[0].video_details?.is_post_live_dvr,t.url_transformer,t.format_filter,p(this,Uo),p(this,gt).session.player,p(this,gt),r,a,o)}getStreamingInfo(t,e){return H_(this.streaming_data,this.page[0].video_details?.is_post_live_dvr,t,e,this.cpn,p(this,gt).session.player,p(this,gt),p(this,Zn)[0].storyboards?p(this,Zn)[0].storyboards:void 0)}chooseFormat(t){return hl.chooseFormat(t,this.streaming_data)}async download(t={}){let e=p(this,Zn)[0];if(e.video_details&&(e.video_details.is_live||e.video_details.is_post_live_dvr))throw new _("Downloading is not supported for live and Post-Live-DVR videos, as they are split up into 5 second segments that are individual files, which require using a tool such as ffmpeg to stitch them together, so they cannot be returned in a single stream.");return hl.download(t,p(this,gt),this.playability_status,this.streaming_data,p(this,gt).session.player,this.cpn)}async getTranscript(){let t=this.page[1];if(!t)throw new _("Cannot get transcript from basic video info.");if(!t.engagement_panels)throw new _("Engagement panels not found. Video likely has no transcript.");let e=t.engagement_panels.find(a=>a.panel_identifier==="engagement-panel-searchable-transcript");if(!e)throw new _("Transcript panel not found. Video likely has no transcript.");let o=e.content?.as(K);if(!o)throw new _("Transcript continuation not found.");let r=await o.endpoint.call(this.actions);return new mu(this.actions,r)}async addToWatchHistory(t,e,o="https://www."){if(!p(this,Yo))throw new _("Playback tracking not available");let r={cpn:p(this,Uo),fmt:251,rtn:0,rt:0},a=p(this,Yo).videostats_playback_url.replace("https://s.",o);return await p(this,gt).stats(a,{client_name:t||H.CLIENTS.WEB.NAME,client_version:e||H.CLIENTS.WEB.VERSION},r)}async updateWatchTime(t,e=H.CLIENTS.WEB.NAME,o=H.CLIENTS.WEB.VERSION,r="https://www."){if(!p(this,Yo))throw new _("Playback tracking not available");let a={cpn:p(this,Uo),st:t.toFixed(3),et:t.toFixed(3),cmt:t.toFixed(3),final:"1"},f=p(this,Yo).videostats_watchtime_url.replace("https://s.",r);return await p(this,gt).stats(f,{client_name:e,client_version:o},a)}get actions(){return p(this,gt)}get cpn(){return p(this,Uo)}get page(){return p(this,Zn)}};Zn=new WeakMap,gt=new WeakMap,Uo=new WeakMap,Yo=new WeakMap,s($1,"MediaInfo");var wt=$1;var Vo,Fo,Xh=class Xh extends te{constructor(e,o,r=false){super(e,o,r);g(this,Vo);g(this,Fo);w(this,Vo,e),w(this,Fo,this.page.contents_memo?.getType(re));}get tabs(){return p(this,Fo)?.map(e=>e.title.toString())??[]}async getTabByName(e){let o=p(this,Fo)?.find(a=>a.title.toLowerCase()===e.toLowerCase());if(!o)throw new _(`Tab "${e}" not found`);if(o.selected)return this;let r=await o.endpoint.call(p(this,Vo));return new Xh(p(this,Vo),r,false)}async getTabByURL(e){let o=p(this,Fo)?.find(a=>a.endpoint.metadata.url?.split("/").pop()===e);if(!o)throw new _(`Tab "${e}" not found`);if(o.selected)return this;let r=await o.endpoint.call(p(this,Vo));return new Xh(p(this,Vo),r,false)}hasTabWithURL(e){return p(this,Fo)?.some(o=>o.endpoint.metadata.url?.split("/").pop()===e)??false}get title(){return this.page.contents_memo?.getType(re)?.find(e=>e.selected)?.title.toString()}};Vo=new WeakMap,Fo=new WeakMap,s(Xh,"TabbedFeed");var Di=Xh;var et=class et extends Di{constructor(e,o,r=false){super(e,o,r);i$1(this,"header");i$1(this,"metadata");i$1(this,"subscribe_button");i$1(this,"current_tab");this.header=this.page.header?.item()?.as(ei,gr,ka,_t);let a=this.page.metadata?.item().as(kr),f=this.page.microformat?.as(mt);if(this.page.alerts){let m=this.page.alerts[0];if(m?.alert_type==="ERROR")throw new Qh(m.text.toString())}if(!a&&!this.page.contents)throw new _("Invalid channel",this);this.metadata={...a,...f||{}},this.subscribe_button=this.page.header_memo?.getType(de)[0],this.page.contents&&(this.current_tab=this.page.contents.item().as(yt).tabs.find(m=>m.selected));}async applyFilter(e){let o,r=this.memo.getType(rt)[0];if(typeof e=="string"){if(o=r?.contents.find(f=>f.text===e),!o)throw new _(`Filter ${e} not found`,{available_filters:this.filters})}else o=e;if(!o.endpoint)throw new _("Invalid filter",e);let a=await o.endpoint.call(this.actions,{parse:true});if(!a)throw new _("No page returned",{filter:o});return new xS(this.actions,a,true)}async applySort(e){let o=this.memo.getType(ot)[0];if(!o||!o.sub_menu_items)throw new _("No sort filter sub menu found");let r=o.sub_menu_items.find(f=>f.title===e);if(!r)throw new _(`Sort filter ${e} not found`,{available_sort_filters:this.sort_filters});if(r.selected)return this;let a=await r.endpoint.call(this.actions,{parse:true});return new et(this.actions,a,true)}async applyContentTypeFilter(e){let o=this.current_tab?.content?.as(G).sub_menu?.as(vo);if(!o)throw new _("Sub menu not found");let r=o.content_type_sub_menu_items.find(f=>f.title===e);if(!r)throw new _(`Sub menu item ${e} not found`,{available_filters:this.content_type_filters});if(r.selected)return this;let a=await r.endpoint.call(this.actions,{parse:true});return new et(this.actions,a,true)}get filters(){return this.memo.getType(rt)?.[0]?.contents.filterType(ae).map(e=>e.text)||[]}get sort_filters(){return this.memo.getType(ot)[0]?.sub_menu_items?.map(o=>o.title)||[]}get content_type_filters(){return this.current_tab?.content?.as(G).sub_menu?.as(vo)?.content_type_sub_menu_items.map(o=>o.title)||[]}async getHome(){let e=await this.getTabByURL("featured");return new et(this.actions,e.page,true)}async getVideos(){let e=await this.getTabByURL("videos");return new et(this.actions,e.page,true)}async getShorts(){let e=await this.getTabByURL("shorts");return new et(this.actions,e.page,true)}async getLiveStreams(){let e=await this.getTabByURL("streams");return new et(this.actions,e.page,true)}async getReleases(){let e=await this.getTabByURL("releases");return new et(this.actions,e.page,true)}async getPodcasts(){let e=await this.getTabByURL("podcasts");return new et(this.actions,e.page,true)}async getCourses(){let e=await this.getTabByURL("courses");return new et(this.actions,e.page,true)}async getPlaylists(){let e=await this.getTabByURL("playlists");return new et(this.actions,e.page,true)}async getCommunity(){let e=await this.getTabByURL("posts");return new et(this.actions,e.page,true)}async getAbout(){if(this.hasTabWithURL("about"))return (await this.getTabByURL("about")).memo.getType(To)[0];let e=this.header?.is(ei)&&this.header.tagline;if(e||this.header?.is(_t)&&this.header.content?.description){if(e&&e.more_endpoint instanceof d){let a=await e.more_endpoint.call(this.actions);return new Di(this.actions,a,false).memo.getType(To)[0]}let o=this.page.header_memo?.getType(K)[0]?.endpoint;if(!o)throw new _("Failed to extract continuation to get channel about");let r=await o.call(this.actions,{parse:true});if(!r.on_response_received_endpoints_memo)throw new _("Unexpected response while fetching channel about",{response:r});return r.on_response_received_endpoints_memo.getType(ds)[0]}throw new _("About not found")}async search(e){let o=this.memo.getType(vi)?.[0];if(!o)throw new _("Search tab not found",this);let r=await o.endpoint.call(this.actions,{query:e,parse:true});return new et(this.actions,r,true)}get has_home(){return this.hasTabWithURL("featured")}get has_videos(){return this.hasTabWithURL("videos")}get has_shorts(){return this.hasTabWithURL("shorts")}get has_live_streams(){return this.hasTabWithURL("streams")}get has_releases(){return this.hasTabWithURL("releases")}get has_podcasts(){return this.hasTabWithURL("podcasts")}get has_courses(){return this.hasTabWithURL("courses")}get has_playlists(){return this.hasTabWithURL("playlists")}get has_community(){return this.hasTabWithURL("posts")}get has_about(){return this.hasTabWithURL("about")||!!(this.header?.is(ei)&&this.header.tagline?.more_endpoint)||!!(this.header?.is(_t)&&this.header.content?.description?.more_endpoint)}get has_search(){return this.memo.getType(vi)?.length>0}async getContinuation(){let e=await super.getContinuationData();if(!e)throw new _("Could not get continuation data");return new yS(this.actions,e,true)}};s(et,"Channel");var hu=et,gS=class gS extends te{constructor(e,o,r=false){super(e,o,r);i$1(this,"contents");this.contents=this.page.on_response_received_actions?.[0]||this.page.on_response_received_endpoints?.[0];}async getContinuation(){let e=await super.getContinuationData();if(!e)throw new _("Could not get continuation data");return new gS(this.actions,e,true)}};s(gS,"ChannelListContinuation");var yS=gS,Zh=class Zh extends ri{constructor(e,o,r=false){super(e,o,r);i$1(this,"applied_filter");i$1(this,"contents");this.applied_filter=this.memo.getType(ae).find(a=>a.is_selected),this.page.on_response_received_actions&&this.page.on_response_received_actions.length>1&&this.page.on_response_received_actions.shift(),this.contents=this.page.on_response_received_actions?.[0];}async applyFilter(e){let o=await super.getFilteredFeed(e);return new Zh(this.actions,o.page,true)}async getContinuation(){let e=await super.getContinuationData();if(!e?.on_response_received_actions_memo)throw new _("Unexpected continuation data",e);return e.on_response_received_actions_memo.set("FeedFilterChipBar",this.memo.getType(rt)),e.on_response_received_actions_memo.set("ChipCloudChip",this.memo.getType(ae)),new Zh(this.actions,e,true)}};s(Zh,"FilteredChannelList");var xS=Zh;var _u,ai,bu,e_=class e_{constructor(t,e,o=false){g(this,_u);g(this,ai);g(this,bu);i$1(this,"header");i$1(this,"contents");w(this,_u,o?e:u.parseResponse(e)),w(this,ai,t);let r=p(this,_u).on_response_received_endpoints;if(!r)throw new _("Comments page did not have any content.");let a=r.at(0)?.as(Re,xt),f=r.at(1)?.as(Re,xt);this.header=a?.contents?.firstOfType(ti);let m=f?.contents?.filterType(Wr)||[];this.contents=V(m.map(b=>(b.comment&&b.comment.setActions(p(this,ai)),b.setActions(p(this,ai)),b))),w(this,bu,f?.contents?.firstOfType(K));}async applySort(t){if(!this.header)throw new _("Page header is missing. Cannot apply sort option.");let e;if(t==="TOP_COMMENTS"?e=this.header.sort_menu?.sub_menu_items?.at(0):t==="NEWEST_FIRST"&&(e=this.header.sort_menu?.sub_menu_items?.at(1)),!e)throw new _("Could not find target button.");if(e.selected)return this;let o=await e.endpoint.call(p(this,ai),{parse:true});return new e_(p(this,ai),o,true)}async createComment(t){if(!this.header)throw new _("Page header is missing. Cannot create comment.");let e=this.header.create_renderer?.as(jr).submit_button;if(!e)throw new _("Could not find target button. You are probably not logged in.");if(!e.endpoint)throw new _("Button does not have an endpoint.");return await e.endpoint.call(p(this,ai),{commentText:t})}async getContinuation(){if(!p(this,bu))throw new _("Continuation not found");let t=await p(this,bu).endpoint.call(p(this,ai),{parse:true}),e=Object.assign({},p(this,_u));if(!e.on_response_received_endpoints||!t.on_response_received_endpoints)throw new _("Invalid reponse format, missing on_response_received_endpoints.");return e.on_response_received_endpoints.pop(),e.on_response_received_endpoints.push(t.on_response_received_endpoints[0]),new e_(p(this,ai),e,true)}get has_continuation(){return !!p(this,bu)}get page(){return p(this,_u)}};_u=new WeakMap,ai=new WeakMap,bu=new WeakMap,s(e_,"Comments");var jo=e_;var yu,z1=class z1{constructor(t){g(this,yu);i$1(this,"contents");w(this,yu,u.parseResponse(t)),p(this,yu).items&&(this.contents=p(this,yu).items.array().as(Sn,ya));}get page(){return p(this,yu)}};yu=new WeakMap,s(z1,"Guide");var xu=z1;var wS=class wS extends te{constructor(e,o,r=false){super(e,o,r);i$1(this,"sections");i$1(this,"feed_actions");this.sections=this.memo.getType(ce),this.feed_actions=this.memo.getType(an)[0];}async getContinuation(){let e=await this.getContinuationData();if(!e)throw new Error("No continuation data found");return new wS(this.actions,e,true)}async removeVideo(e){let o;for(let m of this.sections)for(let b of m.contents){let x=b;if(x.video_id===e&&x.menu){o=x.menu.top_level_buttons[0].as(v).endpoint.payload.feedbackToken;break}}if(!o)throw new Error("Failed to get feedback token");let r={feedbackTokens:[o]};if(!(await this.actions.execute("/feedback",r)).data.feedbackResponses[0].isProcessed)throw new Error("Failed to remove video from watch history");return  true}};s(wS,"History");var Qn=wS;var t_=class t_ extends ri{constructor(e,o,r=false){super(e,o,r);i$1(this,"contents");i$1(this,"header");this.header=this.memo.getType(fa)[0],this.contents=this.memo.getType(bt)[0]||this.page.on_response_received_actions?.[0];}async applyFilter(e){let o=await super.getFilteredFeed(e);return new t_(this.actions,o.page,true)}async getContinuation(){let e=await super.getContinuation();return e.page.header=this.page.header,this.header&&e.page.header_memo?.set(this.header.type,[this.header]),new t_(this.actions,e.page,true)}};s(t_,"HomeFeed");var gu=t_;var TS=class TS extends ri{constructor(e,o){super(e,o);i$1(this,"header");i$1(this,"contents");if(!this.page.contents_memo)throw new _("Unexpected response",this.page);let r=this.page.contents_memo.getType(re)[0];if(!r.content)throw new _("Content tab has no content",r);this.page.header&&(this.header=this.page.header.item().as(xa,_t)),this.contents=r.content.as(bt);}async applyFilter(e){let o=await super.getFilteredFeed(e);return new TS(this.actions,o.page)}};s(TS,"HashtagFeed");var wu=TS;var i_,n_,Ml,J1=class J1{constructor(t,e){g(this,i_);g(this,n_);g(this,Ml);w(this,i_,t),w(this,n_,e);let o=t?.live_chat_item_context_menu_supported_renderers;if(!o||!o.is(B))throw new _('Response did not have a "live_chat_item_context_menu_supported_renderers" property. The call may have failed.');w(this,Ml,o.as(B).items);}async selectItem(t){let e;if(t instanceof v){if(!t.endpoint)throw new _("Item does not have an endpoint.");e=t.endpoint;}else {let o=p(this,Ml).find(r=>r.is(ut)?r.as(ut).icon_type===t:false);if(!o||!o.is(ut))throw new _(`Button "${t}" not found.`);e=o.endpoint;}if(!e)throw new _("Target button does not have an endpoint.");return await e.call(p(this,n_),{parse:true})}items(){return p(this,Ml)}page(){return p(this,i_)}};i_=new WeakMap,n_=new WeakMap,Ml=new WeakMap,s(J1,"ItemMenu");var Tu=J1;var Dl,vS,IS=class IS extends te{constructor(e,o,r=false){super(e,o,r);g(this,Dl);i$1(this,"info");i$1(this,"menu");i$1(this,"endpoint");i$1(this,"messages");let a=this.memo.getType(kc)[0],f=this.memo.getType(Ec)[0],m=this.memo.getType(Cc)[0],b=this.memo.getType(Nc)[0],x=this.page.alerts?.firstOfType(en);if(x&&x.alert_type==="ERROR")throw new _(x.text.toString(),x);if(!f&&!m&&Object.keys(this.page).length===0)throw new _("Got empty continuation response. This is likely the end of the playlist.");this.info={...this.page.metadata?.item().as(Sc),subtitle:a?a.subtitle:null,author:m?.owner?.as($n).author??a?.author,thumbnails:f?.thumbnail_renderer?.as(bn,_n).thumbnail,total_items:N(this,Dl,vS).call(this,0,f),views:N(this,Dl,vS).call(this,1,f),last_updated:N(this,Dl,vS).call(this,2,f),can_share:a?.can_share,can_delete:a?.can_delete,can_reorder:b?.can_reorder,is_editable:b?.is_editable,privacy:a?.privacy},this.menu=f?.menu,this.endpoint=f?.endpoint,this.messages=this.memo.getType(_e);}get items(){return V(this.videos.as(Un,Vn,Kn).filter(e=>e.style!=="PLAYLIST_VIDEO_RENDERER_STYLE_RECOMMENDED_VIDEO"))}get has_continuation(){let e=this.memo.getType(G)[0];return e?!!this.memo.getType(K).find(o=>!e.contents.includes(o)):super.has_continuation}async getContinuationData(){let e=this.memo.getType(G)[0];if(!e)return await super.getContinuationData();let o=this.memo.getType(K).find(r=>!e.contents.includes(r));if(!o)throw new _("There are no continuations.");return await o.endpoint.call(this.actions,{parse:true})}async getContinuation(){let e=await this.getContinuationData();if(!e)throw new _("Could not get continuation data");return new IS(this.actions,e,true)}};Dl=new WeakSet,vS=s(function(e,o){return !o||!o.stats?"N/A":o.stats[e]?.toString()||"N/A"},"#getStat"),s(IS,"Playlist");var ci=IS;var kS,YR,X1=class X1 extends te{constructor(e,o){super(e,o);g(this,kS);i$1(this,"header");i$1(this,"sections");if(!this.page.contents_memo)throw new _("Page contents not found");this.header=this.memo.getType(_t)[0];let r=this.page.contents_memo.getType(Hn);this.sections=r.map(a=>({type:a.icon_type,title:a.title,contents:a.content?.key("items").array()||[],getAll:s(()=>N(this,kS,YR).call(this,a),"getAll")}));}get history(){return this.sections.find(e=>e.type==="WATCH_HISTORY")}get watch_later(){return this.sections.find(e=>e.type==="WATCH_LATER")}get liked_videos(){return this.sections.find(e=>e.type==="LIKE")}get playlists_section(){return this.sections.find(e=>e.type==="PLAYLISTS")}get clips(){return this.sections.find(e=>e.type==="CONTENT_CUT")}};kS=new WeakSet,YR=s(async function(e){if(!e.menu?.as(B).top_level_buttons)throw new _(`The ${e.title.text} shelf doesn't have more items`);let o=e.menu.as(B).top_level_buttons.firstOfType(v);if(!o)throw new _("Did not find target button.");let r=await o.as(v).endpoint.call(this.actions,{parse:true});switch(e.icon_type){case "LIKE":case "WATCH_LATER":return new ci(this.actions,r,true);case "WATCH_HISTORY":return new Qn(this.actions,r,true);case "CONTENT_CUT":return new te(this.actions,r,true);default:throw new _("Target shelf not implemented.")}},"#getAll"),s(X1,"Library");var vu=X1;function zM(n){let t=[];for(let e of n)if(Array.isArray(e))for(let o of e)t.push(o);else t.push(e);return t}s(zM,"flattenQueue");var Q1=class Q1{constructor(){i$1(this,"front");i$1(this,"back");this.front=[],this.back=[];}isEmpty(){return !this.front.length&&!this.back.length}clear(){this.front=[],this.back=[];}getValues(){return this.front.concat(this.back.reverse())}};s(Q1,"DelayQueue");var Z1=Q1,Oi,eo,Go,Tt,Ut,tt,eC=class eC{constructor(){g(this,Oi);g(this,eo);g(this,Go);g(this,Tt);g(this,Ut);g(this,tt);w(this,Oi,null),w(this,eo,null),w(this,Go,null),w(this,Tt,[]),w(this,Ut,null),w(this,tt,new Z1);}enqueueActionGroup(t){if(p(this,Oi)!==null){let e=Date.now()-p(this,Oi);p(this,tt).back.push(e),5<p(this,tt).front.length+p(this,tt).back.length&&(p(this,tt).front.length||(p(this,tt).front=p(this,tt).back,p(this,tt).front.reverse(),p(this,tt).back=[]),p(this,tt).front.pop()),w(this,eo,Math.max(...p(this,tt).getValues()));}w(this,Oi,Date.now()),p(this,Tt).push(t),p(this,Ut)===null&&w(this,Ut,setTimeout(this.emitSmoothedActions.bind(this)));}emitSmoothedActions(){if(w(this,Ut,null),p(this,Tt).length){let t=1e4;p(this,eo)!==null&&p(this,Oi)!==null&&(t=p(this,eo)-Date.now()+p(this,Oi)),t=p(this,Tt).length<t/80?1:Math.ceil(p(this,Tt).length/(t/80));let e=zM(p(this,Tt).splice(0,t));p(this,Go)&&p(this,Go).call(this,e),p(this,Tt)!==null&&(t==1?(t=p(this,eo)/p(this,Tt).length,t*=Math.random()+.5,t=Math.min(1e3,t),t=Math.max(80,t)):t=80,w(this,Ut,setTimeout(this.emitSmoothedActions.bind(this),t)));}}clear(){p(this,Ut)!==null&&(clearTimeout(p(this,Ut)),w(this,Ut,null)),w(this,Tt,[]);}set callback(t){w(this,Go,t);}get callback(){return p(this,Go)}get action_queue(){return p(this,Tt)}get estimated_update_interval(){return p(this,eo)}get last_update_time(){return p(this,Oi)}get next_update_id(){return p(this,Ut)}get poll_response_delay_queue(){return p(this,tt)}};Oi=new WeakMap,eo=new WeakMap,Go=new WeakMap,Tt=new WeakMap,Ut=new WeakMap,tt=new WeakMap,s(eC,"SmoothedQueue");var Iu=eC;var Bi,Ol,s_,Wo,Bl,r_,ye,o_,SS,ES,ku,tC=class tC extends bo{constructor(e){super();g(this,ye);g(this,Bi);g(this,Ol);g(this,s_);g(this,Wo);g(this,Bl);g(this,r_,0);i$1(this,"smoothed_queue");i$1(this,"initial_info");i$1(this,"metadata");i$1(this,"running",false);i$1(this,"is_replay",false);w(this,Ol,e.basic_info.id),w(this,s_,e.basic_info.channel_id),w(this,Bi,e.actions),w(this,Wo,e.livechat?.continuation),this.is_replay=e.livechat?.is_replay||false,this.smoothed_queue=new Iu,this.smoothed_queue.callback=async o=>{o.length?o.length<10?await N(this,ye,SS).call(this,o):this.is_replay?(N(this,ye,SS).call(this,o),await N(this,ye,ku).call(this,2e3)):N(this,ye,SS).call(this,o):await N(this,ye,ku).call(this,2e3),this.running&&N(this,ye,o_).call(this);};}on(e,o){super.on(e,o);}once(e,o){super.once(e,o);}start(){this.running||(this.running=true,N(this,ye,o_).call(this),N(this,ye,ES).call(this));}stop(){this.smoothed_queue.clear(),this.running=false;}async sendMessage(e){let o=Z2.encode({params:{ids:{videoId:p(this,Ol),channelId:p(this,s_)}},number0:1,number1:4}),r=btoa(encodeURIComponent(Ie(o.finish()))),a=await p(this,Bi).execute("/live_chat/send_message",{richMessage:{textSegments:[{text:e}]},clientMessageId:W.shim.uuidv4(),client:"WEB",parse:true,params:r});if(!a.actions)throw new _("Unexpected response from send_message",a);return a.actions.array().as(Pa,Or)}applyFilter(e){if(!this.initial_info)throw new _("Cannot apply filter before initial info is retrieved.");let o=this.initial_info?.header?.view_selector?.sub_menu_items;if(e==="TOP_CHAT"){if(o?.at(0)?.selected)return;w(this,Wo,o?.at(0)?.continuation);}else {if(o?.at(1)?.selected)return;w(this,Wo,o?.at(1)?.continuation);}}async getItemMenu(e){if(!e.hasKey("menu_endpoint")||!e.key("menu_endpoint").isInstanceof(d))throw new _("This item does not have a menu.",e);let o=await e.key("menu_endpoint").instanceof(d).call(p(this,Bi),{parse:true});if(!o)throw new _("Could not retrieve item menu.",e);return new Tu(o,p(this,Bi))}async selectButton(e){return await e.endpoint.call(p(this,Bi),{parse:true})}};Bi=new WeakMap,Ol=new WeakMap,s_=new WeakMap,Wo=new WeakMap,Bl=new WeakMap,r_=new WeakMap,ye=new WeakSet,o_=s(function(){(async()=>{try{let e=await p(this,Bi).execute(this.is_replay?"live_chat/get_live_chat_replay":"live_chat/get_live_chat",{continuation:p(this,Wo),parse:!0}),o=e.continuation_contents;if(o||(this.emit("error",new _("Unexpected live chat incremental continuation response",e)),this.emit("end"),this.stop()),!(o instanceof Rl)){this.stop(),this.emit("end");return}w(this,Wo,o.continuation.token),o.header?(this.initial_info=o,this.emit("start",o),this.running&&N(this,ye,o_).call(this)):this.smoothed_queue.enqueueActionGroup(o.actions),w(this,r_,0);}catch(e){this.emit("error",e),iN(this,r_)._++<10?(await N(this,ye,ku).call(this,2e3),N(this,ye,o_).call(this)):(this.emit("error",new _("Reached retry limit for incremental continuation requests",e)),this.emit("end"),this.stop());}})();},"#pollLivechat"),SS=s(async function(e){let r=e.length<125?1:Math.ceil(e.length/125),a=r==1?(r=1e4/e.length,r*=Math.random()+.5,r=Math.min(1e3,r),r=Math.max(80,r)):r=80;for(let f of e)await N(this,ye,ku).call(this,a),this.emit("chat-update",f);},"#emitSmoothedActions"),ES=s(function(){(async()=>{try{let e={videoId:p(this,Ol)};p(this,Bl)&&(e.continuation=p(this,Bl));let o=await p(this,Bi).execute("/updated_metadata",e),r=u.parseResponse(o.data);w(this,Bl,r.continuation?.token),this.metadata={title:r.actions?.array().firstOfType(Fa)||this.metadata?.title,description:r.actions?.array().firstOfType(Va)||this.metadata?.description,views:r.actions?.array().firstOfType(Ga)||this.metadata?.views,likes:r.actions?.array().firstOfType(ja)||this.metadata?.likes,date:r.actions?.array().firstOfType(Ya)||this.metadata?.date},this.emit("metadata-update",this.metadata),await N(this,ye,ku).call(this,5e3),this.running&&N(this,ye,ES).call(this);}catch{await N(this,ye,ku).call(this,2e3),this.running&&N(this,ye,ES).call(this);}})();},"#pollMetadata"),ku=s(async function(e){return new Promise(o=>setTimeout(()=>o(),e))},"#wait"),s(tC,"LiveChat");var Su=tC;var to,Ll,CS=class CS{constructor(t,e){g(this,to);g(this,Ll);i$1(this,"header");i$1(this,"contents");if(w(this,Ll,t),w(this,to,u.parseResponse(e.data)),!p(this,to).actions_memo)throw new _("Page actions not found");this.header=p(this,to).actions_memo.getType(Qa)[0],this.contents=p(this,to).actions_memo.getType(Rn);}async getContinuation(){let t=p(this,to).actions_memo?.getType(K)[0];if(!t)throw new _("Continuation not found");let e=await t.endpoint.call(p(this,Ll),{parse:false});return new CS(p(this,Ll),e)}get page(){return p(this,to)}};to=new WeakMap,Ll=new WeakMap,s(CS,"NotificationsMenu");var Eu=CS;var a_=class a_ extends te{constructor(e,o,r=false){super(e,o,r);i$1(this,"header");i$1(this,"results");i$1(this,"refinements");i$1(this,"estimated_results");i$1(this,"sub_menu");i$1(this,"watch_card");i$1(this,"refinement_cards");let a=this.page.contents_memo?.getType(G)[0].contents||this.page.on_response_received_commands?.[0].as(Re,xt).contents;if(!a)throw new _("No contents found in search response");this.page.header&&(this.header=this.page.header.item().as(Oc)),this.results=V(a.filterType(ce).flatMap(f=>f.contents)),this.refinements=this.page.refinements||[],this.estimated_results=this.page.estimated_results||0,this.page.contents_memo&&(this.sub_menu=this.page.contents_memo.getType(Bc)[0],this.watch_card=this.page.contents_memo.getType(jn)[0]),this.refinement_cards=this.results?.firstOfType(Jt);}async selectRefinementCard(e){let o;if(typeof e=="string"){if(!this.refinement_cards)throw new _("No refinement cards found.");if(o=this.refinement_cards?.cards.find(a=>a.is(bi)&&a.query===e),!o)throw new _(`Refinement card "${e}" not found`,{available_cards:this.refinement_card_queries})}else if(e.type==="SearchRefinementCard")o=e;else throw new _("Invalid refinement card!");let r=await o.endpoint.call(this.actions,{parse:true});return new a_(this.actions,r,true)}get refinement_card_queries(){return this.refinement_cards?.cards.as(bi).map(e=>e.query)||[]}async getContinuation(){let e=await this.getContinuationData();if(!e)throw new _("Could not get continuation data");return new a_(this.actions,e,true)}};s(a_,"Search");var Cu=a_;var Ho,Ul,NS=class NS{constructor(t,e){g(this,Ho);g(this,Ul);i$1(this,"sidebar");i$1(this,"introduction");i$1(this,"sections");if(w(this,Ul,t),w(this,Ho,u.parseResponse(e.data)),this.sidebar=p(this,Ho).sidebar?.as(Vc),!p(this,Ho).contents)throw new _("Page contents not found");let o=p(this,Ho).contents.item().as(yt).tabs.find(a=>a.selected);if(!o)throw new _("Target tab not found");let r=o.content?.as(G).contents.as(ce);this.introduction=r?.shift()?.contents?.firstOfType(_c),this.sections=r?.map(a=>({title:a.header?.is(ti,En,Cn)?a.header.title.toString():null,contents:a.contents}));}async selectSidebarItem(t){if(!this.sidebar)throw new _("Sidebar not available");let e;if(typeof t=="string"){if(e=this.sidebar.items.find(r=>r.title===t),!e)throw new _(`Item "${t}" not found`,{available_items:this.sidebar_items})}else if(t?.is(ct))e=t;else throw new _("Invalid item",{target_item:t});let o=await e.endpoint.call(p(this,Ul),{parse:false});return new NS(p(this,Ul),o)}getSettingOption(t){if(!this.sections)throw new _("Sections not available");for(let e of this.sections)if(e.contents)for(let o of e.contents){let r=o.as(Wn).options;if(r){for(let a of r)if(a.is(Gn)&&a.title?.toString()===t)return a}}throw new _(`Option "${t}" not found`,{available_options:this.setting_options})}get setting_options(){if(!this.sections)throw new _("Sections not available");let t=[];for(let e of this.sections)if(e.contents)for(let o of e.contents)o.as(Wn).options&&(t=t.concat(o.as(Wn).options));return t.map(e=>e.title?.toString()).filter(e=>e)}get sidebar_items(){if(!this.sidebar)throw new _("Sidebar not available");return this.sidebar.items.map(t=>t.title.toString())}get page(){return p(this,Ho)}};Ho=new WeakMap,Ul=new WeakMap,s(NS,"Settings");var Nu=NS;var io,RS=class RS extends wt{constructor(e,o,r){super(e,o,r);i$1(this,"primary_info");i$1(this,"secondary_info");i$1(this,"playlist");i$1(this,"game_info");i$1(this,"merchandise");i$1(this,"related_chip_cloud");i$1(this,"watch_next_feed");i$1(this,"player_overlays");i$1(this,"comments_entry_point_header");i$1(this,"livechat");i$1(this,"autoplay");i$1(this,"heat_map");g(this,io);let[a,f]=this.page;if(this.streaming_data){let I=this.streaming_data.adaptive_formats.find(k=>k.audio_track?.audio_is_default);if(I)this.streaming_data.formats.forEach(k=>k.language=I.language);else if(this.captions?.caption_tracks&&this.captions?.caption_tracks.length>0){let S=this.captions.caption_tracks.find(P=>P.kind==="asr")?.language_code;this.streaming_data.adaptive_formats.forEach(P=>{P.has_audio&&(P.language=S);}),this.streaming_data.formats.forEach(P=>P.language=S);}}let m=f?.contents?.item().as(qn),b=m?.results,x=m?.secondary_results;if(b&&x){if(a.microformat?.is(qe)&&a.microformat?.category==="Gaming"){let E=b.firstOfType(Do)?.metadata?.rows?.firstOfType(Mo);E?.is(Mo)&&(this.game_info={title:E?.contents?.firstOfType(Ao)?.title,release_year:E?.contents?.firstOfType(Ao)?.subtitle});}this.primary_info=b.firstOfType(Zc),this.secondary_info=b.firstOfType(Do),this.merchandise=b.firstOfType(ec),this.related_chip_cloud=x.firstOfType(Ac)?.content.as(Ge),m?.playlist&&(this.playlist=m.playlist),this.watch_next_feed=x.firstOfType(ce)?.contents||x,this.watch_next_feed&&Array.isArray(this.watch_next_feed)&&this.watch_next_feed.at(-1)?.is(K)&&w(this,io,this.watch_next_feed.pop()?.as(K)),this.player_overlays=f?.player_overlays?.item().as(oi),m?.autoplay&&(this.autoplay=m.autoplay);let I=this.primary_info?.menu?.top_level_buttons.firstOfType(Ci);I?.like_button?.is(se)&&I?.dislike_button?.is(se)&&(this.basic_info.like_count=I?.like_button?.like_count,this.basic_info.is_liked=I?.like_button?.is_toggled,this.basic_info.is_disliked=I?.dislike_button?.is_toggled);let k=this.primary_info?.menu?.top_level_buttons.firstOfType(Pt);if(k&&(this.basic_info.like_count=k.like_count,k.like_button)){let E=k.like_button.like_status_entity.like_status;this.basic_info.is_liked=E==="LIKE",this.basic_info.is_disliked=E==="DISLIKE";}let S=b.find(E=>E.is(ce)&&E.target_id==="comments-entry-point");this.comments_entry_point_header=S?.contents?.firstOfType(Fr),this.livechat=f?.contents_memo?.getType(Ca)[0];let P=this.page[1]?.contents_memo?.getType(Nn),R=null;if(P){let E=P.find(U=>U.isHeatmap());if(E)try{R=E.toHeatmap();}catch{}}this.heat_map=R;}}async selectFilter(e){if(!this.related_chip_cloud)throw new _("Chip cloud not found, cannot apply filter");let o;if(typeof e=="string"){let f=this.related_chip_cloud?.chips?.find(m=>m.text===e);if(!f)throw new _("Invalid filter",{available_filters:this.filters});o=f;}else if(e?.is(ae))o=e;else throw new _("Invalid cloud chip",e);if(o.is_selected)return this;let a=(await o.endpoint?.call(this.actions,{parse:true}))?.on_response_received_endpoints?.find(f=>f.is(xt)&&f.target_id==="watch-next-feed");return this.watch_next_feed=a?.contents,this}async addToWatchHistory(){return super.addToWatchHistory()}async updateWatchTime(e){return super.updateWatchTime(e)}async getWatchNextContinuation(){if(!p(this,io))throw new _("Watch next feed continuation not found");let o=(await p(this,io)?.endpoint.call(this.actions,{parse:true}))?.on_response_received_endpoints?.firstOfType(Re);if(!o)throw new _("AppendContinuationItemsAction not found");return this.watch_next_feed=o?.contents,this.watch_next_feed?.at(-1)?.is(K)?w(this,io,this.watch_next_feed.pop()?.as(K)):w(this,io,void 0),this}async like(){let e=this.primary_info?.menu?.top_level_buttons.firstOfType(Pt);if(e){let a=e?.like_button?.toggle_button;if(!a||!a.default_button||!e.like_button)throw new _("Like button not found",{video_id:this.basic_info.id});if(e.like_button.like_status_entity.like_status==="LIKE")throw new _("This video is already liked",{video_id:this.basic_info.id});if(!a.default_button.on_tap)throw new _("onTap command not found",{video_id:this.basic_info.id});return await new d(a.default_button.on_tap.payload.commands.find(b=>b.innertubeCommand)).call(this.actions)}let r=this.primary_info?.menu?.top_level_buttons.firstOfType(Ci)?.like_button;if(!r)throw new _("Like button not found",{video_id:this.basic_info.id});if(!r.is(se))throw new _("Like button is not a toggle button. This action is likely disabled for this video.",{video_id:this.basic_info.id});if(r.is_toggled)throw new _("This video is already liked",{video_id:this.basic_info.id});return await r.endpoint.call(this.actions)}async dislike(){let e=this.primary_info?.menu?.top_level_buttons.firstOfType(Pt);if(e){let a=e?.dislike_button?.toggle_button;if(!a||!a.default_button||!e.dislike_button||!e.like_button)throw new _("Dislike button not found",{video_id:this.basic_info.id});if(e.like_button.like_status_entity.like_status==="DISLIKE")throw new _("This video is already disliked",{video_id:this.basic_info.id});if(!a.default_button.on_tap)throw new _("onTap command not found",{video_id:this.basic_info.id});return await new d(a.default_button.on_tap.payload.commands.find(b=>b.innertubeCommand)).call(this.actions)}let r=this.primary_info?.menu?.top_level_buttons.firstOfType(Ci)?.dislike_button;if(!r)throw new _("Dislike button not found",{video_id:this.basic_info.id});if(!r.is(se))throw new _("Dislike button is not a toggle button. This action is likely disabled for this video.",{video_id:this.basic_info.id});if(r.is_toggled)throw new _("This video is already disliked",{video_id:this.basic_info.id});return await r.endpoint.call(this.actions)}async removeRating(){let e,o=this.primary_info?.menu?.top_level_buttons.firstOfType(Pt);if(o){let m=o?.like_button?.toggle_button;if(!m||!m.default_button||!o.like_button)throw new _("Like button not found",{video_id:this.basic_info.id});let b=o.like_button.like_status_entity.like_status;if(b==="LIKE")e=o?.like_button?.toggle_button;else if(b==="DISLIKE")e=o?.dislike_button?.toggle_button;else throw new _("This video is not liked/disliked",{video_id:this.basic_info.id});if(!e||!e.toggled_button)throw new _("Like/Dislike button not found",{video_id:this.basic_info.id});if(!e.toggled_button.on_tap)throw new _("onTap command not found",{video_id:this.basic_info.id});return await new d(e.toggled_button.on_tap.payload.commands.find(I=>I.innertubeCommand)).call(this.actions)}let r=this.primary_info?.menu?.top_level_buttons.firstOfType(Ci),a=r?.like_button,f=r?.dislike_button;if(!a?.is(se)||!f?.is(se))throw new _("Like/Dislike button is not a toggle button. This action is likely disabled for this video.",{video_id:this.basic_info.id});if(a?.is_toggled?e=a:f?.is_toggled&&(e=f),!e)throw new _("This video is not liked/disliked",{video_id:this.basic_info.id});return await e.toggled_endpoint.call(this.actions)}getLiveChat(){if(!this.livechat)throw new _("Live Chat is not available",{video_id:this.basic_info.id});return new Su(this)}getTrailerInfo(){if(this.has_trailer&&this.playability_status?.error_screen){let e;if(this.playability_status.error_screen.is(Po)?e=this.playability_status.error_screen.trailer?.player_response:this.playability_status.error_screen.is(Ei)&&(e=this.playability_status.error_screen.player_response),e)return new RS([{data:e}],this.actions,this.cpn)}return null}get filters(){return this.related_chip_cloud?.chips?.map(e=>e.text?.toString())||[]}get wn_has_continuation(){return !!p(this,io)}get autoplay_video_endpoint(){return this.autoplay?.sets?.[0]?.autoplay_video||null}get has_trailer(){return !!this.playability_status?.error_screen?.is(Po,Ei)}get music_tracks(){let e=this.page[1]?.engagement_panels?.filter(o=>o.content?.is(yi));if(e!==void 0&&e.length>0){let o=e[0].content?.as(yi)?.items?.filterType(pn);if(o!==void 0&&o.length>0)return o[0].carousel_lockups?.map(r=>{let a,f,m,b,x,I;a=r.video_lockup?.title?.toString(),x=r.video_lockup?.endpoint?.payload.videoId;for(let k=0;k<r.info_rows.length;k++){let S=r.info_rows[k];S.info_row_expand_status_key===void 0?a===void 0?(a=S.default_metadata?.toString()||S.expanded_metadata?.toString(),x===void 0&&(x=(S.default_metadata?.endpoint||S.expanded_metadata?.endpoint)?.payload?.videoId)):m=S.default_metadata?.toString()||S.expanded_metadata?.toString():(S.info_row_expand_status_key?.indexOf("structured-description-music-section-artists-row-state-id")!==-1&&(f=S.default_metadata?.toString()||S.expanded_metadata?.toString(),I===void 0&&(I=(S.default_metadata?.endpoint||S.expanded_metadata?.endpoint)?.payload?.browseId)),S.info_row_expand_status_key?.indexOf("structured-description-music-section-licenses-row-state-id")!==-1&&(b=S.default_metadata?.toString()||S.expanded_metadata?.toString()));}return {song:a,artist:f,album:m,license:b,videoId:x,channelId:I}})}return []}};io=new WeakMap,s(RS,"VideoInfo");var Ko=RS;var Ru,Yl,PS=class PS{constructor(t,e){g(this,Ru);g(this,Yl);i$1(this,"transcript");if(w(this,Ru,u.parseResponse(e.data)),w(this,Yl,t),!p(this,Ru).actions_memo)throw new Error("Page actions not found");this.transcript=p(this,Ru).actions_memo.getType(Qi)[0];}async selectLanguage(t){let e=this.transcript.content?.footer?.language_menu?.sub_menu_items?.find(r=>r.title.toString()===t);if(!e)throw new Error(`Language not found: ${t}`);if(e.selected)return this;let o=await p(this,Yl).execute("/get_transcript",{params:e.continuation});return new PS(p(this,Yl),o)}get languages(){return this.transcript.content?.footer?.language_menu?.sub_menu_items?.map(t=>t.title.toString())||[]}get selectedLanguage(){return this.transcript.content?.footer?.language_menu?.sub_menu_items?.find(t=>t.selected)?.title.toString()||""}get page(){return p(this,Ru)}};Ru=new WeakMap,Yl=new WeakMap,s(PS,"TranscriptInfo");var mu=PS;var jR={};Te(jR,{Album:()=>Pu,Artist:()=>Mu,Explore:()=>Du,HomeFeed:()=>Ou,Library:()=>Yu,LibraryContinuation:()=>AS,Playlist:()=>ro,Recap:()=>Fu,Search:()=>Wu,TrackInfo:()=>p_});var ui,iC=class iC{constructor(t){g(this,ui);i$1(this,"header");i$1(this,"contents");i$1(this,"sections");i$1(this,"background");i$1(this,"url");if(w(this,ui,u.parseResponse(t.data)),!p(this,ui).contents_memo)throw new Error("No contents found in the response");this.header=p(this,ui).contents_memo.getType(On,Ln)?.[0],this.contents=p(this,ui).contents_memo.getType(ue)?.[0].contents||V([]),this.sections=p(this,ui).contents_memo.getType(we)||V([]),this.background=p(this,ui).background,this.url=p(this,ui).microformat?.as(mt).url_canonical;}get page(){return p(this,ui)}};ui=new WeakMap,s(iC,"Album");var Pu=iC;var Au,c_,nC=class nC{constructor(t,e){g(this,Au);g(this,c_);i$1(this,"header");i$1(this,"sections");w(this,Au,u.parseResponse(t.data)),w(this,c_,e),this.header=this.page.header?.item().as(uc,mc,ni);let o=p(this,Au).contents_memo?.getType(ue)||[],r=p(this,Au).contents_memo?.getType(we)||[];this.sections=V([...o,...r]);}async getAllSongs(){let t=this.sections.filter(r=>r.type==="MusicShelf");if(!t.length)throw new _("Could not find any node of type MusicShelf.");let e=t.find(r=>r.title?.text==="Top songs");if(!e)throw new _("Could not find target shelf (Top songs).");if(!e.endpoint)throw new _("Target shelf (Top songs) did not have an endpoint.");return (await e.endpoint.call(p(this,c_),{client:"YTMUSIC",parse:true})).contents_memo?.getType(Si)?.[0]}get page(){return p(this,Au)}};Au=new WeakMap,c_=new WeakMap,s(nC,"Artist");var Mu=nC;var Vl,oC=class oC{constructor(t){g(this,Vl);i$1(this,"top_buttons");i$1(this,"sections");w(this,Vl,u.parseResponse(t.data));let e=p(this,Vl).contents?.item().as(si).tabs.find(r=>r.selected);if(!e)throw new _("Could not find target tab.");let o=e.content?.as(G);if(!o)throw new _("Target tab did not have any content.");this.top_buttons=o.contents.firstOfType(Ii)?.items.as(Mn)||[],this.sections=o.contents.filterType(we);}get page(){return p(this,Vl)}};Vl=new WeakMap,s(oC,"Explore");var Du=oC;var no,qo,$o,u_=class u_{constructor(t,e){g(this,no);g(this,qo);g(this,$o);i$1(this,"sections");i$1(this,"header");w(this,qo,e),w(this,no,u.parseResponse(t.data));let o=p(this,no).contents?.item().as(si).tabs.find(r=>r.selected);if(!o)throw new _("Could not find Home tab.");if(o.content===null){if(!p(this,no).continuation_contents)throw new _("Continuation did not have any content.");w(this,$o,p(this,no).continuation_contents.as(Lt).continuation),this.sections=p(this,no).continuation_contents.as(Lt).contents?.as(we);return}this.header=o.content?.as(G).header?.as(Ge),w(this,$o,o.content?.as(G).continuation),this.sections=o.content?.as(G).contents.as(we,dc);}async getContinuation(){if(!p(this,$o))throw new _("Continuation not found.");let t=await p(this,qo).execute("/browse",{client:"YTMUSIC",continuation:p(this,$o)});return new u_(t,p(this,qo))}async applyFilter(t){let e;if(typeof t=="string"){if(e=this.header?.chips?.as(ae).find(r=>r.text===t),!e)throw new _("Could not find filter with given name.",{available_filters:this.filters})}else t?.is(ae)&&(e=t);if(!e)throw new _("Invalid filter",{available_filters:this.filters});if(e?.is_selected)return this;if(!e.endpoint)throw new _("Selected filter does not have an endpoint.");let o=await e.endpoint.call(p(this,qo),{client:"YTMUSIC"});return new u_(o,p(this,qo))}get filters(){return this.header?.chips?.as(ae).map(t=>t.text)||[]}get has_continuation(){return !!p(this,$o)}get page(){return p(this,no)}};no=new WeakMap,qo=new WeakMap,$o=new WeakMap,s(u_,"HomeFeed");var Ou=u_;var li,oo,Bu,MS=class MS{constructor(t,e){g(this,li);g(this,oo);g(this,Bu);i$1(this,"header");i$1(this,"contents");w(this,li,u.parseResponse(t.data)),w(this,oo,e);let o=p(this,li).contents_memo?.getType(G)[0];this.header=o?.header?.as(pc),this.contents=o?.contents?.as(Ii,ue),w(this,Bu,this.contents?.find(r=>r.continuation)?.continuation);}async applySort(t){let e;if(typeof t=="string"){let m=p(this,li).contents_memo?.getType(Ro)[0]?.menu?.options.filter(b=>b instanceof dt);if(e=m?.find(b=>b.title===t),!e)throw new _(`Sort option "${t}" not found`,{available_filters:m.map(b=>b.title)})}else e=t;if(!e.endpoint)throw new _("Invalid sort option");if(e.selected)return this;let o=e.endpoint.payload?.commands?.find(f=>f.browseSectionListReloadEndpoint)?.browseSectionListReloadEndpoint;if(!o)throw new _("Failed to find sort option command");let r=await p(this,oo).execute("/browse",{client:"YTMUSIC",continuation:o.continuation.reloadContinuationData.continuation,parse:true}),a=p(this,li).contents_memo?.getType(dt)?.find(f=>f.selected);return a&&(a.selected=false),e.selected=true,this.contents=r.continuation_contents?.as(Lt).contents?.as(Ii,ue),this}async applyFilter(t){let e,o=p(this,li).contents_memo?.getType(Ge)[0];if(typeof t=="string"){if(e=o?.chips.find(f=>f.text===t),!e)throw new _(`Filter "${t}" not found`,{available_filters:this.filters})}else e=t;if(!e.endpoint)throw new _("Invalid filter",t);let a=await new d(e.endpoint.payload?.commands?.[0]).call(p(this,oo),{client:"YTMUSIC"});return new MS(a,p(this,oo))}async getContinuation(){if(!p(this,Bu))throw new _("No continuation available");let t=await p(this,oo).execute("/browse",{client:"YTMUSIC",continuation:p(this,Bu)});return new AS(t,p(this,oo))}get has_continuation(){return !!p(this,Bu)}get sort_options(){return (p(this,li).contents_memo?.getType(Ro)[0]?.menu?.options.filter(o=>o instanceof dt)).map(o=>o.title)}get filters(){return p(this,li).contents_memo?.getType(Ge)?.[0].chips.map(t=>t.text)||[]}get page(){return p(this,li)}};li=new WeakMap,oo=new WeakMap,Bu=new WeakMap,s(MS,"Library");var Yu=MS,Lu,Fl,Uu,DS=class DS{constructor(t,e){g(this,Lu);g(this,Fl);g(this,Uu);i$1(this,"contents");if(w(this,Lu,u.parseResponse(t.data)),w(this,Fl,e),!p(this,Lu).continuation_contents)throw new _("No continuation contents found");this.contents=p(this,Lu).continuation_contents.as(Bo,Cl),w(this,Uu,this.contents.continuation||null);}async getContinuation(){if(!p(this,Uu))throw new _("No continuation available");let t=await p(this,Fl).execute("/browse",{client:"YTMUSIC",continuation:p(this,Uu)});return new DS(t,p(this,Fl))}get has_continuation(){return !!p(this,Uu)}get page(){return p(this,Lu)}};Lu=new WeakMap,Fl=new WeakMap,Uu=new WeakMap,s(DS,"LibraryContinuation");var AS=DS;var $e,so,pi,Vu,jl,OS,FR,BS=class BS{constructor(t,e){g(this,OS);g(this,$e);g(this,so);g(this,pi);i$1(this,"header");i$1(this,"contents");i$1(this,"background");g(this,Vu);g(this,jl);if(w(this,so,e),w(this,$e,u.parseResponse(t.data)),w(this,Vu,null),w(this,jl,null),p(this,$e).continuation_contents){let o=p(this,$e).continuation_contents?.as(El);if(!o.contents)throw new _("No contents found in the response");this.contents=o.contents.as(Ue,K);let r=this.contents.firstOfType(K);w(this,pi,o.continuation||r);}else if(p(this,$e).contents_memo){this.header=p(this,$e).contents_memo.getType(Ln,cc,On)?.[0],this.contents=p(this,$e).contents_memo.getType(Si)?.[0]?.contents.as(Ue,K)||V([]),this.background=p(this,$e).background;let o=this.contents.firstOfType(K);w(this,pi,p(this,$e).contents_memo.getType(Si)?.[0]?.continuation||o);}else if(p(this,$e).on_response_received_actions){let o=p(this,$e).on_response_received_actions.firstOfType(Re);this.contents=o?.contents?.as(Ue,K),w(this,pi,this.contents?.firstOfType(K));}}async getContinuation(){if(!p(this,pi))throw new _("Continuation not found.");let t;return typeof p(this,pi)=="string"?t=await p(this,so).execute("/browse",{client:"YTMUSIC",continuation:p(this,pi)}):t=await p(this,pi).endpoint.call(p(this,so),{client:"YTMUSIC"}),new BS(t,p(this,so))}async getRelated(){let t=p(this,$e).contents_memo?.getType(G).find(o=>o.continuation);if(!t)throw new _('Could not find "Related" section.');let e=t.continuation;for(;e;){let r=(await p(this,so).execute("/browse",{client:"YTMUSIC",continuation:e,parse:true})).continuation_contents?.as(Lt),f=r?.contents?.as(we,ue)?.find(m=>m.is(we))?.as(we);if(f)return f;e=r?.continuation;}throw new _("Could not fetch related playlists.")}async getSuggestions(t=true){let r=await(t||!p(this,Vu)?N(this,OS,FR).call(this):Promise.resolve(null));return r&&(w(this,Vu,r.items),w(this,jl,r.continuation)),r?.items||p(this,Vu)||V([])}get page(){return p(this,$e)}get items(){return this.contents||V([])}get has_continuation(){return !!p(this,pi)}};$e=new WeakMap,so=new WeakMap,pi=new WeakMap,Vu=new WeakMap,jl=new WeakMap,OS=new WeakSet,FR=s(async function(){let t=p(this,$e).contents_memo?.getType(G).find(o=>o.continuation),e=p(this,jl)||t?.continuation;if(e){let f=(await p(this,so).execute("/browse",{client:"YTMUSIC",continuation:e,parse:true})).continuation_contents?.as(Lt)?.contents?.as(we,ue)?.find(m=>m.is(ue))?.as(ue);return {items:f?.contents||V([]),continuation:f?.continuation||null}}return {items:V([]),continuation:null}},"#fetchSuggestions"),s(BS,"Playlist");var ro=BS;var ao,Gl,sC=class sC{constructor(t,e){g(this,ao);g(this,Gl);i$1(this,"header");i$1(this,"sections");w(this,ao,u.parseResponse(t.data)),w(this,Gl,e);let o=p(this,ao).header?.item();this.header=o?.is(No)?p(this,ao).header?.item().as(No).element?.model?.as(Co):p(this,ao).header?.item().as(ni);let r=p(this,ao).contents?.item().as(si).tabs.firstOfType(re);if(!r)throw new _("Target tab not found");this.sections=r.content?.as(G).contents.as(ce,we,_e);}async getPlaylist(){if(!this.header)throw new _("Header not found");if(!this.header.is(Co))throw new _("Recap playlist not available, check back later.");let e=await this.header.panels[0].text_on_tap_endpoint.call(p(this,Gl),{client:"YTMUSIC"});return new ro(e,p(this,Gl))}get page(){return p(this,ao)}};ao=new WeakMap,Gl=new WeakMap,s(sC,"Recap");var Fu=sC;var fi,Li,ju,l_=class l_{constructor(t,e,o){g(this,fi);g(this,Li);g(this,ju);i$1(this,"header");i$1(this,"contents");if(w(this,Li,e),w(this,fi,u.parseResponse(t.data)),!p(this,fi).contents||!p(this,fi).contents_memo)throw new _("Response did not contain any contents.");let r=p(this,fi).contents.item().as(qc).tabs.find(f=>f.selected);if(!r)throw new _("Could not find target tab.");let a=r.content?.as(G);if(!a)throw new _("Target tab did not have any content.");this.header=a.header?.as(Ge),this.contents=a.contents.as(ue,nc,ce),o&&w(this,ju,this.contents.firstOfType(ue)?.continuation);}async getMore(t){if(!t||!t.endpoint)throw new _("Cannot retrieve more items for this shelf because it does not have an endpoint.");let e=await t.endpoint.call(p(this,Li),{client:"YTMUSIC"});if(!e)throw new _("Endpoint did not return any data");return new l_(e,p(this,Li),true)}async getContinuation(){if(!p(this,ju))throw new _("Continuation not found.");let t=await p(this,Li).execute("/search",{continuation:p(this,ju),client:"YTMUSIC"});return new rC(p(this,Li),t)}async applyFilter(t){let e;if(typeof t=="string"){if(e=this.header?.chips?.as(ae).find(r=>r.text===t),!e)throw new _("Could not find filter with given name.",{available_filters:this.filters})}else t?.is(ae)&&(e=t);if(!e)throw new _("Invalid filter",{available_filters:this.filters});if(e?.is_selected)return this;if(!e.endpoint)throw new _("Selected filter does not have an endpoint.");let o=await e.endpoint.call(p(this,Li),{client:"YTMUSIC"});return new l_(o,p(this,Li),true)}get filters(){return this.header?.chips?.as(ae).map(t=>t.text)||[]}get has_continuation(){return !!p(this,ju)}get did_you_mean(){return p(this,fi).contents_memo?.getType(ia)[0]}get showing_results_for(){return p(this,fi).contents_memo?.getType(Wc)[0]}get message(){return p(this,fi).contents_memo?.getType(_e)[0]}get songs(){return this.contents?.filterType(ue).find(t=>t.title.toString()==="Songs")}get videos(){return this.contents?.filterType(ue).find(t=>t.title.toString()==="Videos")}get albums(){return this.contents?.filterType(ue).find(t=>t.title.toString()==="Albums")}get artists(){return this.contents?.filterType(ue).find(t=>t.title.toString()==="Artists")}get playlists(){return this.contents?.filterType(ue).find(t=>t.title.toString()==="Community playlists")}get page(){return p(this,fi)}};fi=new WeakMap,Li=new WeakMap,ju=new WeakMap,s(l_,"Search");var Wu=l_,Wl,Gu,LS=class LS{constructor(t,e){g(this,Wl);g(this,Gu);i$1(this,"header");i$1(this,"contents");w(this,Wl,t),w(this,Gu,u.parseResponse(e.data)),this.header=p(this,Gu).header?.item().as(ni),this.contents=p(this,Gu).continuation_contents?.as(Bo);}async getContinuation(){if(!this.contents?.continuation)throw new _("Continuation not found.");let t=await p(this,Wl).execute("/search",{continuation:this.contents.continuation,client:"YTMUSIC"});return new LS(p(this,Wl),t)}get has_continuation(){return !!this.contents?.continuation}get page(){return p(this,Gu)}};Wl=new WeakMap,Gu=new WeakMap,s(LS,"SearchContinuation");var rC=LS;var cC=class cC extends wt{constructor(e,o,r){super(e,o,r);i$1(this,"tabs");i$1(this,"current_video_endpoint");i$1(this,"player_overlays");let a=this.page[1];if(a){let f=a.contents_memo?.getType(eu)?.[0];this.tabs=f?.tabs.as(re),this.current_video_endpoint=a.current_video_endpoint,this.player_overlays=a.player_overlays?.item().as(oi);}}async getTab(e){if(!this.tabs)throw new _("Could not find any tab");let o=this.tabs.find(a=>a.title===e)||this.tabs.find(a=>a.endpoint.payload.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType===e)||this.tabs?.[0];if(!o)throw new _(`Tab "${e}" not found`,{available_tabs:this.available_tabs});if(o.content)return o.content;let r=await o.endpoint.call(this.actions,{client:"YTMUSIC",parse:true});if(r.contents?.item().type==="Message")return r.contents.item().as(_e);if(!r.contents)throw new _("Page contents was empty",r);return r.contents.item().as(G).contents}async getUpNext(e=true){let o=await this.getTab("Up next");if(!o||!o.content)throw new _("Music queue was empty, the video id is probably invalid.",o);let r=o.content.as(at);if(!r.playlist_id&&e){let a=r.contents.firstOfType(qt);if(!a)throw new _("Automix item not found");let f=await a.playlist_video?.endpoint.call(this.actions,{videoId:this.basic_info.id,client:"YTMUSIC",parse:true});if(!f||!f.contents_memo)throw new _("Could not fetch automix");return f.contents_memo.getType(at)?.[0]}return r}async getUpNextContinuation(e){if(!this.current_video_endpoint)throw new _("Current Video Endpoint was not defined.",this.current_video_endpoint);if(e instanceof at&&e.playlist_id!==this.current_video_endpoint.payload.playlistId)throw new _("PlaylistId from TrackInfo does not match with PlaylistPanel");let r=await new d({watchNextEndpoint:{...this.current_video_endpoint.payload,continuation:e.continuation}}).call(this.actions,{...this.current_video_endpoint.payload,continuation:e.continuation,client:"YTMUSIC",parse:true}),a=r.continuation_contents?.as(Nl);if(!a)throw new _("No PlaylistPanel Continuation available.",r);return a}async getRelated(){return await this.getTab("MUSIC_PAGE_TYPE_TRACK_RELATED")}async getLyrics(){return (await this.getTab("MUSIC_PAGE_TYPE_TRACK_LYRICS")).firstOfType(ii)}async addToWatchHistory(){return super.addToWatchHistory(H.CLIENTS.YTMUSIC.NAME,H.CLIENTS.YTMUSIC.VERSION,"https://music.")}async updateWatchTime(e){return super.updateWatchTime(e,H.CLIENTS.YTMUSIC.NAME,H.CLIENTS.YTMUSIC.VERSION,"https://music.")}get available_tabs(){return this.tabs?this.tabs.map(e=>e.title):[]}};s(cC,"TrackInfo");var aC=cC,p_=aC;var GR={};Te(GR,{Channel:()=>Hu,HomeFeed:()=>Ku,Search:()=>qu,VideoInfo:()=>$u});var US=class US extends te{constructor(e,o,r=false){super(e,o,r);i$1(this,"header");i$1(this,"contents");this.header=this.page.header?.item().as(ei),this.contents=this.memo.getType(ce)[0]||this.page.continuation_contents?.as(Sl);}async getContinuation(){if(!this.contents)throw new Error("No continuation available.");let o=await new d({continuationCommand:{token:this.contents.continuation,request:"CONTINUATION_REQUEST_TYPE_BROWSE"}}).call(this.actions,{client:"YTKIDS"});return new US(this.actions,o)}get has_continuation(){return !!this.contents?.continuation}};s(US,"Channel");var Hu=US;var YS=class YS extends te{constructor(e,o,r=false){super(e,o,r);i$1(this,"header");i$1(this,"contents");this.header=this.page.header?.item().as(iu),this.contents=this.page.contents?.item().as(nu);}async selectCategoryTab(e){let o;if(typeof e=="string"?o=this.header?.category_tabs.find(a=>a.title.toString()===e):e?.is(Jn)&&(o=e),!o)throw new _(`Tab "${e}" not found`);let r=await o.endpoint.call(this.actions,{client:"YTKIDS",parse:true});return r.header=this.page.header,r.header_memo=this.page.header_memo,new YS(this.actions,r,true)}get categories(){return this.header?.category_tabs.map(e=>e.title.toString())||[]}};s(YS,"HomeFeed");var Ku=YS;var uC=class uC extends te{constructor(e,o){super(e,o);i$1(this,"estimated_results");i$1(this,"contents");this.estimated_results=this.page.estimated_results;let r=this.memo.getType(ce)[0];if(!r)throw new _("No item section found in search response.");this.contents=r.contents;}};s(uC,"Search");var qu=uC;var lC=class lC extends wt{constructor(e,o,r){super(e,o,r);i$1(this,"slim_video_metadata");i$1(this,"watch_next_feed");i$1(this,"current_video_endpoint");i$1(this,"player_overlays");let a=this.page[1],f=a?.contents?.item().as(qn),m=f?.results,b=f?.secondary_results;m&&b&&(this.slim_video_metadata=m.firstOfType(ce)?.contents?.firstOfType(Hc),this.watch_next_feed=b.firstOfType(ce)?.contents||b,this.current_video_endpoint=a?.current_video_endpoint,this.player_overlays=a?.player_overlays?.item().as(oi));}};s(lC,"VideoInfo");var $u=lC;var WR={};Te(WR,{ShortFormVideoInfo:()=>zu});var zo,pC=class pC extends wt{constructor(e,o,r,a){super(e,o,r);g(this,zo);i$1(this,"watch_next_feed");i$1(this,"current_video_endpoint");i$1(this,"player_overlays");if(a){let f=u.parseResponse(a.data);f.entries&&(this.watch_next_feed=f.entries),f.continuation_endpoint&&w(this,zo,f.continuation_endpoint?.as(su));}}async getWatchNextContinuation(){if(!p(this,zo))throw new _("Continuation not found");let e=await this.actions.execute("/reel/reel_watch_sequence",{sequenceParams:p(this,zo).token,parse:true});return e.entries&&(this.watch_next_feed=e.entries),w(this,zo,e.continuation_endpoint?.as(su)),this}get wn_has_continuation(){return !!p(this,zo)}};zo=new WeakMap,s(pC,"ShortFormVideoInfo");var zu=pC;var fC=class fC{constructor(t,e,o,r){i$1(this,"id");i$1(this,"name");i$1(this,"thumbnails");i$1(this,"endpoint");i$1(this,"badges");i$1(this,"is_moderator");i$1(this,"is_verified");i$1(this,"is_verified_artist");i$1(this,"url");let a=new l(t);this.id=r||a?.runs?.[0]?.endpoint?.payload?.browseId||a?.endpoint?.payload?.browseId||"N/A",this.name=a?.text||"N/A",this.thumbnails=o?y.fromResponse(o):[],this.endpoint=a?.runs?.[0]?.endpoint||a?.endpoint,e?Array.isArray(e)?(this.badges=u.parseArray(e),this.is_moderator=this.badges?.some(f=>f.icon_type=="MODERATOR"),this.is_verified=this.badges?.some(f=>f.style=="BADGE_STYLE_TYPE_VERIFIED"),this.is_verified_artist=this.badges?.some(f=>f.style=="BADGE_STYLE_TYPE_VERIFIED_ARTIST")):(this.badges=V([]),this.is_verified=!!e.isVerified,this.is_verified_artist=!!e.isArtist):this.badges=V([]),this.url=a?.runs?.[0]?.endpoint?.metadata?.api_url==="/browse"&&`${ve.YT_BASE}${a?.runs?.[0]?.endpoint?.payload?.canonicalBaseUrl||`/u/${a?.runs?.[0]?.endpoint?.payload?.browseId}`}`||`${ve.YT_BASE}${a?.endpoint?.payload?.canonicalBaseUrl||`/u/${a?.endpoint?.payload?.browseId}`}`;}get best_thumbnail(){return this.thumbnails[0]}};s(fC,"Author");var D=fC;var KR={desktop:["Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.3 Safari/605.1.15","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36 Edg/109.0.1518.61","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.2 Safari/605.1.15","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36"],mobile:["Mozilla/5.0 (iPhone; CPU iPhone OS 16_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/109.0.5414.83 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/109.0.5414.83 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/109.0.5414.83 Mobile/15E148 Safari/604.1","Mozilla/5.0 (Linux; Android 12; SM-G990U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Mobile Safari/537.36","Mozilla/5.0 (Linux; Android 13; SM-G998B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Mobile Safari/537.36","Mozilla/5.0 (iPhone; CPU iPhone OS 16_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FxiOS/108.1  Mobile/15E148 Safari/605.1.15","Mozilla/5.0 (iPhone; CPU iPhone OS 16_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/109.0.5414.83 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 11_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15G77 ChannelId(73) NebulaSDK/1.8.100112 Nebula PSDType(1) AlipayDefined(nt:4G,ws:320|504|2.0) AliApp(AP/10.1.30.300) AlipayClient/10.1.30.300 Alipay Language/zh-Hans","Mozilla/5.0 (iPhone; CPU iPhone OS 16_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.2 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_1_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Mobile/15E148 Safari/604.1","Mozilla/5.0 (Linux; Android 13; SM-N981U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Mobile Safari/537.36","Mozilla/5.0 (Linux; Android 13; SM-A515F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Mobile Safari/537.36","Mozilla/5.0 (iPhone; CPU iPhone OS 16_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.2 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.0 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/109.0.5414.83 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/109.0.5414.83 Mobile/15E148 Safari/604.1","Mozilla/5.0 (Linux; Android 12; M2010J19SG) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Mobile Safari/537.36","Mozilla/5.0 (iPhone; CPU iPhone OS 15_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_1_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/109.0.5414.83 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 15_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.1 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Mobile/15E148 Safari/604.1","Mozilla/5.0 (iPhone; CPU iPhone OS 16_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/109.0.5414.83 Mobile/15E148 Safari/604.1","Mozilla/5.0 (Linux; Android 11; M2102J20SG) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Mobile Safari/537.36","Mozilla/5.0 (iPhone; CPU iPhone OS 16_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.2 Mobile/15E148 Safari/604.1"]};var XM="Utils",dC,hC=class hC{static load(t){dC=t;}static get shim(){if(!dC)throw new Error("Platform is not loaded");return dC}};s(hC,"Platform");var W=hC,_C=class _C extends Error{constructor(e,o){super(e);i$1(this,"date");i$1(this,"version");i$1(this,"info");o&&(this.info=o),this.date=new Date,this.version=Fe.version;}};s(_C,"InnertubeError");var _=_C,bC=class bC extends _{};s(bC,"ParsingError");var Rt=bC,yC=class yC extends _{};s(yC,"MissingParamError");var VS=yC,xC=class xC extends _{};s(xC,"OAuth2Error");var Se=xC,gC=class gC extends Error{};s(gC,"PlayerError");var Ui=gC,wC=class wC extends Error{};s(wC,"SessionError");var Hl=wC,TC=class TC extends Error{};s(TC,"ChannelError");var Qh=TC;function V_(n,t){return Reflect.ownKeys(n).some(o=>{let r=t[o]instanceof l;return !r&&typeof t[o]=="object"?JSON.stringify(n[o])===JSON.stringify(t[o]):n[o]===(r?t[o].toString():t[o])})}s(V_,"deepCompare");function nt(n,t,e){let o=new RegExp(`${mC(t)}(.*?)${mC(e)}`,"s"),r=n.match(o);return r?r[1]:void 0}s(nt,"getStringBetweenStrings");function mC(n){return n.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}s(mC,"escapeStringRegexp");function f_(n){let t=KR[n],e=Math.floor(Math.random()*t.length);return t[e]}s(f_,"getRandomUserAgent");async function QE(n){let t="https://www.youtube.com",e=Math.floor(new Date().getTime()/1e3),o=[e,n,t].join(" "),r=await W.shim.sha1Hash(o);return ["SAPISIDHASH",[e,r].join("_")].join(" ")}s(QE,"generateSidAuth");function vt(n){let t=[],e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";for(let o=0;o<n;o++)t.push(e.charAt(Math.floor(Math.random()*e.length)));return t.join("")}s(vt,"generateRandomString");function Me(n){let t=n.split(":").map(e=>parseInt(e.replace(/\D/g,"")));switch(t.length){case 1:return t[0];case 2:return t[0]*60+t[1];case 3:return t[0]*3600+t[1]*60+t[2];default:throw new Error("Invalid time string")}}s(Me,"timeToSeconds");function K1(...n){let t=new is;for(let e of n)if(e)for(let o of e){let r=t.get(o[0]);if(r){t.set(o[0],[...r,...o[1]]);continue}t.set(...o);}return t}s(K1,"concatMemos");function X(n){for(let[t,e]of Object.entries(n))if(!e)throw new VS(`${t} is missing`)}s(X,"throwIfMissing");function ZM(n,...t){for(let e of t)if(!Reflect.has(n,e)||n[e]===void 0)return  false;return  true}s(ZM,"hasKeys");async function*XE(n){let t=n.getReader();try{for(;;){let{done:e,value:o}=await t.read();if(e)return;yield o;}}finally{t.releaseLock();}}s(XE,"streamToIterable");var QM=s((n,t)=>{let e=typeof n=="string"?new URL(n):n instanceof URL?n:new URL(n.url),o=t?.headers?new Headers(t.headers):n instanceof Request?n.headers:new Headers,r=[...o],a=t?.body?typeof t.body=="string"?o.get("content-type")==="application/json"?JSON.stringify(JSON.parse(t.body),null,2):t.body:"    <binary>":"    (none)",f=r.length>0?`${r.map(([m,b])=>`    ${m}: ${b}`).join(`
`)}`:"    (none)";return ts(XM,`Fetch:
  url: ${e.toString()}
  method: ${t?.method||"GET"}
  headers:
${f}
' + 
    '  body:
${a}`),W.shim.fetch(n,t)},"debugFetch");function Ie(n){return btoa(String.fromCharCode.apply(null,Array.from(n)))}s(Ie,"u8ToBase64");function Kp(n){let t=n.replace(/-/g,"+").replace(/_/g,"/"),e=t.padEnd(t.length+(4-t.length%4)%4,"=");return new Uint8Array(atob(e).split("").map(o=>o.charCodeAt(0)))}s(Kp,"base64ToU8");function Xe(n){return !("emoji"in n)}s(Xe,"isTextRun");function e1(n,t,e=false){let o=e?`(^|\\s?)\\b${t}\\b=([^;]+)`:`(^|s?)${t}=([^;]+)`,r=n.match(new RegExp(o));return r?r[2]:void 0}s(e1,"getCookie");function Jo(n,t){let{name:e,includes:o,regexp:r,ast:a}=t,m=[a||Gt.parseScript(n)];for(let b=0;b<m.length;b++){let x=m[b];if(x.type==="ExpressionStatement"&&x.expression.type==="AssignmentExpression"&&x.expression.left.type==="Identifier"&&x.expression.right.type==="FunctionExpression"){let I=n.substring(x.start,x.end);if(e&&x.expression.left.name===e||o&&I.includes(o)||r&&r.test(I))return {start:x.start,end:x.end,name:x.expression.left.name,node:x,result:I}}for(let I in x){let k=x[I];Array.isArray(k)?m.push(...k):typeof k=="object"&&k!==null&&m.push(k);}}}s(Jo,"findFunction");function Ju(n,t){let e=t.ast?t.ast:Gt.parseScript(n,{ecmaVersion:"latest",ranges:true}),o;function r(a){if(!o){if(a.type==="VariableDeclarator"){let[f,m]=a.range,b=n.slice(f,m);if(a.id.type==="Identifier"){let x=a.id.name;if(t.name&&x===t.name){o={start:f,end:m,name:x,node:a,result:b};return}}if(t.includes&&b.includes(t.includes)||t.regexp&&t.regexp.test(b)){o={start:f,end:m,name:a?.id?.name,node:a,result:b};return}}for(let f in a)if(Object.prototype.hasOwnProperty.call(a,f)){let m=a[f];if(Array.isArray(m)){for(let b of m)if(b&&typeof b.type=="string"&&(r(b),o))return}else if(m&&typeof m.type=="string"&&(r(m),o))return}}}return s(r,"walk"),r(e),o}s(Ju,"findVariable");async function vC(n){let t=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function e(o){let r=new Uint8Array(o),a=[];for(let f=0;f<r.length;++f)a.push(t[r[f]]);return a.join("")}return s(e,"hex"),e(await crypto.subtle.digest("SHA-1",new TextEncoder().encode(n)))}s(vC,"sha1Hash");var ql,qR,$R,IC=class IC{constructor(t){g(this,ql);i$1(this,"session");this.session=t;}async stats(t,e,o){let r=new URL(t);r.searchParams.set("ver","2"),r.searchParams.set("c",e.client_name.toLowerCase()),r.searchParams.set("cbrver",e.client_version),r.searchParams.set("cver",e.client_version);for(let a of Object.keys(o))r.searchParams.set(a,o[a]);return await this.session.http.fetch(r)}async execute(t,e){let o;if(e&&!e.protobuf){if(o={...e},Reflect.has(o,"browseId")&&!e.skip_auth_check&&N(this,ql,$R).call(this,o.browseId)&&!this.session.logged_in)throw new _("You must be signed in to perform this operation.");Reflect.has(o,"skip_auth_check")&&delete o.skip_auth_check,Reflect.has(o,"override_endpoint")&&delete o.override_endpoint,Reflect.has(o,"parse")&&delete o.parse,Reflect.has(o,"request")&&delete o.request,Reflect.has(o,"clientActions")&&delete o.clientActions,Reflect.has(o,"settingItemIdForClient")&&delete o.settingItemIdForClient,Reflect.has(o,"action")&&(o.actions=[o.action],delete o.action),Reflect.has(o,"boolValue")&&(o.newValue={boolValue:o.boolValue},delete o.boolValue),Reflect.has(o,"token")&&(o.continuation=o.token,delete o.token),o?.client==="YTMUSIC"&&(o.isAudioOnly=true);}else e&&(o=e.serialized_data);let r=Reflect.has(e||{},"override_endpoint")?e?.override_endpoint:t,a=await this.session.http.fetch(r,{method:"POST",body:e?.protobuf?o:JSON.stringify(o||{}),headers:{"Content-Type":e?.protobuf?"application/x-protobuf":"application/json"}});if(e?.parse){let f=u.parseResponse(await a.json());if(N(this,ql,qR).call(this,f)&&f.on_response_received_actions?.[0]?.type==="navigateAction"){let m=f.on_response_received_actions.firstOfType(Oo);m&&(f=await m.endpoint.call(this,{parse:true}));}return f}return {success:a.ok,status_code:a.status,data:await a.json()}}};ql=new WeakSet,qR=s(function(t){return "on_response_received_actions"in t},"#isBrowse"),$R=s(function(t){return ["FElibrary","FEhistory","FEsubscriptions","FEchannels","FEplaylist_aggregation","FEmusic_listening_review","FEmusic_library_landing","SPaccount_overview","SPaccount_notifications","SPaccount_privacy","SPtime_watched"].includes(t)},"#needsLogin"),s(IC,"Actions");var Kl=IC;var d_="OAuth2",Ve,Yi,zR,$l,kC=class kC{constructor(t){g(this,Yi);g(this,Ve);i$1(this,"YTTV_URL");i$1(this,"AUTH_SERVER_CODE_URL");i$1(this,"AUTH_SERVER_TOKEN_URL");i$1(this,"AUTH_SERVER_REVOKE_TOKEN_URL");i$1(this,"client_id");i$1(this,"oauth2_tokens");w(this,Ve,t),this.YTTV_URL=new URL("/tv",H.URLS.YT_BASE),this.AUTH_SERVER_CODE_URL=new URL("/o/oauth2/device/code",H.URLS.YT_BASE),this.AUTH_SERVER_TOKEN_URL=new URL("/o/oauth2/token",H.URLS.YT_BASE),this.AUTH_SERVER_REVOKE_TOKEN_URL=new URL("/o/oauth2/revoke",H.URLS.YT_BASE);}async init(t){if(t){this.setTokens(t),this.shouldRefreshToken()&&await this.refreshAccessToken(),p(this,Ve).emit("auth",{credentials:this.oauth2_tokens});return}if(await N(this,Yi,zR).call(this)){Y.info(d_,"Loaded OAuth2 tokens from cache.",this.oauth2_tokens);return}this.client_id||(this.client_id=await this.getClientID());let o=await this.getDeviceAndUserCode();p(this,Ve).emit("auth-pending",o),this.pollForAccessToken(o);}setTokens(t){let e=t;if(e.expires_in&&(e.expiry_date=new Date(Date.now()+e.expires_in*1e3).toISOString(),delete e.expires_in),!this.validateTokens(e))throw new Se("Invalid tokens provided.");this.oauth2_tokens=e,e.client&&(Y.info(d_,"Using provided client id and secret."),this.client_id=e.client);}async cacheCredentials(){let e=new TextEncoder().encode(JSON.stringify(this.oauth2_tokens));await p(this,Ve).cache?.set("youtubei_oauth_credentials",e.buffer);}async removeCache(){await p(this,Ve).cache?.remove("youtubei_oauth_credentials");}pollForAccessToken(t){if(!this.client_id)throw new Se("Client ID is missing.");let{device_code:e,interval:o}=t,{client_id:r,client_secret:a}=this.client_id,f={client_id:r,client_secret:a,code:e,grant_type:"http://oauth.net/grant_type/device/1.0"},m=setInterval(async()=>{let x=await(await p(this,Yi,$l).fetch_function(this.AUTH_SERVER_TOKEN_URL,{body:JSON.stringify(f),method:"POST",headers:{"Content-Type":"application/json"}})).json();if(x.error){switch(x.error){case "access_denied":p(this,Ve).emit("auth-error",new Se("Access was denied.",x)),clearInterval(m);break;case "expired_token":p(this,Ve).emit("auth-error",new Se("The device code has expired.",x)),clearInterval(m);break;case "authorization_pending":case "slow_down":Y.info(d_,"Polling for access token...");break;default:p(this,Ve).emit("auth-error",new Se("Server returned an unexpected error.",x)),clearInterval(m);break}return}this.setTokens(x),p(this,Ve).emit("auth",{credentials:this.oauth2_tokens}),clearInterval(m);},o*1e3);}async revokeCredentials(){if(!this.oauth2_tokens)throw new Se("Access token not found");await this.removeCache();let t=this.AUTH_SERVER_REVOKE_TOKEN_URL;return t.searchParams.set("token",this.oauth2_tokens.access_token),p(this,Ve).http.fetch_function(t,{method:"POST"})}async refreshAccessToken(){if(this.client_id||(this.client_id=await this.getClientID()),!this.oauth2_tokens)throw new Se("No tokens available to refresh.");let{client_id:t,client_secret:e}=this.client_id,{refresh_token:o}=this.oauth2_tokens,r={client_id:t,client_secret:e,refresh_token:o,grant_type:"refresh_token"},a=await p(this,Yi,$l).fetch_function(this.AUTH_SERVER_TOKEN_URL,{body:JSON.stringify(r),method:"POST",headers:{"Content-Type":"application/json"}});if(!a.ok)throw new Se(`Failed to refresh access token: ${a.status}`);let f=await a.json();if(f.error_code)throw new Se("Authorization server returned an error",f);this.oauth2_tokens.access_token=f.access_token,this.oauth2_tokens.expiry_date=new Date(Date.now()+f.expires_in*1e3).toISOString(),p(this,Ve).emit("update-credentials",{credentials:this.oauth2_tokens});}async getDeviceAndUserCode(){if(!this.client_id)throw new Se("Client ID is missing.");let{client_id:t}=this.client_id,e={client_id:t,scope:"http://gdata.youtube.com https://www.googleapis.com/auth/youtube-paid-content",device_id:W.shim.uuidv4(),device_model:"ytlr::"},o=await p(this,Yi,$l).fetch_function(this.AUTH_SERVER_CODE_URL,{body:JSON.stringify(e),method:"POST",headers:{"Content-Type":"application/json"}});if(!o.ok)throw new Se(`Failed to get device/user code: ${o.status}`);let r=await o.json();if(r.error_code)throw new Se("Authorization server returned an error",r);return r}async getClientID(){let t=await p(this,Yi,$l).fetch_function(this.YTTV_URL,{headers:{"User-Agent":"Mozilla/5.0 (ChromiumStylePlatform) Cobalt/Version",Referer:"https://www.youtube.com/tv","Accept-Language":"en-US"}});if(!t.ok)throw new Se(`Failed to get client ID: ${t.status}`);let e=await t.text(),o;if((o=H.OAUTH.REGEX.TV_SCRIPT.exec(e))!==null){Y.info(d_,`Got YouTubeTV script URL (${o[1]})`);let r=await p(this,Yi,$l).fetch(o[1],{baseURL:H.URLS.YT_BASE});if(!r.ok)throw new Se(`TV script request failed with status code ${r.status}`);let f=(await r.text()).match(H.OAUTH.REGEX.CLIENT_IDENTITY);if(!f||!f.groups)throw new Se("Could not obtain client ID.");let{client_id:m,client_secret:b}=f.groups;return Y.info(d_,`Client identity retrieved (clientId=${m}, clientSecret=${b}).`),{client_id:m,client_secret:b}}throw new Se("Could not obtain script URL.")}shouldRefreshToken(){return this.oauth2_tokens?Date.now()>new Date(this.oauth2_tokens.expiry_date).getTime():false}validateTokens(t){return !(!t.access_token||!t.refresh_token||!t.expiry_date)}};Ve=new WeakMap,Yi=new WeakSet,zR=s(async function(){let t=await p(this,Ve).cache?.get("youtubei_oauth_credentials");if(!t)return  false;let e=new TextDecoder,o=JSON.parse(e.decode(t));return this.setTokens(o),p(this,Ve).emit("auth",{credentials:o}),true},"#loadFromCache"),$l=s(function(){return p(this,Ve).http},"#http"),s(kC,"OAuth2");var zl=kC;var Yt="Player",Xu=class Xu{constructor(t,e,o,r){i$1(this,"player_id");i$1(this,"sts");i$1(this,"nsig_sc");i$1(this,"sig_sc");i$1(this,"po_token");this.player_id=t,this.sts=e,this.nsig_sc=r,this.sig_sc=o;}static async create(t,e=W.shim.fetch,o,r){if(!r){let R=new URL("/iframe_api",H.URLS.YT_BASE),E=await e(R);if(!E.ok)throw new Ui(`Failed to get player id: ${E.status} (${E.statusText})`);let U=await E.text();r=nt(U,"player\\/","\\/");}if(Y.info(Yt,`Using player id (${r}). Checking for cached players..`),!r)throw new Ui("Failed to get player id");if(t){let R=await Xu.fromCache(t,r);if(R)return Y.info(Yt,"Found up-to-date player data in cache."),R.po_token=o,R}let a=new URL(`/s/player/${r}/player_ias.vflset/en_US/base.js`,H.URLS.YT_BASE);Y.info(Yt,`Could not find any cached player. Will download a new player from ${a}.`);let f=await e(a,{headers:{"user-agent":f_("desktop")}});if(!f.ok)throw new Ui(`Failed to get player data: ${f.status}`);let m=await f.text(),b=Gt.parseScript(m,{ecmaVersion:"latest",ranges:true}),x=this.extractSigTimestamp(m),I=this.extractGlobalVariable(m,b),k=this.extractSigSourceCode(m,I),S=this.extractNSigSourceCode(m,b,I);Y.info(Yt,`Got signature timestamp (${x}) and algorithms needed to decipher signatures.`);let P=await Xu.fromSource(r,x,t,k,S);return P.po_token=o,P}decipher(t,e,o,r){if(t=t||e||o,!t)throw new Ui("No valid URL to decipher");let a=new URLSearchParams(t),f=new URL(a.get("url")||t);if(this.sig_sc&&(e||o)){let I=W.shim.eval(this.sig_sc,{sig:a.get("s")});if(Y.info(Yt,`Transformed signature from ${a.get("s")} to ${I}.`),typeof I!="string")throw new Ui("Failed to decipher signature");let k=a.get("sp");k?f.searchParams.set(k,I):f.searchParams.set("signature",I);}let m=f.searchParams.get("n");if(this.nsig_sc&&m){let I;if(r&&r.has(m))I=r.get(m);else {if(I=W.shim.eval(this.nsig_sc,{nsig:m}),Y.info(Yt,`Transformed n signature from ${m} to ${I}.`),typeof I!="string")throw new Ui("Failed to decipher nsig");I.startsWith("enhanced_except_")?Y.warn(Yt,"Something went wrong while deciphering nsig."):r&&r.set(m,I);}f.searchParams.set("n",I);}switch(f.searchParams.get("sabr")!=="1"&&this.po_token&&f.searchParams.set("pot",this.po_token),f.searchParams.get("c")){case "WEB":f.searchParams.set("cver",H.CLIENTS.WEB.VERSION);break;case "MWEB":f.searchParams.set("cver",H.CLIENTS.MWEB.VERSION);break;case "WEB_REMIX":f.searchParams.set("cver",H.CLIENTS.YTMUSIC.VERSION);break;case "WEB_KIDS":f.searchParams.set("cver",H.CLIENTS.WEB_KIDS.VERSION);break;case "TVHTML5":f.searchParams.set("cver",H.CLIENTS.TV.VERSION);break;case "TVHTML5_SIMPLY":f.searchParams.set("cver",H.CLIENTS.TV_SIMPLY.VERSION);break;case "TVHTML5_SIMPLY_EMBEDDED_PLAYER":f.searchParams.set("cver",H.CLIENTS.TV_EMBEDDED.VERSION);break;case "WEB_EMBEDDED_PLAYER":f.searchParams.set("cver",H.CLIENTS.WEB_EMBEDDED.VERSION);break}let x=f.toString();return Y.info(Yt,`Deciphered URL: ${x}`),f.toString()}static async fromCache(t,e){let o=await t.get(e);if(!o)return null;try{let r=xo.deserialize(new Uint8Array(o));return r.library_version!==Fe.version?(Y.warn(Yt,`Cached player data is from a different library version (${r.library_version}). Ignoring it.`),null):new Xu(r.player_id,r.sts,r.sig_sc,r.nsig_sc)}catch(r){return Y.error(Yt,"Failed to deserialize player data from cache:",r),null}}static async fromSource(t,e,o,r,a){let f=new Xu(t,e,r,a);return await f.cache(o),f}async cache(t){if(!t||!this.sig_sc||!this.nsig_sc)return;let e=xo.serialize({player_id:this.player_id,sts:this.sts,sig_sc:this.sig_sc,nsig_sc:this.nsig_sc,library_version:Fe.version});await t.set(this.player_id,e);}static extractSigTimestamp(t){return parseInt(nt(t,"signatureTimestamp:",",")||"0")}static extractGlobalVariable(t,e){let o=Ju(t,{includes:"-_w8_",ast:e});return o||(o=Ju(t,{includes:"Untrusted URL{",ast:e})),o||(o=Ju(t,{includes:"1969",ast:e})),o||(o=Ju(t,{includes:"1970",ast:e})),o||(o=Ju(t,{includes:"playerfallback",ast:e})),o}static extractSigSourceCode(t,e){let o=/function\(([A-Za-z_0-9]+)\)\{([A-Za-z_0-9]+=[A-Za-z_0-9]+\.split\((?:[^)]+)\)(.+?)\.join\((?:[^)]+)\))\}/,r=e?.name?.replace(/[$^\\.*+?()[\]{}|]/g,"\\$&"),a=r?new RegExp(`function\\(([A-Za-z_0-9]+)\\)\\{([A-Za-z_0-9]+=[A-Za-z_0-9]+\\[${r}\\[\\d+\\]\\]\\([^)]*\\)([\\s\\S]+?)\\[${r}\\[\\d+\\]\\]\\([^)]*\\))\\}`):null,f=t.match(o)||(a?t.match(a):null);if(!f){Y.warn(Yt,"Failed to extract signature decipher algorithm.");return}let m=f[1],b=f[3].split(/\.|\[/)[0]?.replace(";","").trim(),x=nt(t,`var ${b}={`,"};");return (!x||!m)&&Y.warn(Yt,"Failed to extract signature decipher algorithm."),`${e?.result?`var ${e.result};`:""} function descramble_sig(${m}) { let ${b}={${x}}; ${f[2]} } descramble_sig(sig);`}static extractNSigSourceCode(t,e,o){let r;if(o&&(r=Jo(t,{includes:`new Date(${o.name}`,ast:e}),r||(r=Jo(t,{includes:".push(String.fromCharCode(",ast:e})),r||(r=Jo(t,{includes:".reverse().forEach(function",ast:e})),r))return `var ${o.result}; var ${r.result} ${r.name}(nsig);`;if(r=Jo(t,{includes:"-_w8_",ast:e}),r||(r=Jo(t,{includes:"1969",ast:e})),r||(r=Jo(t,{includes:"enhanced_except",ast:e})),r)return `let ${r.result} ${r.name}(nsig);`}get url(){return new URL(`/s/player/${this.player_id}/player_ias.vflset/en_US/base.js`,H.URLS.YT_BASE).toString()}static get LIBRARY_VERSION(){return 14}};s(Xu,"Player");var Jl=Xu;var eD={WEB:"WEB",MWEB:"MWEB",KIDS:"WEB_KIDS",MUSIC:"WEB_REMIX",IOS:"iOS",ANDROID:"ANDROID",ANDROID_MUSIC:"ANDROID_MUSIC",ANDROID_CREATOR:"ANDROID_CREATOR",TV:"TVHTML5",TV_SIMPLY:"TVHTML5_SIMPLY",TV_EMBEDDED:"TVHTML5_SIMPLY_EMBEDDED_PLAYER",WEB_EMBEDDED:"WEB_EMBEDDED_PLAYER",WEB_CREATOR:"WEB_CREATOR"},Vi="Session",Fi,JR,XR,ZR,QR,Xl=class Xl extends bo{constructor(e,o,r,a,f,m,b,x,I,k){super();i$1(this,"context");i$1(this,"api_key");i$1(this,"api_version");i$1(this,"account_index");i$1(this,"config_data");i$1(this,"player");i$1(this,"cookie");i$1(this,"cache");i$1(this,"po_token");i$1(this,"oauth");i$1(this,"http");i$1(this,"logged_in");i$1(this,"actions");i$1(this,"user_agent");this.context=e,this.api_key=o,this.api_version=r,this.account_index=a,this.config_data=f,this.player=m,this.cookie=b,this.cache=I,this.po_token=k,this.http=new bl(this,b,x),this.actions=new Kl(this),this.oauth=new zl(this),this.logged_in=!!b,this.user_agent=e.client.userAgent;}on(e,o){super.on(e,o);}once(e,o){super.once(e,o);}static async create(e={}){let{context:o,api_key:r,api_version:a,account_index:f,config_data:m}=await Xl.getSessionData(e.lang,e.location,e.account_index,e.visitor_data,e.user_agent,e.enable_safety_mode,e.generate_session_locally,e.device_category,e.client_type,e.timezone,e.fetch,e.on_behalf_of_user,e.cache,e.enable_session_cache,e.po_token,e.retrieve_innertube_config);return new Xl(o,r,a,f,m,e.retrieve_player===false?void 0:await Jl.create(e.cache,e.fetch,e.po_token,e.player_id),e.cookie,e.fetch,e.cache,e.po_token)}static async fromCache(e,o){let r=await e.get("innertube_session_data");if(!r)return null;try{let a=xo.deserialize(new Uint8Array(r));if(a.library_version!==parseInt(Fe.version.split(".",1)[0]))return Y.warn(Vi,`Cached session data is from a different library version (${a.library_version}). Regenerating session data.`),null;if(o.visitor_data&&(a.context.client.visitorData=o.visitor_data),o.lang&&(a.context.client.hl=o.lang),o.location&&(a.context.client.gl=o.location),o.on_behalf_of_user&&(a.context.user.onBehalfOfUser=o.on_behalf_of_user),o.user_agent&&(a.context.client.userAgent=o.user_agent),o.client_name){let f=Object.values(F).find(m=>m.NAME===o.client_name);f?(a.context.client.clientName=f.NAME,a.context.client.clientVersion=f.VERSION):Y.warn(Vi,`Unknown client name: ${o.client_name}.`);}return a.context.client.timeZone=o.time_zone,a.context.client.platform=o.device_category.toUpperCase(),a.context.user.enableSafetyMode=o.enable_safety_mode,a}catch(a){return Y.error(Vi,"Failed to deserialize session data from cache.",a),null}}static async getSessionData(e="",o="",r=0,a="",f=f_("desktop"),m=false,b=false,x="desktop",I=eD.WEB,k=Intl.DateTimeFormat().resolvedOptions().timeZone,S=W.shim.fetch,P,R,E=true,U,A=true){let Ee={lang:e,location:o,time_zone:k,user_agent:f,device_category:x,client_name:I,enable_safety_mode:m,visitor_data:a,on_behalf_of_user:P,po_token:U},Ce;if(R&&E){let ze=await this.fromCache(R,Ee);ze&&(Y.info(Vi,"Found session data in cache."),Ce=ze);}if(!Ce){Y.info(Vi,"Generating session data.");let ze=F.WEB.API_KEY,uo=F.WEB.API_VERSION,Wi={hl:e||"en",gl:o||"US",remote_host:"",user_agent:f,visitor_data:a||ss.encodeVisitorData(vt(11),Math.floor(Date.now()/1e3)),client_name:I,client_version:Object.values(F).find(q=>q.NAME===I)?.VERSION??F.WEB.VERSION,device_category:x.toUpperCase(),os_name:"Windows",os_version:"10.0",time_zone:k,browser_name:"Chrome",browser_version:"125.0.0.0",device_make:"",device_model:"",enable_safety_mode:m};if(!b)try{let q=await N(this,Fi,XR).call(this,Ee,S);ze=q.api_key,uo=q.api_version,Wi=q.context_data;}catch(q){Y.error(Vi,"Failed to retrieve session data from server. Session data generated locally will be used instead.",q);}if(P&&(Wi.on_behalf_of_user=P),Ce={api_key:ze,api_version:uo,context:N(this,Fi,ZR).call(this,Wi)},A)try{Y.info(Vi,"Retrieving InnerTube config data.");let q={"Accept-Language":e,Accept:"*/*",Referer:ve.YT_BASE,"X-Goog-Visitor-Id":Wi.visitor_data,"X-Origin":ve.YT_BASE,"X-Youtube-Client-Version":Wi.client_version};W.shim.server&&(q["User-Agent"]=f,q.Origin=ve.YT_BASE);let Qo=await(await S(`${ve.API.PRODUCTION_1}v1/config?prettyPrint=false`,{headers:q,method:"POST",body:JSON.stringify({context:Ce.context})})).json(),y_=Qo.responseContext?.globalConfigGroup?.rawColdConfigGroup?.configData,x_=Qo.responseContext?.globalConfigGroup?.coldHashData,g_=Qo.responseContext?.globalConfigGroup?.hotHashData;Ce.config_data=Qo.configData,Ce.context.client.configInfo={...Ce.context.client.configInfo,coldConfigData:y_,coldHashData:x_,hotHashData:g_};}catch(q){Y.error(Vi,"Failed to retrieve config data.",q);}E&&await N(this,Fi,JR).call(this,Ce,R);}return Y.debug(Vi,"Session data:",Ce),{...Ce,account_index:r}}async signIn(e){return new Promise(async(o,r)=>{let a=s(f=>r(f),"error_handler");this.once("auth-error",a),this.once("auth",()=>{this.off("auth-error",a),this.logged_in=true,o();});try{await this.oauth.init(e);}catch(f){r(f);}})}async signOut(){if(!this.logged_in)throw new _("You must be signed in to perform this operation.");let e=await this.oauth.revokeCredentials();return this.logged_in=false,e}get client_version(){return this.context.client.clientVersion}get client_name(){return this.context.client.clientName}get lang(){return this.context.client.hl}};Fi=new WeakSet,JR=s(async function(e,o){if(!o)return;Y.info(Vi,"Compressing and caching session data.");let r=xo.serialize({...e,library_version:parseInt(Fe.version)});await o.set("innertube_session_data",r);},"#storeSession"),XR=s(async function(e,o=W.shim.fetch){let r=vt(11);e.visitor_data&&(r=N(this,Fi,QR).call(this,e.visitor_data));let a=new URL("/sw.js_data",ve.YT_BASE),f=await o(a,{headers:{"Accept-Language":e.lang||"en-US","User-Agent":e.user_agent,Accept:"*/*",Referer:`${ve.YT_BASE}/sw.js`,Cookie:`PREF=tz=${e.time_zone.replace("/",".")};VISITOR_INFO1_LIVE=${r};`}});if(!f.ok)throw new Hl(`Failed to retrieve session data: ${f.status}`);let m=await f.text();if(!m.startsWith(")]}'"))throw new Hl("Invalid JSPB response");let x=JSON.parse(m.replace(/^\)\]\}'/,""))[0][2],I=F.WEB.API_VERSION,[[k],S]=x,P=k[61],R=P[P.length-1];return {context_data:{hl:e.lang||k[0],gl:e.location||k[1],remote_host:k[3],visitor_data:e.visitor_data||k[13],user_agent:e.user_agent,client_name:e.client_name,client_version:e.client_name==="WEB"?k[16]:Object.values(F).find(U=>U.NAME===e.client_name)?.VERSION||k[16],os_name:k[17],os_version:k[18],time_zone:k[79]||e.time_zone,device_category:e.device_category,browser_name:k[86],browser_version:k[87],device_make:k[11],device_model:k[12],app_install_data:R,device_experiment_id:k[103],rollout_token:k[107],enable_safety_mode:e.enable_safety_mode},api_key:S,api_version:I}},"#getSessionData"),ZR=s(function(e){let o={client:{hl:e.hl||"en",gl:e.gl||"US",remoteHost:e.remote_host,screenDensityFloat:1,screenHeightPoints:1440,screenPixelDensity:1,screenWidthPoints:2560,visitorData:e.visitor_data,clientName:e.client_name,clientVersion:e.client_version,osName:e.os_name,osVersion:e.os_version,userAgent:e.user_agent,platform:e.device_category.toUpperCase(),clientFormFactor:"UNKNOWN_FORM_FACTOR",userInterfaceTheme:"USER_INTERFACE_THEME_LIGHT",timeZone:e.time_zone,originalUrl:ve.YT_BASE,deviceMake:e.device_make,deviceModel:e.device_model,browserName:e.browser_name,browserVersion:e.browser_version,utcOffsetMinutes:-Math.floor(new Date().getTimezoneOffset()),memoryTotalKbytes:"8000000",rolloutToken:e.rollout_token,deviceExperimentId:e.device_experiment_id,mainAppWebInfo:{graftUrl:ve.YT_BASE,pwaInstallabilityStatus:"PWA_INSTALLABILITY_STATUS_UNKNOWN",webDisplayMode:"WEB_DISPLAY_MODE_BROWSER",isWebNativeShareAvailable:true}},user:{enableSafetyMode:e.enable_safety_mode,lockedSafetyMode:false},request:{useSsl:true,internalExperimentFlags:[]}};return e.app_install_data&&(o.client.configInfo={appInstallData:e.app_install_data}),e.on_behalf_of_user&&(o.user.onBehalfOfUser=e.on_behalf_of_user),o},"#buildContext"),QR=s(function(e){return ss.decodeVisitorData(e).id},"#getVisitorID"),g(Xl,Fi),s(Xl,"Session");var Zl=Xl;var zP={};Te(zP,{Kids:()=>Zu,Music:()=>Qu,Studio:()=>el});var Vt,SC=class SC{constructor(t){g(this,Vt);w(this,Vt,t);}async search(t){let o=await new d({searchEndpoint:{query:t}}).call(p(this,Vt).actions,{client:"YTKIDS"});return new qu(p(this,Vt).actions,o)}async getInfo(t,e){let o={videoId:t},r=new d({watchEndpoint:o}),a=new d({watchNextEndpoint:o}),f=p(this,Vt),m={playbackContext:{contentPlaybackContext:{vis:0,splay:false,lactMilliseconds:"-1",signatureTimestamp:f.player?.sts}},client:"YTKIDS"};e?.po_token?m.serviceIntegrityDimensions={poToken:e.po_token}:f.po_token&&(m.serviceIntegrityDimensions={poToken:f.po_token});let b=r.call(f.actions,m),x=a.call(f.actions,{client:"YTKIDS"}),I=await Promise.all([b,x]),k=vt(16);return new $u(I,f.actions,k)}async getChannel(t){let o=await new d({browseEndpoint:{browseId:t}}).call(p(this,Vt).actions,{client:"YTKIDS"});return new Hu(p(this,Vt).actions,o)}async getHomeFeed(){let e=await new d({browseEndpoint:{browseId:"FEkids_home"}}).call(p(this,Vt).actions,{client:"YTKIDS"});return new Ku(p(this,Vt).actions,e)}async blockChannel(t){let e=p(this,Vt);if(!e.logged_in)throw new _("You must be signed in to perform this operation.");let f={contents:(await new d({getKidsBlocklistPickerCommand:{blockedForKidsContent:{external_channel_id:t}}}).call(e.actions,{client:"YTKIDS"})).data.command.confirmDialogEndpoint.content,engagementPanels:[]},b=u.parseResponse(f).contents_memo?.getType(zn);if(!b)throw new _("Could not find any kids profiles or supervised accounts.");let x=[];for(let I of b)I.block_button?.is_toggled||(I.setActions(e.actions),x.push(await I.blockChannel()));return x}};Vt=new WeakMap,s(SC,"Kids");var Zu=SC;var ji,ne,Xo,eP,FS,EC=class EC{constructor(t){g(this,Xo);g(this,ji);g(this,ne);w(this,ji,t),w(this,ne,t.actions);}getInfo(t,e){return t instanceof Dn?N(this,Xo,FS).call(this,t.endpoint,e):t instanceof Ue?N(this,Xo,FS).call(this,t.overlay?.content?.endpoint??t.endpoint,e):t instanceof d?N(this,Xo,FS).call(this,t,e):N(this,Xo,eP).call(this,t,e)}async search(t,e={}){X({query:t});let o;if(e.type&&e.type!=="all"){let f=$_.encode({filters:{musicSearchType:{[e.type]:true}}});o=encodeURIComponent(Ie(f.finish()));}let a=await new d({searchEndpoint:{query:t,params:o}}).call(p(this,ne),{client:"YTMUSIC"});return new Wu(a,p(this,ne),Reflect.has(e,"type")&&e.type!=="all")}async getHomeFeed(){let e=await new d({browseEndpoint:{browseId:"FEmusic_home"}}).call(p(this,ne),{client:"YTMUSIC"});return new Ou(e,p(this,ne))}async getExplore(){let e=await new d({browseEndpoint:{browseId:"FEmusic_explore"}}).call(p(this,ne),{client:"YTMUSIC"});return new Du(e)}async getLibrary(){let e=await new d({browseEndpoint:{browseId:"FEmusic_library_landing"}}).call(p(this,ne),{client:"YTMUSIC"});return new Yu(e,p(this,ne))}async getArtist(t){if(!t||!t.startsWith("UC")&&!t.startsWith("FEmusic_library_privately_owned_artist"))throw new _("Invalid artist id",t);let o=await new d({browseEndpoint:{browseId:t}}).call(p(this,ne),{client:"YTMUSIC"});return new Mu(o,p(this,ne))}async getAlbum(t){if(!t||!t.startsWith("MPR")&&!t.startsWith("FEmusic_library_privately_owned_release"))throw new _("Invalid album id",t);let o=await new d({browseEndpoint:{browseId:t}}).call(p(this,ne),{client:"YTMUSIC"});return new Pu(o)}async getPlaylist(t){t.startsWith("VL")||(t=`VL${t}`);let o=await new d({browseEndpoint:{browseId:t}}).call(p(this,ne),{client:"YTMUSIC"});return new ro(o,p(this,ne))}async getUpNext(t,e=true){X({video_id:t});let f=(await new d({watchNextEndpoint:{videoId:t}}).call(p(this,ne),{client:"YTMUSIC",parse:true})).contents_memo?.getType(re)?.[0];if(!f)throw new _("Could not find target tab.");let m=f.content?.as(Bn);if(!m||!m.content)throw new _("Music queue was empty, the given id is probably invalid.",m);let b=m.content.as(at);if(!b.playlist_id&&e){let x=b.contents.firstOfType(qt);if(!x)throw new _("Automix item not found");let I=await x.playlist_video?.endpoint.call(p(this,ne),{videoId:t,client:"YTMUSIC",parse:true});if(!I||!I.contents_memo)throw new _("Could not fetch automix");return I.contents_memo.getType(at)[0]}return b}async getRelated(t){X({video_id:t});let a=(await new d({watchNextEndpoint:{videoId:t}}).call(p(this,ne),{client:"YTMUSIC",parse:true})).contents_memo?.getType(re)?.find(m=>m.endpoint.payload.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType==="MUSIC_PAGE_TYPE_TRACK_RELATED");if(!a)throw new _("Could not find target tab.");let f=await a.endpoint.call(p(this,ne),{client:"YTMUSIC",parse:true});if(!f.contents)throw new _("Unexpected response",f);return f.contents.item().as(G,_e)}async getLyrics(t){X({video_id:t});let a=(await new d({watchNextEndpoint:{videoId:t}}).call(p(this,ne),{client:"YTMUSIC",parse:true})).contents_memo?.getType(re)?.find(b=>b.endpoint.payload.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType==="MUSIC_PAGE_TYPE_TRACK_LYRICS");if(!a)throw new _("Could not find target tab.");let f=await a.endpoint.call(p(this,ne),{client:"YTMUSIC",parse:true});if(!f.contents)throw new _("Unexpected response",f);if(f.contents.item().type==="Message")throw new _(f.contents.item().as(_e).text.toString(),t);return f.contents.item().as(G).contents.firstOfType(ii)}async getRecap(){let e=await new d({browseEndpoint:{browseId:"FEmusic_listening_review"}}).call(p(this,ne),{client:"YTMUSIC"});return new Fu(e,p(this,ne))}async getSearchSuggestions(t){let e=await p(this,ne).execute("/music/get_search_suggestions",{input:t,client:"YTMUSIC",parse:true});return e.contents_memo?e.contents_memo.getType(Lc):[]}};ji=new WeakMap,ne=new WeakMap,Xo=new WeakSet,eP=s(async function(t,e){let o={videoId:t,racyCheckOk:true,contentCheckOk:true},r=new d({watchEndpoint:o}),a=new d({watchNextEndpoint:o}),f={playbackContext:{contentPlaybackContext:{vis:0,splay:false,lactMilliseconds:"-1",signatureTimestamp:p(this,ji).player?.sts}},client:"YTMUSIC"};e?.po_token?f.serviceIntegrityDimensions={poToken:e.po_token}:p(this,ji).po_token&&(f.serviceIntegrityDimensions={poToken:p(this,ji).po_token});let m=r.call(p(this,ne),f),b=a.call(p(this,ne),{client:"YTMUSIC"}),x=await Promise.all([m,b]),I=vt(16);return new p_(x,p(this,ne),I)},"#fetchInfoFromVideoId"),FS=s(async function(t,e){if(!t)throw new Error("This item does not have an endpoint.");let o={playbackContext:{contentPlaybackContext:{vis:0,splay:false,lactMilliseconds:"-1",signatureTimestamp:p(this,ji).player?.sts}},client:"YTMUSIC"};e?.po_token?o.serviceIntegrityDimensions={poToken:e.po_token}:p(this,ji).po_token&&(o.serviceIntegrityDimensions={poToken:p(this,ji).po_token});let r=t.call(p(this,ne),o),a=t.call(p(this,ne),{client:"YTMUSIC",enablePersistentPlaylistPanel:true,override_endpoint:"/next"}),f=vt(16),m=await Promise.all([r,a]);return new p_(m,p(this,ne),f)},"#fetchInfoFromEndpoint"),s(EC,"Music");var Qu=EC;function tD(){return {profile:void 0,supportedCapabilities:[],disabledCapabilities:[],snapshot:void 0}}s(tD,"createBaseCapabilityInfo");var CC={encode(n,t=new C){n.profile!==void 0&&t.uint32(10).string(n.profile);for(let e of n.supportedCapabilities)jS.encode(e,t.uint32(18).fork()).join();for(let e of n.disabledCapabilities)jS.encode(e,t.uint32(26).fork()).join();return n.snapshot!==void 0&&t.uint32(42).string(n.snapshot),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=tD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.profile=e.string();continue;case 2:if(a!==18)break;r.supportedCapabilities.push(jS.decode(e,e.uint32()));continue;case 3:if(a!==26)break;r.disabledCapabilities.push(jS.decode(e,e.uint32()));continue;case 5:if(a!==42)break;r.snapshot=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function iD(){return {capability:void 0,features:void 0,experimentFlags:void 0}}s(iD,"createBaseInnerTubeCapability");var jS={encode(n,t=new C){return n.capability!==void 0&&t.uint32(8).uint32(n.capability),n.features!==void 0&&t.uint32(16).uint32(n.features),n.experimentFlags!==void 0&&t.uint32(50).string(n.experimentFlags),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=iD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.capability=e.uint32();continue;case 2:if(a!==16)break;r.features=e.uint32();continue;case 6:if(a!==50)break;r.experimentFlags=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function nD(){return {hl:void 0,gl:void 0,remoteHost:void 0,deviceId:void 0,debugDeviceIdOverride:void 0,carrierGeo:void 0,crackedHl:void 0,deviceMake:void 0,deviceModel:void 0,visitorData:void 0,userAgent:void 0,clientName:void 0,clientVersion:void 0,osName:void 0,osVersion:void 0,projectId:void 0,acceptLanguage:void 0,acceptRegion:void 0,originalUrl:void 0,rawDeviceId:void 0,configData:void 0,spacecastToken:void 0,internalGeo:void 0,screenWidthPoints:void 0,screenHeightPoints:void 0,screenWidthInches:void 0,screenHeightInches:void 0,screenPixelDensity:void 0,platform:void 0,spacecastClientInfo:void 0,clientFormFactor:void 0,forwardedFor:void 0,mobileDataPlanInfo:void 0,gmscoreVersionCode:void 0,webpSupport:void 0,cameraType:void 0,experimentsToken:void 0,windowWidthPoints:void 0,windowHeightPoints:void 0,configInfo:void 0,unpluggedLocationInfo:void 0,androidSdkVersion:void 0,screenDensityFloat:void 0,firstTimeSignInExperimentIds:void 0,utcOffsetMinutes:void 0,animatedWebpSupport:void 0,kidsAppInfo:void 0,musicAppInfo:void 0,tvAppInfo:void 0,internalGeoIp:void 0,unpluggedAppInfo:void 0,locationInfo:void 0,contentSizeCategory:void 0,fontScale:void 0,userInterfaceTheme:void 0,timeZone:void 0,homeGroupInfo:void 0,emlTemplateContext:void 0,coldAppBundleConfigData:void 0,browserName:void 0,browserVersion:void 0,locationPlayabilityToken:void 0,chipset:void 0,firmwareVersion:void 0,memoryTotalKbytes:void 0,mainAppWebInfo:void 0,notificationPermissionInfo:void 0,deviceBrand:void 0,glDeviceInfo:void 0}}s(nD,"createBaseClientInfo");var m_={encode(n,t=new C){return n.hl!==void 0&&t.uint32(10).string(n.hl),n.gl!==void 0&&t.uint32(18).string(n.gl),n.remoteHost!==void 0&&t.uint32(34).string(n.remoteHost),n.deviceId!==void 0&&t.uint32(50).string(n.deviceId),n.debugDeviceIdOverride!==void 0&&t.uint32(66).string(n.debugDeviceIdOverride),n.carrierGeo!==void 0&&t.uint32(82).string(n.carrierGeo),n.crackedHl!==void 0&&t.uint32(88).bool(n.crackedHl),n.deviceMake!==void 0&&t.uint32(98).string(n.deviceMake),n.deviceModel!==void 0&&t.uint32(106).string(n.deviceModel),n.visitorData!==void 0&&t.uint32(114).string(n.visitorData),n.userAgent!==void 0&&t.uint32(122).string(n.userAgent),n.clientName!==void 0&&t.uint32(128).int32(n.clientName),n.clientVersion!==void 0&&t.uint32(138).string(n.clientVersion),n.osName!==void 0&&t.uint32(146).string(n.osName),n.osVersion!==void 0&&t.uint32(154).string(n.osVersion),n.projectId!==void 0&&t.uint32(162).string(n.projectId),n.acceptLanguage!==void 0&&t.uint32(170).string(n.acceptLanguage),n.acceptRegion!==void 0&&t.uint32(178).string(n.acceptRegion),n.originalUrl!==void 0&&t.uint32(186).string(n.originalUrl),n.rawDeviceId!==void 0&&t.uint32(202).string(n.rawDeviceId),n.configData!==void 0&&t.uint32(218).string(n.configData),n.spacecastToken!==void 0&&t.uint32(250).string(n.spacecastToken),n.internalGeo!==void 0&&t.uint32(274).string(n.internalGeo),n.screenWidthPoints!==void 0&&t.uint32(296).int32(n.screenWidthPoints),n.screenHeightPoints!==void 0&&t.uint32(304).int32(n.screenHeightPoints),n.screenWidthInches!==void 0&&t.uint32(317).float(n.screenWidthInches),n.screenHeightInches!==void 0&&t.uint32(325).float(n.screenHeightInches),n.screenPixelDensity!==void 0&&t.uint32(328).int32(n.screenPixelDensity),n.platform!==void 0&&t.uint32(336).int32(n.platform),n.spacecastClientInfo!==void 0&&oP.encode(n.spacecastClientInfo,t.uint32(362).fork()).join(),n.clientFormFactor!==void 0&&t.uint32(368).int32(n.clientFormFactor),n.forwardedFor!==void 0&&t.uint32(386).string(n.forwardedFor),n.mobileDataPlanInfo!==void 0&&rP.encode(n.mobileDataPlanInfo,t.uint32(394).fork()).join(),n.gmscoreVersionCode!==void 0&&t.uint32(400).int32(n.gmscoreVersionCode),n.webpSupport!==void 0&&t.uint32(408).bool(n.webpSupport),n.cameraType!==void 0&&t.uint32(416).int32(n.cameraType),n.experimentsToken!==void 0&&t.uint32(434).string(n.experimentsToken),n.windowWidthPoints!==void 0&&t.uint32(440).int32(n.windowWidthPoints),n.windowHeightPoints!==void 0&&t.uint32(448).int32(n.windowHeightPoints),n.configInfo!==void 0&&aP.encode(n.configInfo,t.uint32(498).fork()).join(),n.unpluggedLocationInfo!==void 0&&cP.encode(n.unpluggedLocationInfo,t.uint32(506).fork()).join(),n.androidSdkVersion!==void 0&&t.uint32(512).int32(n.androidSdkVersion),n.screenDensityFloat!==void 0&&t.uint32(525).float(n.screenDensityFloat),n.firstTimeSignInExperimentIds!==void 0&&t.uint32(528).int32(n.firstTimeSignInExperimentIds),n.utcOffsetMinutes!==void 0&&t.uint32(536).int32(n.utcOffsetMinutes),n.animatedWebpSupport!==void 0&&t.uint32(544).bool(n.animatedWebpSupport),n.kidsAppInfo!==void 0&&uP.encode(n.kidsAppInfo,t.uint32(554).fork()).join(),n.musicAppInfo!==void 0&&dP.encode(n.musicAppInfo,t.uint32(562).fork()).join(),n.tvAppInfo!==void 0&&mP.encode(n.tvAppInfo,t.uint32(570).fork()).join(),n.internalGeoIp!==void 0&&t.uint32(578).string(n.internalGeoIp),n.unpluggedAppInfo!==void 0&&_P.encode(n.unpluggedAppInfo,t.uint32(586).fork()).join(),n.locationInfo!==void 0&&bP.encode(n.locationInfo,t.uint32(594).fork()).join(),n.contentSizeCategory!==void 0&&t.uint32(610).string(n.contentSizeCategory),n.fontScale!==void 0&&t.uint32(621).float(n.fontScale),n.userInterfaceTheme!==void 0&&t.uint32(624).int32(n.userInterfaceTheme),n.timeZone!==void 0&&t.uint32(642).string(n.timeZone),n.homeGroupInfo!==void 0&&xP.encode(n.homeGroupInfo,t.uint32(650).fork()).join(),n.emlTemplateContext!==void 0&&t.uint32(674).bytes(n.emlTemplateContext),n.coldAppBundleConfigData!==void 0&&t.uint32(682).bytes(n.coldAppBundleConfigData),n.browserName!==void 0&&t.uint32(698).string(n.browserName),n.browserVersion!==void 0&&t.uint32(706).string(n.browserVersion),n.locationPlayabilityToken!==void 0&&t.uint32(714).string(n.locationPlayabilityToken),n.chipset!==void 0&&t.uint32(738).string(n.chipset),n.firmwareVersion!==void 0&&t.uint32(746).string(n.firmwareVersion),n.memoryTotalKbytes!==void 0&&t.uint32(760).int64(n.memoryTotalKbytes),n.mainAppWebInfo!==void 0&&tP.encode(n.mainAppWebInfo,t.uint32(770).fork()).join(),n.notificationPermissionInfo!==void 0&&iP.encode(n.notificationPermissionInfo,t.uint32(778).fork()).join(),n.deviceBrand!==void 0&&t.uint32(786).string(n.deviceBrand),n.glDeviceInfo!==void 0&&nP.encode(n.glDeviceInfo,t.uint32(818).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=nD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.hl=e.string();continue;case 2:if(a!==18)break;r.gl=e.string();continue;case 4:if(a!==34)break;r.remoteHost=e.string();continue;case 6:if(a!==50)break;r.deviceId=e.string();continue;case 8:if(a!==66)break;r.debugDeviceIdOverride=e.string();continue;case 10:if(a!==82)break;r.carrierGeo=e.string();continue;case 11:if(a!==88)break;r.crackedHl=e.bool();continue;case 12:if(a!==98)break;r.deviceMake=e.string();continue;case 13:if(a!==106)break;r.deviceModel=e.string();continue;case 14:if(a!==114)break;r.visitorData=e.string();continue;case 15:if(a!==122)break;r.userAgent=e.string();continue;case 16:if(a!==128)break;r.clientName=e.int32();continue;case 17:if(a!==138)break;r.clientVersion=e.string();continue;case 18:if(a!==146)break;r.osName=e.string();continue;case 19:if(a!==154)break;r.osVersion=e.string();continue;case 20:if(a!==162)break;r.projectId=e.string();continue;case 21:if(a!==170)break;r.acceptLanguage=e.string();continue;case 22:if(a!==178)break;r.acceptRegion=e.string();continue;case 23:if(a!==186)break;r.originalUrl=e.string();continue;case 25:if(a!==202)break;r.rawDeviceId=e.string();continue;case 27:if(a!==218)break;r.configData=e.string();continue;case 31:if(a!==250)break;r.spacecastToken=e.string();continue;case 34:if(a!==274)break;r.internalGeo=e.string();continue;case 37:if(a!==296)break;r.screenWidthPoints=e.int32();continue;case 38:if(a!==304)break;r.screenHeightPoints=e.int32();continue;case 39:if(a!==317)break;r.screenWidthInches=e.float();continue;case 40:if(a!==325)break;r.screenHeightInches=e.float();continue;case 41:if(a!==328)break;r.screenPixelDensity=e.int32();continue;case 42:if(a!==336)break;r.platform=e.int32();continue;case 45:if(a!==362)break;r.spacecastClientInfo=oP.decode(e,e.uint32());continue;case 46:if(a!==368)break;r.clientFormFactor=e.int32();continue;case 48:if(a!==386)break;r.forwardedFor=e.string();continue;case 49:if(a!==394)break;r.mobileDataPlanInfo=rP.decode(e,e.uint32());continue;case 50:if(a!==400)break;r.gmscoreVersionCode=e.int32();continue;case 51:if(a!==408)break;r.webpSupport=e.bool();continue;case 52:if(a!==416)break;r.cameraType=e.int32();continue;case 54:if(a!==434)break;r.experimentsToken=e.string();continue;case 55:if(a!==440)break;r.windowWidthPoints=e.int32();continue;case 56:if(a!==448)break;r.windowHeightPoints=e.int32();continue;case 62:if(a!==498)break;r.configInfo=aP.decode(e,e.uint32());continue;case 63:if(a!==506)break;r.unpluggedLocationInfo=cP.decode(e,e.uint32());continue;case 64:if(a!==512)break;r.androidSdkVersion=e.int32();continue;case 65:if(a!==525)break;r.screenDensityFloat=e.float();continue;case 66:if(a!==528)break;r.firstTimeSignInExperimentIds=e.int32();continue;case 67:if(a!==536)break;r.utcOffsetMinutes=e.int32();continue;case 68:if(a!==544)break;r.animatedWebpSupport=e.bool();continue;case 69:if(a!==554)break;r.kidsAppInfo=uP.decode(e,e.uint32());continue;case 70:if(a!==562)break;r.musicAppInfo=dP.decode(e,e.uint32());continue;case 71:if(a!==570)break;r.tvAppInfo=mP.decode(e,e.uint32());continue;case 72:if(a!==578)break;r.internalGeoIp=e.string();continue;case 73:if(a!==586)break;r.unpluggedAppInfo=_P.decode(e,e.uint32());continue;case 74:if(a!==594)break;r.locationInfo=bP.decode(e,e.uint32());continue;case 76:if(a!==610)break;r.contentSizeCategory=e.string();continue;case 77:if(a!==621)break;r.fontScale=e.float();continue;case 78:if(a!==624)break;r.userInterfaceTheme=e.int32();continue;case 80:if(a!==642)break;r.timeZone=e.string();continue;case 81:if(a!==650)break;r.homeGroupInfo=xP.decode(e,e.uint32());continue;case 84:if(a!==674)break;r.emlTemplateContext=e.bytes();continue;case 85:if(a!==682)break;r.coldAppBundleConfigData=e.bytes();continue;case 87:if(a!==698)break;r.browserName=e.string();continue;case 88:if(a!==706)break;r.browserVersion=e.string();continue;case 89:if(a!==714)break;r.locationPlayabilityToken=e.string();continue;case 92:if(a!==738)break;r.chipset=e.string();continue;case 93:if(a!==746)break;r.firmwareVersion=e.string();continue;case 95:if(a!==760)break;r.memoryTotalKbytes=GS(e.int64());continue;case 96:if(a!==770)break;r.mainAppWebInfo=tP.decode(e,e.uint32());continue;case 97:if(a!==778)break;r.notificationPermissionInfo=iP.decode(e,e.uint32());continue;case 98:if(a!==786)break;r.deviceBrand=e.string();continue;case 102:if(a!==818)break;r.glDeviceInfo=nP.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function oD(){return {graftUrl:void 0,pwaInstallabilityStatus:void 0,webDisplayMode:void 0,isWebNativeShareAvailable:void 0,storeDigitalGoodsApiSupportStatus:void 0}}s(oD,"createBaseClientInfo_MainAppWebInfo");var tP={encode(n,t=new C){return n.graftUrl!==void 0&&t.uint32(10).string(n.graftUrl),n.pwaInstallabilityStatus!==void 0&&t.uint32(16).int32(n.pwaInstallabilityStatus),n.webDisplayMode!==void 0&&t.uint32(24).int32(n.webDisplayMode),n.isWebNativeShareAvailable!==void 0&&t.uint32(32).bool(n.isWebNativeShareAvailable),n.storeDigitalGoodsApiSupportStatus!==void 0&&t.uint32(40).int32(n.storeDigitalGoodsApiSupportStatus),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=oD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.graftUrl=e.string();continue;case 2:if(a!==16)break;r.pwaInstallabilityStatus=e.int32();continue;case 3:if(a!==24)break;r.webDisplayMode=e.int32();continue;case 4:if(a!==32)break;r.isWebNativeShareAvailable=e.bool();continue;case 5:if(a!==40)break;r.storeDigitalGoodsApiSupportStatus=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function sD(){return {notificationsSetting:void 0,lastDeviceOptInChangeTimeAgoSec:void 0}}s(sD,"createBaseClientInfo_NotificationPermissionInfo");var iP={encode(n,t=new C){return n.notificationsSetting!==void 0&&t.uint32(8).int32(n.notificationsSetting),n.lastDeviceOptInChangeTimeAgoSec!==void 0&&t.uint32(16).int64(n.lastDeviceOptInChangeTimeAgoSec),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=sD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.notificationsSetting=e.int32();continue;case 2:if(a!==16)break;r.lastDeviceOptInChangeTimeAgoSec=GS(e.int64());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function rD(){return {glRenderer:void 0,glEsVersionMajor:void 0,glEsVersionMinor:void 0}}s(rD,"createBaseClientInfo_GLDeviceInfo");var nP={encode(n,t=new C){return n.glRenderer!==void 0&&t.uint32(10).string(n.glRenderer),n.glEsVersionMajor!==void 0&&t.uint32(16).int32(n.glEsVersionMajor),n.glEsVersionMinor!==void 0&&t.uint32(24).int32(n.glEsVersionMinor),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=rD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.glRenderer=e.string();continue;case 2:if(a!==16)break;r.glEsVersionMajor=e.int32();continue;case 3:if(a!==24)break;r.glEsVersionMinor=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function aD(){return {appliances:void 0,interactionLevel:void 0}}s(aD,"createBaseClientInfo_SpacecastClientInfo");var oP={encode(n,t=new C){return n.appliances!==void 0&&sP.encode(n.appliances,t.uint32(10).fork()).join(),n.interactionLevel!==void 0&&t.uint32(16).int32(n.interactionLevel),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=aD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.appliances=sP.decode(e,e.uint32());continue;case 2:if(a!==16)break;r.interactionLevel=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function cD(){return {contentProfileToken:void 0,status:void 0,hostname:void 0,active:void 0,deviceId:void 0}}s(cD,"createBaseClientInfo_SpacecastClientInfo_SpacecastAppliance");var sP={encode(n,t=new C){return n.contentProfileToken!==void 0&&t.uint32(10).bytes(n.contentProfileToken),n.status!==void 0&&t.uint32(16).int32(n.status),n.hostname!==void 0&&t.uint32(26).string(n.hostname),n.active!==void 0&&t.uint32(32).bool(n.active),n.deviceId!==void 0&&t.uint32(42).string(n.deviceId),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=cD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.contentProfileToken=e.bytes();continue;case 2:if(a!==16)break;r.status=e.int32();continue;case 3:if(a!==26)break;r.hostname=e.string();continue;case 4:if(a!==32)break;r.active=e.bool();continue;case 5:if(a!==42)break;r.deviceId=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function uD(){return {cpid:void 0,serializedDataPlanStatus:void 0,dataSavingQualityPickerEnabled:void 0,mccmnc:void 0}}s(uD,"createBaseClientInfo_MobileDataPlanInfo");var rP={encode(n,t=new C){return n.cpid!==void 0&&t.uint32(394).string(n.cpid),n.serializedDataPlanStatus!==void 0&&t.uint32(402).string(n.serializedDataPlanStatus),n.dataSavingQualityPickerEnabled!==void 0&&t.uint32(416).bool(n.dataSavingQualityPickerEnabled),n.mccmnc!==void 0&&t.uint32(426).string(n.mccmnc),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=uD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 49:if(a!==394)break;r.cpid=e.string();continue;case 50:if(a!==402)break;r.serializedDataPlanStatus=e.string();continue;case 52:if(a!==416)break;r.dataSavingQualityPickerEnabled=e.bool();continue;case 53:if(a!==426)break;r.mccmnc=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function lD(){return {coldConfigData:void 0,coldHashData:void 0,hotHashData:void 0,appInstallData:void 0}}s(lD,"createBaseClientInfo_ConfigGroupsClientInfo");var aP={encode(n,t=new C){return n.coldConfigData!==void 0&&t.uint32(10).string(n.coldConfigData),n.coldHashData!==void 0&&t.uint32(26).string(n.coldHashData),n.hotHashData!==void 0&&t.uint32(42).string(n.hotHashData),n.appInstallData!==void 0&&t.uint32(50).string(n.appInstallData),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=lD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.coldConfigData=e.string();continue;case 3:if(a!==26)break;r.coldHashData=e.string();continue;case 5:if(a!==42)break;r.hotHashData=e.string();continue;case 6:if(a!==50)break;r.appInstallData=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function pD(){return {latitudeE7:void 0,longitudeE7:void 0,localTimestampMs:void 0,ipAddress:void 0,timezone:void 0,prefer24HourTime:void 0,locationRadiusMeters:void 0,isInitialLoad:void 0,browserPermissionGranted:void 0,clientPermissionState:void 0,locationOverrideToken:void 0}}s(pD,"createBaseClientInfo_UnpluggedLocationInfo");var cP={encode(n,t=new C){return n.latitudeE7!==void 0&&t.uint32(8).int32(n.latitudeE7),n.longitudeE7!==void 0&&t.uint32(16).int32(n.longitudeE7),n.localTimestampMs!==void 0&&t.uint32(24).int64(n.localTimestampMs),n.ipAddress!==void 0&&t.uint32(34).string(n.ipAddress),n.timezone!==void 0&&t.uint32(42).string(n.timezone),n.prefer24HourTime!==void 0&&t.uint32(48).bool(n.prefer24HourTime),n.locationRadiusMeters!==void 0&&t.uint32(56).int32(n.locationRadiusMeters),n.isInitialLoad!==void 0&&t.uint32(64).bool(n.isInitialLoad),n.browserPermissionGranted!==void 0&&t.uint32(72).bool(n.browserPermissionGranted),n.clientPermissionState!==void 0&&t.uint32(80).int32(n.clientPermissionState),n.locationOverrideToken!==void 0&&t.uint32(90).string(n.locationOverrideToken),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=pD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.latitudeE7=e.int32();continue;case 2:if(a!==16)break;r.longitudeE7=e.int32();continue;case 3:if(a!==24)break;r.localTimestampMs=GS(e.int64());continue;case 4:if(a!==34)break;r.ipAddress=e.string();continue;case 5:if(a!==42)break;r.timezone=e.string();continue;case 6:if(a!==48)break;r.prefer24HourTime=e.bool();continue;case 7:if(a!==56)break;r.locationRadiusMeters=e.int32();continue;case 8:if(a!==64)break;r.isInitialLoad=e.bool();continue;case 9:if(a!==72)break;r.browserPermissionGranted=e.bool();continue;case 10:if(a!==80)break;r.clientPermissionState=e.int32();continue;case 11:if(a!==90)break;r.locationOverrideToken=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function fD(){return {contentSettings:void 0,parentCurationMode:void 0,categorySettings:void 0,userEducationSettings:void 0}}s(fD,"createBaseClientInfo_KidsAppInfo");var uP={encode(n,t=new C){return n.contentSettings!==void 0&&lP.encode(n.contentSettings,t.uint32(10).fork()).join(),n.parentCurationMode!==void 0&&t.uint32(16).int32(n.parentCurationMode),n.categorySettings!==void 0&&pP.encode(n.categorySettings,t.uint32(26).fork()).join(),n.userEducationSettings!==void 0&&fP.encode(n.userEducationSettings,t.uint32(34).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=fD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.contentSettings=lP.decode(e,e.uint32());continue;case 2:if(a!==16)break;r.parentCurationMode=e.int32();continue;case 3:if(a!==26)break;r.categorySettings=pP.decode(e,e.uint32());continue;case 4:if(a!==34)break;r.userEducationSettings=fP.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function dD(){return {kidsNoSearchMode:void 0,ageUpMode:void 0,contentDensity:void 0}}s(dD,"createBaseClientInfo_KidsAppInfo_KidsContentSettings");var lP={encode(n,t=new C){return n.kidsNoSearchMode!==void 0&&t.uint32(8).int32(n.kidsNoSearchMode),n.ageUpMode!==void 0&&t.uint32(16).int32(n.ageUpMode),n.contentDensity!==void 0&&t.uint32(24).int32(n.contentDensity),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=dD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.kidsNoSearchMode=e.int32();continue;case 2:if(a!==16)break;r.ageUpMode=e.int32();continue;case 3:if(a!==24)break;r.contentDensity=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function mD(){return {enabledCategories:void 0}}s(mD,"createBaseClientInfo_KidsAppInfo_KidsCategorySettings");var pP={encode(n,t=new C){return n.enabledCategories!==void 0&&t.uint32(10).string(n.enabledCategories),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=mD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.enabledCategories=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function hD(){return {hasSeenHomeChipBarUserEducation:void 0,hasSeenHomePivotBarUserEducation:void 0,hasSeenParentMuirUserEducation:void 0}}s(hD,"createBaseClientInfo_KidsAppInfo_KidsUserEducationSettings");var fP={encode(n,t=new C){return n.hasSeenHomeChipBarUserEducation!==void 0&&t.uint32(8).bool(n.hasSeenHomeChipBarUserEducation),n.hasSeenHomePivotBarUserEducation!==void 0&&t.uint32(16).bool(n.hasSeenHomePivotBarUserEducation),n.hasSeenParentMuirUserEducation!==void 0&&t.uint32(24).bool(n.hasSeenParentMuirUserEducation),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=hD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.hasSeenHomeChipBarUserEducation=e.bool();continue;case 2:if(a!==16)break;r.hasSeenHomePivotBarUserEducation=e.bool();continue;case 3:if(a!==24)break;r.hasSeenParentMuirUserEducation=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function _D(){return {playBackMode:void 0,musicLocationMasterSwitch:void 0,musicActivityMasterSwitch:void 0,offlineMixtapeEnabled:void 0,autoOfflineEnabled:void 0,iosBackgroundRefreshStatus:void 0,smartDownloadsSongLimit:void 0,transitionedFromMixtapeToSmartDownloads:void 0,pwaInstallabilityStatus:void 0,webDisplayMode:void 0,musicTier:void 0,storeDigitalGoodsApiSupportStatus:void 0,smartDownloadsTimeSinceLastOptOutSec:void 0}}s(_D,"createBaseClientInfo_MusicAppInfo");var dP={encode(n,t=new C){return n.playBackMode!==void 0&&t.uint32(8).int32(n.playBackMode),n.musicLocationMasterSwitch!==void 0&&t.uint32(16).int32(n.musicLocationMasterSwitch),n.musicActivityMasterSwitch!==void 0&&t.uint32(24).int32(n.musicActivityMasterSwitch),n.offlineMixtapeEnabled!==void 0&&t.uint32(32).bool(n.offlineMixtapeEnabled),n.autoOfflineEnabled!==void 0&&t.uint32(40).bool(n.autoOfflineEnabled),n.iosBackgroundRefreshStatus!==void 0&&t.uint32(48).int32(n.iosBackgroundRefreshStatus),n.smartDownloadsSongLimit!==void 0&&t.uint32(56).int32(n.smartDownloadsSongLimit),n.transitionedFromMixtapeToSmartDownloads!==void 0&&t.uint32(64).bool(n.transitionedFromMixtapeToSmartDownloads),n.pwaInstallabilityStatus!==void 0&&t.uint32(72).int32(n.pwaInstallabilityStatus),n.webDisplayMode!==void 0&&t.uint32(80).int32(n.webDisplayMode),n.musicTier!==void 0&&t.uint32(88).int32(n.musicTier),n.storeDigitalGoodsApiSupportStatus!==void 0&&t.uint32(96).int32(n.storeDigitalGoodsApiSupportStatus),n.smartDownloadsTimeSinceLastOptOutSec!==void 0&&t.uint32(104).int64(n.smartDownloadsTimeSinceLastOptOutSec),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=_D();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.playBackMode=e.int32();continue;case 2:if(a!==16)break;r.musicLocationMasterSwitch=e.int32();continue;case 3:if(a!==24)break;r.musicActivityMasterSwitch=e.int32();continue;case 4:if(a!==32)break;r.offlineMixtapeEnabled=e.bool();continue;case 5:if(a!==40)break;r.autoOfflineEnabled=e.bool();continue;case 6:if(a!==48)break;r.iosBackgroundRefreshStatus=e.int32();continue;case 7:if(a!==56)break;r.smartDownloadsSongLimit=e.int32();continue;case 8:if(a!==64)break;r.transitionedFromMixtapeToSmartDownloads=e.bool();continue;case 9:if(a!==72)break;r.pwaInstallabilityStatus=e.int32();continue;case 10:if(a!==80)break;r.webDisplayMode=e.int32();continue;case 11:if(a!==88)break;r.musicTier=e.int32();continue;case 12:if(a!==96)break;r.storeDigitalGoodsApiSupportStatus=e.int32();continue;case 13:if(a!==104)break;r.smartDownloadsTimeSinceLastOptOutSec=GS(e.int64());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function bD(){return {mdxImpactedSessionsServerEvents:void 0,enablePrivacyFilter:void 0,zylonLeftNav:void 0,certificationScope:void 0,livingRoomPoTokenId:void 0,jsEngineString:void 0,voiceCapability:void 0,systemIntegrator:void 0,androidBuildFingerprint:void 0,cobaltAppVersion:void 0,cobaltStarboardVersion:void 0,useStartPlaybackPreviewCommand:void 0,shouldShowPersistentSigninOnHome:void 0,androidPlayServicesVersion:void 0}}s(bD,"createBaseClientInfo_TvAppInfo");var mP={encode(n,t=new C){return n.mdxImpactedSessionsServerEvents!==void 0&&t.uint32(26).string(n.mdxImpactedSessionsServerEvents),n.enablePrivacyFilter!==void 0&&t.uint32(48).bool(n.enablePrivacyFilter),n.zylonLeftNav!==void 0&&t.uint32(56).bool(n.zylonLeftNav),n.certificationScope!==void 0&&t.uint32(74).string(n.certificationScope),n.livingRoomPoTokenId!==void 0&&t.uint32(82).string(n.livingRoomPoTokenId),n.jsEngineString!==void 0&&t.uint32(98).string(n.jsEngineString),n.voiceCapability!==void 0&&hP.encode(n.voiceCapability,t.uint32(106).fork()).join(),n.systemIntegrator!==void 0&&t.uint32(114).string(n.systemIntegrator),n.androidBuildFingerprint!==void 0&&t.uint32(146).string(n.androidBuildFingerprint),n.cobaltAppVersion!==void 0&&t.uint32(154).string(n.cobaltAppVersion),n.cobaltStarboardVersion!==void 0&&t.uint32(162).string(n.cobaltStarboardVersion),n.useStartPlaybackPreviewCommand!==void 0&&t.uint32(176).bool(n.useStartPlaybackPreviewCommand),n.shouldShowPersistentSigninOnHome!==void 0&&t.uint32(184).bool(n.shouldShowPersistentSigninOnHome),n.androidPlayServicesVersion!==void 0&&t.uint32(194).string(n.androidPlayServicesVersion),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=bD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 3:if(a!==26)break;r.mdxImpactedSessionsServerEvents=e.string();continue;case 6:if(a!==48)break;r.enablePrivacyFilter=e.bool();continue;case 7:if(a!==56)break;r.zylonLeftNav=e.bool();continue;case 9:if(a!==74)break;r.certificationScope=e.string();continue;case 10:if(a!==82)break;r.livingRoomPoTokenId=e.string();continue;case 12:if(a!==98)break;r.jsEngineString=e.string();continue;case 13:if(a!==106)break;r.voiceCapability=hP.decode(e,e.uint32());continue;case 14:if(a!==114)break;r.systemIntegrator=e.string();continue;case 18:if(a!==146)break;r.androidBuildFingerprint=e.string();continue;case 19:if(a!==154)break;r.cobaltAppVersion=e.string();continue;case 20:if(a!==162)break;r.cobaltStarboardVersion=e.string();continue;case 22:if(a!==176)break;r.useStartPlaybackPreviewCommand=e.bool();continue;case 23:if(a!==184)break;r.shouldShowPersistentSigninOnHome=e.bool();continue;case 24:if(a!==194)break;r.androidPlayServicesVersion=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function yD(){return {hasSoftMicSupport:void 0,hasHardMicSupport:void 0}}s(yD,"createBaseClientInfo_TvAppInfo_VoiceCapability");var hP={encode(n,t=new C){return n.hasSoftMicSupport!==void 0&&t.uint32(8).bool(n.hasSoftMicSupport),n.hasHardMicSupport!==void 0&&t.uint32(16).bool(n.hasHardMicSupport),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=yD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.hasSoftMicSupport=e.bool();continue;case 2:if(a!==16)break;r.hasHardMicSupport=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function xD(){return {enableFilterMode:void 0,iosNotificationPermission:void 0,forceEnableEpg3:void 0}}s(xD,"createBaseClientInfo_UnpluggedAppInfo");var _P={encode(n,t=new C){return n.enableFilterMode!==void 0&&t.uint32(16).bool(n.enableFilterMode),n.iosNotificationPermission!==void 0&&t.uint32(24).bool(n.iosNotificationPermission),n.forceEnableEpg3!==void 0&&t.uint32(56).bool(n.forceEnableEpg3),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=xD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 2:if(a!==16)break;r.enableFilterMode=e.bool();continue;case 3:if(a!==24)break;r.iosNotificationPermission=e.bool();continue;case 7:if(a!==56)break;r.forceEnableEpg3=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function gD(){return {locationInfoStatus:void 0,ulrStatus:void 0,latitudeE7:void 0,longitudeE7:void 0,horizontalAccuracyMeters:void 0,locationFreshnessMs:void 0,locationPermissionAuthorizationStatus:void 0,locationOverrideToken:void 0,forceLocationPlayabilityTokenRefresh:void 0}}s(gD,"createBaseClientInfo_LocationInfo");var bP={encode(n,t=new C){return n.locationInfoStatus!==void 0&&t.uint32(8).int32(n.locationInfoStatus),n.ulrStatus!==void 0&&yP.encode(n.ulrStatus,t.uint32(18).fork()).join(),n.latitudeE7!==void 0&&t.uint32(26).string(n.latitudeE7),n.longitudeE7!==void 0&&t.uint32(34).string(n.longitudeE7),n.horizontalAccuracyMeters!==void 0&&t.uint32(42).string(n.horizontalAccuracyMeters),n.locationFreshnessMs!==void 0&&t.uint32(50).string(n.locationFreshnessMs),n.locationPermissionAuthorizationStatus!==void 0&&t.uint32(56).int32(n.locationPermissionAuthorizationStatus),n.locationOverrideToken!==void 0&&t.uint32(66).string(n.locationOverrideToken),n.forceLocationPlayabilityTokenRefresh!==void 0&&t.uint32(72).bool(n.forceLocationPlayabilityTokenRefresh),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=gD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.locationInfoStatus=e.int32();continue;case 2:if(a!==18)break;r.ulrStatus=yP.decode(e,e.uint32());continue;case 3:if(a!==26)break;r.latitudeE7=e.string();continue;case 4:if(a!==34)break;r.longitudeE7=e.string();continue;case 5:if(a!==42)break;r.horizontalAccuracyMeters=e.string();continue;case 6:if(a!==50)break;r.locationFreshnessMs=e.string();continue;case 7:if(a!==56)break;r.locationPermissionAuthorizationStatus=e.int32();continue;case 8:if(a!==66)break;r.locationOverrideToken=e.string();continue;case 9:if(a!==72)break;r.forceLocationPlayabilityTokenRefresh=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function wD(){return {reportingEnabledSetting:void 0,historyEnabledSetting:void 0,isAllowed:void 0,isActive:void 0}}s(wD,"createBaseClientInfo_LocationInfo_UrlStatus");var yP={encode(n,t=new C){return n.reportingEnabledSetting!==void 0&&t.uint32(8).int32(n.reportingEnabledSetting),n.historyEnabledSetting!==void 0&&t.uint32(16).int32(n.historyEnabledSetting),n.isAllowed!==void 0&&t.uint32(24).bool(n.isAllowed),n.isActive!==void 0&&t.uint32(32).bool(n.isActive),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=wD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.reportingEnabledSetting=e.int32();continue;case 2:if(a!==16)break;r.historyEnabledSetting=e.int32();continue;case 3:if(a!==24)break;r.isAllowed=e.bool();continue;case 4:if(a!==32)break;r.isActive=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function TD(){return {isPartOfGroup:void 0,isGroup:void 0}}s(TD,"createBaseClientInfo_HomeGroupInfo");var xP={encode(n,t=new C){return n.isPartOfGroup!==void 0&&t.uint32(8).bool(n.isPartOfGroup),n.isGroup!==void 0&&t.uint32(24).bool(n.isGroup),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=TD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.isPartOfGroup=e.bool();continue;case 3:if(a!==24)break;r.isGroup=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function GS(n){let t=globalThis.Number(n.toString());if(t>globalThis.Number.MAX_SAFE_INTEGER)throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");if(t<globalThis.Number.MIN_SAFE_INTEGER)throw new globalThis.Error("Value is smaller than Number.MIN_SAFE_INTEGER");return t}s(GS,"longToNumber");function vD(){return {challenge:void 0,webResponse:void 0,androidResponse:void 0,iosResponse:void 0,error:void 0,adblockReporting:void 0}}s(vD,"createBaseAttestationResponseData");var NC={encode(n,t=new C){return n.challenge!==void 0&&t.uint32(10).string(n.challenge),n.webResponse!==void 0&&t.uint32(18).string(n.webResponse),n.androidResponse!==void 0&&t.uint32(26).string(n.androidResponse),n.iosResponse!==void 0&&t.uint32(34).bytes(n.iosResponse),n.error!==void 0&&t.uint32(40).int32(n.error),n.adblockReporting!==void 0&&gP.encode(n.adblockReporting,t.uint32(50).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=vD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.challenge=e.string();continue;case 2:if(a!==18)break;r.webResponse=e.string();continue;case 3:if(a!==26)break;r.androidResponse=e.string();continue;case 4:if(a!==34)break;r.iosResponse=e.bytes();continue;case 5:if(a!==40)break;r.error=e.int32();continue;case 6:if(a!==50)break;r.adblockReporting=gP.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function ID(){return {reportingStatus:void 0,broadSpectrumDetectionResult:void 0}}s(ID,"createBaseAttestationResponseData_AdblockReporting");var gP={encode(n,t=new C){return n.reportingStatus!==void 0&&t.uint32(8).uint64(n.reportingStatus),n.broadSpectrumDetectionResult!==void 0&&t.uint32(16).uint64(n.broadSpectrumDetectionResult),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=ID();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.reportingStatus=wP(e.uint64());continue;case 2:if(a!==16)break;r.broadSpectrumDetectionResult=wP(e.uint64());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function wP(n){let t=globalThis.Number(n.toString());if(t>globalThis.Number.MAX_SAFE_INTEGER)throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");if(t<globalThis.Number.MIN_SAFE_INTEGER)throw new globalThis.Error("Value is smaller than Number.MIN_SAFE_INTEGER");return t}s(wP,"longToNumber");function kD(){return {thirdPartyDigest:void 0,useSsl:void 0,returnErrorDetail:void 0,ifNoneMatch:void 0,returnLogEntry:void 0,isPrefetch:void 0,internalExperimentFlags:[],returnDebugData:void 0,innertubez:void 0,traceProto:void 0,returnLogEntryJson:void 0,sherlogUsername:void 0,reauthRequestInfo:void 0,sessionInfo:void 0,returnLogEntryProto:void 0,externalPrequestContext:void 0,attestationResponseData:void 0,eats:void 0,requestQos:void 0}}s(kD,"createBaseRequestInfo");var RC={encode(n,t=new C){n.thirdPartyDigest!==void 0&&t.uint32(50).string(n.thirdPartyDigest),n.useSsl!==void 0&&t.uint32(56).bool(n.useSsl),n.returnErrorDetail!==void 0&&t.uint32(72).bool(n.returnErrorDetail),n.ifNoneMatch!==void 0&&t.uint32(98).string(n.ifNoneMatch),n.returnLogEntry!==void 0&&t.uint32(104).bool(n.returnLogEntry),n.isPrefetch!==void 0&&t.uint32(112).bool(n.isPrefetch);for(let e of n.internalExperimentFlags)Ri.encode(e,t.uint32(122).fork()).join();return n.returnDebugData!==void 0&&t.uint32(128).bool(n.returnDebugData),n.innertubez!==void 0&&t.uint32(146).string(n.innertubez),n.traceProto!==void 0&&t.uint32(184).bool(n.traceProto),n.returnLogEntryJson!==void 0&&t.uint32(192).bool(n.returnLogEntryJson),n.sherlogUsername!==void 0&&t.uint32(202).string(n.sherlogUsername),n.reauthRequestInfo!==void 0&&IP.encode(n.reauthRequestInfo,t.uint32(234).fork()).join(),n.sessionInfo!==void 0&&vP.encode(n.sessionInfo,t.uint32(242).fork()).join(),n.returnLogEntryProto!==void 0&&t.uint32(248).bool(n.returnLogEntryProto),n.externalPrequestContext!==void 0&&t.uint32(258).string(n.externalPrequestContext),n.attestationResponseData!==void 0&&NC.encode(n.attestationResponseData,t.uint32(274).fork()).join(),n.eats!==void 0&&t.uint32(282).bytes(n.eats),n.requestQos!==void 0&&TP.encode(n.requestQos,t.uint32(290).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=kD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 6:if(a!==50)break;r.thirdPartyDigest=e.string();continue;case 7:if(a!==56)break;r.useSsl=e.bool();continue;case 9:if(a!==72)break;r.returnErrorDetail=e.bool();continue;case 12:if(a!==98)break;r.ifNoneMatch=e.string();continue;case 13:if(a!==104)break;r.returnLogEntry=e.bool();continue;case 14:if(a!==112)break;r.isPrefetch=e.bool();continue;case 15:if(a!==122)break;r.internalExperimentFlags.push(Ri.decode(e,e.uint32()));continue;case 16:if(a!==128)break;r.returnDebugData=e.bool();continue;case 18:if(a!==146)break;r.innertubez=e.string();continue;case 23:if(a!==184)break;r.traceProto=e.bool();continue;case 24:if(a!==192)break;r.returnLogEntryJson=e.bool();continue;case 25:if(a!==202)break;r.sherlogUsername=e.string();continue;case 29:if(a!==234)break;r.reauthRequestInfo=IP.decode(e,e.uint32());continue;case 30:if(a!==242)break;r.sessionInfo=vP.decode(e,e.uint32());continue;case 31:if(a!==248)break;r.returnLogEntryProto=e.bool();continue;case 32:if(a!==258)break;r.externalPrequestContext=e.string();continue;case 34:if(a!==274)break;r.attestationResponseData=NC.decode(e,e.uint32());continue;case 35:if(a!==282)break;r.eats=e.bytes();continue;case 36:if(a!==290)break;r.requestQos=TP.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function SD(){return {criticality:void 0}}s(SD,"createBaseRequestInfo_RequestQoS");var TP={encode(n,t=new C){return n.criticality!==void 0&&t.uint32(8).int32(n.criticality),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=SD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.criticality=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function ED(){return {token:void 0}}s(ED,"createBaseRequestInfo_SessionInfo");var vP={encode(n,t=new C){return n.token!==void 0&&t.uint32(10).string(n.token),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=ED();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.token=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function CD(){return {encodedReauthProofToken:void 0}}s(CD,"createBaseRequestInfo_ReauthRequestInfo");var IP={encode(n,t=new C){return n.encodedReauthProofToken!==void 0&&t.uint32(10).string(n.encodedReauthProofToken),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=CD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.encodedReauthProofToken=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function ND(){return {developerKey:void 0,appName:void 0,appPublisher:void 0,embedUrl:void 0,appVersion:void 0,embeddedPlayerContext:void 0}}s(ND,"createBaseThirdPartyInfo");var PC={encode(n,t=new C){return n.developerKey!==void 0&&t.uint32(10).string(n.developerKey),n.appName!==void 0&&t.uint32(18).string(n.appName),n.appPublisher!==void 0&&t.uint32(26).string(n.appPublisher),n.embedUrl!==void 0&&t.uint32(34).string(n.embedUrl),n.appVersion!==void 0&&t.uint32(50).string(n.appVersion),n.embeddedPlayerContext!==void 0&&kP.encode(n.embeddedPlayerContext,t.uint32(58).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=ND();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.developerKey=e.string();continue;case 2:if(a!==18)break;r.appName=e.string();continue;case 3:if(a!==26)break;r.appPublisher=e.string();continue;case 4:if(a!==34)break;r.embedUrl=e.string();continue;case 6:if(a!==50)break;r.appVersion=e.string();continue;case 7:if(a!==58)break;r.embeddedPlayerContext=kP.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function RD(){return {ancestorOrigins:void 0,embeddedPlayerEncryptedContext:void 0,ancestorOriginsSupported:void 0}}s(RD,"createBaseThirdPartyInfo_EmbeddedPlayerContext");var kP={encode(n,t=new C){return n.ancestorOrigins!==void 0&&t.uint32(10).string(n.ancestorOrigins),n.embeddedPlayerEncryptedContext!==void 0&&t.uint32(18).string(n.embeddedPlayerEncryptedContext),n.ancestorOriginsSupported!==void 0&&t.uint32(24).bool(n.ancestorOriginsSupported),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=RD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.ancestorOrigins=e.string();continue;case 2:if(a!==18)break;r.embeddedPlayerEncryptedContext=e.string();continue;case 3:if(a!==24)break;r.ancestorOriginsSupported=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function PD(){return {onBehalfOfUser:void 0,enableSafetyMode:void 0,credentialTransferTokens:[],delegatePurchases:void 0,kidsParent:void 0,isIncognito:void 0,lockedSafetyMode:void 0,delegationContext:void 0,serializedDelegationContext:void 0}}s(PD,"createBaseUserInfo");var AC={encode(n,t=new C){n.onBehalfOfUser!==void 0&&t.uint32(26).string(n.onBehalfOfUser),n.enableSafetyMode!==void 0&&t.uint32(56).bool(n.enableSafetyMode);for(let e of n.credentialTransferTokens)NP.encode(e,t.uint32(98).fork()).join();return n.delegatePurchases!==void 0&&EP.encode(n.delegatePurchases,t.uint32(106).fork()).join(),n.kidsParent!==void 0&&SP.encode(n.kidsParent,t.uint32(114).fork()).join(),n.isIncognito!==void 0&&t.uint32(120).bool(n.isIncognito),n.lockedSafetyMode!==void 0&&t.uint32(128).bool(n.lockedSafetyMode),n.delegationContext!==void 0&&CP.encode(n.delegationContext,t.uint32(138).fork()).join(),n.serializedDelegationContext!==void 0&&t.uint32(146).string(n.serializedDelegationContext),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=PD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 3:if(a!==26)break;r.onBehalfOfUser=e.string();continue;case 7:if(a!==56)break;r.enableSafetyMode=e.bool();continue;case 12:if(a!==98)break;r.credentialTransferTokens.push(NP.decode(e,e.uint32()));continue;case 13:if(a!==106)break;r.delegatePurchases=EP.decode(e,e.uint32());continue;case 14:if(a!==114)break;r.kidsParent=SP.decode(e,e.uint32());continue;case 15:if(a!==120)break;r.isIncognito=e.bool();continue;case 16:if(a!==128)break;r.lockedSafetyMode=e.bool();continue;case 17:if(a!==138)break;r.delegationContext=CP.decode(e,e.uint32());continue;case 18:if(a!==146)break;r.serializedDelegationContext=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function AD(){return {}}s(AD,"createBaseUserInfo_KidsParent");var SP={encode(n,t=new C){return t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=AD();for(;e.pos<o;){let a=e.uint32();if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function MD(){return {}}s(MD,"createBaseUserInfo_DelegatePurchases");var EP={encode(n,t=new C){return t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=MD();for(;e.pos<o;){let a=e.uint32();if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function DD(){return {}}s(DD,"createBaseUserInfo_DelegationContext");var CP={encode(n,t=new C){return t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=DD();for(;e.pos<o;){let a=e.uint32();if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function OD(){return {}}s(OD,"createBaseUserInfo_CredentialTransferToken");var NP={encode(n,t=new C){return t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=OD();for(;e.pos<o;){let a=e.uint32();if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function BD(){return {client:void 0,user:void 0,capabilities:void 0,request:void 0,clickTracking:void 0,thirdParty:void 0,remoteClient:void 0,adSignalsInfo:void 0,experimentalData:void 0,clientScreenNonce:void 0,activePlayers:[]}}s(BD,"createBaseInnerTubeContext");var MC={encode(n,t=new C){n.client!==void 0&&m_.encode(n.client,t.uint32(10).fork()).join(),n.user!==void 0&&AC.encode(n.user,t.uint32(26).fork()).join(),n.capabilities!==void 0&&CC.encode(n.capabilities,t.uint32(34).fork()).join(),n.request!==void 0&&RC.encode(n.request,t.uint32(42).fork()).join(),n.clickTracking!==void 0&&AP.encode(n.clickTracking,t.uint32(50).fork()).join(),n.thirdParty!==void 0&&PC.encode(n.thirdParty,t.uint32(58).fork()).join(),n.remoteClient!==void 0&&m_.encode(n.remoteClient,t.uint32(66).fork()).join(),n.adSignalsInfo!==void 0&&MP.encode(n.adSignalsInfo,t.uint32(74).fork()).join(),n.experimentalData!==void 0&&RP.encode(n.experimentalData,t.uint32(82).fork()).join(),n.clientScreenNonce!==void 0&&t.uint32(90).string(n.clientScreenNonce);for(let e of n.activePlayers)PP.encode(e,t.uint32(98).fork()).join();return t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=BD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.client=m_.decode(e,e.uint32());continue;case 3:if(a!==26)break;r.user=AC.decode(e,e.uint32());continue;case 4:if(a!==34)break;r.capabilities=CC.decode(e,e.uint32());continue;case 5:if(a!==42)break;r.request=RC.decode(e,e.uint32());continue;case 6:if(a!==50)break;r.clickTracking=AP.decode(e,e.uint32());continue;case 7:if(a!==58)break;r.thirdParty=PC.decode(e,e.uint32());continue;case 8:if(a!==66)break;r.remoteClient=m_.decode(e,e.uint32());continue;case 9:if(a!==74)break;r.adSignalsInfo=MP.decode(e,e.uint32());continue;case 10:if(a!==82)break;r.experimentalData=RP.decode(e,e.uint32());continue;case 11:if(a!==90)break;r.clientScreenNonce=e.string();continue;case 12:if(a!==98)break;r.activePlayers.push(PP.decode(e,e.uint32()));continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function LD(){return {params:[]}}s(LD,"createBaseInnerTubeContext_ExperimentalData");var RP={encode(n,t=new C){for(let e of n.params)Ri.encode(e,t.uint32(10).fork()).join();return t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=LD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.params.push(Ri.decode(e,e.uint32()));continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function UD(){return {playerContextParams:void 0}}s(UD,"createBaseInnerTubeContext_ActivePlayerInfo");var PP={encode(n,t=new C){return n.playerContextParams!==void 0&&t.uint32(10).bytes(n.playerContextParams),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=UD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.playerContextParams=e.bytes();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function YD(){return {clickTrackingParams:void 0}}s(YD,"createBaseInnerTubeContext_ClickTrackingInfo");var AP={encode(n,t=new C){return n.clickTrackingParams!==void 0&&t.uint32(18).bytes(n.clickTrackingParams),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=YD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 2:if(a!==18)break;r.clickTrackingParams=e.bytes();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function VD(){return {params:[],bid:void 0,mutsuId:void 0,consentBumpState:void 0,advertisingId:void 0,limitAdTracking:void 0,attributionOsSupportedVersion:void 0}}s(VD,"createBaseInnerTubeContext_AdSignalsInfo");var MP={encode(n,t=new C){for(let e of n.params)Ri.encode(e,t.uint32(10).fork()).join();return n.bid!==void 0&&t.uint32(18).string(n.bid),n.mutsuId!==void 0&&t.uint32(26).string(n.mutsuId),n.consentBumpState!==void 0&&t.uint32(34).string(n.consentBumpState),n.advertisingId!==void 0&&t.uint32(58).string(n.advertisingId),n.limitAdTracking!==void 0&&t.uint32(72).bool(n.limitAdTracking),n.attributionOsSupportedVersion!==void 0&&t.uint32(82).string(n.attributionOsSupportedVersion),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=VD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.params.push(Ri.decode(e,e.uint32()));continue;case 2:if(a!==18)break;r.bid=e.string();continue;case 3:if(a!==26)break;r.mutsuId=e.string();continue;case 4:if(a!==34)break;r.consentBumpState=e.string();continue;case 7:if(a!==58)break;r.advertisingId=e.string();continue;case 9:if(a!==72)break;r.limitAdTracking=e.bool();continue;case 10:if(a!==82)break;r.attributionOsSupportedVersion=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function FD(){return {context:void 0,encryptedVideoId:void 0,title:void 0,description:void 0,privacy:void 0,tags:void 0,category:void 0,license:void 0,ageRestriction:void 0,videoStill:void 0,madeForKids:void 0,racy:void 0}}s(FD,"createBaseMetadataUpdateRequest");var HP={encode(n,t=new C){return n.context!==void 0&&MC.encode(n.context,t.uint32(10).fork()).join(),n.encryptedVideoId!==void 0&&t.uint32(18).string(n.encryptedVideoId),n.title!==void 0&&DP.encode(n.title,t.uint32(26).fork()).join(),n.description!==void 0&&OP.encode(n.description,t.uint32(34).fork()).join(),n.privacy!==void 0&&BP.encode(n.privacy,t.uint32(42).fork()).join(),n.tags!==void 0&&LP.encode(n.tags,t.uint32(50).fork()).join(),n.category!==void 0&&UP.encode(n.category,t.uint32(58).fork()).join(),n.license!==void 0&&YP.encode(n.license,t.uint32(66).fork()).join(),n.ageRestriction!==void 0&&jP.encode(n.ageRestriction,t.uint32(90).fork()).join(),n.videoStill!==void 0&&GP.encode(n.videoStill,t.uint32(162).fork()).join(),n.madeForKids!==void 0&&VP.encode(n.madeForKids,t.uint32(546).fork()).join(),n.racy!==void 0&&FP.encode(n.racy,t.uint32(554).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=FD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.context=MC.decode(e,e.uint32());continue;case 2:if(a!==18)break;r.encryptedVideoId=e.string();continue;case 3:if(a!==26)break;r.title=DP.decode(e,e.uint32());continue;case 4:if(a!==34)break;r.description=OP.decode(e,e.uint32());continue;case 5:if(a!==42)break;r.privacy=BP.decode(e,e.uint32());continue;case 6:if(a!==50)break;r.tags=LP.decode(e,e.uint32());continue;case 7:if(a!==58)break;r.category=UP.decode(e,e.uint32());continue;case 8:if(a!==66)break;r.license=YP.decode(e,e.uint32());continue;case 11:if(a!==90)break;r.ageRestriction=jP.decode(e,e.uint32());continue;case 20:if(a!==162)break;r.videoStill=GP.decode(e,e.uint32());continue;case 68:if(a!==546)break;r.madeForKids=VP.decode(e,e.uint32());continue;case 69:if(a!==554)break;r.racy=FP.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function jD(){return {newTitle:void 0}}s(jD,"createBaseMetadataUpdateRequest_MdeTitleUpdateRequest");var DP={encode(n,t=new C){return n.newTitle!==void 0&&t.uint32(10).string(n.newTitle),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=jD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.newTitle=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function GD(){return {newDescription:void 0}}s(GD,"createBaseMetadataUpdateRequest_MdeDescriptionUpdateRequest");var OP={encode(n,t=new C){return n.newDescription!==void 0&&t.uint32(10).string(n.newDescription),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=GD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.newDescription=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function WD(){return {newPrivacy:void 0,clearPrivacyDraft:void 0}}s(WD,"createBaseMetadataUpdateRequest_MdePrivacyUpdateRequest");var BP={encode(n,t=new C){return n.newPrivacy!==void 0&&t.uint32(8).int32(n.newPrivacy),n.clearPrivacyDraft!==void 0&&t.uint32(16).bool(n.clearPrivacyDraft),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=WD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.newPrivacy=e.int32();continue;case 2:if(a!==16)break;r.clearPrivacyDraft=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function HD(){return {newTags:[]}}s(HD,"createBaseMetadataUpdateRequest_MdeTagsUpdateRequest");var LP={encode(n,t=new C){for(let e of n.newTags)t.uint32(10).string(e);return t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=HD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.newTags.push(e.string());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function KD(){return {newCategoryId:void 0}}s(KD,"createBaseMetadataUpdateRequest_MdeCategoryUpdateRequest");var UP={encode(n,t=new C){return n.newCategoryId!==void 0&&t.uint32(8).int32(n.newCategoryId),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=KD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.newCategoryId=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function qD(){return {newLicenseId:void 0}}s(qD,"createBaseMetadataUpdateRequest_MdeLicenseUpdateRequest");var YP={encode(n,t=new C){return n.newLicenseId!==void 0&&t.uint32(10).string(n.newLicenseId),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=qD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.newLicenseId=e.string();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function $D(){return {operation:void 0,newMfk:void 0}}s($D,"createBaseMetadataUpdateRequest_MdeMadeForKidsUpdateRequestParams");var VP={encode(n,t=new C){return n.operation!==void 0&&t.uint32(8).int32(n.operation),n.newMfk!==void 0&&t.uint32(16).int32(n.newMfk),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=$D();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.operation=e.int32();continue;case 2:if(a!==16)break;r.newMfk=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function zD(){return {operation:void 0,newRacy:void 0}}s(zD,"createBaseMetadataUpdateRequest_MdeRacyRequestParams");var FP={encode(n,t=new C){return n.operation!==void 0&&t.uint32(8).int32(n.operation),n.newRacy!==void 0&&t.uint32(16).int32(n.newRacy),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=zD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.operation=e.int32();continue;case 2:if(a!==16)break;r.newRacy=e.int32();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function JD(){return {newIsAgeRestricted:void 0}}s(JD,"createBaseMetadataUpdateRequest_MdeAgeRestrictionUpdateRequest");var jP={encode(n,t=new C){return n.newIsAgeRestricted!==void 0&&t.uint32(8).bool(n.newIsAgeRestricted),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=JD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.newIsAgeRestricted=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function XD(){return {operation:void 0,newStillId:void 0,image:void 0,testImage:void 0,experimentImage:[]}}s(XD,"createBaseMetadataUpdateRequest_MdeVideoStillRequestParams");var GP={encode(n,t=new C){n.operation!==void 0&&t.uint32(8).int32(n.operation),n.newStillId!==void 0&&t.uint32(16).int32(n.newStillId),n.image!==void 0&&Ql.encode(n.image,t.uint32(26).fork()).join(),n.testImage!==void 0&&Ql.encode(n.testImage,t.uint32(34).fork()).join();for(let e of n.experimentImage)WP.encode(e,t.uint32(50).fork()).join();return t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=XD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==8)break;r.operation=e.int32();continue;case 2:if(a!==16)break;r.newStillId=e.int32();continue;case 3:if(a!==26)break;r.image=Ql.decode(e,e.uint32());continue;case 4:if(a!==34)break;r.testImage=Ql.decode(e,e.uint32());continue;case 6:if(a!==50)break;r.experimentImage.push(WP.decode(e,e.uint32()));continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function ZD(){return {image:void 0}}s(ZD,"createBaseMetadataUpdateRequest_MdeVideoStillRequestParams_ThumbnailExperimentImageData");var WP={encode(n,t=new C){return n.image!==void 0&&Ql.encode(n.image,t.uint32(10).fork()).join(),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=ZD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.image=Ql.decode(e,e.uint32());continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function QD(){return {rawBytes:void 0,dataUri:void 0,frameTimestampUs:void 0,isVertical:void 0}}s(QD,"createBaseMetadataUpdateRequest_MdeVideoStillRequestParams_CustomThumbnailImage");var Ql={encode(n,t=new C){return n.rawBytes!==void 0&&t.uint32(10).bytes(n.rawBytes),n.dataUri!==void 0&&t.uint32(18).string(n.dataUri),n.frameTimestampUs!==void 0&&t.uint32(32).int64(n.frameTimestampUs),n.isVertical!==void 0&&t.uint32(40).bool(n.isVertical),t},decode(n,t){let e=n instanceof T?n:new T(n),o=t===void 0?e.len:e.pos+t,r=QD();for(;e.pos<o;){let a=e.uint32();switch(a>>>3){case 1:if(a!==10)break;r.rawBytes=e.bytes();continue;case 2:if(a!==18)break;r.dataUri=e.string();continue;case 4:if(a!==32)break;r.frameTimestampUs=eO(e.int64());continue;case 5:if(a!==40)break;r.isVertical=e.bool();continue}if((a&7)===4||a===0)break;e.skip(a&7);}return r}};function eO(n){let t=globalThis.Number(n.toString());if(t>globalThis.Number.MAX_SAFE_INTEGER)throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");if(t<globalThis.Number.MIN_SAFE_INTEGER)throw new globalThis.Error("Value is smaller than Number.MIN_SAFE_INTEGER");return t}s(eO,"longToNumber");var co,Zo,KP,qP,$P,DC=class DC{constructor(t){g(this,Zo);g(this,co);w(this,co,t);}async updateVideoMetadata(t,e){let o=p(this,co);if(!o.logged_in)throw new _("You must be signed in to perform this operation.");let r={context:{client:{osName:"Android",clientName:parseInt(H.CLIENT_NAME_IDS.ANDROID),clientVersion:H.CLIENTS.ANDROID.VERSION,androidSdkVersion:H.CLIENTS.ANDROID.SDK_VERSION,visitorData:o.context.client.visitorData,osVersion:"13",acceptLanguage:o.context.client.hl,acceptRegion:o.context.client.gl,deviceMake:"Google",deviceModel:"sdk_gphone64_x86_64",screenHeightPoints:840,screenWidthPoints:432,configInfo:{appInstallData:o.context.client.configInfo?.appInstallData},timeZone:o.context.client.timeZone,chipset:"qcom;taro"},activePlayers:[]},encryptedVideoId:t};if(e.title&&(r.title={newTitle:e.title}),e.description&&(r.description={newDescription:e.description}),e.license&&(r.license={newLicenseId:e.license}),e.tags&&(r.tags={newTags:e.tags}),e.thumbnail&&(r.videoStill={operation:3,image:{rawBytes:e.thumbnail},experimentImage:[]}),Reflect.has(e,"category")&&(r.category={newCategoryId:e.category}),Reflect.has(e,"privacy"))switch(e.privacy){case "PUBLIC":r.privacy={newPrivacy:1};break;case "UNLISTED":r.privacy={newPrivacy:2};break;case "PRIVATE":r.privacy={newPrivacy:3};break;default:throw new Error("Invalid privacy setting")}Reflect.has(e,"made_for_kids")&&(r.madeForKids={operation:1,newMfk:e.made_for_kids?1:2}),Reflect.has(e,"age_restricted")&&(r.racy={operation:1,newRacy:e.age_restricted?1:2});let a=HP.encode(r);return await o.actions.execute("/video_manager/metadata_update",{protobuf:true,serialized_data:a.finish()})}async upload(t,e={}){if(!p(this,co).logged_in)throw new _("You must be signed in to perform this operation.");let o=await N(this,Zo,KP).call(this),r=await N(this,Zo,qP).call(this,o.upload_url,t);if(r.status!=="STATUS_SUCCESS")throw new _("Could not process video.");return await N(this,Zo,$P).call(this,o,r,e)}};co=new WeakMap,Zo=new WeakSet,KP=s(async function(){let t=`innertube_android:${W.shim.uuidv4()}:0:v=3,api=1,cf=3`,e={frontendUploadId:t,deviceDisplayName:"Pixel 6 Pro",fileId:`goog-edited-video://generated?videoFileUri=content://media/external/video/media/${W.shim.uuidv4()}`,mp4MoovAtomRelocationStatus:"UNSUPPORTED",transcodeResult:"DISABLED",connectionType:"WIFI"},o=await p(this,co).http.fetch("/upload/youtubei",{baseURL:H.URLS.YT_UPLOAD,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","x-goog-upload-command":"start","x-goog-upload-protocol":"resumable"},body:JSON.stringify(e)});if(!o.ok)throw new _("Could not get initial upload data");return {frontend_upload_id:t,upload_id:o.headers.get("x-guploader-uploadid"),upload_url:o.headers.get("x-goog-upload-url"),scotty_resource_id:o.headers.get("x-goog-upload-header-scotty-resource-id"),chunk_granularity:o.headers.get("x-goog-upload-chunk-granularity")}},"#getInitialUploadData"),qP=s(async function(t,e){let o=await p(this,co).http.fetch_function(t,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","x-goog-upload-command":"upload, finalize","x-goog-upload-file-name":`file-${Date.now()}`,"x-goog-upload-offset":"0"},body:e});if(!o.ok)throw new _("Could not upload video");return await o.json()},"#uploadVideo"),$P=s(async function(t,e,o){return await p(this,co).actions.execute("/upload/createvideo",{resourceId:{scottyResourceId:{id:e.scottyResourceId}},frontendUploadId:t.frontend_upload_id,initialMetadata:{title:{newTitle:o.title},description:{newDescription:o.description,shouldSegment:true},privacy:{newPrivacy:o.privacy||"PRIVATE"},draftState:{isDraft:!!o.is_draft}}})},"#setVideoMetadata"),s(DC,"Studio");var el=DC;var JP={};Te(JP,{AccountManager:()=>tl,InteractionManager:()=>nl,PlaylistManager:()=>il});var Gi,OC=class OC{constructor(t){g(this,Gi);w(this,Gi,t);}async getInfo(t=false){if(!p(this,Gi).session.logged_in)throw new _("You must be signed in to perform this operation.");if(!t&&p(this,Gi).session.context.user.onBehalfOfUser)throw new _('Boolean argument must be true when "on_behalf_of_user" is specified.');if(t)return (await new d({getAccountsListInnertubeEndpoint:{requestType:"ACCOUNTS_LIST_REQUEST_TYPE_CHANNEL_SWITCHER",callCircumstance:"SWITCHING_USERS_FULL"}}).call(p(this,Gi),{client:"WEB",parse:true})).actions_memo?.getType(Zi)||[];let o=await new d({getAccountsListInnertubeEndpoint:{}}).call(p(this,Gi),{client:"TV"});return new pu(o)}async getSettings(){let e=await new d({browseEndpoint:{browseId:"SPaccount_overview"}}).call(p(this,Gi));return new Nu(p(this,Gi),e)}};Gi=new WeakMap,s(OC,"AccountManager");var tl=OC;var fe,h_,BC,LC=class LC{constructor(t){g(this,h_);g(this,fe);w(this,fe,t);}async create(t,e){if(X({title:t,video_ids:e}),!p(this,fe).session.logged_in)throw new _("You must be signed in to perform this operation.");let r=await new d({createPlaylistServiceEndpoint:{title:t,videoIds:e}}).call(p(this,fe));return {success:r.success,status_code:r.status_code,playlist_id:r.data.playlistId,data:r.data}}async delete(t){if(X({playlist_id:t}),!p(this,fe).session.logged_in)throw new _("You must be signed in to perform this operation.");let o=await new d({deletePlaylistServiceEndpoint:{sourcePlaylistId:t}}).call(p(this,fe));return {playlist_id:t,success:o.success,status_code:o.status_code,data:o.data}}async addToLibrary(t){if(X({playlist_id:t}),!p(this,fe).session.logged_in)throw new _("You must be signed in to perform this operation.");return await new d({likeEndpoint:{status:"LIKE",target:t}}).call(p(this,fe))}async removeFromLibrary(t){if(X({playlist_id:t}),!p(this,fe).session.logged_in)throw new _("You must be signed in to perform this operation.");return await new d({likeEndpoint:{status:"INDIFFERENT",target:t}}).call(p(this,fe))}async addVideos(t,e){if(X({playlist_id:t,video_ids:e}),!p(this,fe).session.logged_in)throw new _("You must be signed in to perform this operation.");let r=await new d({playlistEditEndpoint:{playlistId:t,actions:e.map(a=>({action:"ACTION_ADD_VIDEO",addedVideoId:a}))}}).call(p(this,fe));return {playlist_id:t,action_result:r.data.actions}}async removeVideos(t,e,o=false){if(X({playlist_id:t,video_ids:e}),!p(this,fe).session.logged_in)throw new _("You must be signed in to perform this operation.");let r=await N(this,h_,BC).call(this,t);if(!r.info.is_editable)throw new _("This playlist cannot be edited.",t);let a={playlistId:t,actions:[]},f=s(async x=>{let I=o?"set_video_id":"id";if(x.videos.filter(S=>e.includes(S.key(I).string())).forEach(S=>a.actions.push({action:"ACTION_REMOVE_VIDEO",setVideoId:S.key("set_video_id").string()})),a.actions.length<e.length){let S=await x.getContinuation();return f(S)}},"getSetVideoIds");if(await f(r),!a.actions.length)throw new _("Given video ids were not found in this playlist.",e);let b=await new d({playlistEditEndpoint:a}).call(p(this,fe));return {playlist_id:t,action_result:b.data.actions}}async moveVideo(t,e,o){if(X({playlist_id:t,moved_video_id:e,predecessor_video_id:o}),!p(this,fe).session.logged_in)throw new _("You must be signed in to perform this operation.");let r=await N(this,h_,BC).call(this,t);if(!r.info.is_editable)throw new _("This playlist cannot be edited.",t);let a={playlistId:t,actions:[]},f,m,b=s(async k=>{let S=k.videos.find(R=>e===R.key("id").string()),P=k.videos.find(R=>o===R.key("id").string());if(f=f||S?.key("set_video_id").string(),m=m||P?.key("set_video_id").string(),!f||!m){let R=await k.getContinuation();return b(R)}},"getSetVideoIds");await b(r),a.actions.push({action:"ACTION_MOVE_VIDEO_AFTER",setVideoId:f,movedSetVideoIdPredecessor:m});let I=await new d({playlistEditEndpoint:a}).call(p(this,fe));return {playlist_id:t,action_result:I.data.actions}}async setName(t,e){if(X({playlist_id:t,name:e}),!p(this,fe).session.logged_in)throw new _("You must be signed in to perform this operation.");let o={playlist_id:t,actions:[]};o.actions.push({action:"ACTION_SET_PLAYLIST_NAME",playlistName:e});let a=await new d({playlistEditEndpoint:o}).call(p(this,fe));return {playlist_id:t,action_result:a.data.actions}}async setDescription(t,e){if(X({playlist_id:t,description:e}),!p(this,fe).session.logged_in)throw new _("You must be signed in to perform this operation.");let o={playlistId:t,actions:[]};o.actions.push({action:"ACTION_SET_PLAYLIST_DESCRIPTION",playlistDescription:e});let a=await new d({playlistEditEndpoint:o}).call(p(this,fe));return {playlist_id:t,action_result:a.data.actions}}};fe=new WeakMap,h_=new WeakSet,BC=s(async function(t){t.startsWith("VL")||(t=`VL${t}`);let o=await new d({browseEndpoint:{browseId:t}}).call(p(this,fe),{parse:true});return new ci(p(this,fe),o,true)},"#getPlaylist"),s(LC,"PlaylistManager");var il=LC;var Ae,UC=class UC{constructor(t){g(this,Ae);w(this,Ae,t);}async like(t){if(X({video_id:t}),!p(this,Ae).session.logged_in)throw new Error("You must be signed in to perform this operation.");return new d({likeEndpoint:{status:"LIKE",target:t}}).call(p(this,Ae),{client:"TV"})}async dislike(t){if(X({video_id:t}),!p(this,Ae).session.logged_in)throw new Error("You must be signed in to perform this operation.");return new d({likeEndpoint:{status:"DISLIKE",target:t}}).call(p(this,Ae),{client:"TV"})}async removeRating(t){if(X({video_id:t}),!p(this,Ae).session.logged_in)throw new Error("You must be signed in to perform this operation.");return new d({likeEndpoint:{status:"INDIFFERENT",target:t}}).call(p(this,Ae),{client:"TV"})}async subscribe(t){if(X({channel_id:t}),!p(this,Ae).session.logged_in)throw new Error("You must be signed in to perform this operation.");return new d({subscribeEndpoint:{channelIds:[t],params:"EgIIAhgA"}}).call(p(this,Ae))}async unsubscribe(t){if(X({channel_id:t}),!p(this,Ae).session.logged_in)throw new Error("You must be signed in to perform this operation.");return new d({unsubscribeEndpoint:{channelIds:[t],params:"CgIIAhgA"}}).call(p(this,Ae))}async comment(t,e){if(X({video_id:t,text:e}),!p(this,Ae).session.logged_in)throw new Error("You must be signed in to perform this operation.");let o=eR.encode({videoId:t,params:{index:0},number:7}),r=encodeURIComponent(Ie(o.finish()));return new d({createCommentEndpoint:{commentText:e,createCommentParams:r}}).call(p(this,Ae))}async translate(t,e,o={}){X({text:t,target_language:e});let r=Hp(22,{text:t,target_language:e,...o}),f=await new d({performCommentActionEndpoint:{action:r}}).call(p(this,Ae)),m=f.data.frameworkUpdates.entityBatchUpdate.mutations[0].payload.commentEntityPayload;return {success:f.success,status_code:f.status_code,translated_content:m.translatedContent.content,data:f.data}}async setNotificationPreferences(t,e){if(X({channel_id:t,type:e}),!p(this,Ae).session.logged_in)throw new Error("You must be signed in to perform this operation.");let o={PERSONALIZED:1,ALL:2,NONE:3};if(!Object.keys(o).includes(e.toUpperCase()))throw new Error(`Invalid notification preference type: ${e}`);let r=X2.encode({channelId:t,prefId:{index:o[e.toUpperCase()]},number0:0,number1:4}),a=encodeURIComponent(Ie(r.finish()));return new d({modifyChannelNotificationPreferenceEndpoint:{params:a}}).call(p(this,Ae))}};Ae=new WeakMap,s(UC,"InteractionManager");var nl=UC;var ie,WS=class WS{constructor(t){g(this,ie);w(this,ie,t);}static async create(t={}){return new WS(await Zl.create(t))}async getInfo(t,e){X({target:t});let o={videoId:t instanceof d?t.payload?.videoId:t,playlistId:t instanceof d?t.payload?.playlistId:void 0,playlistIndex:t instanceof d?t.payload?.playlistIndex:void 0,params:t instanceof d?t.payload?.params:void 0,racyCheckOk:true,contentCheckOk:true},r=new d({watchEndpoint:o}),a=new d({watchNextEndpoint:o}),f=p(this,ie),m={playbackContext:{contentPlaybackContext:{vis:0,splay:false,lactMilliseconds:"-1",signatureTimestamp:f.player?.sts}},client:e?.client};e?.po_token?m.serviceIntegrityDimensions={poToken:e.po_token}:f.po_token&&(m.serviceIntegrityDimensions={poToken:f.po_token});let b=r.call(f.actions,m),x=a.call(f.actions),I=await Promise.all([b,x]),k=vt(16);return new Ko(I,f.actions,k)}async getBasicInfo(t,e){X({video_id:t});let o=new d({watchEndpoint:{videoId:t,racyCheckOk:true,contentCheckOk:true}}),r=p(this,ie),a={playbackContext:{contentPlaybackContext:{vis:0,splay:false,lactMilliseconds:"-1",signatureTimestamp:r.player?.sts}},client:e?.client};e?.po_token?a.serviceIntegrityDimensions={poToken:e.po_token}:r.po_token&&(a.serviceIntegrityDimensions={poToken:r.po_token});let f=await o.call(r.actions,a),m=vt(16);return new Ko([f],r.actions,m)}async getShortsVideoInfo(t,e){X({video_id:t});let o=new d({reelWatchEndpoint:{disablePlayerResponse:false,params:"CAUwAg%3D%3D",videoId:t}}),r=p(this,ie).actions,a=o.call(r,{client:e}),f=nR.encode({shortId:t,params:{number:5},feature2:25,feature3:0}),m=encodeURIComponent(Ie(f.finish())),b=r.execute("/reel/reel_watch_sequence",{sequenceParams:m}),x=await Promise.all([a,b]),I=vt(16);return new zu([x[0]],r,I,x[1])}async search(t,e={}){X({query:t});let o={};if(o.filters={},e.sort_by&&(o.sortBy=q2[e.sort_by.toUpperCase()]),e.upload_date&&(o.filters.uploadDate=$2[e.upload_date.toUpperCase()]),e.type&&(o.filters.type=z2[e.type.toUpperCase()]),e.duration&&(o.filters.duration=J2[e.duration.toUpperCase()]),e.features)for(let f of e.features)switch(f){case "360":o.filters.features360=true;break;case "3d":o.filters.features3d=true;break;case "4k":o.filters.features4k=true;break;case "creative_commons":o.filters.featuresCreativeCommons=true;break;case "hd":o.filters.featuresHd=true;break;case "hdr":o.filters.featuresHdr=true;break;case "live":o.filters.featuresLive=true;break;case "location":o.filters.featuresLocation=true;break;case "purchased":o.filters.featuresPurchased=true;break;case "subtitles":o.filters.featuresSubtitles=true;break;case "vr180":o.filters.featuresVr180=true;break;}let a=await new d({searchEndpoint:{query:t,params:e?encodeURIComponent(Ie($_.encode(o).finish())):void 0}}).call(p(this,ie).actions);return new Cu(this.actions,a)}async getSearchSuggestions(t,e){let o=p(this,ie),r=new URL(`${ve.YT_SUGGESTIONS}/complete/search`);r.searchParams.set("client","youtube"),r.searchParams.set("gs_ri","youtube"),r.searchParams.set("gs_id","0"),r.searchParams.set("cp","0"),r.searchParams.set("ds","yt"),r.searchParams.set("sugexp",F.WEB.SUGG_EXP_ID),r.searchParams.set("hl",o.context.client.hl),r.searchParams.set("gl",o.context.client.gl),r.searchParams.set("q",t),e&&r.searchParams.set("pq",e);let f=await(await o.http.fetch_function(r,{headers:{Cookie:o.cookie||""}})).text();return JSON.parse(f.replace("window.google.ac.h(","").slice(0,-1))[1].map(b=>b[0])}async getComments(t,e,o){X({video_id:t});let r={TOP_COMMENTS:0,NEWEST_FIRST:1},a=Q2.encode({ctx:{videoId:t},unkParam:6,params:{opts:{videoId:t,sortBy:r[e||"TOP_COMMENTS"],type:2,commentId:o||""},target:"comments-section"}}),f=encodeURIComponent(Ie(a.finish())),b=await new d({continuationCommand:{request:"CONTINUATION_REQUEST_TYPE_WATCH_NEXT",token:f}}).call(p(this,ie).actions);return new jo(this.actions,b.data)}async getHomeFeed(){let e=await new d({browseEndpoint:{browseId:"FEwhat_to_watch"}}).call(p(this,ie).actions);return new gu(this.actions,e)}async getGuide(){let t=await this.actions.execute("/guide");return new xu(t.data)}async getLibrary(){let e=await new d({browseEndpoint:{browseId:"FElibrary"}}).call(p(this,ie).actions);return new vu(this.actions,e)}async getHistory(){let e=await new d({browseEndpoint:{browseId:"FEhistory"}}).call(p(this,ie).actions);return new Qn(this.actions,e)}async getTrending(){let e=await new d({browseEndpoint:{browseId:"FEtrending"}}).call(p(this,ie).actions);return new Di(this.actions,e)}async getCourses(){let e=await new d({browseEndpoint:{browseId:"FEcourses_destination"}}).call(p(this,ie).actions,{parse:true});return new te(this.actions,e)}async getSubscriptionsFeed(){let e=await new d({browseEndpoint:{browseId:"FEsubscriptions"}}).call(p(this,ie).actions,{parse:true});return new te(this.actions,e)}async getChannelsFeed(){let e=await new d({browseEndpoint:{browseId:"FEchannels"}}).call(p(this,ie).actions,{parse:true});return new te(this.actions,e)}async getChannel(t){X({id:t});let o=await new d({browseEndpoint:{browseId:t}}).call(p(this,ie).actions,{parse:true});return o.on_response_received_actions?.[0].is(Oo)&&(o=await o.on_response_received_actions[0].endpoint.call(p(this,ie).actions,{parse:true})),new hu(this.actions,o,true)}async getNotifications(){let t=await this.actions.execute("/notification/get_notification_menu",{notificationsMenuRequestType:"NOTIFICATIONS_MENU_REQUEST_TYPE_INBOX"});return new Eu(this.actions,t)}async getUnseenNotificationsCount(){let t=await this.actions.execute("/notification/get_unseen_count");return t.data?.unseenCount||t.data?.actions?.[0].updateNotificationsUnseenCountAction?.unseenCount||0}async getPlaylists(){let e=await new d({browseEndpoint:{browseId:"FEplaylist_aggregation"}}).call(p(this,ie).actions,{parse:true});return new te(this.actions,e)}async getPlaylist(t){X({id:t}),t.startsWith("VL")||(t=`VL${t}`);let o=await new d({browseEndpoint:{browseId:t}}).call(p(this,ie).actions);return new ci(this.actions,o)}async getHashtag(t){X({hashtag:t});let e=iR.encode({params:{hashtag:t,type:1}}),o=encodeURIComponent(Ie(e.finish())),a=await new d({browseEndpoint:{browseId:"FEhashtag",params:o}}).call(p(this,ie).actions);return new wu(this.actions,a)}async getStreamingData(t,e={}){let r=(await this.getBasicInfo(t,e)).chooseFormat(e);return r.url=r.decipher(p(this,ie).player),r}async download(t,e){return (await this.getBasicInfo(t,e)).download(e)}async resolveURL(t){let e=await this.actions.execute("/navigation/resolve_url",{url:t,parse:true});if(!e.endpoint)throw new _("Failed to resolve URL. Expected a NavigationEndpoint but got undefined",e);return e.endpoint}async getPost(t,e){X({post_id:t,channel_id:e});let o=sR.encode({f1:{ucid1:e,postId:t,ucid2:e}}),r=encodeURIComponent(Ie(o.finish()).replace(/\+/g,"-").replace(/\//g,"_")),f=await new d({browseEndpoint:{browseId:"FEpost_detail",params:r}}).call(p(this,ie).actions,{parse:true});return new te(this.actions,f)}async getPostComments(t,e,o){X({post_id:t,channel_id:e});let r={TOP_COMMENTS:0,NEWEST_FIRST:1},a=aR.encode({title:"posts",commentDataContainer:{title:"comments-section",commentData:{sortBy:r[o||"TOP_COMMENTS"],f0:2,f1:0,channelId:e,postId:t},f0:0}}),f=rR.encode({f0:{location:"FEcomment_post_detail_page_web_top_level",protoData:encodeURIComponent(Ie(a.finish()).replace(/\+/g,"-").replace(/\//g,"_"))}}),m=encodeURIComponent(Ie(f.finish())),x=await new d({continuationCommand:{request:"CONTINUATION_REQUEST_TYPE_BROWSE",token:m}}).call(p(this,ie).actions);return new jo(this.actions,x.data)}async getAttestationChallenge(t,e){let o={engagementType:t};return e&&(o.ids=e),this.actions.execute("/att/get",{parse:true,...o})}call(t,e){return t.call(this.actions,e)}get music(){return new Qu(p(this,ie))}get studio(){return new el(p(this,ie))}get kids(){return new Zu(p(this,ie))}get account(){return new tl(p(this,ie).actions)}get playlist(){return new il(p(this,ie).actions)}get interact(){return new nl(p(this,ie).actions)}get actions(){return p(this,ie).actions}get session(){return p(this,ie)}};ie=new WeakMap,s(WS,"Innertube");var ep=WS;var XP=ep;var ZP="JsRuntime";function YC(n,t){Y.debug(ZP,`Evaluating JavaScript:
`,n);let e=new Gt;for(let[r,a]of Object.entries(t))e.scope.set(r,a);let o=e.evaluate(n);return Y.debug(ZP,"Done. Result:",o),o}s(YC,"evaluate");var __,b_,tp,HS,FC=class FC{constructor(t=false,e){g(this,tp);g(this,__);g(this,b_);w(this,__,e||""),w(this,b_,t);}get cache_dir(){return p(this,b_)?p(this,__):""}async get(t){return N(this,tp,HS).call(this).getBuffer(t)?.buffer}async set(t,e){N(this,tp,HS).call(this).set(t,new Uint8Array(e));}async remove(t){N(this,tp,HS).call(this).delete(t);}};__=new WeakMap,b_=new WeakMap,tp=new WeakSet,HS=s(function(){return new globalThis.mmkvStorage({id:"InnertubeCache"})},"#getStorage"),s(FC,"Cache");var VC=FC;W.load({runtime:"react-native",server:false,Cache:VC,sha1Hash:vC,uuidv4(){return globalThis.crypto?.randomUUID()?globalThis.crypto.randomUUID():"10000000-1000-4000-8000-100000000000".replace(/[018]/g,n=>{let t=parseInt(n);return (t^window.crypto.getRandomValues(new Uint8Array(1))[0]&15>>t/4).toString(16)})},eval:YC,fetch:globalThis.fetch,Request:globalThis.Request,Response:globalThis.Response,Headers:globalThis.Headers,FormData:globalThis.FormData,File:globalThis.File,ReadableStream:globalThis.ReadableStream,CustomEvent:globalThis.CustomEvent});var nHe=XP;

(undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};

(undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};

(undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};

// This file was generated. Do not modify manually!
var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];

// This file was generated. Do not modify manually!
var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];

// This file was generated. Do not modify manually!
var nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u0897-\u089f\u08ca-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3c\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0cf3\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ece\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u180f-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1abf-\u1ace\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1dff\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\u30fb\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f\uff65";

// This file was generated. Do not modify manually!
var nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u0870-\u0887\u0889-\u088e\u08a0-\u08c9\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c5d\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cdd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u1711\u171f-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4c\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c8a\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31bf\u31f0-\u31ff\u3400-\u4dbf\u4e00-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7cd\ua7d0\ua7d1\ua7d3\ua7d5-\ua7dc\ua7f2-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";

// These are a run-length and offset encoded representation of the
// >0xffff code points that are a valid part of identifiers. The
// offset starts at 0x10000, and each pair of numbers represents an
// offset to the next range, and then a size of the range.

// Reserved word lists for various dialects of the language

var reservedWords = {
  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",
  5: "class enum extends super const export import",
  6: "enum",
  strict: "implements interface let package private protected public static yield",
  strictBind: "eval arguments"
};

// And the keywords

var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";

var keywords$1 = {
  5: ecma5AndLessKeywords,
  "5module": ecma5AndLessKeywords + " export import",
  6: ecma5AndLessKeywords + " const class extends export import super"
};

var keywordRelationalOperator = /^in(stanceof)?$/;

// ## Character categories

var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

// This has a complexity linear to the value of the code. The
// assumption is that looking up astral identifier characters is
// rare.
function isInAstralSet(code, set) {
  var pos = 0x10000;
  for (var i = 0; i < set.length; i += 2) {
    pos += set[i];
    if (pos > code) { return false }
    pos += set[i + 1];
    if (pos >= code) { return true }
  }
  return false
}

// Test whether a given character code starts an identifier.

function isIdentifierStart(code, astral) {
  if (code < 65) { return code === 36 }
  if (code < 91) { return true }
  if (code < 97) { return code === 95 }
  if (code < 123) { return true }
  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }
  if (astral === false) { return false }
  return isInAstralSet(code, astralIdentifierStartCodes)
}

// Test whether a given character is part of an identifier.

function isIdentifierChar(code, astral) {
  if (code < 48) { return code === 36 }
  if (code < 58) { return true }
  if (code < 65) { return false }
  if (code < 91) { return true }
  if (code < 97) { return code === 95 }
  if (code < 123) { return true }
  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }
  if (astral === false) { return false }
  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)
}

// ## Token types

// The assignment of fine-grained, information-carrying type objects
// allows the tokenizer to store the information it has about a
// token in a way that is very cheap for the parser to look up.

// All token type variables start with an underscore, to make them
// easy to recognize.

// The `beforeExpr` property is used to disambiguate between regular
// expressions and divisions. It is set on all token types that can
// be followed by an expression (thus, a slash after them would be a
// regular expression).
//
// The `startsExpr` property is used to check if the token ends a
// `yield` expression. It is set on all token types that either can
// directly start an expression (like a quotation mark) or can
// continue an expression (like the body of a string).
//
// `isLoop` marks a keyword as starting a loop, which is important
// to know when parsing a label, in order to allow or disallow
// continue jumps to that label.

var TokenType = function TokenType(label, conf) {
  if ( conf === void 0 ) conf = {};

  this.label = label;
  this.keyword = conf.keyword;
  this.beforeExpr = !!conf.beforeExpr;
  this.startsExpr = !!conf.startsExpr;
  this.isLoop = !!conf.isLoop;
  this.isAssign = !!conf.isAssign;
  this.prefix = !!conf.prefix;
  this.postfix = !!conf.postfix;
  this.binop = conf.binop || null;
  this.updateContext = null;
};

function binop(name, prec) {
  return new TokenType(name, {beforeExpr: true, binop: prec})
}
var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};

// Map keyword names to token types.

var keywords = {};

// Succinct definitions of keyword token types
function kw(name, options) {
  if ( options === void 0 ) options = {};

  options.keyword = name;
  return keywords[name] = new TokenType(name, options)
}

var types$1 = {
  num: new TokenType("num", startsExpr),
  regexp: new TokenType("regexp", startsExpr),
  string: new TokenType("string", startsExpr),
  name: new TokenType("name", startsExpr),
  privateId: new TokenType("privateId", startsExpr),
  eof: new TokenType("eof"),

  // Punctuation token types.
  bracketL: new TokenType("[", {beforeExpr: true, startsExpr: true}),
  bracketR: new TokenType("]"),
  braceL: new TokenType("{", {beforeExpr: true, startsExpr: true}),
  braceR: new TokenType("}"),
  parenL: new TokenType("(", {beforeExpr: true, startsExpr: true}),
  parenR: new TokenType(")"),
  comma: new TokenType(",", beforeExpr),
  semi: new TokenType(";", beforeExpr),
  colon: new TokenType(":", beforeExpr),
  dot: new TokenType("."),
  question: new TokenType("?", beforeExpr),
  questionDot: new TokenType("?."),
  arrow: new TokenType("=>", beforeExpr),
  template: new TokenType("template"),
  invalidTemplate: new TokenType("invalidTemplate"),
  ellipsis: new TokenType("...", beforeExpr),
  backQuote: new TokenType("`", startsExpr),
  dollarBraceL: new TokenType("${", {beforeExpr: true, startsExpr: true}),

  // Operators. These carry several kinds of properties to help the
  // parser use them properly (the presence of these properties is
  // what categorizes them as operators).
  //
  // `binop`, when present, specifies that this operator is a binary
  // operator, and will refer to its precedence.
  //
  // `prefix` and `postfix` mark the operator as a prefix or postfix
  // unary operator.
  //
  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
  // binary operators with a very low precedence, that should result
  // in AssignmentExpression nodes.

  eq: new TokenType("=", {beforeExpr: true, isAssign: true}),
  assign: new TokenType("_=", {beforeExpr: true, isAssign: true}),
  incDec: new TokenType("++/--", {prefix: true, postfix: true, startsExpr: true}),
  prefix: new TokenType("!/~", {beforeExpr: true, prefix: true, startsExpr: true}),
  logicalOR: binop("||", 1),
  logicalAND: binop("&&", 2),
  bitwiseOR: binop("|", 3),
  bitwiseXOR: binop("^", 4),
  bitwiseAND: binop("&", 5),
  equality: binop("==/!=/===/!==", 6),
  relational: binop("</>/<=/>=", 7),
  bitShift: binop("<</>>/>>>", 8),
  plusMin: new TokenType("+/-", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),
  modulo: binop("%", 10),
  star: binop("*", 10),
  slash: binop("/", 10),
  starstar: new TokenType("**", {beforeExpr: true}),
  coalesce: binop("??", 1),

  // Keyword token types.
  _break: kw("break"),
  _case: kw("case", beforeExpr),
  _catch: kw("catch"),
  _continue: kw("continue"),
  _debugger: kw("debugger"),
  _default: kw("default", beforeExpr),
  _do: kw("do", {isLoop: true, beforeExpr: true}),
  _else: kw("else", beforeExpr),
  _finally: kw("finally"),
  _for: kw("for", {isLoop: true}),
  _function: kw("function", startsExpr),
  _if: kw("if"),
  _return: kw("return", beforeExpr),
  _switch: kw("switch"),
  _throw: kw("throw", beforeExpr),
  _try: kw("try"),
  _var: kw("var"),
  _const: kw("const"),
  _while: kw("while", {isLoop: true}),
  _with: kw("with"),
  _new: kw("new", {beforeExpr: true, startsExpr: true}),
  _this: kw("this", startsExpr),
  _super: kw("super", startsExpr),
  _class: kw("class", startsExpr),
  _extends: kw("extends", beforeExpr),
  _export: kw("export"),
  _import: kw("import", startsExpr),
  _null: kw("null", startsExpr),
  _true: kw("true", startsExpr),
  _false: kw("false", startsExpr),
  _in: kw("in", {beforeExpr: true, binop: 7}),
  _instanceof: kw("instanceof", {beforeExpr: true, binop: 7}),
  _typeof: kw("typeof", {beforeExpr: true, prefix: true, startsExpr: true}),
  _void: kw("void", {beforeExpr: true, prefix: true, startsExpr: true}),
  _delete: kw("delete", {beforeExpr: true, prefix: true, startsExpr: true})
};

// Matches a whole line break (where CRLF is considered a single
// line break). Used to count lines.

var lineBreak = /\r\n?|\n|\u2028|\u2029/;
var lineBreakG = new RegExp(lineBreak.source, "g");

function isNewLine(code) {
  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029
}

function nextLineBreak(code, from, end) {
  if ( end === void 0 ) end = code.length;

  for (var i = from; i < end; i++) {
    var next = code.charCodeAt(i);
    if (isNewLine(next))
      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }
  }
  return -1
}

var nonASCIIwhitespace = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/;

var skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;

var ref = Object.prototype;
var hasOwnProperty = ref.hasOwnProperty;
var toString = ref.toString;

var hasOwn = Object.hasOwn || (function (obj, propName) { return (
  hasOwnProperty.call(obj, propName)
); });

var isArray = Array.isArray || (function (obj) { return (
  toString.call(obj) === "[object Array]"
); });

var regexpCache = Object.create(null);

function wordsRegexp(words) {
  return regexpCache[words] || (regexpCache[words] = new RegExp("^(?:" + words.replace(/ /g, "|") + ")$"))
}

function codePointToString(code) {
  // UTF-16 Decoding
  if (code <= 0xFFFF) { return String.fromCharCode(code) }
  code -= 0x10000;
  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)
}

var loneSurrogate = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/;

// These are used when `options.locations` is on, for the
// `startLoc` and `endLoc` properties.

var Position = function Position(line, col) {
  this.line = line;
  this.column = col;
};

Position.prototype.offset = function offset (n) {
  return new Position(this.line, this.column + n)
};

var SourceLocation = function SourceLocation(p, start, end) {
  this.start = start;
  this.end = end;
  if (p.sourceFile !== null) { this.source = p.sourceFile; }
};

// The `getLineInfo` function is mostly useful when the
// `locations` option is off (for performance reasons) and you
// want to find the line/column position for a given character
// offset. `input` should be the code string that the offset refers
// into.

function getLineInfo(input, offset) {
  for (var line = 1, cur = 0;;) {
    var nextBreak = nextLineBreak(input, cur, offset);
    if (nextBreak < 0) { return new Position(line, offset - cur) }
    ++line;
    cur = nextBreak;
  }
}

// A second argument must be given to configure the parser process.
// These options are recognized (only `ecmaVersion` is required):

var defaultOptions = {
  // `ecmaVersion` indicates the ECMAScript version to parse. Must be
  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10
  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `"latest"`
  // (the latest version the library supports). This influences
  // support for strict mode, the set of reserved words, and support
  // for new syntax features.
  ecmaVersion: null,
  // `sourceType` indicates the mode the code should be parsed in.
  // Can be either `"script"` or `"module"`. This influences global
  // strict mode and parsing of `import` and `export` declarations.
  sourceType: "script",
  // `onInsertedSemicolon` can be a callback that will be called when
  // a semicolon is automatically inserted. It will be passed the
  // position of the inserted semicolon as an offset, and if
  // `locations` is enabled, it is given the location as a `{line,
  // column}` object as second argument.
  onInsertedSemicolon: null,
  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
  // trailing commas.
  onTrailingComma: null,
  // By default, reserved words are only enforced if ecmaVersion >= 5.
  // Set `allowReserved` to a boolean value to explicitly turn this on
  // an off. When this option has the value "never", reserved words
  // and keywords can also not be used as property names.
  allowReserved: null,
  // When enabled, a return at the top level is not considered an
  // error.
  allowReturnOutsideFunction: false,
  // When enabled, import/export statements are not constrained to
  // appearing at the top of the program, and an import.meta expression
  // in a script isn't considered an error.
  allowImportExportEverywhere: false,
  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.
  // When enabled, await identifiers are allowed to appear at the top-level scope,
  // but they are still not allowed in non-async functions.
  allowAwaitOutsideFunction: null,
  // When enabled, super identifiers are not constrained to
  // appearing in methods and do not raise an error when they appear elsewhere.
  allowSuperOutsideMethod: null,
  // When enabled, hashbang directive in the beginning of file is
  // allowed and treated as a line comment. Enabled by default when
  // `ecmaVersion` >= 2023.
  allowHashBang: false,
  // By default, the parser will verify that private properties are
  // only used in places where they are valid and have been declared.
  // Set this to false to turn such checks off.
  checkPrivateFields: true,
  // When `locations` is on, `loc` properties holding objects with
  // `start` and `end` properties in `{line, column}` form (with
  // line being 1-based and column 0-based) will be attached to the
  // nodes.
  locations: false,
  // A function can be passed as `onToken` option, which will
  // cause Acorn to call that function with object in the same
  // format as tokens returned from `tokenizer().getToken()`. Note
  // that you are not allowed to call the parser from the
  // callback—that will corrupt its internal state.
  onToken: null,
  // A function can be passed as `onComment` option, which will
  // cause Acorn to call that function with `(block, text, start,
  // end)` parameters whenever a comment is skipped. `block` is a
  // boolean indicating whether this is a block (`/* */`) comment,
  // `text` is the content of the comment, and `start` and `end` are
  // character offsets that denote the start and end of the comment.
  // When the `locations` option is on, two more parameters are
  // passed, the full `{line, column}` locations of the start and
  // end of the comments. Note that you are not allowed to call the
  // parser from the callback—that will corrupt its internal state.
  // When this option has an array as value, objects representing the
  // comments are pushed to it.
  onComment: null,
  // Nodes have their start and end characters offsets recorded in
  // `start` and `end` properties (directly on the node, rather than
  // the `loc` object, which holds line/column data. To also add a
  // [semi-standardized][range] `range` property holding a `[start,
  // end]` array with the same numbers, set the `ranges` option to
  // `true`.
  //
  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
  ranges: false,
  // It is possible to parse multiple files into a single AST by
  // passing the tree produced by parsing the first file as
  // `program` option in subsequent parses. This will add the
  // toplevel forms of the parsed file to the `Program` (top) node
  // of an existing parse tree.
  program: null,
  // When `locations` is on, you can pass this to record the source
  // file in every node's `loc` object.
  sourceFile: null,
  // This value, if given, is stored in every node, whether
  // `locations` is on or off.
  directSourceFile: null,
  // When enabled, parenthesized expressions are represented by
  // (non-standard) ParenthesizedExpression nodes
  preserveParens: false
};

// Interpret and default an options object

var warnedAboutEcmaVersion = false;

function getOptions(opts) {
  var options = {};

  for (var opt in defaultOptions)
    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }

  if (options.ecmaVersion === "latest") {
    options.ecmaVersion = 1e8;
  } else if (options.ecmaVersion == null) {
    if (!warnedAboutEcmaVersion && typeof console === "object" && console.warn) {
      warnedAboutEcmaVersion = true;
      console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.");
    }
    options.ecmaVersion = 11;
  } else if (options.ecmaVersion >= 2015) {
    options.ecmaVersion -= 2009;
  }

  if (options.allowReserved == null)
    { options.allowReserved = options.ecmaVersion < 5; }

  if (!opts || opts.allowHashBang == null)
    { options.allowHashBang = options.ecmaVersion >= 14; }

  if (isArray(options.onToken)) {
    var tokens = options.onToken;
    options.onToken = function (token) { return tokens.push(token); };
  }
  if (isArray(options.onComment))
    { options.onComment = pushComment(options, options.onComment); }

  return options
}

function pushComment(options, array) {
  return function(block, text, start, end, startLoc, endLoc) {
    var comment = {
      type: block ? "Block" : "Line",
      value: text,
      start: start,
      end: end
    };
    if (options.locations)
      { comment.loc = new SourceLocation(this, startLoc, endLoc); }
    if (options.ranges)
      { comment.range = [start, end]; }
    array.push(comment);
  }
}

// Each scope gets a bitset that may contain these flags
var
    SCOPE_TOP = 1,
    SCOPE_FUNCTION = 2,
    SCOPE_ASYNC = 4,
    SCOPE_GENERATOR = 8,
    SCOPE_ARROW = 16,
    SCOPE_SIMPLE_CATCH = 32,
    SCOPE_SUPER = 64,
    SCOPE_DIRECT_SUPER = 128,
    SCOPE_CLASS_STATIC_BLOCK = 256,
    SCOPE_CLASS_FIELD_INIT = 512,
    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;

function functionFlags(async, generator) {
  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)
}

// Used in checkLVal* and declareName to determine the type of a binding
var
    BIND_NONE = 0, // Not a binding
    BIND_VAR = 1, // Var-style binding
    BIND_LEXICAL = 2, // Let- or const-style binding
    BIND_FUNCTION = 3, // Function declaration
    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding
    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function

var Parser = function Parser(options, input, startPos) {
  this.options = options = getOptions(options);
  this.sourceFile = options.sourceFile;
  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);
  var reserved = "";
  if (options.allowReserved !== true) {
    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];
    if (options.sourceType === "module") { reserved += " await"; }
  }
  this.reservedWords = wordsRegexp(reserved);
  var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;
  this.reservedWordsStrict = wordsRegexp(reservedStrict);
  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);
  this.input = String(input);

  // Used to signal to callers of `readWord1` whether the word
  // contained any escape sequences. This is needed because words with
  // escape sequences must not be interpreted as keywords.
  this.containsEsc = false;

  // Set up token state

  // The current position of the tokenizer in the input.
  if (startPos) {
    this.pos = startPos;
    this.lineStart = this.input.lastIndexOf("\n", startPos - 1) + 1;
    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;
  } else {
    this.pos = this.lineStart = 0;
    this.curLine = 1;
  }

  // Properties of the current token:
  // Its type
  this.type = types$1.eof;
  // For tokens that include more information than their type, the value
  this.value = null;
  // Its start and end offset
  this.start = this.end = this.pos;
  // And, if locations are used, the {line, column} object
  // corresponding to those offsets
  this.startLoc = this.endLoc = this.curPosition();

  // Position information for the previous token
  this.lastTokEndLoc = this.lastTokStartLoc = null;
  this.lastTokStart = this.lastTokEnd = this.pos;

  // The context stack is used to superficially track syntactic
  // context to predict whether a regular expression is allowed in a
  // given position.
  this.context = this.initialContext();
  this.exprAllowed = true;

  // Figure out if it's a module code.
  this.inModule = options.sourceType === "module";
  this.strict = this.inModule || this.strictDirective(this.pos);

  // Used to signify the start of a potential arrow function
  this.potentialArrowAt = -1;
  this.potentialArrowInForAwait = false;

  // Positions to delayed-check that yield/await does not exist in default parameters.
  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;
  // Labels in scope.
  this.labels = [];
  // Thus-far undefined exports.
  this.undefinedExports = Object.create(null);

  // If enabled, skip leading hashbang line.
  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!")
    { this.skipLineComment(2); }

  // Scope tracking for duplicate variable names (see scope.js)
  this.scopeStack = [];
  this.enterScope(SCOPE_TOP);

  // For RegExp validation
  this.regexpState = null;

  // The stack of private names.
  // Each element has two properties: 'declared' and 'used'.
  // When it exited from the outermost class definition, all used private names must be declared.
  this.privateNameStack = [];
};

var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };

Parser.prototype.parse = function parse () {
  var node = this.options.program || this.startNode();
  this.nextToken();
  return this.parseTopLevel(node)
};

prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };

prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };

prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };

prototypeAccessors.canAwait.get = function () {
  for (var i = this.scopeStack.length - 1; i >= 0; i--) {
    var ref = this.scopeStack[i];
      var flags = ref.flags;
    if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT)) { return false }
    if (flags & SCOPE_FUNCTION) { return (flags & SCOPE_ASYNC) > 0 }
  }
  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction
};

prototypeAccessors.allowSuper.get = function () {
  var ref = this.currentThisScope();
    var flags = ref.flags;
  return (flags & SCOPE_SUPER) > 0 || this.options.allowSuperOutsideMethod
};

prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };

prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };

prototypeAccessors.allowNewDotTarget.get = function () {
  for (var i = this.scopeStack.length - 1; i >= 0; i--) {
    var ref = this.scopeStack[i];
      var flags = ref.flags;
    if (flags & (SCOPE_CLASS_STATIC_BLOCK | SCOPE_CLASS_FIELD_INIT) ||
        ((flags & SCOPE_FUNCTION) && !(flags & SCOPE_ARROW))) { return true }
  }
  return false
};

prototypeAccessors.inClassStaticBlock.get = function () {
  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0
};

Parser.extend = function extend () {
    var plugins = [], len = arguments.length;
    while ( len-- ) plugins[ len ] = arguments[ len ];

  var cls = this;
  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }
  return cls
};

Parser.parse = function parse (input, options) {
  return new this(options, input).parse()
};

Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {
  var parser = new this(options, input, pos);
  parser.nextToken();
  return parser.parseExpression()
};

Parser.tokenizer = function tokenizer (input, options) {
  return new this(options, input)
};

Object.defineProperties( Parser.prototype, prototypeAccessors );

var pp$9 = Parser.prototype;

// ## Parser utilities

var literal = /^(?:'((?:\\[^]|[^'\\])*?)'|"((?:\\[^]|[^"\\])*?)")/;
pp$9.strictDirective = function(start) {
  if (this.options.ecmaVersion < 5) { return false }
  for (;;) {
    // Try to find string literal.
    skipWhiteSpace.lastIndex = start;
    start += skipWhiteSpace.exec(this.input)[0].length;
    var match = literal.exec(this.input.slice(start));
    if (!match) { return false }
    if ((match[1] || match[2]) === "use strict") {
      skipWhiteSpace.lastIndex = start + match[0].length;
      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;
      var next = this.input.charAt(end);
      return next === ";" || next === "}" ||
        (lineBreak.test(spaceAfter[0]) &&
         !(/[(`.[+\-/*%<>=,?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "="))
    }
    start += match[0].length;

    // Skip semicolon, if any.
    skipWhiteSpace.lastIndex = start;
    start += skipWhiteSpace.exec(this.input)[0].length;
    if (this.input[start] === ";")
      { start++; }
  }
};

// Predicate that tests whether the next token is of the given
// type, and if yes, consumes it as a side effect.

pp$9.eat = function(type) {
  if (this.type === type) {
    this.next();
    return true
  } else {
    return false
  }
};

// Tests whether parsed token is a contextual keyword.

pp$9.isContextual = function(name) {
  return this.type === types$1.name && this.value === name && !this.containsEsc
};

// Consumes contextual keyword if possible.

pp$9.eatContextual = function(name) {
  if (!this.isContextual(name)) { return false }
  this.next();
  return true
};

// Asserts that following token is given contextual keyword.

pp$9.expectContextual = function(name) {
  if (!this.eatContextual(name)) { this.unexpected(); }
};

// Test whether a semicolon can be inserted at the current position.

pp$9.canInsertSemicolon = function() {
  return this.type === types$1.eof ||
    this.type === types$1.braceR ||
    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
};

pp$9.insertSemicolon = function() {
  if (this.canInsertSemicolon()) {
    if (this.options.onInsertedSemicolon)
      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }
    return true
  }
};

// Consume a semicolon, or, failing that, see if we are allowed to
// pretend that there is a semicolon at this position.

pp$9.semicolon = function() {
  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }
};

pp$9.afterTrailingComma = function(tokType, notNext) {
  if (this.type === tokType) {
    if (this.options.onTrailingComma)
      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }
    if (!notNext)
      { this.next(); }
    return true
  }
};

// Expect a token of a given type. If found, consume it, otherwise,
// raise an unexpected token error.

pp$9.expect = function(type) {
  this.eat(type) || this.unexpected();
};

// Raise an unexpected token error.

pp$9.unexpected = function(pos) {
  this.raise(pos != null ? pos : this.start, "Unexpected token");
};

var DestructuringErrors = function DestructuringErrors() {
  this.shorthandAssign =
  this.trailingComma =
  this.parenthesizedAssign =
  this.parenthesizedBind =
  this.doubleProto =
    -1;
};

pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {
  if (!refDestructuringErrors) { return }
  if (refDestructuringErrors.trailingComma > -1)
    { this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element"); }
  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;
  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? "Assigning to rvalue" : "Parenthesized pattern"); }
};

pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {
  if (!refDestructuringErrors) { return false }
  var shorthandAssign = refDestructuringErrors.shorthandAssign;
  var doubleProto = refDestructuringErrors.doubleProto;
  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }
  if (shorthandAssign >= 0)
    { this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns"); }
  if (doubleProto >= 0)
    { this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property"); }
};

pp$9.checkYieldAwaitInDefaultParams = function() {
  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))
    { this.raise(this.yieldPos, "Yield expression cannot be a default value"); }
  if (this.awaitPos)
    { this.raise(this.awaitPos, "Await expression cannot be a default value"); }
};

pp$9.isSimpleAssignTarget = function(expr) {
  if (expr.type === "ParenthesizedExpression")
    { return this.isSimpleAssignTarget(expr.expression) }
  return expr.type === "Identifier" || expr.type === "MemberExpression"
};

var pp$8 = Parser.prototype;

// ### Statement parsing

// Parse a program. Initializes the parser, reads any number of
// statements, and wraps them in a Program node.  Optionally takes a
// `program` argument.  If present, the statements will be appended
// to its body instead of creating a new node.

pp$8.parseTopLevel = function(node) {
  var exports = Object.create(null);
  if (!node.body) { node.body = []; }
  while (this.type !== types$1.eof) {
    var stmt = this.parseStatement(null, true, exports);
    node.body.push(stmt);
  }
  if (this.inModule)
    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)
      {
        var name = list[i];

        this.raiseRecoverable(this.undefinedExports[name].start, ("Export '" + name + "' is not defined"));
      } }
  this.adaptDirectivePrologue(node.body);
  this.next();
  node.sourceType = this.options.sourceType;
  return this.finishNode(node, "Program")
};

var loopLabel = {kind: "loop"}, switchLabel = {kind: "switch"};

pp$8.isLet = function(context) {
  if (this.options.ecmaVersion < 6 || !this.isContextual("let")) { return false }
  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
  // For ambiguous cases, determine if a LexicalDeclaration (or only a
  // Statement) is allowed here. If context is not empty then only a Statement
  // is allowed. However, `let [` is an explicit negative lookahead for
  // ExpressionStatement, so special-case it first.
  if (nextCh === 91 || nextCh === 92) { return true } // '[', '\'
  if (context) { return false }

  if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral
  if (isIdentifierStart(nextCh, true)) {
    var pos = next + 1;
    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }
    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }
    var ident = this.input.slice(next, pos);
    if (!keywordRelationalOperator.test(ident)) { return true }
  }
  return false
};

// check 'async [no LineTerminator here] function'
// - 'async /*foo*/ function' is OK.
// - 'async /*\n*/ function' is invalid.
pp$8.isAsyncFunction = function() {
  if (this.options.ecmaVersion < 8 || !this.isContextual("async"))
    { return false }

  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length, after;
  return !lineBreak.test(this.input.slice(this.pos, next)) &&
    this.input.slice(next, next + 8) === "function" &&
    (next + 8 === this.input.length ||
     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))
};

pp$8.isUsingKeyword = function(isAwaitUsing, isFor) {
  if (this.options.ecmaVersion < 17 || !this.isContextual(isAwaitUsing ? "await" : "using"))
    { return false }

  skipWhiteSpace.lastIndex = this.pos;
  var skip = skipWhiteSpace.exec(this.input);
  var next = this.pos + skip[0].length;

  if (lineBreak.test(this.input.slice(this.pos, next))) { return false }

  if (isAwaitUsing) {
    var awaitEndPos = next + 5 /* await */, after;
    if (this.input.slice(next, awaitEndPos) !== "using" ||
      awaitEndPos === this.input.length ||
      isIdentifierChar(after = this.input.charCodeAt(awaitEndPos)) ||
      (after > 0xd7ff && after < 0xdc00)
    ) { return false }

    skipWhiteSpace.lastIndex = awaitEndPos;
    var skipAfterUsing = skipWhiteSpace.exec(this.input);
    if (skipAfterUsing && lineBreak.test(this.input.slice(awaitEndPos, awaitEndPos + skipAfterUsing[0].length))) { return false }
  }

  if (isFor) {
    var ofEndPos = next + 2 /* of */, after$1;
    if (this.input.slice(next, ofEndPos) === "of") {
      if (ofEndPos === this.input.length ||
        (!isIdentifierChar(after$1 = this.input.charCodeAt(ofEndPos)) && !(after$1 > 0xd7ff && after$1 < 0xdc00))) { return false }
    }
  }

  var ch = this.input.charCodeAt(next);
  return isIdentifierStart(ch, true) || ch === 92 // '\'
};

pp$8.isAwaitUsing = function(isFor) {
  return this.isUsingKeyword(true, isFor)
};

pp$8.isUsing = function(isFor) {
  return this.isUsingKeyword(false, isFor)
};

// Parse a single statement.
//
// If expecting a statement and finding a slash operator, parse a
// regular expression literal. This is to handle cases like
// `if (foo) /blah/.exec(foo)`, where looking at the previous token
// does not help.

pp$8.parseStatement = function(context, topLevel, exports) {
  var starttype = this.type, node = this.startNode(), kind;

  if (this.isLet(context)) {
    starttype = types$1._var;
    kind = "let";
  }

  // Most types of statements are recognized by the keyword they
  // start with. Many are trivial to parse, some require a bit of
  // complexity.

  switch (starttype) {
  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)
  case types$1._debugger: return this.parseDebuggerStatement(node)
  case types$1._do: return this.parseDoStatement(node)
  case types$1._for: return this.parseForStatement(node)
  case types$1._function:
    // Function as sole body of either an if statement or a labeled statement
    // works, but not when it is part of a labeled statement that is the sole
    // body of an if statement.
    if ((context && (this.strict || context !== "if" && context !== "label")) && this.options.ecmaVersion >= 6) { this.unexpected(); }
    return this.parseFunctionStatement(node, false, !context)
  case types$1._class:
    if (context) { this.unexpected(); }
    return this.parseClass(node, true)
  case types$1._if: return this.parseIfStatement(node)
  case types$1._return: return this.parseReturnStatement(node)
  case types$1._switch: return this.parseSwitchStatement(node)
  case types$1._throw: return this.parseThrowStatement(node)
  case types$1._try: return this.parseTryStatement(node)
  case types$1._const: case types$1._var:
    kind = kind || this.value;
    if (context && kind !== "var") { this.unexpected(); }
    return this.parseVarStatement(node, kind)
  case types$1._while: return this.parseWhileStatement(node)
  case types$1._with: return this.parseWithStatement(node)
  case types$1.braceL: return this.parseBlock(true, node)
  case types$1.semi: return this.parseEmptyStatement(node)
  case types$1._export:
  case types$1._import:
    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {
      skipWhiteSpace.lastIndex = this.pos;
      var skip = skipWhiteSpace.exec(this.input);
      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);
      if (nextCh === 40 || nextCh === 46) // '(' or '.'
        { return this.parseExpressionStatement(node, this.parseExpression()) }
    }

    if (!this.options.allowImportExportEverywhere) {
      if (!topLevel)
        { this.raise(this.start, "'import' and 'export' may only appear at the top level"); }
      if (!this.inModule)
        { this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'"); }
    }
    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)

    // If the statement does not start with a statement keyword or a
    // brace, it's an ExpressionStatement or LabeledStatement. We
    // simply start parsing an expression, and afterwards, if the
    // next token is a colon and the expression was a simple
    // Identifier node, we switch to interpreting it as a label.
  default:
    if (this.isAsyncFunction()) {
      if (context) { this.unexpected(); }
      this.next();
      return this.parseFunctionStatement(node, true, !context)
    }

    var usingKind = this.isAwaitUsing(false) ? "await using" : this.isUsing(false) ? "using" : null;
    if (usingKind) {
      if (topLevel && this.options.sourceType === "script") {
        this.raise(this.start, "Using declaration cannot appear in the top level when source type is `script`");
      }
      if (usingKind === "await using") {
        if (!this.canAwait) {
          this.raise(this.start, "Await using cannot appear outside of async function");
        }
        this.next();
      }
      this.next();
      this.parseVar(node, false, usingKind);
      this.semicolon();
      return this.finishNode(node, "VariableDeclaration")
    }

    var maybeName = this.value, expr = this.parseExpression();
    if (starttype === types$1.name && expr.type === "Identifier" && this.eat(types$1.colon))
      { return this.parseLabeledStatement(node, maybeName, expr, context) }
    else { return this.parseExpressionStatement(node, expr) }
  }
};

pp$8.parseBreakContinueStatement = function(node, keyword) {
  var isBreak = keyword === "break";
  this.next();
  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }
  else if (this.type !== types$1.name) { this.unexpected(); }
  else {
    node.label = this.parseIdent();
    this.semicolon();
  }

  // Verify that there is an actual destination to break or
  // continue to.
  var i = 0;
  for (; i < this.labels.length; ++i) {
    var lab = this.labels[i];
    if (node.label == null || lab.name === node.label.name) {
      if (lab.kind != null && (isBreak || lab.kind === "loop")) { break }
      if (node.label && isBreak) { break }
    }
  }
  if (i === this.labels.length) { this.raise(node.start, "Unsyntactic " + keyword); }
  return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement")
};

pp$8.parseDebuggerStatement = function(node) {
  this.next();
  this.semicolon();
  return this.finishNode(node, "DebuggerStatement")
};

pp$8.parseDoStatement = function(node) {
  this.next();
  this.labels.push(loopLabel);
  node.body = this.parseStatement("do");
  this.labels.pop();
  this.expect(types$1._while);
  node.test = this.parseParenExpression();
  if (this.options.ecmaVersion >= 6)
    { this.eat(types$1.semi); }
  else
    { this.semicolon(); }
  return this.finishNode(node, "DoWhileStatement")
};

// Disambiguating between a `for` and a `for`/`in` or `for`/`of`
// loop is non-trivial. Basically, we have to parse the init `var`
// statement or expression, disallowing the `in` operator (see
// the second parameter to `parseExpression`), and then check
// whether the next token is `in` or `of`. When there is no init
// part (semicolon immediately after the opening parenthesis), it
// is a regular `for` loop.

pp$8.parseForStatement = function(node) {
  this.next();
  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await")) ? this.lastTokStart : -1;
  this.labels.push(loopLabel);
  this.enterScope(0);
  this.expect(types$1.parenL);
  if (this.type === types$1.semi) {
    if (awaitAt > -1) { this.unexpected(awaitAt); }
    return this.parseFor(node, null)
  }
  var isLet = this.isLet();
  if (this.type === types$1._var || this.type === types$1._const || isLet) {
    var init$1 = this.startNode(), kind = isLet ? "let" : this.value;
    this.next();
    this.parseVar(init$1, true, kind);
    this.finishNode(init$1, "VariableDeclaration");
    return this.parseForAfterInit(node, init$1, awaitAt)
  }
  var startsWithLet = this.isContextual("let"), isForOf = false;

  var usingKind = this.isUsing(true) ? "using" : this.isAwaitUsing(true) ? "await using" : null;
  if (usingKind) {
    var init$2 = this.startNode();
    this.next();
    if (usingKind === "await using") { this.next(); }
    this.parseVar(init$2, true, usingKind);
    this.finishNode(init$2, "VariableDeclaration");
    return this.parseForAfterInit(node, init$2, awaitAt)
  }
  var containsEsc = this.containsEsc;
  var refDestructuringErrors = new DestructuringErrors;
  var initPos = this.start;
  var init = awaitAt > -1
    ? this.parseExprSubscripts(refDestructuringErrors, "await")
    : this.parseExpression(true, refDestructuringErrors);
  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual("of"))) {
    if (awaitAt > -1) { // implies `ecmaVersion >= 9` (see declaration of awaitAt)
      if (this.type === types$1._in) { this.unexpected(awaitAt); }
      node.await = true;
    } else if (isForOf && this.options.ecmaVersion >= 8) {
      if (init.start === initPos && !containsEsc && init.type === "Identifier" && init.name === "async") { this.unexpected(); }
      else if (this.options.ecmaVersion >= 9) { node.await = false; }
    }
    if (startsWithLet && isForOf) { this.raise(init.start, "The left-hand side of a for-of loop may not start with 'let'."); }
    this.toAssignable(init, false, refDestructuringErrors);
    this.checkLValPattern(init);
    return this.parseForIn(node, init)
  } else {
    this.checkExpressionErrors(refDestructuringErrors, true);
  }
  if (awaitAt > -1) { this.unexpected(awaitAt); }
  return this.parseFor(node, init)
};

// Helper method to parse for loop after variable initialization
pp$8.parseForAfterInit = function(node, init, awaitAt) {
  if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) && init.declarations.length === 1) {
    if (this.options.ecmaVersion >= 9) {
      if (this.type === types$1._in) {
        if (awaitAt > -1) { this.unexpected(awaitAt); }
      } else { node.await = awaitAt > -1; }
    }
    return this.parseForIn(node, init)
  }
  if (awaitAt > -1) { this.unexpected(awaitAt); }
  return this.parseFor(node, init)
};

pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {
  this.next();
  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)
};

pp$8.parseIfStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  // allow function declarations in branches, but only in non-strict mode
  node.consequent = this.parseStatement("if");
  node.alternate = this.eat(types$1._else) ? this.parseStatement("if") : null;
  return this.finishNode(node, "IfStatement")
};

pp$8.parseReturnStatement = function(node) {
  if (!this.inFunction && !this.options.allowReturnOutsideFunction)
    { this.raise(this.start, "'return' outside of function"); }
  this.next();

  // In `return` (and `break`/`continue`), the keywords with
  // optional arguments, we eagerly look for a semicolon or the
  // possibility to insert one.

  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }
  else { node.argument = this.parseExpression(); this.semicolon(); }
  return this.finishNode(node, "ReturnStatement")
};

pp$8.parseSwitchStatement = function(node) {
  this.next();
  node.discriminant = this.parseParenExpression();
  node.cases = [];
  this.expect(types$1.braceL);
  this.labels.push(switchLabel);
  this.enterScope(0);

  // Statements under must be grouped (by label) in SwitchCase
  // nodes. `cur` is used to keep the node that we are currently
  // adding statements to.

  var cur;
  for (var sawDefault = false; this.type !== types$1.braceR;) {
    if (this.type === types$1._case || this.type === types$1._default) {
      var isCase = this.type === types$1._case;
      if (cur) { this.finishNode(cur, "SwitchCase"); }
      node.cases.push(cur = this.startNode());
      cur.consequent = [];
      this.next();
      if (isCase) {
        cur.test = this.parseExpression();
      } else {
        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"); }
        sawDefault = true;
        cur.test = null;
      }
      this.expect(types$1.colon);
    } else {
      if (!cur) { this.unexpected(); }
      cur.consequent.push(this.parseStatement(null));
    }
  }
  this.exitScope();
  if (cur) { this.finishNode(cur, "SwitchCase"); }
  this.next(); // Closing brace
  this.labels.pop();
  return this.finishNode(node, "SwitchStatement")
};

pp$8.parseThrowStatement = function(node) {
  this.next();
  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))
    { this.raise(this.lastTokEnd, "Illegal newline after throw"); }
  node.argument = this.parseExpression();
  this.semicolon();
  return this.finishNode(node, "ThrowStatement")
};

// Reused empty array added for node fields that are always empty.

var empty$1 = [];

pp$8.parseCatchClauseParam = function() {
  var param = this.parseBindingAtom();
  var simple = param.type === "Identifier";
  this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);
  this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);
  this.expect(types$1.parenR);

  return param
};

pp$8.parseTryStatement = function(node) {
  this.next();
  node.block = this.parseBlock();
  node.handler = null;
  if (this.type === types$1._catch) {
    var clause = this.startNode();
    this.next();
    if (this.eat(types$1.parenL)) {
      clause.param = this.parseCatchClauseParam();
    } else {
      if (this.options.ecmaVersion < 10) { this.unexpected(); }
      clause.param = null;
      this.enterScope(0);
    }
    clause.body = this.parseBlock(false);
    this.exitScope();
    node.handler = this.finishNode(clause, "CatchClause");
  }
  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;
  if (!node.handler && !node.finalizer)
    { this.raise(node.start, "Missing catch or finally clause"); }
  return this.finishNode(node, "TryStatement")
};

pp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {
  this.next();
  this.parseVar(node, false, kind, allowMissingInitializer);
  this.semicolon();
  return this.finishNode(node, "VariableDeclaration")
};

pp$8.parseWhileStatement = function(node) {
  this.next();
  node.test = this.parseParenExpression();
  this.labels.push(loopLabel);
  node.body = this.parseStatement("while");
  this.labels.pop();
  return this.finishNode(node, "WhileStatement")
};

pp$8.parseWithStatement = function(node) {
  if (this.strict) { this.raise(this.start, "'with' in strict mode"); }
  this.next();
  node.object = this.parseParenExpression();
  node.body = this.parseStatement("with");
  return this.finishNode(node, "WithStatement")
};

pp$8.parseEmptyStatement = function(node) {
  this.next();
  return this.finishNode(node, "EmptyStatement")
};

pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {
  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)
    {
    var label = list[i$1];

    if (label.name === maybeName)
      { this.raise(expr.start, "Label '" + maybeName + "' is already declared");
  } }
  var kind = this.type.isLoop ? "loop" : this.type === types$1._switch ? "switch" : null;
  for (var i = this.labels.length - 1; i >= 0; i--) {
    var label$1 = this.labels[i];
    if (label$1.statementStart === node.start) {
      // Update information about previous labels on this node
      label$1.statementStart = this.start;
      label$1.kind = kind;
    } else { break }
  }
  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});
  node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
  this.labels.pop();
  node.label = expr;
  return this.finishNode(node, "LabeledStatement")
};

pp$8.parseExpressionStatement = function(node, expr) {
  node.expression = expr;
  this.semicolon();
  return this.finishNode(node, "ExpressionStatement")
};

// Parse a semicolon-enclosed block of statements, handling `"use
// strict"` declarations when `allowStrict` is true (used for
// function bodies).

pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {
  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;
  if ( node === void 0 ) node = this.startNode();

  node.body = [];
  this.expect(types$1.braceL);
  if (createNewLexicalScope) { this.enterScope(0); }
  while (this.type !== types$1.braceR) {
    var stmt = this.parseStatement(null);
    node.body.push(stmt);
  }
  if (exitStrict) { this.strict = false; }
  this.next();
  if (createNewLexicalScope) { this.exitScope(); }
  return this.finishNode(node, "BlockStatement")
};

// Parse a regular `for` loop. The disambiguation code in
// `parseStatement` will already have parsed the init statement or
// expression.

pp$8.parseFor = function(node, init) {
  node.init = init;
  this.expect(types$1.semi);
  node.test = this.type === types$1.semi ? null : this.parseExpression();
  this.expect(types$1.semi);
  node.update = this.type === types$1.parenR ? null : this.parseExpression();
  this.expect(types$1.parenR);
  node.body = this.parseStatement("for");
  this.exitScope();
  this.labels.pop();
  return this.finishNode(node, "ForStatement")
};

// Parse a `for`/`in` and `for`/`of` loop, which are almost
// same from parser's perspective.

pp$8.parseForIn = function(node, init) {
  var isForIn = this.type === types$1._in;
  this.next();

  if (
    init.type === "VariableDeclaration" &&
    init.declarations[0].init != null &&
    (
      !isForIn ||
      this.options.ecmaVersion < 8 ||
      this.strict ||
      init.kind !== "var" ||
      init.declarations[0].id.type !== "Identifier"
    )
  ) {
    this.raise(
      init.start,
      ((isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer")
    );
  }
  node.left = init;
  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();
  this.expect(types$1.parenR);
  node.body = this.parseStatement("for");
  this.exitScope();
  this.labels.pop();
  return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement")
};

// Parse a list of variable declarations.

pp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {
  node.declarations = [];
  node.kind = kind;
  for (;;) {
    var decl = this.startNode();
    this.parseVarId(decl, kind);
    if (this.eat(types$1.eq)) {
      decl.init = this.parseMaybeAssign(isFor);
    } else if (!allowMissingInitializer && kind === "const" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of")))) {
      this.unexpected();
    } else if (!allowMissingInitializer && (kind === "using" || kind === "await using") && this.options.ecmaVersion >= 17 && this.type !== types$1._in && !this.isContextual("of")) {
      this.raise(this.lastTokEnd, ("Missing initializer in " + kind + " declaration"));
    } else if (!allowMissingInitializer && decl.id.type !== "Identifier" && !(isFor && (this.type === types$1._in || this.isContextual("of")))) {
      this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");
    } else {
      decl.init = null;
    }
    node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
    if (!this.eat(types$1.comma)) { break }
  }
  return node
};

pp$8.parseVarId = function(decl, kind) {
  decl.id = kind === "using" || kind === "await using"
    ? this.parseIdent()
    : this.parseBindingAtom();

  this.checkLValPattern(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);
};

var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;

// Parse a function declaration or literal (depending on the
// `statement & FUNC_STATEMENT`).

// Remove `allowExpressionBody` for 7.0.0, as it is only called with false
pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {
  this.initFunction(node);
  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {
    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))
      { this.unexpected(); }
    node.generator = this.eat(types$1.star);
  }
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  if (statement & FUNC_STATEMENT) {
    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();
    if (node.id && !(statement & FUNC_HANGING_STATEMENT))
      // If it is a regular function declaration in sloppy mode, then it is
      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding
      // mode depends on properties of the current scope (see
      // treatFunctionsAsVar).
      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }
  }

  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  this.enterScope(functionFlags(node.async, node.generator));

  if (!(statement & FUNC_STATEMENT))
    { node.id = this.type === types$1.name ? this.parseIdent() : null; }

  this.parseFunctionParams(node);
  this.parseFunctionBody(node, allowExpressionBody, false, forInit);

  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, (statement & FUNC_STATEMENT) ? "FunctionDeclaration" : "FunctionExpression")
};

pp$8.parseFunctionParams = function(node) {
  this.expect(types$1.parenL);
  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
};

// Parse a class declaration or literal (depending on the
// `isStatement` parameter).

pp$8.parseClass = function(node, isStatement) {
  this.next();

  // ecma-262 14.6 Class Definitions
  // A class definition is always strict mode code.
  var oldStrict = this.strict;
  this.strict = true;

  this.parseClassId(node, isStatement);
  this.parseClassSuper(node);
  var privateNameMap = this.enterClassBody();
  var classBody = this.startNode();
  var hadConstructor = false;
  classBody.body = [];
  this.expect(types$1.braceL);
  while (this.type !== types$1.braceR) {
    var element = this.parseClassElement(node.superClass !== null);
    if (element) {
      classBody.body.push(element);
      if (element.type === "MethodDefinition" && element.kind === "constructor") {
        if (hadConstructor) { this.raiseRecoverable(element.start, "Duplicate constructor in the same class"); }
        hadConstructor = true;
      } else if (element.key && element.key.type === "PrivateIdentifier" && isPrivateNameConflicted(privateNameMap, element)) {
        this.raiseRecoverable(element.key.start, ("Identifier '#" + (element.key.name) + "' has already been declared"));
      }
    }
  }
  this.strict = oldStrict;
  this.next();
  node.body = this.finishNode(classBody, "ClassBody");
  this.exitClassBody();
  return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression")
};

pp$8.parseClassElement = function(constructorAllowsSuper) {
  if (this.eat(types$1.semi)) { return null }

  var ecmaVersion = this.options.ecmaVersion;
  var node = this.startNode();
  var keyName = "";
  var isGenerator = false;
  var isAsync = false;
  var kind = "method";
  var isStatic = false;

  if (this.eatContextual("static")) {
    // Parse static init block
    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {
      this.parseClassStaticBlock(node);
      return node
    }
    if (this.isClassElementNameStart() || this.type === types$1.star) {
      isStatic = true;
    } else {
      keyName = "static";
    }
  }
  node.static = isStatic;
  if (!keyName && ecmaVersion >= 8 && this.eatContextual("async")) {
    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {
      isAsync = true;
    } else {
      keyName = "async";
    }
  }
  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {
    isGenerator = true;
  }
  if (!keyName && !isAsync && !isGenerator) {
    var lastValue = this.value;
    if (this.eatContextual("get") || this.eatContextual("set")) {
      if (this.isClassElementNameStart()) {
        kind = lastValue;
      } else {
        keyName = lastValue;
      }
    }
  }

  // Parse element name
  if (keyName) {
    // 'async', 'get', 'set', or 'static' were not a keyword contextually.
    // The last token is any of those. Make it the element name.
    node.computed = false;
    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);
    node.key.name = keyName;
    this.finishNode(node.key, "Identifier");
  } else {
    this.parseClassElementName(node);
  }

  // Parse element value
  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== "method" || isGenerator || isAsync) {
    var isConstructor = !node.static && checkKeyName(node, "constructor");
    var allowsDirectSuper = isConstructor && constructorAllowsSuper;
    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.
    if (isConstructor && kind !== "method") { this.raise(node.key.start, "Constructor can't have get/set modifier"); }
    node.kind = isConstructor ? "constructor" : kind;
    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);
  } else {
    this.parseClassField(node);
  }

  return node
};

pp$8.isClassElementNameStart = function() {
  return (
    this.type === types$1.name ||
    this.type === types$1.privateId ||
    this.type === types$1.num ||
    this.type === types$1.string ||
    this.type === types$1.bracketL ||
    this.type.keyword
  )
};

pp$8.parseClassElementName = function(element) {
  if (this.type === types$1.privateId) {
    if (this.value === "constructor") {
      this.raise(this.start, "Classes can't have an element named '#constructor'");
    }
    element.computed = false;
    element.key = this.parsePrivateIdent();
  } else {
    this.parsePropertyName(element);
  }
};

pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {
  // Check key and flags
  var key = method.key;
  if (method.kind === "constructor") {
    if (isGenerator) { this.raise(key.start, "Constructor can't be a generator"); }
    if (isAsync) { this.raise(key.start, "Constructor can't be an async method"); }
  } else if (method.static && checkKeyName(method, "prototype")) {
    this.raise(key.start, "Classes may not have a static property named prototype");
  }

  // Parse value
  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);

  // Check value
  if (method.kind === "get" && value.params.length !== 0)
    { this.raiseRecoverable(value.start, "getter should have no params"); }
  if (method.kind === "set" && value.params.length !== 1)
    { this.raiseRecoverable(value.start, "setter should have exactly one param"); }
  if (method.kind === "set" && value.params[0].type === "RestElement")
    { this.raiseRecoverable(value.params[0].start, "Setter cannot use rest params"); }

  return this.finishNode(method, "MethodDefinition")
};

pp$8.parseClassField = function(field) {
  if (checkKeyName(field, "constructor")) {
    this.raise(field.key.start, "Classes can't have a field named 'constructor'");
  } else if (field.static && checkKeyName(field, "prototype")) {
    this.raise(field.key.start, "Classes can't have a static field named 'prototype'");
  }

  if (this.eat(types$1.eq)) {
    // To raise SyntaxError if 'arguments' exists in the initializer.
    this.enterScope(SCOPE_CLASS_FIELD_INIT | SCOPE_SUPER);
    field.value = this.parseMaybeAssign();
    this.exitScope();
  } else {
    field.value = null;
  }
  this.semicolon();

  return this.finishNode(field, "PropertyDefinition")
};

pp$8.parseClassStaticBlock = function(node) {
  node.body = [];

  var oldLabels = this.labels;
  this.labels = [];
  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);
  while (this.type !== types$1.braceR) {
    var stmt = this.parseStatement(null);
    node.body.push(stmt);
  }
  this.next();
  this.exitScope();
  this.labels = oldLabels;

  return this.finishNode(node, "StaticBlock")
};

pp$8.parseClassId = function(node, isStatement) {
  if (this.type === types$1.name) {
    node.id = this.parseIdent();
    if (isStatement)
      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }
  } else {
    if (isStatement === true)
      { this.unexpected(); }
    node.id = null;
  }
};

pp$8.parseClassSuper = function(node) {
  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;
};

pp$8.enterClassBody = function() {
  var element = {declared: Object.create(null), used: []};
  this.privateNameStack.push(element);
  return element.declared
};

pp$8.exitClassBody = function() {
  var ref = this.privateNameStack.pop();
  var declared = ref.declared;
  var used = ref.used;
  if (!this.options.checkPrivateFields) { return }
  var len = this.privateNameStack.length;
  var parent = len === 0 ? null : this.privateNameStack[len - 1];
  for (var i = 0; i < used.length; ++i) {
    var id = used[i];
    if (!hasOwn(declared, id.name)) {
      if (parent) {
        parent.used.push(id);
      } else {
        this.raiseRecoverable(id.start, ("Private field '#" + (id.name) + "' must be declared in an enclosing class"));
      }
    }
  }
};

function isPrivateNameConflicted(privateNameMap, element) {
  var name = element.key.name;
  var curr = privateNameMap[name];

  var next = "true";
  if (element.type === "MethodDefinition" && (element.kind === "get" || element.kind === "set")) {
    next = (element.static ? "s" : "i") + element.kind;
  }

  // `class { get #a(){}; static set #a(_){} }` is also conflict.
  if (
    curr === "iget" && next === "iset" ||
    curr === "iset" && next === "iget" ||
    curr === "sget" && next === "sset" ||
    curr === "sset" && next === "sget"
  ) {
    privateNameMap[name] = "true";
    return false
  } else if (!curr) {
    privateNameMap[name] = next;
    return false
  } else {
    return true
  }
}

function checkKeyName(node, name) {
  var computed = node.computed;
  var key = node.key;
  return !computed && (
    key.type === "Identifier" && key.name === name ||
    key.type === "Literal" && key.value === name
  )
}

// Parses module export declaration.

pp$8.parseExportAllDeclaration = function(node, exports) {
  if (this.options.ecmaVersion >= 11) {
    if (this.eatContextual("as")) {
      node.exported = this.parseModuleExportName();
      this.checkExport(exports, node.exported, this.lastTokStart);
    } else {
      node.exported = null;
    }
  }
  this.expectContextual("from");
  if (this.type !== types$1.string) { this.unexpected(); }
  node.source = this.parseExprAtom();
  if (this.options.ecmaVersion >= 16)
    { node.attributes = this.parseWithClause(); }
  this.semicolon();
  return this.finishNode(node, "ExportAllDeclaration")
};

pp$8.parseExport = function(node, exports) {
  this.next();
  // export * from '...'
  if (this.eat(types$1.star)) {
    return this.parseExportAllDeclaration(node, exports)
  }
  if (this.eat(types$1._default)) { // export default ...
    this.checkExport(exports, "default", this.lastTokStart);
    node.declaration = this.parseExportDefaultDeclaration();
    return this.finishNode(node, "ExportDefaultDeclaration")
  }
  // export var|const|let|function|class ...
  if (this.shouldParseExportStatement()) {
    node.declaration = this.parseExportDeclaration(node);
    if (node.declaration.type === "VariableDeclaration")
      { this.checkVariableExport(exports, node.declaration.declarations); }
    else
      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }
    node.specifiers = [];
    node.source = null;
    if (this.options.ecmaVersion >= 16)
      { node.attributes = []; }
  } else { // export { x, y as z } [from '...']
    node.declaration = null;
    node.specifiers = this.parseExportSpecifiers(exports);
    if (this.eatContextual("from")) {
      if (this.type !== types$1.string) { this.unexpected(); }
      node.source = this.parseExprAtom();
      if (this.options.ecmaVersion >= 16)
        { node.attributes = this.parseWithClause(); }
    } else {
      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {
        // check for keywords used as local names
        var spec = list[i];

        this.checkUnreserved(spec.local);
        // check if export is defined
        this.checkLocalExport(spec.local);

        if (spec.local.type === "Literal") {
          this.raise(spec.local.start, "A string literal cannot be used as an exported binding without `from`.");
        }
      }

      node.source = null;
      if (this.options.ecmaVersion >= 16)
        { node.attributes = []; }
    }
    this.semicolon();
  }
  return this.finishNode(node, "ExportNamedDeclaration")
};

pp$8.parseExportDeclaration = function(node) {
  return this.parseStatement(null)
};

pp$8.parseExportDefaultDeclaration = function() {
  var isAsync;
  if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {
    var fNode = this.startNode();
    this.next();
    if (isAsync) { this.next(); }
    return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)
  } else if (this.type === types$1._class) {
    var cNode = this.startNode();
    return this.parseClass(cNode, "nullableID")
  } else {
    var declaration = this.parseMaybeAssign();
    this.semicolon();
    return declaration
  }
};

pp$8.checkExport = function(exports, name, pos) {
  if (!exports) { return }
  if (typeof name !== "string")
    { name = name.type === "Identifier" ? name.name : name.value; }
  if (hasOwn(exports, name))
    { this.raiseRecoverable(pos, "Duplicate export '" + name + "'"); }
  exports[name] = true;
};

pp$8.checkPatternExport = function(exports, pat) {
  var type = pat.type;
  if (type === "Identifier")
    { this.checkExport(exports, pat, pat.start); }
  else if (type === "ObjectPattern")
    { for (var i = 0, list = pat.properties; i < list.length; i += 1)
      {
        var prop = list[i];

        this.checkPatternExport(exports, prop);
      } }
  else if (type === "ArrayPattern")
    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {
      var elt = list$1[i$1];

        if (elt) { this.checkPatternExport(exports, elt); }
    } }
  else if (type === "Property")
    { this.checkPatternExport(exports, pat.value); }
  else if (type === "AssignmentPattern")
    { this.checkPatternExport(exports, pat.left); }
  else if (type === "RestElement")
    { this.checkPatternExport(exports, pat.argument); }
};

pp$8.checkVariableExport = function(exports, decls) {
  if (!exports) { return }
  for (var i = 0, list = decls; i < list.length; i += 1)
    {
    var decl = list[i];

    this.checkPatternExport(exports, decl.id);
  }
};

pp$8.shouldParseExportStatement = function() {
  return this.type.keyword === "var" ||
    this.type.keyword === "const" ||
    this.type.keyword === "class" ||
    this.type.keyword === "function" ||
    this.isLet() ||
    this.isAsyncFunction()
};

// Parses a comma-separated list of module exports.

pp$8.parseExportSpecifier = function(exports) {
  var node = this.startNode();
  node.local = this.parseModuleExportName();

  node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local;
  this.checkExport(
    exports,
    node.exported,
    node.exported.start
  );

  return this.finishNode(node, "ExportSpecifier")
};

pp$8.parseExportSpecifiers = function(exports) {
  var nodes = [], first = true;
  // export { x, y as z } [from '...']
  this.expect(types$1.braceL);
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) { break }
    } else { first = false; }

    nodes.push(this.parseExportSpecifier(exports));
  }
  return nodes
};

// Parses import declaration.

pp$8.parseImport = function(node) {
  this.next();

  // import '...'
  if (this.type === types$1.string) {
    node.specifiers = empty$1;
    node.source = this.parseExprAtom();
  } else {
    node.specifiers = this.parseImportSpecifiers();
    this.expectContextual("from");
    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();
  }
  if (this.options.ecmaVersion >= 16)
    { node.attributes = this.parseWithClause(); }
  this.semicolon();
  return this.finishNode(node, "ImportDeclaration")
};

// Parses a comma-separated list of module imports.

pp$8.parseImportSpecifier = function() {
  var node = this.startNode();
  node.imported = this.parseModuleExportName();

  if (this.eatContextual("as")) {
    node.local = this.parseIdent();
  } else {
    this.checkUnreserved(node.imported);
    node.local = node.imported;
  }
  this.checkLValSimple(node.local, BIND_LEXICAL);

  return this.finishNode(node, "ImportSpecifier")
};

pp$8.parseImportDefaultSpecifier = function() {
  // import defaultObj, { x, y as z } from '...'
  var node = this.startNode();
  node.local = this.parseIdent();
  this.checkLValSimple(node.local, BIND_LEXICAL);
  return this.finishNode(node, "ImportDefaultSpecifier")
};

pp$8.parseImportNamespaceSpecifier = function() {
  var node = this.startNode();
  this.next();
  this.expectContextual("as");
  node.local = this.parseIdent();
  this.checkLValSimple(node.local, BIND_LEXICAL);
  return this.finishNode(node, "ImportNamespaceSpecifier")
};

pp$8.parseImportSpecifiers = function() {
  var nodes = [], first = true;
  if (this.type === types$1.name) {
    nodes.push(this.parseImportDefaultSpecifier());
    if (!this.eat(types$1.comma)) { return nodes }
  }
  if (this.type === types$1.star) {
    nodes.push(this.parseImportNamespaceSpecifier());
    return nodes
  }
  this.expect(types$1.braceL);
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) { break }
    } else { first = false; }

    nodes.push(this.parseImportSpecifier());
  }
  return nodes
};

pp$8.parseWithClause = function() {
  var nodes = [];
  if (!this.eat(types$1._with)) {
    return nodes
  }
  this.expect(types$1.braceL);
  var attributeKeys = {};
  var first = true;
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.afterTrailingComma(types$1.braceR)) { break }
    } else { first = false; }

    var attr = this.parseImportAttribute();
    var keyName = attr.key.type === "Identifier" ? attr.key.name : attr.key.value;
    if (hasOwn(attributeKeys, keyName))
      { this.raiseRecoverable(attr.key.start, "Duplicate attribute key '" + keyName + "'"); }
    attributeKeys[keyName] = true;
    nodes.push(attr);
  }
  return nodes
};

pp$8.parseImportAttribute = function() {
  var node = this.startNode();
  node.key = this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");
  this.expect(types$1.colon);
  if (this.type !== types$1.string) {
    this.unexpected();
  }
  node.value = this.parseExprAtom();
  return this.finishNode(node, "ImportAttribute")
};

pp$8.parseModuleExportName = function() {
  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {
    var stringLiteral = this.parseLiteral(this.value);
    if (loneSurrogate.test(stringLiteral.value)) {
      this.raise(stringLiteral.start, "An export name cannot include a lone surrogate.");
    }
    return stringLiteral
  }
  return this.parseIdent(true)
};

// Set `ExpressionStatement#directive` property for directive prologues.
pp$8.adaptDirectivePrologue = function(statements) {
  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {
    statements[i].directive = statements[i].expression.raw.slice(1, -1);
  }
};
pp$8.isDirectiveCandidate = function(statement) {
  return (
    this.options.ecmaVersion >= 5 &&
    statement.type === "ExpressionStatement" &&
    statement.expression.type === "Literal" &&
    typeof statement.expression.value === "string" &&
    // Reject parenthesized strings.
    (this.input[statement.start] === "\"" || this.input[statement.start] === "'")
  )
};

var pp$7 = Parser.prototype;

// Convert existing expression atom to assignable pattern
// if possible.

pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 6 && node) {
    switch (node.type) {
    case "Identifier":
      if (this.inAsync && node.name === "await")
        { this.raise(node.start, "Cannot use 'await' as identifier inside an async function"); }
      break

    case "ObjectPattern":
    case "ArrayPattern":
    case "AssignmentPattern":
    case "RestElement":
      break

    case "ObjectExpression":
      node.type = "ObjectPattern";
      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
      for (var i = 0, list = node.properties; i < list.length; i += 1) {
        var prop = list[i];

      this.toAssignable(prop, isBinding);
        // Early error:
        //   AssignmentRestProperty[Yield, Await] :
        //     `...` DestructuringAssignmentTarget[Yield, Await]
        //
        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.
        if (
          prop.type === "RestElement" &&
          (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")
        ) {
          this.raise(prop.argument.start, "Unexpected token");
        }
      }
      break

    case "Property":
      // AssignmentProperty has type === "Property"
      if (node.kind !== "init") { this.raise(node.key.start, "Object pattern can't contain getter or setter"); }
      this.toAssignable(node.value, isBinding);
      break

    case "ArrayExpression":
      node.type = "ArrayPattern";
      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
      this.toAssignableList(node.elements, isBinding);
      break

    case "SpreadElement":
      node.type = "RestElement";
      this.toAssignable(node.argument, isBinding);
      if (node.argument.type === "AssignmentPattern")
        { this.raise(node.argument.start, "Rest elements cannot have a default value"); }
      break

    case "AssignmentExpression":
      if (node.operator !== "=") { this.raise(node.left.end, "Only '=' operator can be used for specifying default value."); }
      node.type = "AssignmentPattern";
      delete node.operator;
      this.toAssignable(node.left, isBinding);
      break

    case "ParenthesizedExpression":
      this.toAssignable(node.expression, isBinding, refDestructuringErrors);
      break

    case "ChainExpression":
      this.raiseRecoverable(node.start, "Optional chaining cannot appear in left-hand side");
      break

    case "MemberExpression":
      if (!isBinding) { break }

    default:
      this.raise(node.start, "Assigning to rvalue");
    }
  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }
  return node
};

// Convert list of expression atoms to binding list.

pp$7.toAssignableList = function(exprList, isBinding) {
  var end = exprList.length;
  for (var i = 0; i < end; i++) {
    var elt = exprList[i];
    if (elt) { this.toAssignable(elt, isBinding); }
  }
  if (end) {
    var last = exprList[end - 1];
    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier")
      { this.unexpected(last.argument.start); }
  }
  return exprList
};

// Parses spread element.

pp$7.parseSpread = function(refDestructuringErrors) {
  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);
  return this.finishNode(node, "SpreadElement")
};

pp$7.parseRestBinding = function() {
  var node = this.startNode();
  this.next();

  // RestElement inside of a function parameter must be an identifier
  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)
    { this.unexpected(); }

  node.argument = this.parseBindingAtom();

  return this.finishNode(node, "RestElement")
};

// Parses lvalue (assignable) atom.

pp$7.parseBindingAtom = function() {
  if (this.options.ecmaVersion >= 6) {
    switch (this.type) {
    case types$1.bracketL:
      var node = this.startNode();
      this.next();
      node.elements = this.parseBindingList(types$1.bracketR, true, true);
      return this.finishNode(node, "ArrayPattern")

    case types$1.braceL:
      return this.parseObj(true)
    }
  }
  return this.parseIdent()
};

pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {
  var elts = [], first = true;
  while (!this.eat(close)) {
    if (first) { first = false; }
    else { this.expect(types$1.comma); }
    if (allowEmpty && this.type === types$1.comma) {
      elts.push(null);
    } else if (allowTrailingComma && this.afterTrailingComma(close)) {
      break
    } else if (this.type === types$1.ellipsis) {
      var rest = this.parseRestBinding();
      this.parseBindingListItem(rest);
      elts.push(rest);
      if (this.type === types$1.comma) { this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"); }
      this.expect(close);
      break
    } else {
      elts.push(this.parseAssignableListItem(allowModifiers));
    }
  }
  return elts
};

pp$7.parseAssignableListItem = function(allowModifiers) {
  var elem = this.parseMaybeDefault(this.start, this.startLoc);
  this.parseBindingListItem(elem);
  return elem
};

pp$7.parseBindingListItem = function(param) {
  return param
};

// Parses assignment pattern around given atom if possible.

pp$7.parseMaybeDefault = function(startPos, startLoc, left) {
  left = left || this.parseBindingAtom();
  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.right = this.parseMaybeAssign();
  return this.finishNode(node, "AssignmentPattern")
};

// The following three functions all verify that a node is an lvalue —
// something that can be bound, or assigned to. In order to do so, they perform
// a variety of checks:
//
// - Check that none of the bound/assigned-to identifiers are reserved words.
// - Record name declarations for bindings in the appropriate scope.
// - Check duplicate argument names, if checkClashes is set.
//
// If a complex binding pattern is encountered (e.g., object and array
// destructuring), the entire pattern is recursively checked.
//
// There are three versions of checkLVal*() appropriate for different
// circumstances:
//
// - checkLValSimple() shall be used if the syntactic construct supports
//   nothing other than identifiers and member expressions. Parenthesized
//   expressions are also correctly handled. This is generally appropriate for
//   constructs for which the spec says
//
//   > It is a Syntax Error if AssignmentTargetType of [the production] is not
//   > simple.
//
//   It is also appropriate for checking if an identifier is valid and not
//   defined elsewhere, like import declarations or function/class identifiers.
//
//   Examples where this is used include:
//     a += …;
//     import a from '…';
//   where a is the node to be checked.
//
// - checkLValPattern() shall be used if the syntactic construct supports
//   anything checkLValSimple() supports, as well as object and array
//   destructuring patterns. This is generally appropriate for constructs for
//   which the spec says
//
//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor
//   > an ArrayLiteral and AssignmentTargetType of [the production] is not
//   > simple.
//
//   Examples where this is used include:
//     (a = …);
//     const a = …;
//     try { … } catch (a) { … }
//   where a is the node to be checked.
//
// - checkLValInnerPattern() shall be used if the syntactic construct supports
//   anything checkLValPattern() supports, as well as default assignment
//   patterns, rest elements, and other constructs that may appear within an
//   object or array destructuring pattern.
//
//   As a special case, function parameters also use checkLValInnerPattern(),
//   as they also support defaults and rest constructs.
//
// These functions deliberately support both assignment and binding constructs,
// as the logic for both is exceedingly similar. If the node is the target of
// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it
// should be set to the appropriate BIND_* constant, like BIND_VAR or
// BIND_LEXICAL.
//
// If the function is called with a non-BIND_NONE bindingType, then
// additionally a checkClashes object may be specified to allow checking for
// duplicate argument names. checkClashes is ignored if the provided construct
// is an assignment (i.e., bindingType is BIND_NONE).

pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {
  if ( bindingType === void 0 ) bindingType = BIND_NONE;

  var isBind = bindingType !== BIND_NONE;

  switch (expr.type) {
  case "Identifier":
    if (this.strict && this.reservedWordsStrictBind.test(expr.name))
      { this.raiseRecoverable(expr.start, (isBind ? "Binding " : "Assigning to ") + expr.name + " in strict mode"); }
    if (isBind) {
      if (bindingType === BIND_LEXICAL && expr.name === "let")
        { this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name"); }
      if (checkClashes) {
        if (hasOwn(checkClashes, expr.name))
          { this.raiseRecoverable(expr.start, "Argument name clash"); }
        checkClashes[expr.name] = true;
      }
      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }
    }
    break

  case "ChainExpression":
    this.raiseRecoverable(expr.start, "Optional chaining cannot appear in left-hand side");
    break

  case "MemberExpression":
    if (isBind) { this.raiseRecoverable(expr.start, "Binding member expression"); }
    break

  case "ParenthesizedExpression":
    if (isBind) { this.raiseRecoverable(expr.start, "Binding parenthesized expression"); }
    return this.checkLValSimple(expr.expression, bindingType, checkClashes)

  default:
    this.raise(expr.start, (isBind ? "Binding" : "Assigning to") + " rvalue");
  }
};

pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {
  if ( bindingType === void 0 ) bindingType = BIND_NONE;

  switch (expr.type) {
  case "ObjectPattern":
    for (var i = 0, list = expr.properties; i < list.length; i += 1) {
      var prop = list[i];

    this.checkLValInnerPattern(prop, bindingType, checkClashes);
    }
    break

  case "ArrayPattern":
    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {
      var elem = list$1[i$1];

    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }
    }
    break

  default:
    this.checkLValSimple(expr, bindingType, checkClashes);
  }
};

pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {
  if ( bindingType === void 0 ) bindingType = BIND_NONE;

  switch (expr.type) {
  case "Property":
    // AssignmentProperty has type === "Property"
    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);
    break

  case "AssignmentPattern":
    this.checkLValPattern(expr.left, bindingType, checkClashes);
    break

  case "RestElement":
    this.checkLValPattern(expr.argument, bindingType, checkClashes);
    break

  default:
    this.checkLValPattern(expr, bindingType, checkClashes);
  }
};

// The algorithm used to determine whether a regexp can appear at a
// given point in the program is loosely based on sweet.js' approach.
// See https://github.com/mozilla/sweet.js/wiki/design


var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {
  this.token = token;
  this.isExpr = !!isExpr;
  this.preserveSpace = !!preserveSpace;
  this.override = override;
  this.generator = !!generator;
};

var types = {
  b_stat: new TokContext("{", false),
  b_expr: new TokContext("{", true),
  b_tmpl: new TokContext("${", false),
  p_stat: new TokContext("(", false),
  p_expr: new TokContext("(", true),
  q_tmpl: new TokContext("`", true, true, function (p) { return p.tryReadTemplateToken(); }),
  f_stat: new TokContext("function", false),
  f_expr: new TokContext("function", true),
  f_expr_gen: new TokContext("function", true, false, null, true),
  f_gen: new TokContext("function", false, false, null, true)
};

var pp$6 = Parser.prototype;

pp$6.initialContext = function() {
  return [types.b_stat]
};

pp$6.curContext = function() {
  return this.context[this.context.length - 1]
};

pp$6.braceIsBlock = function(prevType) {
  var parent = this.curContext();
  if (parent === types.f_expr || parent === types.f_stat)
    { return true }
  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))
    { return !parent.isExpr }

  // The check for `tt.name && exprAllowed` detects whether we are
  // after a `yield` or `of` construct. See the `updateContext` for
  // `tt.name`.
  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)
    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }
  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)
    { return true }
  if (prevType === types$1.braceL)
    { return parent === types.b_stat }
  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)
    { return false }
  return !this.exprAllowed
};

pp$6.inGeneratorContext = function() {
  for (var i = this.context.length - 1; i >= 1; i--) {
    var context = this.context[i];
    if (context.token === "function")
      { return context.generator }
  }
  return false
};

pp$6.updateContext = function(prevType) {
  var update, type = this.type;
  if (type.keyword && prevType === types$1.dot)
    { this.exprAllowed = false; }
  else if (update = type.updateContext)
    { update.call(this, prevType); }
  else
    { this.exprAllowed = type.beforeExpr; }
};

// Used to handle edge cases when token context could not be inferred correctly during tokenization phase

pp$6.overrideContext = function(tokenCtx) {
  if (this.curContext() !== tokenCtx) {
    this.context[this.context.length - 1] = tokenCtx;
  }
};

// Token-specific context update code

types$1.parenR.updateContext = types$1.braceR.updateContext = function() {
  if (this.context.length === 1) {
    this.exprAllowed = true;
    return
  }
  var out = this.context.pop();
  if (out === types.b_stat && this.curContext().token === "function") {
    out = this.context.pop();
  }
  this.exprAllowed = !out.isExpr;
};

types$1.braceL.updateContext = function(prevType) {
  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);
  this.exprAllowed = true;
};

types$1.dollarBraceL.updateContext = function() {
  this.context.push(types.b_tmpl);
  this.exprAllowed = true;
};

types$1.parenL.updateContext = function(prevType) {
  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;
  this.context.push(statementParens ? types.p_stat : types.p_expr);
  this.exprAllowed = true;
};

types$1.incDec.updateContext = function() {
  // tokExprAllowed stays unchanged
};

types$1._function.updateContext = types$1._class.updateContext = function(prevType) {
  if (prevType.beforeExpr && prevType !== types$1._else &&
      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&
      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&
      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))
    { this.context.push(types.f_expr); }
  else
    { this.context.push(types.f_stat); }
  this.exprAllowed = false;
};

types$1.colon.updateContext = function() {
  if (this.curContext().token === "function") { this.context.pop(); }
  this.exprAllowed = true;
};

types$1.backQuote.updateContext = function() {
  if (this.curContext() === types.q_tmpl)
    { this.context.pop(); }
  else
    { this.context.push(types.q_tmpl); }
  this.exprAllowed = false;
};

types$1.star.updateContext = function(prevType) {
  if (prevType === types$1._function) {
    var index = this.context.length - 1;
    if (this.context[index] === types.f_expr)
      { this.context[index] = types.f_expr_gen; }
    else
      { this.context[index] = types.f_gen; }
  }
  this.exprAllowed = true;
};

types$1.name.updateContext = function(prevType) {
  var allowed = false;
  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {
    if (this.value === "of" && !this.exprAllowed ||
        this.value === "yield" && this.inGeneratorContext())
      { allowed = true; }
  }
  this.exprAllowed = allowed;
};

// A recursive descent parser operates by defining functions for all
// syntactic elements, and recursively calling those, each function
// advancing the input stream and returning an AST node. Precedence
// of constructs (for example, the fact that `!x[1]` means `!(x[1])`
// instead of `(!x)[1]` is handled by the fact that the parser
// function that parses unary prefix operators is called first, and
// in turn calls the function that parses `[]` subscripts — that
// way, it'll receive the node for `x[1]` already parsed, and wraps
// *that* in the unary operator node.
//
// Acorn uses an [operator precedence parser][opp] to handle binary
// operator precedence, because it is much more compact than using
// the technique outlined above, which uses different, nesting
// functions to specify precedence, for all of the ten binary
// precedence levels that JavaScript defines.
//
// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser


var pp$5 = Parser.prototype;

// Check if property name clashes with already added.
// Object/class getters and setters are not allowed to clash —
// either with each other or with an init property — and in
// strict mode, init properties are also not allowed to be repeated.

pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {
  if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement")
    { return }
  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))
    { return }
  var key = prop.key;
  var name;
  switch (key.type) {
  case "Identifier": name = key.name; break
  case "Literal": name = String(key.value); break
  default: return
  }
  var kind = prop.kind;
  if (this.options.ecmaVersion >= 6) {
    if (name === "__proto__" && kind === "init") {
      if (propHash.proto) {
        if (refDestructuringErrors) {
          if (refDestructuringErrors.doubleProto < 0) {
            refDestructuringErrors.doubleProto = key.start;
          }
        } else {
          this.raiseRecoverable(key.start, "Redefinition of __proto__ property");
        }
      }
      propHash.proto = true;
    }
    return
  }
  name = "$" + name;
  var other = propHash[name];
  if (other) {
    var redefinition;
    if (kind === "init") {
      redefinition = this.strict && other.init || other.get || other.set;
    } else {
      redefinition = other.init || other[kind];
    }
    if (redefinition)
      { this.raiseRecoverable(key.start, "Redefinition of property"); }
  } else {
    other = propHash[name] = {
      init: false,
      get: false,
      set: false
    };
  }
  other[kind] = true;
};

// ### Expression parsing

// These nest, from the most general expression type at the top to
// 'atomic', nondivisible expression types at the bottom. Most of
// the functions will simply let the function(s) below them parse,
// and, *if* the syntactic construct they handle is present, wrap
// the AST node that the inner parser gave them in another node.

// Parse a full expression. The optional arguments are used to
// forbid the `in` operator (in for loops initalization expressions)
// and provide reference for storing '=' operator inside shorthand
// property assignment in contexts where both object expression
// and object pattern might appear (so it's possible to raise
// delayed syntax error at correct position).

pp$5.parseExpression = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);
  if (this.type === types$1.comma) {
    var node = this.startNodeAt(startPos, startLoc);
    node.expressions = [expr];
    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }
    return this.finishNode(node, "SequenceExpression")
  }
  return expr
};

// Parse an assignment expression. This includes applications of
// operators like `+=`.

pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {
  if (this.isContextual("yield")) {
    if (this.inGenerator) { return this.parseYield(forInit) }
    // The tokenizer will assume an expression is allowed after
    // `yield`, but this isn't that kind of yield
    else { this.exprAllowed = false; }
  }

  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;
  if (refDestructuringErrors) {
    oldParenAssign = refDestructuringErrors.parenthesizedAssign;
    oldTrailingComma = refDestructuringErrors.trailingComma;
    oldDoubleProto = refDestructuringErrors.doubleProto;
    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;
  } else {
    refDestructuringErrors = new DestructuringErrors;
    ownDestructuringErrors = true;
  }

  var startPos = this.start, startLoc = this.startLoc;
  if (this.type === types$1.parenL || this.type === types$1.name) {
    this.potentialArrowAt = this.start;
    this.potentialArrowInForAwait = forInit === "await";
  }
  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);
  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }
  if (this.type.isAssign) {
    var node = this.startNodeAt(startPos, startLoc);
    node.operator = this.value;
    if (this.type === types$1.eq)
      { left = this.toAssignable(left, false, refDestructuringErrors); }
    if (!ownDestructuringErrors) {
      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;
    }
    if (refDestructuringErrors.shorthandAssign >= left.start)
      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly
    if (this.type === types$1.eq)
      { this.checkLValPattern(left); }
    else
      { this.checkLValSimple(left); }
    node.left = left;
    this.next();
    node.right = this.parseMaybeAssign(forInit);
    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }
    return this.finishNode(node, "AssignmentExpression")
  } else {
    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }
  }
  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }
  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }
  return left
};

// Parse a ternary conditional (`?:`) operator.

pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprOps(forInit, refDestructuringErrors);
  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
  if (this.eat(types$1.question)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.test = expr;
    node.consequent = this.parseMaybeAssign();
    this.expect(types$1.colon);
    node.alternate = this.parseMaybeAssign(forInit);
    return this.finishNode(node, "ConditionalExpression")
  }
  return expr
};

// Start the precedence parser.

pp$5.parseExprOps = function(forInit, refDestructuringErrors) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);
  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
  return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)
};

// Parse binary operators with the operator precedence parsing
// algorithm. `left` is the left-hand side of the operator.
// `minPrec` provides context that allows the function to stop and
// defer further parser to one of its callers when it encounters an
// operator that has a lower precedence than the set it is parsing.

pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {
  var prec = this.type.binop;
  if (prec != null && (!forInit || this.type !== types$1._in)) {
    if (prec > minPrec) {
      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;
      var coalesce = this.type === types$1.coalesce;
      if (coalesce) {
        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.
        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.
        prec = types$1.logicalAND.binop;
      }
      var op = this.value;
      this.next();
      var startPos = this.start, startLoc = this.startLoc;
      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);
      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);
      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {
        this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");
      }
      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)
    }
  }
  return left
};

pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {
  if (right.type === "PrivateIdentifier") { this.raise(right.start, "Private identifier can only be left side of binary expression"); }
  var node = this.startNodeAt(startPos, startLoc);
  node.left = left;
  node.operator = op;
  node.right = right;
  return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression")
};

// Parse unary operators, both prefix and postfix.

pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {
  var startPos = this.start, startLoc = this.startLoc, expr;
  if (this.isContextual("await") && this.canAwait) {
    expr = this.parseAwait(forInit);
    sawUnary = true;
  } else if (this.type.prefix) {
    var node = this.startNode(), update = this.type === types$1.incDec;
    node.operator = this.value;
    node.prefix = true;
    this.next();
    node.argument = this.parseMaybeUnary(null, true, update, forInit);
    this.checkExpressionErrors(refDestructuringErrors, true);
    if (update) { this.checkLValSimple(node.argument); }
    else if (this.strict && node.operator === "delete" && isLocalVariableAccess(node.argument))
      { this.raiseRecoverable(node.start, "Deleting local variable in strict mode"); }
    else if (node.operator === "delete" && isPrivateFieldAccess(node.argument))
      { this.raiseRecoverable(node.start, "Private fields can not be deleted"); }
    else { sawUnary = true; }
    expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
  } else if (!sawUnary && this.type === types$1.privateId) {
    if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }
    expr = this.parsePrivateIdent();
    // only could be private fields in 'in', such as #x in obj
    if (this.type !== types$1._in) { this.unexpected(); }
  } else {
    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);
    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }
    while (this.type.postfix && !this.canInsertSemicolon()) {
      var node$1 = this.startNodeAt(startPos, startLoc);
      node$1.operator = this.value;
      node$1.prefix = false;
      node$1.argument = expr;
      this.checkLValSimple(expr);
      this.next();
      expr = this.finishNode(node$1, "UpdateExpression");
    }
  }

  if (!incDec && this.eat(types$1.starstar)) {
    if (sawUnary)
      { this.unexpected(this.lastTokStart); }
    else
      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), "**", false) }
  } else {
    return expr
  }
};

function isLocalVariableAccess(node) {
  return (
    node.type === "Identifier" ||
    node.type === "ParenthesizedExpression" && isLocalVariableAccess(node.expression)
  )
}

function isPrivateFieldAccess(node) {
  return (
    node.type === "MemberExpression" && node.property.type === "PrivateIdentifier" ||
    node.type === "ChainExpression" && isPrivateFieldAccess(node.expression) ||
    node.type === "ParenthesizedExpression" && isPrivateFieldAccess(node.expression)
  )
}

// Parse call, dot, and `[]`-subscript expressions.

pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {
  var startPos = this.start, startLoc = this.startLoc;
  var expr = this.parseExprAtom(refDestructuringErrors, forInit);
  if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")")
    { return expr }
  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);
  if (refDestructuringErrors && result.type === "MemberExpression") {
    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }
    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }
    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }
  }
  return result
};

pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {
  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" &&
      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&
      this.potentialArrowAt === base.start;
  var optionalChained = false;

  while (true) {
    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);

    if (element.optional) { optionalChained = true; }
    if (element === base || element.type === "ArrowFunctionExpression") {
      if (optionalChained) {
        var chainNode = this.startNodeAt(startPos, startLoc);
        chainNode.expression = element;
        element = this.finishNode(chainNode, "ChainExpression");
      }
      return element
    }

    base = element;
  }
};

pp$5.shouldParseAsyncArrow = function() {
  return !this.canInsertSemicolon() && this.eat(types$1.arrow)
};

pp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {
  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)
};

pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {
  var optionalSupported = this.options.ecmaVersion >= 11;
  var optional = optionalSupported && this.eat(types$1.questionDot);
  if (noCalls && optional) { this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions"); }

  var computed = this.eat(types$1.bracketL);
  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {
    var node = this.startNodeAt(startPos, startLoc);
    node.object = base;
    if (computed) {
      node.property = this.parseExpression();
      this.expect(types$1.bracketR);
    } else if (this.type === types$1.privateId && base.type !== "Super") {
      node.property = this.parsePrivateIdent();
    } else {
      node.property = this.parseIdent(this.options.allowReserved !== "never");
    }
    node.computed = !!computed;
    if (optionalSupported) {
      node.optional = optional;
    }
    base = this.finishNode(node, "MemberExpression");
  } else if (!noCalls && this.eat(types$1.parenL)) {
    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;
    this.yieldPos = 0;
    this.awaitPos = 0;
    this.awaitIdentPos = 0;
    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);
    if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      if (this.awaitIdentPos > 0)
        { this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function"); }
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      this.awaitIdentPos = oldAwaitIdentPos;
      return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)
    }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;
    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;
    var node$1 = this.startNodeAt(startPos, startLoc);
    node$1.callee = base;
    node$1.arguments = exprList;
    if (optionalSupported) {
      node$1.optional = optional;
    }
    base = this.finishNode(node$1, "CallExpression");
  } else if (this.type === types$1.backQuote) {
    if (optional || optionalChained) {
      this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
    }
    var node$2 = this.startNodeAt(startPos, startLoc);
    node$2.tag = base;
    node$2.quasi = this.parseTemplate({isTagged: true});
    base = this.finishNode(node$2, "TaggedTemplateExpression");
  }
  return base
};

// Parse an atomic expression — either a single token that is an
// expression, an expression started by a keyword like `function` or
// `new`, or an expression wrapped in punctuation like `()`, `[]`,
// or `{}`.

pp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {
  // If a division operator appears in an expression position, the
  // tokenizer got confused, and we force it to read a regexp instead.
  if (this.type === types$1.slash) { this.readRegexp(); }

  var node, canBeArrow = this.potentialArrowAt === this.start;
  switch (this.type) {
  case types$1._super:
    if (!this.allowSuper)
      { this.raise(this.start, "'super' keyword outside a method"); }
    node = this.startNode();
    this.next();
    if (this.type === types$1.parenL && !this.allowDirectSuper)
      { this.raise(node.start, "super() call outside constructor of a subclass"); }
    // The `super` keyword can appear at below:
    // SuperProperty:
    //     super [ Expression ]
    //     super . IdentifierName
    // SuperCall:
    //     super ( Arguments )
    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)
      { this.unexpected(); }
    return this.finishNode(node, "Super")

  case types$1._this:
    node = this.startNode();
    this.next();
    return this.finishNode(node, "ThisExpression")

  case types$1.name:
    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;
    var id = this.parseIdent(false);
    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types$1._function)) {
      this.overrideContext(types.f_expr);
      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)
    }
    if (canBeArrow && !this.canInsertSemicolon()) {
      if (this.eat(types$1.arrow))
        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }
      if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types$1.name && !containsEsc &&
          (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) {
        id = this.parseIdent(false);
        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))
          { this.unexpected(); }
        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)
      }
    }
    return id

  case types$1.regexp:
    var value = this.value;
    node = this.parseLiteral(value.value);
    node.regex = {pattern: value.pattern, flags: value.flags};
    return node

  case types$1.num: case types$1.string:
    return this.parseLiteral(this.value)

  case types$1._null: case types$1._true: case types$1._false:
    node = this.startNode();
    node.value = this.type === types$1._null ? null : this.type === types$1._true;
    node.raw = this.type.keyword;
    this.next();
    return this.finishNode(node, "Literal")

  case types$1.parenL:
    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);
    if (refDestructuringErrors) {
      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))
        { refDestructuringErrors.parenthesizedAssign = start; }
      if (refDestructuringErrors.parenthesizedBind < 0)
        { refDestructuringErrors.parenthesizedBind = start; }
    }
    return expr

  case types$1.bracketL:
    node = this.startNode();
    this.next();
    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);
    return this.finishNode(node, "ArrayExpression")

  case types$1.braceL:
    this.overrideContext(types.b_expr);
    return this.parseObj(false, refDestructuringErrors)

  case types$1._function:
    node = this.startNode();
    this.next();
    return this.parseFunction(node, 0)

  case types$1._class:
    return this.parseClass(this.startNode(), false)

  case types$1._new:
    return this.parseNew()

  case types$1.backQuote:
    return this.parseTemplate()

  case types$1._import:
    if (this.options.ecmaVersion >= 11) {
      return this.parseExprImport(forNew)
    } else {
      return this.unexpected()
    }

  default:
    return this.parseExprAtomDefault()
  }
};

pp$5.parseExprAtomDefault = function() {
  this.unexpected();
};

pp$5.parseExprImport = function(forNew) {
  var node = this.startNode();

  // Consume `import` as an identifier for `import.meta`.
  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.
  if (this.containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keyword import"); }
  this.next();

  if (this.type === types$1.parenL && !forNew) {
    return this.parseDynamicImport(node)
  } else if (this.type === types$1.dot) {
    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);
    meta.name = "import";
    node.meta = this.finishNode(meta, "Identifier");
    return this.parseImportMeta(node)
  } else {
    this.unexpected();
  }
};

pp$5.parseDynamicImport = function(node) {
  this.next(); // skip `(`

  // Parse node.source.
  node.source = this.parseMaybeAssign();

  if (this.options.ecmaVersion >= 16) {
    if (!this.eat(types$1.parenR)) {
      this.expect(types$1.comma);
      if (!this.afterTrailingComma(types$1.parenR)) {
        node.options = this.parseMaybeAssign();
        if (!this.eat(types$1.parenR)) {
          this.expect(types$1.comma);
          if (!this.afterTrailingComma(types$1.parenR)) {
            this.unexpected();
          }
        }
      } else {
        node.options = null;
      }
    } else {
      node.options = null;
    }
  } else {
    // Verify ending.
    if (!this.eat(types$1.parenR)) {
      var errorPos = this.start;
      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {
        this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");
      } else {
        this.unexpected(errorPos);
      }
    }
  }

  return this.finishNode(node, "ImportExpression")
};

pp$5.parseImportMeta = function(node) {
  this.next(); // skip `.`

  var containsEsc = this.containsEsc;
  node.property = this.parseIdent(true);

  if (node.property.name !== "meta")
    { this.raiseRecoverable(node.property.start, "The only valid meta property for import is 'import.meta'"); }
  if (containsEsc)
    { this.raiseRecoverable(node.start, "'import.meta' must not contain escaped characters"); }
  if (this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere)
    { this.raiseRecoverable(node.start, "Cannot use 'import.meta' outside a module"); }

  return this.finishNode(node, "MetaProperty")
};

pp$5.parseLiteral = function(value) {
  var node = this.startNode();
  node.value = value;
  node.raw = this.input.slice(this.start, this.end);
  if (node.raw.charCodeAt(node.raw.length - 1) === 110)
    { node.bigint = node.value != null ? node.value.toString() : node.raw.slice(0, -1).replace(/_/g, ""); }
  this.next();
  return this.finishNode(node, "Literal")
};

pp$5.parseParenExpression = function() {
  this.expect(types$1.parenL);
  var val = this.parseExpression();
  this.expect(types$1.parenR);
  return val
};

pp$5.shouldParseArrow = function(exprList) {
  return !this.canInsertSemicolon()
};

pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {
  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;
  if (this.options.ecmaVersion >= 6) {
    this.next();

    var innerStartPos = this.start, innerStartLoc = this.startLoc;
    var exprList = [], first = true, lastIsComma = false;
    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;
    this.yieldPos = 0;
    this.awaitPos = 0;
    // Do not save awaitIdentPos to allow checking awaits nested in parameters
    while (this.type !== types$1.parenR) {
      first ? first = false : this.expect(types$1.comma);
      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {
        lastIsComma = true;
        break
      } else if (this.type === types$1.ellipsis) {
        spreadStart = this.start;
        exprList.push(this.parseParenItem(this.parseRestBinding()));
        if (this.type === types$1.comma) {
          this.raiseRecoverable(
            this.start,
            "Comma is not permitted after the rest element"
          );
        }
        break
      } else {
        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));
      }
    }
    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;
    this.expect(types$1.parenR);

    if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {
      this.checkPatternErrors(refDestructuringErrors, false);
      this.checkYieldAwaitInDefaultParams();
      this.yieldPos = oldYieldPos;
      this.awaitPos = oldAwaitPos;
      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)
    }

    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }
    if (spreadStart) { this.unexpected(spreadStart); }
    this.checkExpressionErrors(refDestructuringErrors, true);
    this.yieldPos = oldYieldPos || this.yieldPos;
    this.awaitPos = oldAwaitPos || this.awaitPos;

    if (exprList.length > 1) {
      val = this.startNodeAt(innerStartPos, innerStartLoc);
      val.expressions = exprList;
      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
    } else {
      val = exprList[0];
    }
  } else {
    val = this.parseParenExpression();
  }

  if (this.options.preserveParens) {
    var par = this.startNodeAt(startPos, startLoc);
    par.expression = val;
    return this.finishNode(par, "ParenthesizedExpression")
  } else {
    return val
  }
};

pp$5.parseParenItem = function(item) {
  return item
};

pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {
  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)
};

// New's precedence is slightly tricky. It must allow its argument to
// be a `[]` or dot subscript expression, but not a call — at least,
// not without wrapping it in parentheses. Thus, it uses the noCalls
// argument to parseSubscripts to prevent it from consuming the
// argument list.

var empty = [];

pp$5.parseNew = function() {
  if (this.containsEsc) { this.raiseRecoverable(this.start, "Escape sequence in keyword new"); }
  var node = this.startNode();
  this.next();
  if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {
    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);
    meta.name = "new";
    node.meta = this.finishNode(meta, "Identifier");
    this.next();
    var containsEsc = this.containsEsc;
    node.property = this.parseIdent(true);
    if (node.property.name !== "target")
      { this.raiseRecoverable(node.property.start, "The only valid meta property for new is 'new.target'"); }
    if (containsEsc)
      { this.raiseRecoverable(node.start, "'new.target' must not contain escaped characters"); }
    if (!this.allowNewDotTarget)
      { this.raiseRecoverable(node.start, "'new.target' can only be used in functions and class static block"); }
    return this.finishNode(node, "MetaProperty")
  }
  var startPos = this.start, startLoc = this.startLoc;
  node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);
  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }
  else { node.arguments = empty; }
  return this.finishNode(node, "NewExpression")
};

// Parse template expression.

pp$5.parseTemplateElement = function(ref) {
  var isTagged = ref.isTagged;

  var elem = this.startNode();
  if (this.type === types$1.invalidTemplate) {
    if (!isTagged) {
      this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");
    }
    elem.value = {
      raw: this.value.replace(/\r\n?/g, "\n"),
      cooked: null
    };
  } else {
    elem.value = {
      raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"),
      cooked: this.value
    };
  }
  this.next();
  elem.tail = this.type === types$1.backQuote;
  return this.finishNode(elem, "TemplateElement")
};

pp$5.parseTemplate = function(ref) {
  if ( ref === void 0 ) ref = {};
  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;

  var node = this.startNode();
  this.next();
  node.expressions = [];
  var curElt = this.parseTemplateElement({isTagged: isTagged});
  node.quasis = [curElt];
  while (!curElt.tail) {
    if (this.type === types$1.eof) { this.raise(this.pos, "Unterminated template literal"); }
    this.expect(types$1.dollarBraceL);
    node.expressions.push(this.parseExpression());
    this.expect(types$1.braceR);
    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));
  }
  this.next();
  return this.finishNode(node, "TemplateLiteral")
};

pp$5.isAsyncProp = function(prop) {
  return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" &&
    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&
    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))
};

// Parse an object literal or binding pattern.

pp$5.parseObj = function(isPattern, refDestructuringErrors) {
  var node = this.startNode(), first = true, propHash = {};
  node.properties = [];
  this.next();
  while (!this.eat(types$1.braceR)) {
    if (!first) {
      this.expect(types$1.comma);
      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }
    } else { first = false; }

    var prop = this.parseProperty(isPattern, refDestructuringErrors);
    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }
    node.properties.push(prop);
  }
  return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression")
};

pp$5.parseProperty = function(isPattern, refDestructuringErrors) {
  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;
  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {
    if (isPattern) {
      prop.argument = this.parseIdent(false);
      if (this.type === types$1.comma) {
        this.raiseRecoverable(this.start, "Comma is not permitted after the rest element");
      }
      return this.finishNode(prop, "RestElement")
    }
    // Parse argument.
    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);
    // To disallow trailing comma via `this.toAssignable()`.
    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {
      refDestructuringErrors.trailingComma = this.start;
    }
    // Finish
    return this.finishNode(prop, "SpreadElement")
  }
  if (this.options.ecmaVersion >= 6) {
    prop.method = false;
    prop.shorthand = false;
    if (isPattern || refDestructuringErrors) {
      startPos = this.start;
      startLoc = this.startLoc;
    }
    if (!isPattern)
      { isGenerator = this.eat(types$1.star); }
  }
  var containsEsc = this.containsEsc;
  this.parsePropertyName(prop);
  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {
    isAsync = true;
    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);
    this.parsePropertyName(prop);
  } else {
    isAsync = false;
  }
  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);
  return this.finishNode(prop, "Property")
};

pp$5.parseGetterSetter = function(prop) {
  var kind = prop.key.name;
  this.parsePropertyName(prop);
  prop.value = this.parseMethod(false);
  prop.kind = kind;
  var paramCount = prop.kind === "get" ? 0 : 1;
  if (prop.value.params.length !== paramCount) {
    var start = prop.value.start;
    if (prop.kind === "get")
      { this.raiseRecoverable(start, "getter should have no params"); }
    else
      { this.raiseRecoverable(start, "setter should have exactly one param"); }
  } else {
    if (prop.kind === "set" && prop.value.params[0].type === "RestElement")
      { this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params"); }
  }
};

pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {
  if ((isGenerator || isAsync) && this.type === types$1.colon)
    { this.unexpected(); }

  if (this.eat(types$1.colon)) {
    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);
    prop.kind = "init";
  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {
    if (isPattern) { this.unexpected(); }
    prop.method = true;
    prop.value = this.parseMethod(isGenerator, isAsync);
    prop.kind = "init";
  } else if (!isPattern && !containsEsc &&
             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &&
             (prop.key.name === "get" || prop.key.name === "set") &&
             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {
    if (isGenerator || isAsync) { this.unexpected(); }
    this.parseGetterSetter(prop);
  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {
    if (isGenerator || isAsync) { this.unexpected(); }
    this.checkUnreserved(prop.key);
    if (prop.key.name === "await" && !this.awaitIdentPos)
      { this.awaitIdentPos = startPos; }
    if (isPattern) {
      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
    } else if (this.type === types$1.eq && refDestructuringErrors) {
      if (refDestructuringErrors.shorthandAssign < 0)
        { refDestructuringErrors.shorthandAssign = this.start; }
      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));
    } else {
      prop.value = this.copyNode(prop.key);
    }
    prop.kind = "init";
    prop.shorthand = true;
  } else { this.unexpected(); }
};

pp$5.parsePropertyName = function(prop) {
  if (this.options.ecmaVersion >= 6) {
    if (this.eat(types$1.bracketL)) {
      prop.computed = true;
      prop.key = this.parseMaybeAssign();
      this.expect(types$1.bracketR);
      return prop.key
    } else {
      prop.computed = false;
    }
  }
  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never")
};

// Initialize empty function node.

pp$5.initFunction = function(node) {
  node.id = null;
  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }
  if (this.options.ecmaVersion >= 8) { node.async = false; }
};

// Parse object or class method.

pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {
  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;

  this.initFunction(node);
  if (this.options.ecmaVersion >= 6)
    { node.generator = isGenerator; }
  if (this.options.ecmaVersion >= 8)
    { node.async = !!isAsync; }

  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;
  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));

  this.expect(types$1.parenL);
  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);
  this.checkYieldAwaitInDefaultParams();
  this.parseFunctionBody(node, false, true, false);

  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, "FunctionExpression")
};

// Parse arrow function expression with given parameters.

pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {
  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;

  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);
  this.initFunction(node);
  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }

  this.yieldPos = 0;
  this.awaitPos = 0;
  this.awaitIdentPos = 0;

  node.params = this.toAssignableList(params, true);
  this.parseFunctionBody(node, true, false, forInit);

  this.yieldPos = oldYieldPos;
  this.awaitPos = oldAwaitPos;
  this.awaitIdentPos = oldAwaitIdentPos;
  return this.finishNode(node, "ArrowFunctionExpression")
};

// Parse function body and check parameters.

pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {
  var isExpression = isArrowFunction && this.type !== types$1.braceL;
  var oldStrict = this.strict, useStrict = false;

  if (isExpression) {
    node.body = this.parseMaybeAssign(forInit);
    node.expression = true;
    this.checkParams(node, false);
  } else {
    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);
    if (!oldStrict || nonSimple) {
      useStrict = this.strictDirective(this.end);
      // If this is a strict mode function, verify that argument names
      // are not repeated, and it does not try to bind the words `eval`
      // or `arguments`.
      if (useStrict && nonSimple)
        { this.raiseRecoverable(node.start, "Illegal 'use strict' directive in function with non-simple parameter list"); }
    }
    // Start a new scope with regard to labels and the `inFunction`
    // flag (restore them to their old value afterwards).
    var oldLabels = this.labels;
    this.labels = [];
    if (useStrict) { this.strict = true; }

    // Add the params to varDeclaredNames to ensure that an error is thrown
    // if a let/const declaration in the function clashes with one of the params.
    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));
    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'
    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }
    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);
    node.expression = false;
    this.adaptDirectivePrologue(node.body.body);
    this.labels = oldLabels;
  }
  this.exitScope();
};

pp$5.isSimpleParamList = function(params) {
  for (var i = 0, list = params; i < list.length; i += 1)
    {
    var param = list[i];

    if (param.type !== "Identifier") { return false
  } }
  return true
};

// Checks function params for various disallowed patterns such as using "eval"
// or "arguments" and duplicate parameters.

pp$5.checkParams = function(node, allowDuplicates) {
  var nameHash = Object.create(null);
  for (var i = 0, list = node.params; i < list.length; i += 1)
    {
    var param = list[i];

    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);
  }
};

// Parses a comma-separated list of expressions, and returns them as
// an array. `close` is the token type that ends the list, and
// `allowEmpty` can be turned on to allow subsequent commas with
// nothing in between them to be parsed as `null` (which is needed
// for array literals).

pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {
  var elts = [], first = true;
  while (!this.eat(close)) {
    if (!first) {
      this.expect(types$1.comma);
      if (allowTrailingComma && this.afterTrailingComma(close)) { break }
    } else { first = false; }

    var elt = (void 0);
    if (allowEmpty && this.type === types$1.comma)
      { elt = null; }
    else if (this.type === types$1.ellipsis) {
      elt = this.parseSpread(refDestructuringErrors);
      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)
        { refDestructuringErrors.trailingComma = this.start; }
    } else {
      elt = this.parseMaybeAssign(false, refDestructuringErrors);
    }
    elts.push(elt);
  }
  return elts
};

pp$5.checkUnreserved = function(ref) {
  var start = ref.start;
  var end = ref.end;
  var name = ref.name;

  if (this.inGenerator && name === "yield")
    { this.raiseRecoverable(start, "Cannot use 'yield' as identifier inside a generator"); }
  if (this.inAsync && name === "await")
    { this.raiseRecoverable(start, "Cannot use 'await' as identifier inside an async function"); }
  if (!(this.currentThisScope().flags & SCOPE_VAR) && name === "arguments")
    { this.raiseRecoverable(start, "Cannot use 'arguments' in class field initializer"); }
  if (this.inClassStaticBlock && (name === "arguments" || name === "await"))
    { this.raise(start, ("Cannot use " + name + " in class static initialization block")); }
  if (this.keywords.test(name))
    { this.raise(start, ("Unexpected keyword '" + name + "'")); }
  if (this.options.ecmaVersion < 6 &&
    this.input.slice(start, end).indexOf("\\") !== -1) { return }
  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;
  if (re.test(name)) {
    if (!this.inAsync && name === "await")
      { this.raiseRecoverable(start, "Cannot use keyword 'await' outside an async function"); }
    this.raiseRecoverable(start, ("The keyword '" + name + "' is reserved"));
  }
};

// Parse the next token as an identifier. If `liberal` is true (used
// when parsing properties), it will also convert keywords into
// identifiers.

pp$5.parseIdent = function(liberal) {
  var node = this.parseIdentNode();
  this.next(!!liberal);
  this.finishNode(node, "Identifier");
  if (!liberal) {
    this.checkUnreserved(node);
    if (node.name === "await" && !this.awaitIdentPos)
      { this.awaitIdentPos = node.start; }
  }
  return node
};

pp$5.parseIdentNode = function() {
  var node = this.startNode();
  if (this.type === types$1.name) {
    node.name = this.value;
  } else if (this.type.keyword) {
    node.name = this.type.keyword;

    // To fix https://github.com/acornjs/acorn/issues/575
    // `class` and `function` keywords push new context into this.context.
    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.
    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword
    if ((node.name === "class" || node.name === "function") &&
      (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {
      this.context.pop();
    }
    this.type = types$1.name;
  } else {
    this.unexpected();
  }
  return node
};

pp$5.parsePrivateIdent = function() {
  var node = this.startNode();
  if (this.type === types$1.privateId) {
    node.name = this.value;
  } else {
    this.unexpected();
  }
  this.next();
  this.finishNode(node, "PrivateIdentifier");

  // For validating existence
  if (this.options.checkPrivateFields) {
    if (this.privateNameStack.length === 0) {
      this.raise(node.start, ("Private field '#" + (node.name) + "' must be declared in an enclosing class"));
    } else {
      this.privateNameStack[this.privateNameStack.length - 1].used.push(node);
    }
  }

  return node
};

// Parses yield expression inside generator.

pp$5.parseYield = function(forInit) {
  if (!this.yieldPos) { this.yieldPos = this.start; }

  var node = this.startNode();
  this.next();
  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {
    node.delegate = false;
    node.argument = null;
  } else {
    node.delegate = this.eat(types$1.star);
    node.argument = this.parseMaybeAssign(forInit);
  }
  return this.finishNode(node, "YieldExpression")
};

pp$5.parseAwait = function(forInit) {
  if (!this.awaitPos) { this.awaitPos = this.start; }

  var node = this.startNode();
  this.next();
  node.argument = this.parseMaybeUnary(null, true, false, forInit);
  return this.finishNode(node, "AwaitExpression")
};

var pp$4 = Parser.prototype;

// This function is used to raise exceptions on parse errors. It
// takes an offset integer (into the current `input`) to indicate
// the location of the error, attaches the position to the end
// of the error message, and then raises a `SyntaxError` with that
// message.

pp$4.raise = function(pos, message) {
  var loc = getLineInfo(this.input, pos);
  message += " (" + loc.line + ":" + loc.column + ")";
  if (this.sourceFile) {
    message += " in " + this.sourceFile;
  }
  var err = new SyntaxError(message);
  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;
  throw err
};

pp$4.raiseRecoverable = pp$4.raise;

pp$4.curPosition = function() {
  if (this.options.locations) {
    return new Position(this.curLine, this.pos - this.lineStart)
  }
};

var pp$3 = Parser.prototype;

var Scope = function Scope(flags) {
  this.flags = flags;
  // A list of var-declared names in the current lexical scope
  this.var = [];
  // A list of lexically-declared names in the current lexical scope
  this.lexical = [];
  // A list of lexically-declared FunctionDeclaration names in the current lexical scope
  this.functions = [];
};

// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.

pp$3.enterScope = function(flags) {
  this.scopeStack.push(new Scope(flags));
};

pp$3.exitScope = function() {
  this.scopeStack.pop();
};

// The spec says:
// > At the top level of a function, or script, function declarations are
// > treated like var declarations rather than like lexical declarations.
pp$3.treatFunctionsAsVarInScope = function(scope) {
  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)
};

pp$3.declareName = function(name, bindingType, pos) {
  var redeclared = false;
  if (bindingType === BIND_LEXICAL) {
    var scope = this.currentScope();
    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
    scope.lexical.push(name);
    if (this.inModule && (scope.flags & SCOPE_TOP))
      { delete this.undefinedExports[name]; }
  } else if (bindingType === BIND_SIMPLE_CATCH) {
    var scope$1 = this.currentScope();
    scope$1.lexical.push(name);
  } else if (bindingType === BIND_FUNCTION) {
    var scope$2 = this.currentScope();
    if (this.treatFunctionsAsVar)
      { redeclared = scope$2.lexical.indexOf(name) > -1; }
    else
      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }
    scope$2.functions.push(name);
  } else {
    for (var i = this.scopeStack.length - 1; i >= 0; --i) {
      var scope$3 = this.scopeStack[i];
      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||
          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {
        redeclared = true;
        break
      }
      scope$3.var.push(name);
      if (this.inModule && (scope$3.flags & SCOPE_TOP))
        { delete this.undefinedExports[name]; }
      if (scope$3.flags & SCOPE_VAR) { break }
    }
  }
  if (redeclared) { this.raiseRecoverable(pos, ("Identifier '" + name + "' has already been declared")); }
};

pp$3.checkLocalExport = function(id) {
  // scope.functions must be empty as Module code is always strict.
  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&
      this.scopeStack[0].var.indexOf(id.name) === -1) {
    this.undefinedExports[id.name] = id;
  }
};

pp$3.currentScope = function() {
  return this.scopeStack[this.scopeStack.length - 1]
};

pp$3.currentVarScope = function() {
  for (var i = this.scopeStack.length - 1;; i--) {
    var scope = this.scopeStack[i];
    if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK)) { return scope }
  }
};

// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.
pp$3.currentThisScope = function() {
  for (var i = this.scopeStack.length - 1;; i--) {
    var scope = this.scopeStack[i];
    if (scope.flags & (SCOPE_VAR | SCOPE_CLASS_FIELD_INIT | SCOPE_CLASS_STATIC_BLOCK) &&
        !(scope.flags & SCOPE_ARROW)) { return scope }
  }
};

var Node = function Node(parser, pos, loc) {
  this.type = "";
  this.start = pos;
  this.end = 0;
  if (parser.options.locations)
    { this.loc = new SourceLocation(parser, loc); }
  if (parser.options.directSourceFile)
    { this.sourceFile = parser.options.directSourceFile; }
  if (parser.options.ranges)
    { this.range = [pos, 0]; }
};

// Start an AST node, attaching a start offset.

var pp$2 = Parser.prototype;

pp$2.startNode = function() {
  return new Node(this, this.start, this.startLoc)
};

pp$2.startNodeAt = function(pos, loc) {
  return new Node(this, pos, loc)
};

// Finish an AST node, adding `type` and `end` properties.

function finishNodeAt(node, type, pos, loc) {
  node.type = type;
  node.end = pos;
  if (this.options.locations)
    { node.loc.end = loc; }
  if (this.options.ranges)
    { node.range[1] = pos; }
  return node
}

pp$2.finishNode = function(node, type) {
  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)
};

// Finish node at given position

pp$2.finishNodeAt = function(node, type, pos, loc) {
  return finishNodeAt.call(this, node, type, pos, loc)
};

pp$2.copyNode = function(node) {
  var newNode = new Node(this, node.start, this.startLoc);
  for (var prop in node) { newNode[prop] = node[prop]; }
  return newNode
};

// This file was generated by "bin/generate-unicode-script-values.js". Do not modify manually!
var scriptValuesAddedInUnicode = "Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz";

// This file contains Unicode properties extracted from the ECMAScript specification.
// The lists are extracted like so:
// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)

// #table-binary-unicode-properties
var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";
var ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";
var ecma11BinaryProperties = ecma10BinaryProperties;
var ecma12BinaryProperties = ecma11BinaryProperties + " EBase EComp EMod EPres ExtPict";
var ecma13BinaryProperties = ecma12BinaryProperties;
var ecma14BinaryProperties = ecma13BinaryProperties;

var unicodeBinaryProperties = {
  9: ecma9BinaryProperties,
  10: ecma10BinaryProperties,
  11: ecma11BinaryProperties,
  12: ecma12BinaryProperties,
  13: ecma13BinaryProperties,
  14: ecma14BinaryProperties
};

// #table-binary-unicode-properties-of-strings
var ecma14BinaryPropertiesOfStrings = "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji";

var unicodeBinaryPropertiesOfStrings = {
  9: "",
  10: "",
  11: "",
  12: "",
  13: "",
  14: ecma14BinaryPropertiesOfStrings
};

// #table-unicode-general-category-values
var unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";

// #table-unicode-script-values
var ecma9ScriptValues = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";
var ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";
var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";
var ecma12ScriptValues = ecma11ScriptValues + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi";
var ecma13ScriptValues = ecma12ScriptValues + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith";
var ecma14ScriptValues = ecma13ScriptValues + " " + scriptValuesAddedInUnicode;

var unicodeScriptValues = {
  9: ecma9ScriptValues,
  10: ecma10ScriptValues,
  11: ecma11ScriptValues,
  12: ecma12ScriptValues,
  13: ecma13ScriptValues,
  14: ecma14ScriptValues
};

var data = {};
function buildUnicodeData(ecmaVersion) {
  var d = data[ecmaVersion] = {
    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues),
    binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),
    nonBinary: {
      General_Category: wordsRegexp(unicodeGeneralCategoryValues),
      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])
    }
  };
  d.nonBinary.Script_Extensions = d.nonBinary.Script;

  d.nonBinary.gc = d.nonBinary.General_Category;
  d.nonBinary.sc = d.nonBinary.Script;
  d.nonBinary.scx = d.nonBinary.Script_Extensions;
}

for (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {
  var ecmaVersion = list[i];

  buildUnicodeData(ecmaVersion);
}

var pp$1 = Parser.prototype;

// Track disjunction structure to determine whether a duplicate
// capture group name is allowed because it is in a separate branch.
var BranchID = function BranchID(parent, base) {
  // Parent disjunction branch
  this.parent = parent;
  // Identifies this set of sibling branches
  this.base = base || this;
};

BranchID.prototype.separatedFrom = function separatedFrom (alt) {
  // A branch is separate from another branch if they or any of
  // their parents are siblings in a given disjunction
  for (var self = this; self; self = self.parent) {
    for (var other = alt; other; other = other.parent) {
      if (self.base === other.base && self !== other) { return true }
    }
  }
  return false
};

BranchID.prototype.sibling = function sibling () {
  return new BranchID(this.parent, this.base)
};

var RegExpValidationState = function RegExpValidationState(parser) {
  this.parser = parser;
  this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "") + (parser.options.ecmaVersion >= 13 ? "d" : "") + (parser.options.ecmaVersion >= 15 ? "v" : "");
  this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];
  this.source = "";
  this.flags = "";
  this.start = 0;
  this.switchU = false;
  this.switchV = false;
  this.switchN = false;
  this.pos = 0;
  this.lastIntValue = 0;
  this.lastStringValue = "";
  this.lastAssertionIsQuantifiable = false;
  this.numCapturingParens = 0;
  this.maxBackReference = 0;
  this.groupNames = Object.create(null);
  this.backReferenceNames = [];
  this.branchID = null;
};

RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {
  var unicodeSets = flags.indexOf("v") !== -1;
  var unicode = flags.indexOf("u") !== -1;
  this.start = start | 0;
  this.source = pattern + "";
  this.flags = flags;
  if (unicodeSets && this.parser.options.ecmaVersion >= 15) {
    this.switchU = true;
    this.switchV = true;
    this.switchN = true;
  } else {
    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;
    this.switchV = false;
    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;
  }
};

RegExpValidationState.prototype.raise = function raise (message) {
  this.parser.raiseRecoverable(this.start, ("Invalid regular expression: /" + (this.source) + "/: " + message));
};

// If u flag is given, this returns the code point at the index (it combines a surrogate pair).
// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).
RegExpValidationState.prototype.at = function at (i, forceU) {
    if ( forceU === void 0 ) forceU = false;

  var s = this.source;
  var l = s.length;
  if (i >= l) {
    return -1
  }
  var c = s.charCodeAt(i);
  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {
    return c
  }
  var next = s.charCodeAt(i + 1);
  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c
};

RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {
    if ( forceU === void 0 ) forceU = false;

  var s = this.source;
  var l = s.length;
  if (i >= l) {
    return l
  }
  var c = s.charCodeAt(i), next;
  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||
      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {
    return i + 1
  }
  return i + 2
};

RegExpValidationState.prototype.current = function current (forceU) {
    if ( forceU === void 0 ) forceU = false;

  return this.at(this.pos, forceU)
};

RegExpValidationState.prototype.lookahead = function lookahead (forceU) {
    if ( forceU === void 0 ) forceU = false;

  return this.at(this.nextIndex(this.pos, forceU), forceU)
};

RegExpValidationState.prototype.advance = function advance (forceU) {
    if ( forceU === void 0 ) forceU = false;

  this.pos = this.nextIndex(this.pos, forceU);
};

RegExpValidationState.prototype.eat = function eat (ch, forceU) {
    if ( forceU === void 0 ) forceU = false;

  if (this.current(forceU) === ch) {
    this.advance(forceU);
    return true
  }
  return false
};

RegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {
    if ( forceU === void 0 ) forceU = false;

  var pos = this.pos;
  for (var i = 0, list = chs; i < list.length; i += 1) {
    var ch = list[i];

      var current = this.at(pos, forceU);
    if (current === -1 || current !== ch) {
      return false
    }
    pos = this.nextIndex(pos, forceU);
  }
  this.pos = pos;
  return true
};

/**
 * Validate the flags part of a given RegExpLiteral.
 *
 * @param {RegExpValidationState} state The state to validate RegExp.
 * @returns {void}
 */
pp$1.validateRegExpFlags = function(state) {
  var validFlags = state.validFlags;
  var flags = state.flags;

  var u = false;
  var v = false;

  for (var i = 0; i < flags.length; i++) {
    var flag = flags.charAt(i);
    if (validFlags.indexOf(flag) === -1) {
      this.raise(state.start, "Invalid regular expression flag");
    }
    if (flags.indexOf(flag, i + 1) > -1) {
      this.raise(state.start, "Duplicate regular expression flag");
    }
    if (flag === "u") { u = true; }
    if (flag === "v") { v = true; }
  }
  if (this.options.ecmaVersion >= 15 && u && v) {
    this.raise(state.start, "Invalid regular expression flag");
  }
};

function hasProp(obj) {
  for (var _ in obj) { return true }
  return false
}

/**
 * Validate the pattern part of a given RegExpLiteral.
 *
 * @param {RegExpValidationState} state The state to validate RegExp.
 * @returns {void}
 */
pp$1.validateRegExpPattern = function(state) {
  this.regexp_pattern(state);

  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of
  // parsing contains a |GroupName|, reparse with the goal symbol
  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*
  // exception if _P_ did not conform to the grammar, if any elements of _P_
  // were not matched by the parse, or if any Early Error conditions exist.
  if (!state.switchN && this.options.ecmaVersion >= 9 && hasProp(state.groupNames)) {
    state.switchN = true;
    this.regexp_pattern(state);
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern
pp$1.regexp_pattern = function(state) {
  state.pos = 0;
  state.lastIntValue = 0;
  state.lastStringValue = "";
  state.lastAssertionIsQuantifiable = false;
  state.numCapturingParens = 0;
  state.maxBackReference = 0;
  state.groupNames = Object.create(null);
  state.backReferenceNames.length = 0;
  state.branchID = null;

  this.regexp_disjunction(state);

  if (state.pos !== state.source.length) {
    // Make the same messages as V8.
    if (state.eat(0x29 /* ) */)) {
      state.raise("Unmatched ')'");
    }
    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {
      state.raise("Lone quantifier brackets");
    }
  }
  if (state.maxBackReference > state.numCapturingParens) {
    state.raise("Invalid escape");
  }
  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {
    var name = list[i];

    if (!state.groupNames[name]) {
      state.raise("Invalid named capture referenced");
    }
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction
pp$1.regexp_disjunction = function(state) {
  var trackDisjunction = this.options.ecmaVersion >= 16;
  if (trackDisjunction) { state.branchID = new BranchID(state.branchID, null); }
  this.regexp_alternative(state);
  while (state.eat(0x7C /* | */)) {
    if (trackDisjunction) { state.branchID = state.branchID.sibling(); }
    this.regexp_alternative(state);
  }
  if (trackDisjunction) { state.branchID = state.branchID.parent; }

  // Make the same message as V8.
  if (this.regexp_eatQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  if (state.eat(0x7B /* { */)) {
    state.raise("Lone quantifier brackets");
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative
pp$1.regexp_alternative = function(state) {
  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term
pp$1.regexp_eatTerm = function(state) {
  if (this.regexp_eatAssertion(state)) {
    // Handle `QuantifiableAssertion Quantifier` alternative.
    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion
    // is a QuantifiableAssertion.
    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {
      // Make the same message as V8.
      if (state.switchU) {
        state.raise("Invalid quantifier");
      }
    }
    return true
  }

  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {
    this.regexp_eatQuantifier(state);
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion
pp$1.regexp_eatAssertion = function(state) {
  var start = state.pos;
  state.lastAssertionIsQuantifiable = false;

  // ^, $
  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {
    return true
  }

  // \b \B
  if (state.eat(0x5C /* \ */)) {
    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {
      return true
    }
    state.pos = start;
  }

  // Lookahead / Lookbehind
  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {
    var lookbehind = false;
    if (this.options.ecmaVersion >= 9) {
      lookbehind = state.eat(0x3C /* < */);
    }
    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {
      this.regexp_disjunction(state);
      if (!state.eat(0x29 /* ) */)) {
        state.raise("Unterminated group");
      }
      state.lastAssertionIsQuantifiable = !lookbehind;
      return true
    }
  }

  state.pos = start;
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier
pp$1.regexp_eatQuantifier = function(state, noError) {
  if ( noError === void 0 ) noError = false;

  if (this.regexp_eatQuantifierPrefix(state, noError)) {
    state.eat(0x3F /* ? */);
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix
pp$1.regexp_eatQuantifierPrefix = function(state, noError) {
  return (
    state.eat(0x2A /* * */) ||
    state.eat(0x2B /* + */) ||
    state.eat(0x3F /* ? */) ||
    this.regexp_eatBracedQuantifier(state, noError)
  )
};
pp$1.regexp_eatBracedQuantifier = function(state, noError) {
  var start = state.pos;
  if (state.eat(0x7B /* { */)) {
    var min = 0, max = -1;
    if (this.regexp_eatDecimalDigits(state)) {
      min = state.lastIntValue;
      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {
        max = state.lastIntValue;
      }
      if (state.eat(0x7D /* } */)) {
        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term
        if (max !== -1 && max < min && !noError) {
          state.raise("numbers out of order in {} quantifier");
        }
        return true
      }
    }
    if (state.switchU && !noError) {
      state.raise("Incomplete quantifier");
    }
    state.pos = start;
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom
pp$1.regexp_eatAtom = function(state) {
  return (
    this.regexp_eatPatternCharacters(state) ||
    state.eat(0x2E /* . */) ||
    this.regexp_eatReverseSolidusAtomEscape(state) ||
    this.regexp_eatCharacterClass(state) ||
    this.regexp_eatUncapturingGroup(state) ||
    this.regexp_eatCapturingGroup(state)
  )
};
pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {
  var start = state.pos;
  if (state.eat(0x5C /* \ */)) {
    if (this.regexp_eatAtomEscape(state)) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$1.regexp_eatUncapturingGroup = function(state) {
  var start = state.pos;
  if (state.eat(0x28 /* ( */)) {
    if (state.eat(0x3F /* ? */)) {
      if (this.options.ecmaVersion >= 16) {
        var addModifiers = this.regexp_eatModifiers(state);
        var hasHyphen = state.eat(0x2D /* - */);
        if (addModifiers || hasHyphen) {
          for (var i = 0; i < addModifiers.length; i++) {
            var modifier = addModifiers.charAt(i);
            if (addModifiers.indexOf(modifier, i + 1) > -1) {
              state.raise("Duplicate regular expression modifiers");
            }
          }
          if (hasHyphen) {
            var removeModifiers = this.regexp_eatModifiers(state);
            if (!addModifiers && !removeModifiers && state.current() === 0x3A /* : */) {
              state.raise("Invalid regular expression modifiers");
            }
            for (var i$1 = 0; i$1 < removeModifiers.length; i$1++) {
              var modifier$1 = removeModifiers.charAt(i$1);
              if (
                removeModifiers.indexOf(modifier$1, i$1 + 1) > -1 ||
                addModifiers.indexOf(modifier$1) > -1
              ) {
                state.raise("Duplicate regular expression modifiers");
              }
            }
          }
        }
      }
      if (state.eat(0x3A /* : */)) {
        this.regexp_disjunction(state);
        if (state.eat(0x29 /* ) */)) {
          return true
        }
        state.raise("Unterminated group");
      }
    }
    state.pos = start;
  }
  return false
};
pp$1.regexp_eatCapturingGroup = function(state) {
  if (state.eat(0x28 /* ( */)) {
    if (this.options.ecmaVersion >= 9) {
      this.regexp_groupSpecifier(state);
    } else if (state.current() === 0x3F /* ? */) {
      state.raise("Invalid group");
    }
    this.regexp_disjunction(state);
    if (state.eat(0x29 /* ) */)) {
      state.numCapturingParens += 1;
      return true
    }
    state.raise("Unterminated group");
  }
  return false
};
// RegularExpressionModifiers ::
//   [empty]
//   RegularExpressionModifiers RegularExpressionModifier
pp$1.regexp_eatModifiers = function(state) {
  var modifiers = "";
  var ch = 0;
  while ((ch = state.current()) !== -1 && isRegularExpressionModifier(ch)) {
    modifiers += codePointToString(ch);
    state.advance();
  }
  return modifiers
};
// RegularExpressionModifier :: one of
//   `i` `m` `s`
function isRegularExpressionModifier(ch) {
  return ch === 0x69 /* i */ || ch === 0x6d /* m */ || ch === 0x73 /* s */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom
pp$1.regexp_eatExtendedAtom = function(state) {
  return (
    state.eat(0x2E /* . */) ||
    this.regexp_eatReverseSolidusAtomEscape(state) ||
    this.regexp_eatCharacterClass(state) ||
    this.regexp_eatUncapturingGroup(state) ||
    this.regexp_eatCapturingGroup(state) ||
    this.regexp_eatInvalidBracedQuantifier(state) ||
    this.regexp_eatExtendedPatternCharacter(state)
  )
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier
pp$1.regexp_eatInvalidBracedQuantifier = function(state) {
  if (this.regexp_eatBracedQuantifier(state, true)) {
    state.raise("Nothing to repeat");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter
pp$1.regexp_eatSyntaxCharacter = function(state) {
  var ch = state.current();
  if (isSyntaxCharacter(ch)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }
  return false
};
function isSyntaxCharacter(ch) {
  return (
    ch === 0x24 /* $ */ ||
    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||
    ch === 0x2E /* . */ ||
    ch === 0x3F /* ? */ ||
    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||
    ch >= 0x7B /* { */ && ch <= 0x7D /* } */
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter
// But eat eager.
pp$1.regexp_eatPatternCharacters = function(state) {
  var start = state.pos;
  var ch = 0;
  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {
    state.advance();
  }
  return state.pos !== start
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter
pp$1.regexp_eatExtendedPatternCharacter = function(state) {
  var ch = state.current();
  if (
    ch !== -1 &&
    ch !== 0x24 /* $ */ &&
    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&
    ch !== 0x2E /* . */ &&
    ch !== 0x3F /* ? */ &&
    ch !== 0x5B /* [ */ &&
    ch !== 0x5E /* ^ */ &&
    ch !== 0x7C /* | */
  ) {
    state.advance();
    return true
  }
  return false
};

// GroupSpecifier ::
//   [empty]
//   `?` GroupName
pp$1.regexp_groupSpecifier = function(state) {
  if (state.eat(0x3F /* ? */)) {
    if (!this.regexp_eatGroupName(state)) { state.raise("Invalid group"); }
    var trackDisjunction = this.options.ecmaVersion >= 16;
    var known = state.groupNames[state.lastStringValue];
    if (known) {
      if (trackDisjunction) {
        for (var i = 0, list = known; i < list.length; i += 1) {
          var altID = list[i];

          if (!altID.separatedFrom(state.branchID))
            { state.raise("Duplicate capture group name"); }
        }
      } else {
        state.raise("Duplicate capture group name");
      }
    }
    if (trackDisjunction) {
      (known || (state.groupNames[state.lastStringValue] = [])).push(state.branchID);
    } else {
      state.groupNames[state.lastStringValue] = true;
    }
  }
};

// GroupName ::
//   `<` RegExpIdentifierName `>`
// Note: this updates `state.lastStringValue` property with the eaten name.
pp$1.regexp_eatGroupName = function(state) {
  state.lastStringValue = "";
  if (state.eat(0x3C /* < */)) {
    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {
      return true
    }
    state.raise("Invalid capture group name");
  }
  return false
};

// RegExpIdentifierName ::
//   RegExpIdentifierStart
//   RegExpIdentifierName RegExpIdentifierPart
// Note: this updates `state.lastStringValue` property with the eaten name.
pp$1.regexp_eatRegExpIdentifierName = function(state) {
  state.lastStringValue = "";
  if (this.regexp_eatRegExpIdentifierStart(state)) {
    state.lastStringValue += codePointToString(state.lastIntValue);
    while (this.regexp_eatRegExpIdentifierPart(state)) {
      state.lastStringValue += codePointToString(state.lastIntValue);
    }
    return true
  }
  return false
};

// RegExpIdentifierStart ::
//   UnicodeIDStart
//   `$`
//   `_`
//   `\` RegExpUnicodeEscapeSequence[+U]
pp$1.regexp_eatRegExpIdentifierStart = function(state) {
  var start = state.pos;
  var forceU = this.options.ecmaVersion >= 11;
  var ch = state.current(forceU);
  state.advance(forceU);

  if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierStart(ch)) {
    state.lastIntValue = ch;
    return true
  }

  state.pos = start;
  return false
};
function isRegExpIdentifierStart(ch) {
  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */
}

// RegExpIdentifierPart ::
//   UnicodeIDContinue
//   `$`
//   `_`
//   `\` RegExpUnicodeEscapeSequence[+U]
//   <ZWNJ>
//   <ZWJ>
pp$1.regexp_eatRegExpIdentifierPart = function(state) {
  var start = state.pos;
  var forceU = this.options.ecmaVersion >= 11;
  var ch = state.current(forceU);
  state.advance(forceU);

  if (ch === 0x5C /* \ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {
    ch = state.lastIntValue;
  }
  if (isRegExpIdentifierPart(ch)) {
    state.lastIntValue = ch;
    return true
  }

  state.pos = start;
  return false
};
function isRegExpIdentifierPart(ch) {
  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape
pp$1.regexp_eatAtomEscape = function(state) {
  if (
    this.regexp_eatBackReference(state) ||
    this.regexp_eatCharacterClassEscape(state) ||
    this.regexp_eatCharacterEscape(state) ||
    (state.switchN && this.regexp_eatKGroupName(state))
  ) {
    return true
  }
  if (state.switchU) {
    // Make the same message as V8.
    if (state.current() === 0x63 /* c */) {
      state.raise("Invalid unicode escape");
    }
    state.raise("Invalid escape");
  }
  return false
};
pp$1.regexp_eatBackReference = function(state) {
  var start = state.pos;
  if (this.regexp_eatDecimalEscape(state)) {
    var n = state.lastIntValue;
    if (state.switchU) {
      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape
      if (n > state.maxBackReference) {
        state.maxBackReference = n;
      }
      return true
    }
    if (n <= state.numCapturingParens) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$1.regexp_eatKGroupName = function(state) {
  if (state.eat(0x6B /* k */)) {
    if (this.regexp_eatGroupName(state)) {
      state.backReferenceNames.push(state.lastStringValue);
      return true
    }
    state.raise("Invalid named reference");
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape
pp$1.regexp_eatCharacterEscape = function(state) {
  return (
    this.regexp_eatControlEscape(state) ||
    this.regexp_eatCControlLetter(state) ||
    this.regexp_eatZero(state) ||
    this.regexp_eatHexEscapeSequence(state) ||
    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||
    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||
    this.regexp_eatIdentityEscape(state)
  )
};
pp$1.regexp_eatCControlLetter = function(state) {
  var start = state.pos;
  if (state.eat(0x63 /* c */)) {
    if (this.regexp_eatControlLetter(state)) {
      return true
    }
    state.pos = start;
  }
  return false
};
pp$1.regexp_eatZero = function(state) {
  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {
    state.lastIntValue = 0;
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape
pp$1.regexp_eatControlEscape = function(state) {
  var ch = state.current();
  if (ch === 0x74 /* t */) {
    state.lastIntValue = 0x09; /* \t */
    state.advance();
    return true
  }
  if (ch === 0x6E /* n */) {
    state.lastIntValue = 0x0A; /* \n */
    state.advance();
    return true
  }
  if (ch === 0x76 /* v */) {
    state.lastIntValue = 0x0B; /* \v */
    state.advance();
    return true
  }
  if (ch === 0x66 /* f */) {
    state.lastIntValue = 0x0C; /* \f */
    state.advance();
    return true
  }
  if (ch === 0x72 /* r */) {
    state.lastIntValue = 0x0D; /* \r */
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter
pp$1.regexp_eatControlLetter = function(state) {
  var ch = state.current();
  if (isControlLetter(ch)) {
    state.lastIntValue = ch % 0x20;
    state.advance();
    return true
  }
  return false
};
function isControlLetter(ch) {
  return (
    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||
    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence
pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {
  if ( forceU === void 0 ) forceU = false;

  var start = state.pos;
  var switchU = forceU || state.switchU;

  if (state.eat(0x75 /* u */)) {
    if (this.regexp_eatFixedHexDigits(state, 4)) {
      var lead = state.lastIntValue;
      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {
        var leadSurrogateEnd = state.pos;
        if (state.eat(0x5C /* \ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {
          var trail = state.lastIntValue;
          if (trail >= 0xDC00 && trail <= 0xDFFF) {
            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
            return true
          }
        }
        state.pos = leadSurrogateEnd;
        state.lastIntValue = lead;
      }
      return true
    }
    if (
      switchU &&
      state.eat(0x7B /* { */) &&
      this.regexp_eatHexDigits(state) &&
      state.eat(0x7D /* } */) &&
      isValidUnicode(state.lastIntValue)
    ) {
      return true
    }
    if (switchU) {
      state.raise("Invalid unicode escape");
    }
    state.pos = start;
  }

  return false
};
function isValidUnicode(ch) {
  return ch >= 0 && ch <= 0x10FFFF
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape
pp$1.regexp_eatIdentityEscape = function(state) {
  if (state.switchU) {
    if (this.regexp_eatSyntaxCharacter(state)) {
      return true
    }
    if (state.eat(0x2F /* / */)) {
      state.lastIntValue = 0x2F; /* / */
      return true
    }
    return false
  }

  var ch = state.current();
  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape
pp$1.regexp_eatDecimalEscape = function(state) {
  state.lastIntValue = 0;
  var ch = state.current();
  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {
    do {
      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
      state.advance();
    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)
    return true
  }
  return false
};

// Return values used by character set parsing methods, needed to
// forbid negation of sets that can match strings.
var CharSetNone = 0; // Nothing parsed
var CharSetOk = 1; // Construct parsed, cannot contain strings
var CharSetString = 2; // Construct parsed, can contain strings

// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape
pp$1.regexp_eatCharacterClassEscape = function(state) {
  var ch = state.current();

  if (isCharacterClassEscape(ch)) {
    state.lastIntValue = -1;
    state.advance();
    return CharSetOk
  }

  var negate = false;
  if (
    state.switchU &&
    this.options.ecmaVersion >= 9 &&
    ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)
  ) {
    state.lastIntValue = -1;
    state.advance();
    var result;
    if (
      state.eat(0x7B /* { */) &&
      (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&
      state.eat(0x7D /* } */)
    ) {
      if (negate && result === CharSetString) { state.raise("Invalid property name"); }
      return result
    }
    state.raise("Invalid property name");
  }

  return CharSetNone
};

function isCharacterClassEscape(ch) {
  return (
    ch === 0x64 /* d */ ||
    ch === 0x44 /* D */ ||
    ch === 0x73 /* s */ ||
    ch === 0x53 /* S */ ||
    ch === 0x77 /* w */ ||
    ch === 0x57 /* W */
  )
}

// UnicodePropertyValueExpression ::
//   UnicodePropertyName `=` UnicodePropertyValue
//   LoneUnicodePropertyNameOrValue
pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {
  var start = state.pos;

  // UnicodePropertyName `=` UnicodePropertyValue
  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {
    var name = state.lastStringValue;
    if (this.regexp_eatUnicodePropertyValue(state)) {
      var value = state.lastStringValue;
      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);
      return CharSetOk
    }
  }
  state.pos = start;

  // LoneUnicodePropertyNameOrValue
  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {
    var nameOrValue = state.lastStringValue;
    return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)
  }
  return CharSetNone
};

pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {
  if (!hasOwn(state.unicodeProperties.nonBinary, name))
    { state.raise("Invalid property name"); }
  if (!state.unicodeProperties.nonBinary[name].test(value))
    { state.raise("Invalid property value"); }
};

pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {
  if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }
  if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }
  state.raise("Invalid property name");
};

// UnicodePropertyName ::
//   UnicodePropertyNameCharacters
pp$1.regexp_eatUnicodePropertyName = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyNameCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString(ch);
    state.advance();
  }
  return state.lastStringValue !== ""
};

function isUnicodePropertyNameCharacter(ch) {
  return isControlLetter(ch) || ch === 0x5F /* _ */
}

// UnicodePropertyValue ::
//   UnicodePropertyValueCharacters
pp$1.regexp_eatUnicodePropertyValue = function(state) {
  var ch = 0;
  state.lastStringValue = "";
  while (isUnicodePropertyValueCharacter(ch = state.current())) {
    state.lastStringValue += codePointToString(ch);
    state.advance();
  }
  return state.lastStringValue !== ""
};
function isUnicodePropertyValueCharacter(ch) {
  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)
}

// LoneUnicodePropertyNameOrValue ::
//   UnicodePropertyValueCharacters
pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {
  return this.regexp_eatUnicodePropertyValue(state)
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass
pp$1.regexp_eatCharacterClass = function(state) {
  if (state.eat(0x5B /* [ */)) {
    var negate = state.eat(0x5E /* ^ */);
    var result = this.regexp_classContents(state);
    if (!state.eat(0x5D /* ] */))
      { state.raise("Unterminated character class"); }
    if (negate && result === CharSetString)
      { state.raise("Negated character class may contain strings"); }
    return true
  }
  return false
};

// https://tc39.es/ecma262/#prod-ClassContents
// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges
pp$1.regexp_classContents = function(state) {
  if (state.current() === 0x5D /* ] */) { return CharSetOk }
  if (state.switchV) { return this.regexp_classSetExpression(state) }
  this.regexp_nonEmptyClassRanges(state);
  return CharSetOk
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges
// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash
pp$1.regexp_nonEmptyClassRanges = function(state) {
  while (this.regexp_eatClassAtom(state)) {
    var left = state.lastIntValue;
    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {
      var right = state.lastIntValue;
      if (state.switchU && (left === -1 || right === -1)) {
        state.raise("Invalid character class");
      }
      if (left !== -1 && right !== -1 && left > right) {
        state.raise("Range out of order in character class");
      }
    }
  }
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom
// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash
pp$1.regexp_eatClassAtom = function(state) {
  var start = state.pos;

  if (state.eat(0x5C /* \ */)) {
    if (this.regexp_eatClassEscape(state)) {
      return true
    }
    if (state.switchU) {
      // Make the same message as V8.
      var ch$1 = state.current();
      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {
        state.raise("Invalid class escape");
      }
      state.raise("Invalid escape");
    }
    state.pos = start;
  }

  var ch = state.current();
  if (ch !== 0x5D /* ] */) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }

  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape
pp$1.regexp_eatClassEscape = function(state) {
  var start = state.pos;

  if (state.eat(0x62 /* b */)) {
    state.lastIntValue = 0x08; /* <BS> */
    return true
  }

  if (state.switchU && state.eat(0x2D /* - */)) {
    state.lastIntValue = 0x2D; /* - */
    return true
  }

  if (!state.switchU && state.eat(0x63 /* c */)) {
    if (this.regexp_eatClassControlLetter(state)) {
      return true
    }
    state.pos = start;
  }

  return (
    this.regexp_eatCharacterClassEscape(state) ||
    this.regexp_eatCharacterEscape(state)
  )
};

// https://tc39.es/ecma262/#prod-ClassSetExpression
// https://tc39.es/ecma262/#prod-ClassUnion
// https://tc39.es/ecma262/#prod-ClassIntersection
// https://tc39.es/ecma262/#prod-ClassSubtraction
pp$1.regexp_classSetExpression = function(state) {
  var result = CharSetOk, subResult;
  if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {
    if (subResult === CharSetString) { result = CharSetString; }
    // https://tc39.es/ecma262/#prod-ClassIntersection
    var start = state.pos;
    while (state.eatChars([0x26, 0x26] /* && */)) {
      if (
        state.current() !== 0x26 /* & */ &&
        (subResult = this.regexp_eatClassSetOperand(state))
      ) {
        if (subResult !== CharSetString) { result = CharSetOk; }
        continue
      }
      state.raise("Invalid character in character class");
    }
    if (start !== state.pos) { return result }
    // https://tc39.es/ecma262/#prod-ClassSubtraction
    while (state.eatChars([0x2D, 0x2D] /* -- */)) {
      if (this.regexp_eatClassSetOperand(state)) { continue }
      state.raise("Invalid character in character class");
    }
    if (start !== state.pos) { return result }
  } else {
    state.raise("Invalid character in character class");
  }
  // https://tc39.es/ecma262/#prod-ClassUnion
  for (;;) {
    if (this.regexp_eatClassSetRange(state)) { continue }
    subResult = this.regexp_eatClassSetOperand(state);
    if (!subResult) { return result }
    if (subResult === CharSetString) { result = CharSetString; }
  }
};

// https://tc39.es/ecma262/#prod-ClassSetRange
pp$1.regexp_eatClassSetRange = function(state) {
  var start = state.pos;
  if (this.regexp_eatClassSetCharacter(state)) {
    var left = state.lastIntValue;
    if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {
      var right = state.lastIntValue;
      if (left !== -1 && right !== -1 && left > right) {
        state.raise("Range out of order in character class");
      }
      return true
    }
    state.pos = start;
  }
  return false
};

// https://tc39.es/ecma262/#prod-ClassSetOperand
pp$1.regexp_eatClassSetOperand = function(state) {
  if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }
  return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)
};

// https://tc39.es/ecma262/#prod-NestedClass
pp$1.regexp_eatNestedClass = function(state) {
  var start = state.pos;
  if (state.eat(0x5B /* [ */)) {
    var negate = state.eat(0x5E /* ^ */);
    var result = this.regexp_classContents(state);
    if (state.eat(0x5D /* ] */)) {
      if (negate && result === CharSetString) {
        state.raise("Negated character class may contain strings");
      }
      return result
    }
    state.pos = start;
  }
  if (state.eat(0x5C /* \ */)) {
    var result$1 = this.regexp_eatCharacterClassEscape(state);
    if (result$1) {
      return result$1
    }
    state.pos = start;
  }
  return null
};

// https://tc39.es/ecma262/#prod-ClassStringDisjunction
pp$1.regexp_eatClassStringDisjunction = function(state) {
  var start = state.pos;
  if (state.eatChars([0x5C, 0x71] /* \q */)) {
    if (state.eat(0x7B /* { */)) {
      var result = this.regexp_classStringDisjunctionContents(state);
      if (state.eat(0x7D /* } */)) {
        return result
      }
    } else {
      // Make the same message as V8.
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  return null
};

// https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents
pp$1.regexp_classStringDisjunctionContents = function(state) {
  var result = this.regexp_classString(state);
  while (state.eat(0x7C /* | */)) {
    if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }
  }
  return result
};

// https://tc39.es/ecma262/#prod-ClassString
// https://tc39.es/ecma262/#prod-NonEmptyClassString
pp$1.regexp_classString = function(state) {
  var count = 0;
  while (this.regexp_eatClassSetCharacter(state)) { count++; }
  return count === 1 ? CharSetOk : CharSetString
};

// https://tc39.es/ecma262/#prod-ClassSetCharacter
pp$1.regexp_eatClassSetCharacter = function(state) {
  var start = state.pos;
  if (state.eat(0x5C /* \ */)) {
    if (
      this.regexp_eatCharacterEscape(state) ||
      this.regexp_eatClassSetReservedPunctuator(state)
    ) {
      return true
    }
    if (state.eat(0x62 /* b */)) {
      state.lastIntValue = 0x08; /* <BS> */
      return true
    }
    state.pos = start;
    return false
  }
  var ch = state.current();
  if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }
  if (isClassSetSyntaxCharacter(ch)) { return false }
  state.advance();
  state.lastIntValue = ch;
  return true
};

// https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator
function isClassSetReservedDoublePunctuatorCharacter(ch) {
  return (
    ch === 0x21 /* ! */ ||
    ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||
    ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||
    ch === 0x2E /* . */ ||
    ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||
    ch === 0x5E /* ^ */ ||
    ch === 0x60 /* ` */ ||
    ch === 0x7E /* ~ */
  )
}

// https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter
function isClassSetSyntaxCharacter(ch) {
  return (
    ch === 0x28 /* ( */ ||
    ch === 0x29 /* ) */ ||
    ch === 0x2D /* - */ ||
    ch === 0x2F /* / */ ||
    ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||
    ch >= 0x7B /* { */ && ch <= 0x7D /* } */
  )
}

// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator
pp$1.regexp_eatClassSetReservedPunctuator = function(state) {
  var ch = state.current();
  if (isClassSetReservedPunctuator(ch)) {
    state.lastIntValue = ch;
    state.advance();
    return true
  }
  return false
};

// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator
function isClassSetReservedPunctuator(ch) {
  return (
    ch === 0x21 /* ! */ ||
    ch === 0x23 /* # */ ||
    ch === 0x25 /* % */ ||
    ch === 0x26 /* & */ ||
    ch === 0x2C /* , */ ||
    ch === 0x2D /* - */ ||
    ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||
    ch === 0x40 /* @ */ ||
    ch === 0x60 /* ` */ ||
    ch === 0x7E /* ~ */
  )
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter
pp$1.regexp_eatClassControlLetter = function(state) {
  var ch = state.current();
  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {
    state.lastIntValue = ch % 0x20;
    state.advance();
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$1.regexp_eatHexEscapeSequence = function(state) {
  var start = state.pos;
  if (state.eat(0x78 /* x */)) {
    if (this.regexp_eatFixedHexDigits(state, 2)) {
      return true
    }
    if (state.switchU) {
      state.raise("Invalid escape");
    }
    state.pos = start;
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits
pp$1.regexp_eatDecimalDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isDecimalDigit(ch = state.current())) {
    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);
    state.advance();
  }
  return state.pos !== start
};
function isDecimalDigit(ch) {
  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits
pp$1.regexp_eatHexDigits = function(state) {
  var start = state.pos;
  var ch = 0;
  state.lastIntValue = 0;
  while (isHexDigit(ch = state.current())) {
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return state.pos !== start
};
function isHexDigit(ch) {
  return (
    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||
    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||
    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)
  )
}
function hexToInt(ch) {
  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {
    return 10 + (ch - 0x41 /* A */)
  }
  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {
    return 10 + (ch - 0x61 /* a */)
  }
  return ch - 0x30 /* 0 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence
// Allows only 0-377(octal) i.e. 0-255(decimal).
pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {
  if (this.regexp_eatOctalDigit(state)) {
    var n1 = state.lastIntValue;
    if (this.regexp_eatOctalDigit(state)) {
      var n2 = state.lastIntValue;
      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {
        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;
      } else {
        state.lastIntValue = n1 * 8 + n2;
      }
    } else {
      state.lastIntValue = n1;
    }
    return true
  }
  return false
};

// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit
pp$1.regexp_eatOctalDigit = function(state) {
  var ch = state.current();
  if (isOctalDigit(ch)) {
    state.lastIntValue = ch - 0x30; /* 0 */
    state.advance();
    return true
  }
  state.lastIntValue = 0;
  return false
};
function isOctalDigit(ch) {
  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */
}

// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits
// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit
// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence
pp$1.regexp_eatFixedHexDigits = function(state, length) {
  var start = state.pos;
  state.lastIntValue = 0;
  for (var i = 0; i < length; ++i) {
    var ch = state.current();
    if (!isHexDigit(ch)) {
      state.pos = start;
      return false
    }
    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);
    state.advance();
  }
  return true
};

// Object type used to represent tokens. Note that normally, tokens
// simply exist as properties on the parser object. This is only
// used for the onToken callback and the external tokenizer.

var Token = function Token(p) {
  this.type = p.type;
  this.value = p.value;
  this.start = p.start;
  this.end = p.end;
  if (p.options.locations)
    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }
  if (p.options.ranges)
    { this.range = [p.start, p.end]; }
};

// ## Tokenizer

var pp = Parser.prototype;

// Move to the next token

pp.next = function(ignoreEscapeSequenceInKeyword) {
  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)
    { this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword); }
  if (this.options.onToken)
    { this.options.onToken(new Token(this)); }

  this.lastTokEnd = this.end;
  this.lastTokStart = this.start;
  this.lastTokEndLoc = this.endLoc;
  this.lastTokStartLoc = this.startLoc;
  this.nextToken();
};

pp.getToken = function() {
  this.next();
  return new Token(this)
};

// If we're in an ES6 environment, make parsers iterable
if (typeof Symbol !== "undefined")
  { pp[Symbol.iterator] = function() {
    var this$1$1 = this;

    return {
      next: function () {
        var token = this$1$1.getToken();
        return {
          done: token.type === types$1.eof,
          value: token
        }
      }
    }
  }; }

// Toggle strict mode. Re-reads the next number or string to please
// pedantic tests (`"use strict"; 010;` should fail).

// Read a single token, updating the parser object's token-related
// properties.

pp.nextToken = function() {
  var curContext = this.curContext();
  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }

  this.start = this.pos;
  if (this.options.locations) { this.startLoc = this.curPosition(); }
  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }

  if (curContext.override) { return curContext.override(this) }
  else { this.readToken(this.fullCharCodeAtPos()); }
};

pp.readToken = function(code) {
  // Identifier or keyword. '\uXXXX' sequences are allowed in
  // identifiers, so '\' also dispatches to that.
  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\' */)
    { return this.readWord() }

  return this.getTokenFromCode(code)
};

pp.fullCharCodeAtPos = function() {
  var code = this.input.charCodeAt(this.pos);
  if (code <= 0xd7ff || code >= 0xdc00) { return code }
  var next = this.input.charCodeAt(this.pos + 1);
  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00
};

pp.skipBlockComment = function() {
  var startLoc = this.options.onComment && this.curPosition();
  var start = this.pos, end = this.input.indexOf("*/", this.pos += 2);
  if (end === -1) { this.raise(this.pos - 2, "Unterminated comment"); }
  this.pos = end + 2;
  if (this.options.locations) {
    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {
      ++this.curLine;
      pos = this.lineStart = nextBreak;
    }
  }
  if (this.options.onComment)
    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,
                           startLoc, this.curPosition()); }
};

pp.skipLineComment = function(startSkip) {
  var start = this.pos;
  var startLoc = this.options.onComment && this.curPosition();
  var ch = this.input.charCodeAt(this.pos += startSkip);
  while (this.pos < this.input.length && !isNewLine(ch)) {
    ch = this.input.charCodeAt(++this.pos);
  }
  if (this.options.onComment)
    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,
                           startLoc, this.curPosition()); }
};

// Called at the start of the parse and after every token. Skips
// whitespace and comments, and.

pp.skipSpace = function() {
  loop: while (this.pos < this.input.length) {
    var ch = this.input.charCodeAt(this.pos);
    switch (ch) {
    case 32: case 160: // ' '
      ++this.pos;
      break
    case 13:
      if (this.input.charCodeAt(this.pos + 1) === 10) {
        ++this.pos;
      }
    case 10: case 8232: case 8233:
      ++this.pos;
      if (this.options.locations) {
        ++this.curLine;
        this.lineStart = this.pos;
      }
      break
    case 47: // '/'
      switch (this.input.charCodeAt(this.pos + 1)) {
      case 42: // '*'
        this.skipBlockComment();
        break
      case 47:
        this.skipLineComment(2);
        break
      default:
        break loop
      }
      break
    default:
      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
        ++this.pos;
      } else {
        break loop
      }
    }
  }
};

// Called at the end of every token. Sets `end`, `val`, and
// maintains `context` and `exprAllowed`, and skips the space after
// the token, so that the next one's `start` will point at the
// right position.

pp.finishToken = function(type, val) {
  this.end = this.pos;
  if (this.options.locations) { this.endLoc = this.curPosition(); }
  var prevType = this.type;
  this.type = type;
  this.value = val;

  this.updateContext(prevType);
};

// ### Token reading

// This is the function that is called to fetch the next token. It
// is somewhat obscure, because it works in character codes rather
// than characters, and because operator parsing has been inlined
// into it.
//
// All in the name of speed.
//
pp.readToken_dot = function() {
  var next = this.input.charCodeAt(this.pos + 1);
  if (next >= 48 && next <= 57) { return this.readNumber(true) }
  var next2 = this.input.charCodeAt(this.pos + 2);
  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'
    this.pos += 3;
    return this.finishToken(types$1.ellipsis)
  } else {
    ++this.pos;
    return this.finishToken(types$1.dot)
  }
};

pp.readToken_slash = function() { // '/'
  var next = this.input.charCodeAt(this.pos + 1);
  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }
  if (next === 61) { return this.finishOp(types$1.assign, 2) }
  return this.finishOp(types$1.slash, 1)
};

pp.readToken_mult_modulo_exp = function(code) { // '%*'
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  var tokentype = code === 42 ? types$1.star : types$1.modulo;

  // exponentiation operator ** and **=
  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {
    ++size;
    tokentype = types$1.starstar;
    next = this.input.charCodeAt(this.pos + 2);
  }

  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }
  return this.finishOp(tokentype, size)
};

pp.readToken_pipe_amp = function(code) { // '|&'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (this.options.ecmaVersion >= 12) {
      var next2 = this.input.charCodeAt(this.pos + 2);
      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }
    }
    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)
  }
  if (next === 61) { return this.finishOp(types$1.assign, 2) }
  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)
};

pp.readToken_caret = function() { // '^'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) { return this.finishOp(types$1.assign, 2) }
  return this.finishOp(types$1.bitwiseXOR, 1)
};

pp.readToken_plus_min = function(code) { // '+-'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === code) {
    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&
        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {
      // A `-->` line comment
      this.skipLineComment(3);
      this.skipSpace();
      return this.nextToken()
    }
    return this.finishOp(types$1.incDec, 2)
  }
  if (next === 61) { return this.finishOp(types$1.assign, 2) }
  return this.finishOp(types$1.plusMin, 1)
};

pp.readToken_lt_gt = function(code) { // '<>'
  var next = this.input.charCodeAt(this.pos + 1);
  var size = 1;
  if (next === code) {
    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;
    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }
    return this.finishOp(types$1.bitShift, size)
  }
  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&
      this.input.charCodeAt(this.pos + 3) === 45) {
    // `<!--`, an XML-style comment that should be interpreted as a line comment
    this.skipLineComment(4);
    this.skipSpace();
    return this.nextToken()
  }
  if (next === 61) { size = 2; }
  return this.finishOp(types$1.relational, size)
};

pp.readToken_eq_excl = function(code) { // '=!'
  var next = this.input.charCodeAt(this.pos + 1);
  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }
  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'
    this.pos += 2;
    return this.finishToken(types$1.arrow)
  }
  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)
};

pp.readToken_question = function() { // '?'
  var ecmaVersion = this.options.ecmaVersion;
  if (ecmaVersion >= 11) {
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 46) {
      var next2 = this.input.charCodeAt(this.pos + 2);
      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }
    }
    if (next === 63) {
      if (ecmaVersion >= 12) {
        var next2$1 = this.input.charCodeAt(this.pos + 2);
        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }
      }
      return this.finishOp(types$1.coalesce, 2)
    }
  }
  return this.finishOp(types$1.question, 1)
};

pp.readToken_numberSign = function() { // '#'
  var ecmaVersion = this.options.ecmaVersion;
  var code = 35; // '#'
  if (ecmaVersion >= 13) {
    ++this.pos;
    code = this.fullCharCodeAtPos();
    if (isIdentifierStart(code, true) || code === 92 /* '\' */) {
      return this.finishToken(types$1.privateId, this.readWord1())
    }
  }

  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};

pp.getTokenFromCode = function(code) {
  switch (code) {
  // The interpretation of a dot depends on whether it is followed
  // by a digit or another two dots.
  case 46: // '.'
    return this.readToken_dot()

  // Punctuation tokens.
  case 40: ++this.pos; return this.finishToken(types$1.parenL)
  case 41: ++this.pos; return this.finishToken(types$1.parenR)
  case 59: ++this.pos; return this.finishToken(types$1.semi)
  case 44: ++this.pos; return this.finishToken(types$1.comma)
  case 91: ++this.pos; return this.finishToken(types$1.bracketL)
  case 93: ++this.pos; return this.finishToken(types$1.bracketR)
  case 123: ++this.pos; return this.finishToken(types$1.braceL)
  case 125: ++this.pos; return this.finishToken(types$1.braceR)
  case 58: ++this.pos; return this.finishToken(types$1.colon)

  case 96: // '`'
    if (this.options.ecmaVersion < 6) { break }
    ++this.pos;
    return this.finishToken(types$1.backQuote)

  case 48: // '0'
    var next = this.input.charCodeAt(this.pos + 1);
    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number
    if (this.options.ecmaVersion >= 6) {
      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number
      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number
    }

  // Anything else beginning with a digit is an integer, octal
  // number, or float.
  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9
    return this.readNumber(false)

  // Quotes produce strings.
  case 34: case 39: // '"', "'"
    return this.readString(code)

  // Operators are parsed inline in tiny state machines. '=' (61) is
  // often referred to. `finishOp` simply skips the amount of
  // characters it is given as second argument, and returns a token
  // of the type given by its first argument.
  case 47: // '/'
    return this.readToken_slash()

  case 37: case 42: // '%*'
    return this.readToken_mult_modulo_exp(code)

  case 124: case 38: // '|&'
    return this.readToken_pipe_amp(code)

  case 94: // '^'
    return this.readToken_caret()

  case 43: case 45: // '+-'
    return this.readToken_plus_min(code)

  case 60: case 62: // '<>'
    return this.readToken_lt_gt(code)

  case 61: case 33: // '=!'
    return this.readToken_eq_excl(code)

  case 63: // '?'
    return this.readToken_question()

  case 126: // '~'
    return this.finishOp(types$1.prefix, 1)

  case 35: // '#'
    return this.readToken_numberSign()
  }

  this.raise(this.pos, "Unexpected character '" + codePointToString(code) + "'");
};

pp.finishOp = function(type, size) {
  var str = this.input.slice(this.pos, this.pos + size);
  this.pos += size;
  return this.finishToken(type, str)
};

pp.readRegexp = function() {
  var escaped, inClass, start = this.pos;
  for (;;) {
    if (this.pos >= this.input.length) { this.raise(start, "Unterminated regular expression"); }
    var ch = this.input.charAt(this.pos);
    if (lineBreak.test(ch)) { this.raise(start, "Unterminated regular expression"); }
    if (!escaped) {
      if (ch === "[") { inClass = true; }
      else if (ch === "]" && inClass) { inClass = false; }
      else if (ch === "/" && !inClass) { break }
      escaped = ch === "\\";
    } else { escaped = false; }
    ++this.pos;
  }
  var pattern = this.input.slice(start, this.pos);
  ++this.pos;
  var flagsStart = this.pos;
  var flags = this.readWord1();
  if (this.containsEsc) { this.unexpected(flagsStart); }

  // Validate pattern
  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));
  state.reset(start, pattern, flags);
  this.validateRegExpFlags(state);
  this.validateRegExpPattern(state);

  // Create Literal#value property value.
  var value = null;
  try {
    value = new RegExp(pattern, flags);
  } catch (e) {
    // ESTree requires null if it failed to instantiate RegExp object.
    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral
  }

  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})
};

// Read an integer in the given radix. Return null if zero digits
// were read, the integer value otherwise. When `len` is given, this
// will return `null` unless the integer has exactly `len` digits.

pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {
  // `len` is used for character escape sequences. In that case, disallow separators.
  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;

  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)
  // and isn't fraction part nor exponent part. In that case, if the first digit
  // is zero then disallow separators.
  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;

  var start = this.pos, total = 0, lastCode = 0;
  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {
    var code = this.input.charCodeAt(this.pos), val = (void 0);

    if (allowSeparators && code === 95) {
      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"); }
      if (lastCode === 95) { this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore"); }
      if (i === 0) { this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits"); }
      lastCode = code;
      continue
    }

    if (code >= 97) { val = code - 97 + 10; } // a
    else if (code >= 65) { val = code - 65 + 10; } // A
    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9
    else { val = Infinity; }
    if (val >= radix) { break }
    lastCode = code;
    total = total * radix + val;
  }

  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"); }
  if (this.pos === start || len != null && this.pos - start !== len) { return null }

  return total
};

function stringToNumber(str, isLegacyOctalNumericLiteral) {
  if (isLegacyOctalNumericLiteral) {
    return parseInt(str, 8)
  }

  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.
  return parseFloat(str.replace(/_/g, ""))
}

function stringToBigInt(str) {
  if (typeof BigInt !== "function") {
    return null
  }

  // `BigInt(value)` throws syntax error if the string contains numeric separators.
  return BigInt(str.replace(/_/g, ""))
}

pp.readRadixNumber = function(radix) {
  var start = this.pos;
  this.pos += 2; // 0x
  var val = this.readInt(radix);
  if (val == null) { this.raise(this.start + 2, "Expected number in radix " + radix); }
  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {
    val = stringToBigInt(this.input.slice(start, this.pos));
    ++this.pos;
  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }
  return this.finishToken(types$1.num, val)
};

// Read an integer, octal integer, or floating-point number.

pp.readNumber = function(startsWithDot) {
  var start = this.pos;
  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, "Invalid number"); }
  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;
  if (octal && this.strict) { this.raise(start, "Invalid number"); }
  var next = this.input.charCodeAt(this.pos);
  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {
    var val$1 = stringToBigInt(this.input.slice(start, this.pos));
    ++this.pos;
    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }
    return this.finishToken(types$1.num, val$1)
  }
  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }
  if (next === 46 && !octal) { // '.'
    ++this.pos;
    this.readInt(10);
    next = this.input.charCodeAt(this.pos);
  }
  if ((next === 69 || next === 101) && !octal) { // 'eE'
    next = this.input.charCodeAt(++this.pos);
    if (next === 43 || next === 45) { ++this.pos; } // '+-'
    if (this.readInt(10) === null) { this.raise(start, "Invalid number"); }
  }
  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, "Identifier directly after number"); }

  var val = stringToNumber(this.input.slice(start, this.pos), octal);
  return this.finishToken(types$1.num, val)
};

// Read a string value, interpreting backslash-escapes.

pp.readCodePoint = function() {
  var ch = this.input.charCodeAt(this.pos), code;

  if (ch === 123) { // '{'
    if (this.options.ecmaVersion < 6) { this.unexpected(); }
    var codePos = ++this.pos;
    code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);
    ++this.pos;
    if (code > 0x10FFFF) { this.invalidStringToken(codePos, "Code point out of bounds"); }
  } else {
    code = this.readHexChar(4);
  }
  return code
};

pp.readString = function(quote) {
  var out = "", chunkStart = ++this.pos;
  for (;;) {
    if (this.pos >= this.input.length) { this.raise(this.start, "Unterminated string constant"); }
    var ch = this.input.charCodeAt(this.pos);
    if (ch === quote) { break }
    if (ch === 92) { // '\'
      out += this.input.slice(chunkStart, this.pos);
      out += this.readEscapedChar(false);
      chunkStart = this.pos;
    } else if (ch === 0x2028 || ch === 0x2029) {
      if (this.options.ecmaVersion < 10) { this.raise(this.start, "Unterminated string constant"); }
      ++this.pos;
      if (this.options.locations) {
        this.curLine++;
        this.lineStart = this.pos;
      }
    } else {
      if (isNewLine(ch)) { this.raise(this.start, "Unterminated string constant"); }
      ++this.pos;
    }
  }
  out += this.input.slice(chunkStart, this.pos++);
  return this.finishToken(types$1.string, out)
};

// Reads template string tokens.

var INVALID_TEMPLATE_ESCAPE_ERROR = {};

pp.tryReadTemplateToken = function() {
  this.inTemplateElement = true;
  try {
    this.readTmplToken();
  } catch (err) {
    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {
      this.readInvalidTemplateToken();
    } else {
      throw err
    }
  }

  this.inTemplateElement = false;
};

pp.invalidStringToken = function(position, message) {
  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {
    throw INVALID_TEMPLATE_ESCAPE_ERROR
  } else {
    this.raise(position, message);
  }
};

pp.readTmplToken = function() {
  var out = "", chunkStart = this.pos;
  for (;;) {
    if (this.pos >= this.input.length) { this.raise(this.start, "Unterminated template"); }
    var ch = this.input.charCodeAt(this.pos);
    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'
      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {
        if (ch === 36) {
          this.pos += 2;
          return this.finishToken(types$1.dollarBraceL)
        } else {
          ++this.pos;
          return this.finishToken(types$1.backQuote)
        }
      }
      out += this.input.slice(chunkStart, this.pos);
      return this.finishToken(types$1.template, out)
    }
    if (ch === 92) { // '\'
      out += this.input.slice(chunkStart, this.pos);
      out += this.readEscapedChar(true);
      chunkStart = this.pos;
    } else if (isNewLine(ch)) {
      out += this.input.slice(chunkStart, this.pos);
      ++this.pos;
      switch (ch) {
      case 13:
        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }
      case 10:
        out += "\n";
        break
      default:
        out += String.fromCharCode(ch);
        break
      }
      if (this.options.locations) {
        ++this.curLine;
        this.lineStart = this.pos;
      }
      chunkStart = this.pos;
    } else {
      ++this.pos;
    }
  }
};

// Reads a template token to search for the end, without validating any escape sequences
pp.readInvalidTemplateToken = function() {
  for (; this.pos < this.input.length; this.pos++) {
    switch (this.input[this.pos]) {
    case "\\":
      ++this.pos;
      break

    case "$":
      if (this.input[this.pos + 1] !== "{") { break }
      // fall through
    case "`":
      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))

    case "\r":
      if (this.input[this.pos + 1] === "\n") { ++this.pos; }
      // fall through
    case "\n": case "\u2028": case "\u2029":
      ++this.curLine;
      this.lineStart = this.pos + 1;
      break
    }
  }
  this.raise(this.start, "Unterminated template");
};

// Used to read escaped characters

pp.readEscapedChar = function(inTemplate) {
  var ch = this.input.charCodeAt(++this.pos);
  ++this.pos;
  switch (ch) {
  case 110: return "\n" // 'n' -> '\n'
  case 114: return "\r" // 'r' -> '\r'
  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'
  case 117: return codePointToString(this.readCodePoint()) // 'u'
  case 116: return "\t" // 't' -> '\t'
  case 98: return "\b" // 'b' -> '\b'
  case 118: return "\u000b" // 'v' -> '\u000b'
  case 102: return "\f" // 'f' -> '\f'
  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\r\n'
  case 10: // ' \n'
    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }
    return ""
  case 56:
  case 57:
    if (this.strict) {
      this.invalidStringToken(
        this.pos - 1,
        "Invalid escape sequence"
      );
    }
    if (inTemplate) {
      var codePos = this.pos - 1;

      this.invalidStringToken(
        codePos,
        "Invalid escape sequence in template string"
      );
    }
  default:
    if (ch >= 48 && ch <= 55) {
      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];
      var octal = parseInt(octalStr, 8);
      if (octal > 255) {
        octalStr = octalStr.slice(0, -1);
        octal = parseInt(octalStr, 8);
      }
      this.pos += octalStr.length - 1;
      ch = this.input.charCodeAt(this.pos);
      if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {
        this.invalidStringToken(
          this.pos - 1 - octalStr.length,
          inTemplate
            ? "Octal literal in template string"
            : "Octal literal in strict mode"
        );
      }
      return String.fromCharCode(octal)
    }
    if (isNewLine(ch)) {
      // Unicode new line characters after \ get removed from output in both
      // template literals and strings
      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }
      return ""
    }
    return String.fromCharCode(ch)
  }
};

// Used to read character escape sequences ('\x', '\u', '\U').

pp.readHexChar = function(len) {
  var codePos = this.pos;
  var n = this.readInt(16, len);
  if (n === null) { this.invalidStringToken(codePos, "Bad character escape sequence"); }
  return n
};

// Read an identifier, and return it as a string. Sets `this.containsEsc`
// to whether the word contained a '\u' escape.
//
// Incrementally adds only escaped chars, adding other chunks as-is
// as a micro-optimization.

pp.readWord1 = function() {
  this.containsEsc = false;
  var word = "", first = true, chunkStart = this.pos;
  var astral = this.options.ecmaVersion >= 6;
  while (this.pos < this.input.length) {
    var ch = this.fullCharCodeAtPos();
    if (isIdentifierChar(ch, astral)) {
      this.pos += ch <= 0xffff ? 1 : 2;
    } else if (ch === 92) { // "\"
      this.containsEsc = true;
      word += this.input.slice(chunkStart, this.pos);
      var escStart = this.pos;
      if (this.input.charCodeAt(++this.pos) !== 117) // "u"
        { this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"); }
      ++this.pos;
      var esc = this.readCodePoint();
      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))
        { this.invalidStringToken(escStart, "Invalid Unicode escape"); }
      word += codePointToString(esc);
      chunkStart = this.pos;
    } else {
      break
    }
    first = false;
  }
  return word + this.input.slice(chunkStart, this.pos)
};

// Read an identifier or keyword token. Will check for reserved
// words when necessary.

pp.readWord = function() {
  var word = this.readWord1();
  var type = types$1.name;
  if (this.keywords.test(word)) {
    type = keywords[word];
  }
  return this.finishToken(type, word)
};

// Acorn is a tiny, fast JavaScript parser written in JavaScript.
//
// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and
// various contributors and released under an MIT license.
//
// Git repositories for Acorn are available at
//
//     http://marijnhaverbeke.nl/git/acorn
//     https://github.com/acornjs/acorn.git
//
// Please use the [github bug tracker][ghbt] to report issues.
//
// [ghbt]: https://github.com/acornjs/acorn/issues


var version$1 = "8.15.0";

Parser.acorn = {
  Parser: Parser,
  version: version$1,
  defaultOptions: defaultOptions,
  Position: Position,
  SourceLocation: SourceLocation,
  getLineInfo: getLineInfo,
  Node: Node,
  TokenType: TokenType,
  tokTypes: types$1,
  keywordTypes: keywords,
  TokContext: TokContext,
  tokContexts: types,
  isIdentifierChar: isIdentifierChar,
  isIdentifierStart: isIdentifierStart,
  Token: Token,
  isNewLine: isNewLine,
  lineBreak: lineBreak,
  lineBreakG: lineBreakG,
  nonASCIIwhitespace: nonASCIIwhitespace
};

(undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
(undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};

const YTJS_TAG = 'YOUTUBEJS';
const Level = {
    ERROR: 1,
    WARNING: 2,
    INFO: 3,
    DEBUG: 4
};
const log_map = {
    [Level.ERROR]: (...args) => console.error(...args),
    [Level.WARNING]: (...args) => console.warn(...args),
    [Level.INFO]: (...args) => console.info(...args),
    [Level.DEBUG]: (...args) => console.debug(...args)
};
let log_level = [Level.WARNING];
function doLog(level, tag, args) {
    if (!log_map[level] || !log_level.includes(level))
        return;
    const tags = [`[${YTJS_TAG}]`];
    if (tag)
        tags.push(`[${tag}]`);
    log_map[level](`${tags.join('')}:`, ...(args || []));
}
const warn = (tag, ...args) => doLog(Level.WARNING, tag, args);
const debug = (tag, ...args) => doLog(Level.DEBUG, tag, args);

const isObserved = Symbol('ObservedArray.isObserved');
class YTNode {
    static type = 'YTNode';
    type;
    constructor() {
        this.type = this.constructor.type;
    }
    /**
     * Check if the node is of the given type.
     * @param types - The type to check
     * @returns whether the node is of the given type
     */
    is(...types) {
        return types.some((type) => this.type === type.type);
    }
    /**
     * Cast to one of the given types.
     * @param types - The types to cast to
     * @returns The node cast to one of the given types
     * @throws {ParsingError} If the node is not of the given type
     */
    as(...types) {
        if (!this.is(...types)) {
            throw new ParsingError(`Cannot cast ${this.type} to one of ${types.map((t) => t.type).join(', ')}`);
        }
        return this;
    }
    /**
     * Check for a key without asserting the type.
     * @param key - The key to check
     * @returns Whether the node has the key
     */
    hasKey(key) {
        return Reflect.has(this, key);
    }
    /**
     * Assert that the node has the given key and return it.
     * @param key - The key to check
     * @returns The value of the key wrapped in a Maybe
     * @throws {ParsingError} If the node does not have the key
     */
    key(key) {
        if (!this.hasKey(key)) {
            throw new ParsingError(`Missing key ${key}`);
        }
        return new Maybe(this[key]);
    }
}
const MAYBE_TAG = 'Maybe';
/**
 * A wrapper class that provides type-safe access to a value.
 */
class Maybe {
    #value;
    constructor(value) {
        this.#value = value;
    }
    #checkPrimitive(type) {
        return typeof this.#value === type;
    }
    #assertPrimitive(type) {
        if (!this.#checkPrimitive(type)) {
            throw new TypeError(`Expected ${type}, got ${this.typeof}`);
        }
        return this.#value;
    }
    get typeof() {
        return typeof this.#value;
    }
    string() {
        return this.#assertPrimitive('string');
    }
    isString() {
        return this.#checkPrimitive('string');
    }
    number() {
        return this.#assertPrimitive('number');
    }
    isNumber() {
        return this.#checkPrimitive('number');
    }
    bigint() {
        return this.#assertPrimitive('bigint');
    }
    isBigint() {
        return this.#checkPrimitive('bigint');
    }
    boolean() {
        return this.#assertPrimitive('boolean');
    }
    isBoolean() {
        return this.#checkPrimitive('boolean');
    }
    symbol() {
        return this.#assertPrimitive('symbol');
    }
    isSymbol() {
        return this.#checkPrimitive('symbol');
    }
    undefined() {
        return this.#assertPrimitive('undefined');
    }
    isUndefined() {
        return this.#checkPrimitive('undefined');
    }
    null() {
        if (this.#value !== null)
            throw new TypeError(`Expected null, got ${typeof this.#value}`);
        return this.#value;
    }
    isNull() {
        return this.#value === null;
    }
    object() {
        return this.#assertPrimitive('object');
    }
    isObject() {
        return this.#checkPrimitive('object');
    }
    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type
    function() {
        return this.#assertPrimitive('function');
    }
    isFunction() {
        return this.#checkPrimitive('function');
    }
    /**
     * Get the value as an array.
     * @returns the value as any[].
     * @throws If the value is not an array.
     */
    array() {
        if (!Array.isArray(this.#value)) {
            throw new TypeError(`Expected array, got ${typeof this.#value}`);
        }
        return this.#value;
    }
    /**
     * More typesafe variant of {@link Maybe#array}.
     * @returns a proxied array which returns all the values as {@link Maybe}.
     * @throws {TypeError} If the value is not an array
     */
    arrayOfMaybe() {
        const arrayProps = [];
        return new Proxy(this.array(), {
            get(target, prop) {
                if (Reflect.has(arrayProps, prop)) {
                    return Reflect.get(target, prop);
                }
                return new Maybe(Reflect.get(target, prop));
            }
        });
    }
    /**
     * Check whether the value is an array.
     * @returns whether the value is an array.
     */
    isArray() {
        return Array.isArray(this.#value);
    }
    /**
     * Get the value as a YTNode.
     * @returns the value as a YTNode.
     * @throws If the value is not a YTNode.
     */
    node() {
        if (!(this.#value instanceof YTNode)) {
            throw new TypeError(`Expected YTNode, got ${this.#value.constructor.name}`);
        }
        return this.#value;
    }
    /**
     * Check if the value is a YTNode.
     * @returns Whether the value is a YTNode.
     */
    isNode() {
        return this.#value instanceof YTNode;
    }
    /**
     * Get the value as a YTNode of the given type.
     * @param types - The type(s) to cast to.
     * @returns The node cast to the given type.
     * @throws If the node is not of the given type.
     */
    nodeOfType(...types) {
        return this.node().as(...types);
    }
    /**
     * Check if the value is a YTNode of the given type.
     * @param types - the type(s) to check.
     * @returns Whether the value is a YTNode of the given type.
     */
    isNodeOfType(...types) {
        return this.isNode() && this.node().is(...types);
    }
    /**
     * Get the value as an ObservedArray.
     * @returns the value of the Maybe as a ObservedArray.
     */
    observed() {
        if (!this.isObserved()) {
            throw new TypeError(`Expected ObservedArray, got ${typeof this.#value}`);
        }
        return this.#value;
    }
    /**
     * Check if the value is an ObservedArray.
     */
    isObserved() {
        return this.#value?.[isObserved];
    }
    /**
     * Get the value of the Maybe as a SuperParsedResult.
     * @returns the value as a SuperParsedResult.
     * @throws If the value is not a SuperParsedResult.
     */
    parsed() {
        if (!(this.#value instanceof SuperParsedResult)) {
            throw new TypeError(`Expected SuperParsedResult, got ${typeof this.#value}`);
        }
        return this.#value;
    }
    /**
     * Is the result a SuperParsedResult?
     */
    isParsed() {
        return this.#value instanceof SuperParsedResult;
    }
    /**
     * @deprecated
     * This call is not meant to be used outside of debugging. Please use the specific type getter instead.
     */
    any() {
        warn(MAYBE_TAG, 'This call is not meant to be used outside of debugging. Please use the specific type getter instead.');
        return this.#value;
    }
    /**
     * Get the node as an instance of the given class.
     * @param type - The type to check.
     * @returns the value as the given type.
     * @throws If the node is not of the given type.
     */
    instanceof(type) {
        if (!this.isInstanceof(type)) {
            throw new TypeError(`Expected instance of ${type.name}, got ${this.#value.constructor.name}`);
        }
        return this.#value;
    }
    /**
     * Check if the node is an instance of the given class.
     * @param type - The type to check.
     * @returns Whether the node is an instance of the given type.
     */
    isInstanceof(type) {
        return this.#value instanceof type;
    }
}
/**
 * Represents a parsed response in an unknown state. Either a YTNode or a YTNode[] or null.
 */
class SuperParsedResult {
    #result;
    constructor(result) {
        this.#result = result;
    }
    get is_null() {
        return this.#result === null;
    }
    get is_array() {
        return !this.is_null && Array.isArray(this.#result);
    }
    get is_node() {
        return !this.is_array;
    }
    array() {
        if (!this.is_array) {
            throw new TypeError('Expected an array, got a node');
        }
        return this.#result;
    }
    item() {
        if (!this.is_node) {
            throw new TypeError('Expected a node, got an array');
        }
        return this.#result;
    }
}
/**
 * Creates an observed array that provides additional utility methods for array manipulation and filtering.
 * @template T - Type extending YTNode
 * @param obj - Array to be observed
 */
function observe(obj) {
    return new Proxy(obj, {
        get(target, prop) {
            if (prop == 'get') {
                return (rule, del_item) => (target.find((obj, index) => {
                    const match = deepCompare(rule, obj);
                    if (match && del_item) {
                        target.splice(index, 1);
                    }
                    return match;
                }));
            }
            if (prop == isObserved) {
                return true;
            }
            if (prop == 'getAll') {
                return (rule, del_items) => (target.filter((obj, index) => {
                    const match = deepCompare(rule, obj);
                    if (match && del_items) {
                        target.splice(index, 1);
                    }
                    return match;
                }));
            }
            if (prop == 'matchCondition') {
                return (condition) => (target.find((obj) => {
                    return condition(obj);
                }));
            }
            if (prop == 'filterType') {
                return (...types) => {
                    return observe(target.filter((node) => {
                        return !!node.is(...types);
                    }));
                };
            }
            if (prop == 'firstOfType') {
                return (...types) => {
                    return target.find((node) => {
                        return !!node.is(...types);
                    });
                };
            }
            if (prop == 'first') {
                return () => target[0];
            }
            if (prop == 'as') {
                return (...types) => {
                    return observe(target.map((node) => {
                        if (node.is(...types))
                            return node;
                        throw new ParsingError(`Expected node of any type ${types.map((type) => type.type).join(', ')}, got ${node.type}`);
                    }));
                };
            }
            if (prop == 'remove') {
                return (index) => target.splice(index, 1);
            }
            return Reflect.get(target, prop);
        }
    });
}

class AccessibilityContext {
    label;
    constructor(data) {
        this.label = data.label;
    }
}

class AccessibilityData {
    accessibility_identifier;
    identifier;
    label;
    constructor(data) {
        if ('accessibilityIdentifier' in data) {
            this.accessibility_identifier = data.accessibilityIdentifier;
        }
        if ('identifier' in data) {
            this.identifier = {
                accessibility_id_type: data.identifier.accessibilityIdType
            };
        }
        if ('label' in data) {
            this.label = data.label;
        }
    }
}

const URLS = {
    YT_BASE: 'https://www.youtube.com'};

class PlayerStoryboardSpec extends YTNode {
    static type = 'PlayerStoryboardSpec';
    boards;
    constructor(data) {
        super();
        const parts = data.spec.split('|');
        const url = new URL(parts.shift());
        this.boards = parts.map((part, i) => {
            const [thumbnail_width, thumbnail_height, thumbnail_count, columns, rows, interval, name, sigh] = part.split('#');
            url.searchParams.set('sigh', sigh);
            const storyboard_count = Math.ceil(parseInt(thumbnail_count, 10) / (parseInt(columns, 10) * parseInt(rows, 10)));
            return {
                type: 'vod',
                template_url: url.toString().replace('$L', i).replace('$N', name),
                thumbnail_width: parseInt(thumbnail_width, 10),
                thumbnail_height: parseInt(thumbnail_height, 10),
                thumbnail_count: parseInt(thumbnail_count, 10),
                interval: parseInt(interval, 10),
                columns: parseInt(columns, 10),
                rows: parseInt(rows, 10),
                storyboard_count
            };
        });
    }
}

var version = "15.1.2";
var bugs = {
	url: "https://github.com/LuanRT/YouTube.js/issues"
};
var homepage = "https://github.com/LuanRT/YouTube.js#readme";
var packageInfo = {
	version: version,
	bugs: bugs,
	homepage: homepage};

// Copyright 2008 Google Inc.  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
// * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
// * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Code generated by the Protocol Buffer compiler is owned by the owner
// of the input file used when generating it.  This code is not
// standalone and requires a support library to be linked with it.  This
// support library is itself covered by the above license.
/**
 * Read a 64 bit varint as two JS numbers.
 *
 * Returns tuple:
 * [0]: low bits
 * [1]: high bits
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175
 */
function varint64read() {
    let lowBits = 0;
    let highBits = 0;
    for (let shift = 0; shift < 28; shift += 7) {
        let b = this.buf[this.pos++];
        lowBits |= (b & 0x7f) << shift;
        if ((b & 0x80) == 0) {
            this.assertBounds();
            return [lowBits, highBits];
        }
    }
    let middleByte = this.buf[this.pos++];
    // last four bits of the first 32 bit number
    lowBits |= (middleByte & 0x0f) << 28;
    // 3 upper bits are part of the next 32 bit number
    highBits = (middleByte & 0x70) >> 4;
    if ((middleByte & 0x80) == 0) {
        this.assertBounds();
        return [lowBits, highBits];
    }
    for (let shift = 3; shift <= 31; shift += 7) {
        let b = this.buf[this.pos++];
        highBits |= (b & 0x7f) << shift;
        if ((b & 0x80) == 0) {
            this.assertBounds();
            return [lowBits, highBits];
        }
    }
    throw new Error("invalid varint");
}
/**
 * Write a 64 bit varint, given as two JS numbers, to the given bytes array.
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344
 */
function varint64write(lo, hi, bytes) {
    for (let i = 0; i < 28; i = i + 7) {
        const shift = lo >>> i;
        const hasNext = !(shift >>> 7 == 0 && hi == 0);
        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;
        bytes.push(byte);
        if (!hasNext) {
            return;
        }
    }
    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);
    const hasMoreBits = !(hi >> 3 == 0);
    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);
    if (!hasMoreBits) {
        return;
    }
    for (let i = 3; i < 31; i = i + 7) {
        const shift = hi >>> i;
        const hasNext = !(shift >>> 7 == 0);
        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;
        bytes.push(byte);
        if (!hasNext) {
            return;
        }
    }
    bytes.push((hi >>> 31) & 0x01);
}
// constants for binary math
const TWO_PWR_32_DBL = 0x100000000;
/**
 * Parse decimal string of 64 bit integer value as two JS numbers.
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10
 */
function int64FromString(dec) {
    // Check for minus sign.
    const minus = dec[0] === "-";
    if (minus) {
        dec = dec.slice(1);
    }
    // Work 6 decimal digits at a time, acting like we're converting base 1e6
    // digits to binary. This is safe to do with floating point math because
    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.
    const base = 1e6;
    let lowBits = 0;
    let highBits = 0;
    function add1e6digit(begin, end) {
        // Note: Number('') is 0.
        const digit1e6 = Number(dec.slice(begin, end));
        highBits *= base;
        lowBits = lowBits * base + digit1e6;
        // Carry bits from lowBits to
        if (lowBits >= TWO_PWR_32_DBL) {
            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);
            lowBits = lowBits % TWO_PWR_32_DBL;
        }
    }
    add1e6digit(-24, -18);
    add1e6digit(-18, -12);
    add1e6digit(-12, -6);
    add1e6digit(-6);
    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);
}
/**
 * Losslessly converts a 64-bit signed integer in 32:32 split representation
 * into a decimal string.
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10
 */
function int64ToString(lo, hi) {
    let bits = newBits(lo, hi);
    // If we're treating the input as a signed value and the high bit is set, do
    // a manual two's complement conversion before the decimal conversion.
    const negative = bits.hi & 0x80000000;
    if (negative) {
        bits = negate(bits.lo, bits.hi);
    }
    const result = uInt64ToString(bits.lo, bits.hi);
    return negative ? "-" + result : result;
}
/**
 * Losslessly converts a 64-bit unsigned integer in 32:32 split representation
 * into a decimal string.
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10
 */
function uInt64ToString(lo, hi) {
    ({ lo, hi } = toUnsigned(lo, hi));
    // Skip the expensive conversion if the number is small enough to use the
    // built-in conversions.
    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with
    // highBits <= 0x1FFFFF can be safely expressed with a double and retain
    // integer precision.
    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.
    if (hi <= 0x1fffff) {
        return String(TWO_PWR_32_DBL * hi + lo);
    }
    // What this code is doing is essentially converting the input number from
    // base-2 to base-1e7, which allows us to represent the 64-bit range with
    // only 3 (very large) digits. Those digits are then trivial to convert to
    // a base-10 string.
    // The magic numbers used here are -
    // 2^24 = 16777216 = (1,6777216) in base-1e7.
    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.
    // Split 32:32 representation into 16:24:24 representation so our
    // intermediate digits don't overflow.
    const low = lo & 0xffffff;
    const mid = ((lo >>> 24) | (hi << 8)) & 0xffffff;
    const high = (hi >> 16) & 0xffff;
    // Assemble our three base-1e7 digits, ignoring carries. The maximum
    // value in a digit at this step is representable as a 48-bit integer, which
    // can be stored in a 64-bit floating point number.
    let digitA = low + mid * 6777216 + high * 6710656;
    let digitB = mid + high * 8147497;
    let digitC = high * 2;
    // Apply carries from A to B and from B to C.
    const base = 10000000;
    if (digitA >= base) {
        digitB += Math.floor(digitA / base);
        digitA %= base;
    }
    if (digitB >= base) {
        digitC += Math.floor(digitB / base);
        digitB %= base;
    }
    // If digitC is 0, then we should have returned in the trivial code path
    // at the top for non-safe integers. Given this, we can assume both digitB
    // and digitA need leading zeros.
    return (digitC.toString() +
        decimalFrom1e7WithLeadingZeros(digitB) +
        decimalFrom1e7WithLeadingZeros(digitA));
}
function toUnsigned(lo, hi) {
    return { lo: lo >>> 0, hi: hi >>> 0 };
}
function newBits(lo, hi) {
    return { lo: lo | 0, hi: hi | 0 };
}
/**
 * Returns two's compliment negation of input.
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers
 */
function negate(lowBits, highBits) {
    highBits = ~highBits;
    if (lowBits) {
        lowBits = ~lowBits + 1;
    }
    else {
        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,
        // adding 1 to that, results in 0x100000000, which leaves
        // the low bits 0x0 and simply adds one to the high bits.
        highBits += 1;
    }
    return newBits(lowBits, highBits);
}
/**
 * Returns decimal representation of digit1e7 with leading zeros.
 */
const decimalFrom1e7WithLeadingZeros = (digit1e7) => {
    const partial = String(digit1e7);
    return "0000000".slice(partial.length) + partial;
};
/**
 * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`
 *
 * Copyright 2008 Google Inc.  All rights reserved.
 *
 * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144
 */
function varint32write(value, bytes) {
    if (value >= 0) {
        // write value as varint 32
        while (value > 0x7f) {
            bytes.push((value & 0x7f) | 0x80);
            value = value >>> 7;
        }
        bytes.push(value);
    }
    else {
        for (let i = 0; i < 9; i++) {
            bytes.push((value & 127) | 128);
            value = value >> 7;
        }
        bytes.push(1);
    }
}
/**
 * Read an unsigned 32 bit varint.
 *
 * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220
 */
function varint32read() {
    let b = this.buf[this.pos++];
    let result = b & 0x7f;
    if ((b & 0x80) == 0) {
        this.assertBounds();
        return result;
    }
    b = this.buf[this.pos++];
    result |= (b & 0x7f) << 7;
    if ((b & 0x80) == 0) {
        this.assertBounds();
        return result;
    }
    b = this.buf[this.pos++];
    result |= (b & 0x7f) << 14;
    if ((b & 0x80) == 0) {
        this.assertBounds();
        return result;
    }
    b = this.buf[this.pos++];
    result |= (b & 0x7f) << 21;
    if ((b & 0x80) == 0) {
        this.assertBounds();
        return result;
    }
    // Extract only last 4 bits
    b = this.buf[this.pos++];
    result |= (b & 0x0f) << 28;
    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)
        b = this.buf[this.pos++];
    if ((b & 0x80) != 0)
        throw new Error("invalid varint");
    this.assertBounds();
    // Result can have 32 bits, convert it to unsigned
    return result >>> 0;
}

// Copyright 2021-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * Int64Support for the current environment.
 */
const protoInt64 = /*@__PURE__*/ makeInt64Support();
function makeInt64Support() {
    const dv = new DataView(new ArrayBuffer(8));
    // note that Safari 14 implements BigInt, but not the DataView methods
    const ok = typeof BigInt === "function" &&
        typeof dv.getBigInt64 === "function" &&
        typeof dv.getBigUint64 === "function" &&
        typeof dv.setBigInt64 === "function" &&
        typeof dv.setBigUint64 === "function" &&
        (!!globalThis.Deno ||
            typeof process != "object" ||
            typeof process.env != "object" ||
            process.env.BUF_BIGINT_DISABLE !== "1");
    if (ok) {
        const MIN = BigInt("-9223372036854775808");
        const MAX = BigInt("9223372036854775807");
        const UMIN = BigInt("0");
        const UMAX = BigInt("18446744073709551615");
        return {
            zero: BigInt(0),
            supported: true,
            parse(value) {
                const bi = typeof value == "bigint" ? value : BigInt(value);
                if (bi > MAX || bi < MIN) {
                    throw new Error(`invalid int64: ${value}`);
                }
                return bi;
            },
            uParse(value) {
                const bi = typeof value == "bigint" ? value : BigInt(value);
                if (bi > UMAX || bi < UMIN) {
                    throw new Error(`invalid uint64: ${value}`);
                }
                return bi;
            },
            enc(value) {
                dv.setBigInt64(0, this.parse(value), true);
                return {
                    lo: dv.getInt32(0, true),
                    hi: dv.getInt32(4, true),
                };
            },
            uEnc(value) {
                dv.setBigInt64(0, this.uParse(value), true);
                return {
                    lo: dv.getInt32(0, true),
                    hi: dv.getInt32(4, true),
                };
            },
            dec(lo, hi) {
                dv.setInt32(0, lo, true);
                dv.setInt32(4, hi, true);
                return dv.getBigInt64(0, true);
            },
            uDec(lo, hi) {
                dv.setInt32(0, lo, true);
                dv.setInt32(4, hi, true);
                return dv.getBigUint64(0, true);
            },
        };
    }
    return {
        zero: "0",
        supported: false,
        parse(value) {
            if (typeof value != "string") {
                value = value.toString();
            }
            assertInt64String(value);
            return value;
        },
        uParse(value) {
            if (typeof value != "string") {
                value = value.toString();
            }
            assertUInt64String(value);
            return value;
        },
        enc(value) {
            if (typeof value != "string") {
                value = value.toString();
            }
            assertInt64String(value);
            return int64FromString(value);
        },
        uEnc(value) {
            if (typeof value != "string") {
                value = value.toString();
            }
            assertUInt64String(value);
            return int64FromString(value);
        },
        dec(lo, hi) {
            return int64ToString(lo, hi);
        },
        uDec(lo, hi) {
            return uInt64ToString(lo, hi);
        },
    };
}
function assertInt64String(value) {
    if (!/^-?[0-9]+$/.test(value)) {
        throw new Error("invalid int64: " + value);
    }
}
function assertUInt64String(value) {
    if (!/^[0-9]+$/.test(value)) {
        throw new Error("invalid uint64: " + value);
    }
}

// Copyright 2021-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
const symbol = Symbol.for("@bufbuild/protobuf/text-encoding");
function getTextEncoding() {
    if (globalThis[symbol] == undefined) {
        const te = new globalThis.TextEncoder();
        const td = new globalThis.TextDecoder();
        globalThis[symbol] = {
            encodeUtf8(text) {
                return te.encode(text);
            },
            decodeUtf8(bytes) {
                return td.decode(bytes);
            },
            checkUtf8(text) {
                try {
                    encodeURIComponent(text);
                    return true;
                }
                catch (_) {
                    return false;
                }
            },
        };
    }
    return globalThis[symbol];
}

// Copyright 2021-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * Protobuf binary format wire types.
 *
 * A wire type provides just enough information to find the length of the
 * following value.
 *
 * See https://developers.google.com/protocol-buffers/docs/encoding#structure
 */
var WireType;
(function (WireType) {
    /**
     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum
     */
    WireType[WireType["Varint"] = 0] = "Varint";
    /**
     * Used for fixed64, sfixed64, double.
     * Always 8 bytes with little-endian byte order.
     */
    WireType[WireType["Bit64"] = 1] = "Bit64";
    /**
     * Used for string, bytes, embedded messages, packed repeated fields
     *
     * Only repeated numeric types (types which use the varint, 32-bit,
     * or 64-bit wire types) can be packed. In proto3, such fields are
     * packed by default.
     */
    WireType[WireType["LengthDelimited"] = 2] = "LengthDelimited";
    /**
     * Start of a tag-delimited aggregate, such as a proto2 group, or a message
     * in editions with message_encoding = DELIMITED.
     */
    WireType[WireType["StartGroup"] = 3] = "StartGroup";
    /**
     * End of a tag-delimited aggregate.
     */
    WireType[WireType["EndGroup"] = 4] = "EndGroup";
    /**
     * Used for fixed32, sfixed32, float.
     * Always 4 bytes with little-endian byte order.
     */
    WireType[WireType["Bit32"] = 5] = "Bit32";
})(WireType || (WireType = {}));
/**
 * Maximum value for a 32-bit floating point value (Protobuf FLOAT).
 */
const FLOAT32_MAX = 3.4028234663852886e38;
/**
 * Minimum value for a 32-bit floating point value (Protobuf FLOAT).
 */
const FLOAT32_MIN = -34028234663852886e22;
/**
 * Maximum value for an unsigned 32-bit integer (Protobuf UINT32, FIXED32).
 */
const UINT32_MAX = 0xffffffff;
/**
 * Maximum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).
 */
const INT32_MAX = 0x7fffffff;
/**
 * Minimum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).
 */
const INT32_MIN = -2147483648;
class BinaryWriter {
    constructor(encodeUtf8 = getTextEncoding().encodeUtf8) {
        this.encodeUtf8 = encodeUtf8;
        /**
         * Previous fork states.
         */
        this.stack = [];
        this.chunks = [];
        this.buf = [];
    }
    /**
     * Return all bytes written and reset this writer.
     */
    finish() {
        if (this.buf.length) {
            this.chunks.push(new Uint8Array(this.buf)); // flush the buffer
            this.buf = [];
        }
        let len = 0;
        for (let i = 0; i < this.chunks.length; i++)
            len += this.chunks[i].length;
        let bytes = new Uint8Array(len);
        let offset = 0;
        for (let i = 0; i < this.chunks.length; i++) {
            bytes.set(this.chunks[i], offset);
            offset += this.chunks[i].length;
        }
        this.chunks = [];
        return bytes;
    }
    /**
     * Start a new fork for length-delimited data like a message
     * or a packed repeated field.
     *
     * Must be joined later with `join()`.
     */
    fork() {
        this.stack.push({ chunks: this.chunks, buf: this.buf });
        this.chunks = [];
        this.buf = [];
        return this;
    }
    /**
     * Join the last fork. Write its length and bytes, then
     * return to the previous state.
     */
    join() {
        // get chunk of fork
        let chunk = this.finish();
        // restore previous state
        let prev = this.stack.pop();
        if (!prev)
            throw new Error("invalid state, fork stack empty");
        this.chunks = prev.chunks;
        this.buf = prev.buf;
        // write length of chunk as varint
        this.uint32(chunk.byteLength);
        return this.raw(chunk);
    }
    /**
     * Writes a tag (field number and wire type).
     *
     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.
     *
     * Generated code should compute the tag ahead of time and call `uint32()`.
     */
    tag(fieldNo, type) {
        return this.uint32(((fieldNo << 3) | type) >>> 0);
    }
    /**
     * Write a chunk of raw bytes.
     */
    raw(chunk) {
        if (this.buf.length) {
            this.chunks.push(new Uint8Array(this.buf));
            this.buf = [];
        }
        this.chunks.push(chunk);
        return this;
    }
    /**
     * Write a `uint32` value, an unsigned 32 bit varint.
     */
    uint32(value) {
        assertUInt32(value);
        // write value as varint 32, inlined for speed
        while (value > 0x7f) {
            this.buf.push((value & 0x7f) | 0x80);
            value = value >>> 7;
        }
        this.buf.push(value);
        return this;
    }
    /**
     * Write a `int32` value, a signed 32 bit varint.
     */
    int32(value) {
        assertInt32(value);
        varint32write(value, this.buf);
        return this;
    }
    /**
     * Write a `bool` value, a variant.
     */
    bool(value) {
        this.buf.push(value ? 1 : 0);
        return this;
    }
    /**
     * Write a `bytes` value, length-delimited arbitrary data.
     */
    bytes(value) {
        this.uint32(value.byteLength); // write length of chunk as varint
        return this.raw(value);
    }
    /**
     * Write a `string` value, length-delimited data converted to UTF-8 text.
     */
    string(value) {
        let chunk = this.encodeUtf8(value);
        this.uint32(chunk.byteLength); // write length of chunk as varint
        return this.raw(chunk);
    }
    /**
     * Write a `float` value, 32-bit floating point number.
     */
    float(value) {
        assertFloat32(value);
        let chunk = new Uint8Array(4);
        new DataView(chunk.buffer).setFloat32(0, value, true);
        return this.raw(chunk);
    }
    /**
     * Write a `double` value, a 64-bit floating point number.
     */
    double(value) {
        let chunk = new Uint8Array(8);
        new DataView(chunk.buffer).setFloat64(0, value, true);
        return this.raw(chunk);
    }
    /**
     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.
     */
    fixed32(value) {
        assertUInt32(value);
        let chunk = new Uint8Array(4);
        new DataView(chunk.buffer).setUint32(0, value, true);
        return this.raw(chunk);
    }
    /**
     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.
     */
    sfixed32(value) {
        assertInt32(value);
        let chunk = new Uint8Array(4);
        new DataView(chunk.buffer).setInt32(0, value, true);
        return this.raw(chunk);
    }
    /**
     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.
     */
    sint32(value) {
        assertInt32(value);
        // zigzag encode
        value = ((value << 1) ^ (value >> 31)) >>> 0;
        varint32write(value, this.buf);
        return this;
    }
    /**
     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.
     */
    sfixed64(value) {
        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.enc(value);
        view.setInt32(0, tc.lo, true);
        view.setInt32(4, tc.hi, true);
        return this.raw(chunk);
    }
    /**
     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.
     */
    fixed64(value) {
        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.uEnc(value);
        view.setInt32(0, tc.lo, true);
        view.setInt32(4, tc.hi, true);
        return this.raw(chunk);
    }
    /**
     * Write a `int64` value, a signed 64-bit varint.
     */
    int64(value) {
        let tc = protoInt64.enc(value);
        varint64write(tc.lo, tc.hi, this.buf);
        return this;
    }
    /**
     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.
     */
    sint64(value) {
        const tc = protoInt64.enc(value), 
        // zigzag encode
        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;
        varint64write(lo, hi, this.buf);
        return this;
    }
    /**
     * Write a `uint64` value, an unsigned 64-bit varint.
     */
    uint64(value) {
        const tc = protoInt64.uEnc(value);
        varint64write(tc.lo, tc.hi, this.buf);
        return this;
    }
}
class BinaryReader {
    constructor(buf, decodeUtf8 = getTextEncoding().decodeUtf8) {
        this.decodeUtf8 = decodeUtf8;
        this.varint64 = varint64read; // dirty cast for `this`
        /**
         * Read a `uint32` field, an unsigned 32 bit varint.
         */
        this.uint32 = varint32read;
        this.buf = buf;
        this.len = buf.length;
        this.pos = 0;
        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);
    }
    /**
     * Reads a tag - field number and wire type.
     */
    tag() {
        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;
        if (fieldNo <= 0 || wireType < 0 || wireType > 5)
            throw new Error("illegal tag: field no " + fieldNo + " wire type " + wireType);
        return [fieldNo, wireType];
    }
    /**
     * Skip one element and return the skipped data.
     *
     * When skipping StartGroup, provide the tags field number to check for
     * matching field number in the EndGroup tag.
     */
    skip(wireType, fieldNo) {
        let start = this.pos;
        switch (wireType) {
            case WireType.Varint:
                while (this.buf[this.pos++] & 0x80) {
                    // ignore
                }
                break;
            // @ts-ignore TS7029: Fallthrough case in switch -- ignore instead of expect-error for compiler settings without noFallthroughCasesInSwitch: true
            case WireType.Bit64:
                this.pos += 4;
            case WireType.Bit32:
                this.pos += 4;
                break;
            case WireType.LengthDelimited:
                let len = this.uint32();
                this.pos += len;
                break;
            case WireType.StartGroup:
                for (;;) {
                    const [fn, wt] = this.tag();
                    if (wt === WireType.EndGroup) {
                        if (fieldNo !== undefined && fn !== fieldNo) {
                            throw new Error("invalid end group tag");
                        }
                        break;
                    }
                    this.skip(wt, fn);
                }
                break;
            default:
                throw new Error("cant skip wire type " + wireType);
        }
        this.assertBounds();
        return this.buf.subarray(start, this.pos);
    }
    /**
     * Throws error if position in byte array is out of range.
     */
    assertBounds() {
        if (this.pos > this.len)
            throw new RangeError("premature EOF");
    }
    /**
     * Read a `int32` field, a signed 32 bit varint.
     */
    int32() {
        return this.uint32() | 0;
    }
    /**
     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.
     */
    sint32() {
        let zze = this.uint32();
        // decode zigzag
        return (zze >>> 1) ^ -(zze & 1);
    }
    /**
     * Read a `int64` field, a signed 64-bit varint.
     */
    int64() {
        return protoInt64.dec(...this.varint64());
    }
    /**
     * Read a `uint64` field, an unsigned 64-bit varint.
     */
    uint64() {
        return protoInt64.uDec(...this.varint64());
    }
    /**
     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.
     */
    sint64() {
        let [lo, hi] = this.varint64();
        // decode zig zag
        let s = -(lo & 1);
        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;
        hi = (hi >>> 1) ^ s;
        return protoInt64.dec(lo, hi);
    }
    /**
     * Read a `bool` field, a variant.
     */
    bool() {
        let [lo, hi] = this.varint64();
        return lo !== 0 || hi !== 0;
    }
    /**
     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.
     */
    fixed32() {
        // biome-ignore lint/suspicious/noAssignInExpressions: no
        return this.view.getUint32((this.pos += 4) - 4, true);
    }
    /**
     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.
     */
    sfixed32() {
        // biome-ignore lint/suspicious/noAssignInExpressions: no
        return this.view.getInt32((this.pos += 4) - 4, true);
    }
    /**
     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.
     */
    fixed64() {
        return protoInt64.uDec(this.sfixed32(), this.sfixed32());
    }
    /**
     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.
     */
    sfixed64() {
        return protoInt64.dec(this.sfixed32(), this.sfixed32());
    }
    /**
     * Read a `float` field, 32-bit floating point number.
     */
    float() {
        // biome-ignore lint/suspicious/noAssignInExpressions: no
        return this.view.getFloat32((this.pos += 4) - 4, true);
    }
    /**
     * Read a `double` field, a 64-bit floating point number.
     */
    double() {
        // biome-ignore lint/suspicious/noAssignInExpressions: no
        return this.view.getFloat64((this.pos += 8) - 8, true);
    }
    /**
     * Read a `bytes` field, length-delimited arbitrary data.
     */
    bytes() {
        let len = this.uint32(), start = this.pos;
        this.pos += len;
        this.assertBounds();
        return this.buf.subarray(start, start + len);
    }
    /**
     * Read a `string` field, length-delimited data converted to UTF-8 text.
     */
    string() {
        return this.decodeUtf8(this.bytes());
    }
}
/**
 * Assert a valid signed protobuf 32-bit integer as a number or string.
 */
function assertInt32(arg) {
    if (typeof arg == "string") {
        arg = Number(arg);
    }
    else if (typeof arg != "number") {
        throw new Error("invalid int32: " + typeof arg);
    }
    if (!Number.isInteger(arg) ||
        arg > INT32_MAX ||
        arg < INT32_MIN)
        throw new Error("invalid int32: " + arg);
}
/**
 * Assert a valid unsigned protobuf 32-bit integer as a number or string.
 */
function assertUInt32(arg) {
    if (typeof arg == "string") {
        arg = Number(arg);
    }
    else if (typeof arg != "number") {
        throw new Error("invalid uint32: " + typeof arg);
    }
    if (!Number.isInteger(arg) ||
        arg > UINT32_MAX ||
        arg < 0)
        throw new Error("invalid uint32: " + arg);
}
/**
 * Assert a valid protobuf float value as a number or string.
 */
function assertFloat32(arg) {
    if (typeof arg == "string") {
        const o = arg;
        arg = Number(arg);
        if (Number.isNaN(arg) && o !== "NaN") {
            throw new Error("invalid float32: " + o);
        }
    }
    else if (typeof arg != "number") {
        throw new Error("invalid float32: " + typeof arg);
    }
    if (Number.isFinite(arg) &&
        (arg > FLOAT32_MAX || arg < FLOAT32_MIN))
        throw new Error("invalid float32: " + arg);
}

// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v5.29.2
// source: misc/params.proto
/* eslint-disable */
function createBasePeformCommentActionParams() {
    return {
        type: 0,
        commentId: "",
        videoId: "",
        unkNum: undefined,
        channelId: undefined,
        translateCommentParams: undefined,
    };
}
const PeformCommentActionParams = {
    encode(message, writer = new BinaryWriter()) {
        if (message.type !== 0) {
            writer.uint32(8).int32(message.type);
        }
        if (message.commentId !== "") {
            writer.uint32(26).string(message.commentId);
        }
        if (message.videoId !== "") {
            writer.uint32(42).string(message.videoId);
        }
        if (message.unkNum !== undefined) {
            writer.uint32(16).int32(message.unkNum);
        }
        if (message.channelId !== undefined) {
            writer.uint32(186).string(message.channelId);
        }
        if (message.translateCommentParams !== undefined) {
            PeformCommentActionParams_TranslateCommentParams.encode(message.translateCommentParams, writer.uint32(250).fork())
                .join();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePeformCommentActionParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 8) {
                        break;
                    }
                    message.type = reader.int32();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.commentId = reader.string();
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.videoId = reader.string();
                    continue;
                case 2:
                    if (tag !== 16) {
                        break;
                    }
                    message.unkNum = reader.int32();
                    continue;
                case 23:
                    if (tag !== 186) {
                        break;
                    }
                    message.channelId = reader.string();
                    continue;
                case 31:
                    if (tag !== 250) {
                        break;
                    }
                    message.translateCommentParams = PeformCommentActionParams_TranslateCommentParams.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
};
function createBasePeformCommentActionParams_TranslateCommentParams() {
    return { params: undefined, commentId: "", targetLanguage: "" };
}
const PeformCommentActionParams_TranslateCommentParams = {
    encode(message, writer = new BinaryWriter()) {
        if (message.params !== undefined) {
            PeformCommentActionParams_TranslateCommentParams_Params.encode(message.params, writer.uint32(26).fork()).join();
        }
        if (message.commentId !== "") {
            writer.uint32(18).string(message.commentId);
        }
        if (message.targetLanguage !== "") {
            writer.uint32(34).string(message.targetLanguage);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePeformCommentActionParams_TranslateCommentParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.params = PeformCommentActionParams_TranslateCommentParams_Params.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.commentId = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.targetLanguage = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
};
function createBasePeformCommentActionParams_TranslateCommentParams_Params() {
    return { comment: undefined };
}
const PeformCommentActionParams_TranslateCommentParams_Params = {
    encode(message, writer = new BinaryWriter()) {
        if (message.comment !== undefined) {
            PeformCommentActionParams_TranslateCommentParams_Params_Comment.encode(message.comment, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePeformCommentActionParams_TranslateCommentParams_Params();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.comment = PeformCommentActionParams_TranslateCommentParams_Params_Comment.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
};
function createBasePeformCommentActionParams_TranslateCommentParams_Params_Comment() {
    return { text: "" };
}
const PeformCommentActionParams_TranslateCommentParams_Params_Comment = {
    encode(message, writer = new BinaryWriter()) {
        if (message.text !== "") {
            writer.uint32(10).string(message.text);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBasePeformCommentActionParams_TranslateCommentParams_Params_Comment();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.text = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
};

function encodeCommentActionParams(type, args = {}) {
    const data = {
        type,
        commentId: args.comment_id || ' ',
        videoId: args.video_id || ' ',
        channelId: ' ',
        unkNum: 2
    };
    if (args.hasOwnProperty('text')) {
        if (typeof args.target_language !== 'string')
            throw new Error('target_language must be a string');
        if (args.comment_id)
            delete data.unkNum;
        data.translateCommentParams = {
            params: {
                comment: {
                    text: args.text
                }
            },
            commentId: args.comment_id || ' ',
            targetLanguage: args.target_language
        };
    }
    const writer = PeformCommentActionParams.encode(data);
    return encodeURIComponent(u8ToBase64(writer.finish()));
}

class OpenPopupAction extends YTNode {
    static type = 'OpenPopupAction';
    popup;
    popup_type;
    constructor(data) {
        super();
        this.popup = parseItem(data.popup);
        this.popup_type = data.popupType;
    }
}

class Button extends YTNode {
    static type = 'Button';
    text;
    label;
    tooltip;
    style;
    size;
    icon_type;
    is_disabled;
    target_id;
    endpoint;
    accessibility;
    constructor(data) {
        super();
        if (Reflect.has(data, 'text'))
            this.text = new Text$1(data.text).toString();
        if (Reflect.has(data, 'accessibility') && Reflect.has(data.accessibility, 'label')) {
            this.label = data.accessibility.label;
        }
        if ('accessibilityData' in data
            && 'accessibilityData' in data.accessibilityData) {
            this.accessibility = {
                accessibility_data: new AccessibilityData(data.accessibilityData.accessibilityData)
            };
        }
        if (Reflect.has(data, 'tooltip'))
            this.tooltip = data.tooltip;
        if (Reflect.has(data, 'style'))
            this.style = data.style;
        if (Reflect.has(data, 'size'))
            this.size = data.size;
        if (Reflect.has(data, 'icon') && Reflect.has(data.icon, 'iconType'))
            this.icon_type = data.icon.iconType;
        if (Reflect.has(data, 'isDisabled'))
            this.is_disabled = data.isDisabled;
        if (Reflect.has(data, 'targetId'))
            this.target_id = data.targetId;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint || data.serviceEndpoint || data.command);
    }
}

class DropdownItem extends YTNode {
    static type = 'DropdownItem';
    label;
    selected;
    value;
    icon_type;
    description;
    endpoint;
    constructor(data) {
        super();
        this.label = new Text$1(data.label).toString();
        this.selected = !!data.isSelected;
        if (Reflect.has(data, 'int32Value')) {
            this.value = data.int32Value;
        }
        else if (data.stringValue) {
            this.value = data.stringValue;
        }
        if (Reflect.has(data, 'onSelectCommand')) {
            this.endpoint = new NavigationEndpoint(data.onSelectCommand);
        }
        if (Reflect.has(data, 'icon')) {
            this.icon_type = data.icon?.iconType;
        }
        if (Reflect.has(data, 'descriptionText')) {
            this.description = new Text$1(data.descriptionText);
        }
    }
}

class Dropdown extends YTNode {
    static type = 'Dropdown';
    label;
    entries;
    constructor(data) {
        super();
        this.label = data.label || '';
        this.entries = parseArray(data.entries, DropdownItem);
    }
}

class CreatePlaylistDialog extends YTNode {
    static type = 'CreatePlaylistDialog';
    title;
    title_placeholder;
    privacy_option;
    cancel_button;
    create_button;
    constructor(data) {
        super();
        this.title = new Text$1(data.dialogTitle).toString();
        this.title_placeholder = data.titlePlaceholder || '';
        this.privacy_option = parseItem(data.privacyOption, Dropdown);
        this.create_button = parseItem(data.cancelButton, Button);
        this.cancel_button = parseItem(data.cancelButton, Button);
    }
}

class CommandExecutorCommand extends YTNode {
    static type = 'CommandExecutorCommand';
    commands;
    constructor(data) {
        super();
        this.commands = parseCommands(data.commands);
    }
}

class NavigationEndpoint extends YTNode {
    static type = 'NavigationEndpoint';
    name;
    payload;
    dialog;
    modal;
    open_popup;
    next_endpoint;
    metadata;
    command;
    commands;
    constructor(data) {
        super();
        if (data) {
            if (data.serialCommand || data.parallelCommand) {
                const raw_command = data.serialCommand || data.parallelCommand;
                this.commands = raw_command.commands.map((command) => new NavigationEndpoint(command));
            }
            if (data.innertubeCommand || data.command || data.performOnceCommand) {
                data = data.innertubeCommand || data.command || data.performOnceCommand;
            }
        }
        this.command = parseCommand(data);
        if (Reflect.has(data || {}, 'openPopupAction'))
            this.open_popup = new OpenPopupAction(data.openPopupAction);
        this.name = Object.keys(data || {})
            .find((item) => item.endsWith('Endpoint') ||
            item.endsWith('Command'));
        this.payload = this.name ? Reflect.get(data, this.name) : {};
        if (Reflect.has(this.payload, 'dialog') || Reflect.has(this.payload, 'content')) {
            this.dialog = parseItem(this.payload.dialog || this.payload.content);
        }
        if (Reflect.has(this.payload, 'modal')) {
            this.modal = parseItem(this.payload.modal);
        }
        if (Reflect.has(this.payload, 'nextEndpoint')) {
            this.next_endpoint = new NavigationEndpoint(this.payload.nextEndpoint);
        }
        if (data?.serviceEndpoint) {
            data = data.serviceEndpoint;
        }
        this.metadata = {};
        if (data?.commandMetadata?.webCommandMetadata?.url) {
            this.metadata.url = data.commandMetadata.webCommandMetadata.url;
        }
        if (data?.commandMetadata?.webCommandMetadata?.webPageType) {
            this.metadata.page_type = data.commandMetadata.webCommandMetadata.webPageType;
        }
        if (data?.commandMetadata?.webCommandMetadata?.apiUrl) {
            this.metadata.api_url = data.commandMetadata.webCommandMetadata.apiUrl.replace('/youtubei/v1/', '');
        }
        else if (this.name) {
            this.metadata.api_url = this.getPath(this.name);
        }
        if (data?.commandMetadata?.webCommandMetadata?.sendPost) {
            this.metadata.send_post = data.commandMetadata.webCommandMetadata.sendPost;
        }
        if (data?.createPlaylistEndpoint) {
            if (data?.createPlaylistEndpoint.createPlaylistDialog) {
                this.dialog = parseItem(data?.createPlaylistEndpoint.createPlaylistDialog, CreatePlaylistDialog);
            }
        }
    }
    /**
     * Sometimes InnerTube does not return an API url, in that case the library should set it based on the name of the payload object.
     * @deprecated This should be removed in the future.
     */
    getPath(name) {
        switch (name) {
            case 'browseEndpoint':
                return '/browse';
            case 'watchEndpoint':
            case 'reelWatchEndpoint':
                return '/player';
            case 'searchEndpoint':
                return '/search';
            case 'watchPlaylistEndpoint':
                return '/next';
            case 'liveChatItemContextMenuEndpoint':
                return '/live_chat/get_item_context_menu';
        }
    }
    call(actions, args) {
        if (!actions)
            throw new Error('An API caller must be provided');
        if (this.command) {
            let command = this.command;
            if (command.is(CommandExecutorCommand)) {
                command = command.commands.at(-1);
            }
            return actions.execute(command.getApiPath(), { ...command.buildRequest(), ...args });
        }
        if (!this.metadata.api_url)
            throw new Error('Expected an api_url, but none was found.');
        return actions.execute(this.metadata.api_url, { ...this.payload, ...args });
    }
    toURL() {
        if (!this.metadata.url)
            return undefined;
        if (!this.metadata.page_type)
            return undefined;
        return (this.metadata.page_type === 'WEB_PAGE_TYPE_UNKNOWN' ?
            this.metadata.url : `https://www.youtube.com${this.metadata.url}`);
    }
}

class Thumbnail {
    url;
    width;
    height;
    constructor(data) {
        this.url = data.url;
        this.width = data.width;
        this.height = data.height;
    }
    /**
     * Get thumbnails from response object.
     */
    static fromResponse(data) {
        if (!data)
            return [];
        let thumbnail_data;
        if (data.thumbnails) {
            thumbnail_data = data.thumbnails;
        }
        else if (data.sources) {
            thumbnail_data = data.sources;
        }
        if (thumbnail_data) {
            return thumbnail_data.map((x) => new Thumbnail(x)).sort((a, b) => b.width - a.width);
        }
        return [];
    }
}

class EmojiRun {
    text;
    emoji;
    constructor(data) {
        this.text =
            data.emoji?.emojiId ||
                data.emoji?.shortcuts?.[0] ||
                data.text ||
                '';
        this.emoji = {
            emoji_id: data.emoji.emojiId,
            shortcuts: data.emoji?.shortcuts || [],
            search_terms: data.emoji?.searchTerms || [],
            image: Thumbnail.fromResponse(data.emoji.image),
            is_custom: !!data.emoji?.isCustomEmoji
        };
    }
    toString() {
        return this.text;
    }
    toHTML() {
        const escaped_text = escape(this.text);
        return `<img src="${this.emoji.image[0].url}" alt="${escaped_text}" title="${escaped_text}" style="display: inline-block; vertical-align: text-top; height: var(--yt-emoji-size, 1rem); width: var(--yt-emoji-size, 1rem);" loading="lazy" crossorigin="anonymous" />`;
    }
}

class TextRun {
    text;
    text_color;
    endpoint;
    bold;
    bracket;
    dark_mode_text_color;
    deemphasize;
    italics;
    strikethrough;
    error_underline;
    underline;
    font_face;
    attachment;
    constructor(data) {
        this.text = data.text;
        this.bold = Boolean(data.bold);
        this.bracket = Boolean(data.bracket);
        this.italics = Boolean(data.italics);
        this.strikethrough = Boolean(data.strikethrough);
        this.error_underline = Boolean(data.error_underline);
        this.underline = Boolean(data.underline);
        this.deemphasize = Boolean(data.deemphasize);
        if ('textColor' in data) {
            this.text_color = data.textColor;
        }
        if ('navigationEndpoint' in data) {
            this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        }
        if ('darkModeTextColor' in data) {
            this.dark_mode_text_color = data.darkModeTextColor;
        }
        if ('fontFace' in data) {
            this.font_face = data.fontFace;
        }
        this.attachment = data.attachment;
    }
    toString() {
        return this.text;
    }
    toHTML() {
        const tags = [];
        if (this.bold)
            tags.push('b');
        if (this.italics)
            tags.push('i');
        if (this.strikethrough)
            tags.push('s');
        if (this.deemphasize)
            tags.push('small');
        if (this.underline)
            tags.push('u');
        if (this.error_underline)
            tags.push('u');
        if (!this.text?.length)
            return '';
        const escaped_text = escape(this.text);
        const styled_text = tags.map((tag) => `<${tag}>`).join('') + escaped_text + tags.map((tag) => `</${tag}>`).join('');
        const wrapped_text = `<span style="white-space: pre-wrap;">${styled_text}</span>`;
        if (this.attachment) {
            if (this.attachment.element.type.imageType.image.sources.length) {
                if (this.endpoint) {
                    const { url } = this.attachment.element.type.imageType.image.sources[0];
                    let image_el = '';
                    if (url) {
                        image_el = `<img src="${url}" style="vertical-align: middle; height: ${this.attachment.element.properties.layoutProperties.height.value}px; width: ${this.attachment.element.properties.layoutProperties.width.value}px;" alt="">`;
                    }
                    const nav_url = this.endpoint.toURL();
                    if (nav_url)
                        return `<a href="${nav_url}" class="yt-ch-link">${image_el}${wrapped_text}</a>`;
                }
            }
        }
        if (this.endpoint) {
            const url = this.endpoint.toURL();
            if (url)
                return `<a href="${url}">${wrapped_text}</a>`;
        }
        return wrapped_text;
    }
}

function escape(text) {
    return text
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#039;');
}
const TAG$1 = 'Text';
/**
 * Represents text content that may include formatting, emojis, and navigation endpoints.
 */
let Text$1 = class Text {
    /**
     * The plain text content.
     */
    text;
    /**
     * Individual text segments with their formatting.
     */
    runs;
    /**
     * Navigation endpoint associated with this text.
     */
    endpoint;
    /**
     * Accessibility data associated with this text.
     */
    accessibility;
    /**
     * Indicates if the text is right-to-left.
     */
    rtl;
    constructor(data) {
        if (this.isRunsData(data)) {
            this.runs = data.runs.map((run) => run.emoji ? new EmojiRun(run) : new TextRun(run));
            this.text = this.runs.map((run) => run.text).join('');
        }
        else {
            this.text = data?.simpleText;
        }
        if (this.isObject(data) && 'accessibility' in data
            && 'accessibilityData' in data.accessibility) {
            this.accessibility = {
                accessibility_data: new AccessibilityData(data.accessibility.accessibilityData)
            };
        }
        this.rtl = !!data?.rtl;
        this.parseEndpoint(data);
    }
    isRunsData(data) {
        return this.isObject(data) &&
            Reflect.has(data, 'runs') &&
            Array.isArray(data.runs);
    }
    parseEndpoint(data) {
        if (!this.isObject(data))
            return;
        if ('navigationEndpoint' in data) {
            this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        }
        else if ('titleNavigationEndpoint' in data) {
            this.endpoint = new NavigationEndpoint(data.titleNavigationEndpoint);
        }
        else if (this.runs?.[0]?.endpoint) {
            this.endpoint = (this.runs?.[0]).endpoint;
        }
    }
    isObject(data) {
        return typeof data === 'object' && data !== null;
    }
    static fromAttributed(data) {
        const { content, commandRuns: command_runs, attachmentRuns: attachment_runs } = data;
        const runs = [
            {
                text: content,
                startIndex: 0
            }
        ];
        // In AttributedText, styleRuns may not always include the `startIndex` or `length` properties
        // - If `startIndex` is missing, we assume the style applies from the beginning of the text
        // - If `length` is missing, we assume the style applies to the entire text
        // The following code ensures default values are provided for these properties
        const style_runs = data.styleRuns?.map((run) => ({
            ...run,
            startIndex: run.startIndex ?? 0,
            length: run.length ?? content.length
        }));
        if (style_runs?.length)
            this.processStyleRuns(runs, style_runs, data);
        if (command_runs?.length)
            this.processCommandRuns(runs, command_runs, data);
        if (attachment_runs?.length)
            this.processAttachmentRuns(runs, attachment_runs, data);
        return new Text({ runs });
    }
    static processStyleRuns(runs, style_runs, data) {
        for (const style_run of style_runs) {
            if (style_run.italic ||
                style_run.strikethrough === 'LINE_STYLE_SINGLE' ||
                style_run.weightLabel === 'FONT_WEIGHT_MEDIUM' ||
                style_run.weightLabel === 'FONT_WEIGHT_BOLD') {
                const matching_run = findMatchingRun(runs, style_run);
                if (!matching_run) {
                    warn(TAG$1, 'Unable to find matching run for style run. Skipping...', {
                        style_run,
                        input_data: data,
                        // For performance reasons, web browser consoles only expand an object, when the user clicks on it,
                        // So if we log the original runs object, it might have changed by the time the user looks at it.
                        // Deep clone, so that we log the exact state of the runs at this point.
                        parsed_runs: JSON.parse(JSON.stringify(runs))
                    });
                    continue;
                }
                // Comments use MEDIUM for bold text and video descriptions use BOLD for bold text
                insertSubRun(runs, matching_run, style_run, {
                    bold: style_run.weightLabel === 'FONT_WEIGHT_MEDIUM' || style_run.weightLabel === 'FONT_WEIGHT_BOLD',
                    italics: style_run.italic,
                    strikethrough: style_run.strikethrough === 'LINE_STYLE_SINGLE'
                });
            }
            else {
                debug(TAG$1, 'Skipping style run as it is doesn\'t have any information that we parse.', {
                    style_run,
                    input_data: data
                });
            }
        }
    }
    static processCommandRuns(runs, command_runs, data) {
        for (const command_run of command_runs) {
            if (command_run.onTap) {
                const matching_run = findMatchingRun(runs, command_run);
                if (!matching_run) {
                    warn(TAG$1, 'Unable to find matching run for command run. Skipping...', {
                        command_run,
                        input_data: data,
                        // For performance reasons, web browser consoles only expand an object, when the user clicks on it,
                        // So if we log the original runs object, it might have changed by the time the user looks at it.
                        // Deep clone, so that we log the exact state of the runs at this point.
                        parsed_runs: JSON.parse(JSON.stringify(runs))
                    });
                    continue;
                }
                insertSubRun(runs, matching_run, command_run, {
                    navigationEndpoint: command_run.onTap
                });
            }
            else {
                debug(TAG$1, 'Skipping command run as it is missing the "doTap" property.', {
                    command_run,
                    input_data: data
                });
            }
        }
    }
    static processAttachmentRuns(runs, attachment_runs, data) {
        for (const attachment_run of attachment_runs) {
            const matching_run = findMatchingRun(runs, attachment_run);
            if (!matching_run) {
                warn(TAG$1, 'Unable to find matching run for attachment run. Skipping...', {
                    attachment_run,
                    input_data: data,
                    // For performance reasons, web browser consoles only expand an object, when the user clicks on it,
                    // So if we log the original runs object, it might have changed by the time the user looks at it.
                    // Deep clone, so that we log the exact state of the runs at this point.
                    parsed_runs: JSON.parse(JSON.stringify(runs))
                });
                continue;
            }
            if (attachment_run.length === 0) {
                matching_run.attachment = attachment_run;
            }
            else {
                const offset_start_index = attachment_run.startIndex - matching_run.startIndex;
                const text = matching_run.text.substring(offset_start_index, offset_start_index + attachment_run.length);
                const is_custom_emoji = (/^:[^:]+:$/).test(text);
                if (attachment_run.element?.type?.imageType?.image && (is_custom_emoji || (/^(?:\p{Emoji}|\u200d)+$/u).test(text))) {
                    const emoji = {
                        image: attachment_run.element.type.imageType.image,
                        isCustomEmoji: is_custom_emoji,
                        shortcuts: is_custom_emoji ? [text] : undefined
                    };
                    insertSubRun(runs, matching_run, attachment_run, { emoji });
                }
                else {
                    insertSubRun(runs, matching_run, attachment_run, {
                        attachment: attachment_run
                    });
                }
            }
        }
    }
    /**
     * Converts the text to HTML.
     * @returns The HTML.
     */
    toHTML() {
        return this.runs ? this.runs.map((run) => run.toHTML()).join('') : this.text;
    }
    /**
     * Checks if the text is empty.
     * @returns Whether the text is empty.
     */
    isEmpty() {
        return this.text === undefined;
    }
    /**
     * Converts the text to a string.
     * @returns The text.
     */
    toString() {
        return this.text || 'N/A';
    }
};
function findMatchingRun(runs, response_run) {
    return runs.find((run) => {
        return run.startIndex <= response_run.startIndex &&
            response_run.startIndex + response_run.length <= run.startIndex + run.text.length;
    });
}
function insertSubRun(runs, original_run, response_run, properties_to_add) {
    const replace_index = runs.indexOf(original_run);
    const replacement_runs = [];
    const offset_start_index = response_run.startIndex - original_run.startIndex;
    // Stuff before the run
    if (response_run.startIndex > original_run.startIndex) {
        replacement_runs.push({
            ...original_run,
            text: original_run.text.substring(0, offset_start_index)
        });
    }
    replacement_runs.push({
        ...original_run,
        text: original_run.text.substring(offset_start_index, offset_start_index + response_run.length),
        startIndex: response_run.startIndex,
        ...properties_to_add
    });
    // Stuff after the run
    if (response_run.startIndex + response_run.length < original_run.startIndex + original_run.text.length) {
        replacement_runs.push({
            ...original_run,
            text: original_run.text.substring(offset_start_index + response_run.length),
            startIndex: response_run.startIndex + response_run.length
        });
    }
    runs.splice(replace_index, 1, ...replacement_runs);
}

class ChannelExternalLinkView extends YTNode {
    static type = 'ChannelExternalLinkView';
    title;
    link;
    favicon;
    constructor(data) {
        super();
        this.title = Text$1.fromAttributed(data.title);
        this.link = Text$1.fromAttributed(data.link);
        this.favicon = Thumbnail.fromResponse(data.favicon);
    }
}

class AboutChannelView extends YTNode {
    static type = 'AboutChannelView';
    description;
    description_label;
    country;
    custom_links_label;
    subscriber_count;
    view_count;
    joined_date;
    canonical_channel_url;
    channel_id;
    additional_info_label;
    custom_url_on_tap;
    video_count;
    sign_in_for_business_email;
    links;
    constructor(data) {
        super();
        if (Reflect.has(data, 'description')) {
            this.description = data.description;
        }
        if (Reflect.has(data, 'descriptionLabel')) {
            this.description_label = Text$1.fromAttributed(data.descriptionLabel);
        }
        if (Reflect.has(data, 'country')) {
            this.country = data.country;
        }
        if (Reflect.has(data, 'customLinksLabel')) {
            this.custom_links_label = Text$1.fromAttributed(data.customLinksLabel);
        }
        if (Reflect.has(data, 'subscriberCountText')) {
            this.subscriber_count = data.subscriberCountText;
        }
        if (Reflect.has(data, 'viewCountText')) {
            this.view_count = data.viewCountText;
        }
        if (Reflect.has(data, 'joinedDateText')) {
            this.joined_date = Text$1.fromAttributed(data.joinedDateText);
        }
        if (Reflect.has(data, 'canonicalChannelUrl')) {
            this.canonical_channel_url = data.canonicalChannelUrl;
        }
        if (Reflect.has(data, 'channelId')) {
            this.channel_id = data.channelId;
        }
        if (Reflect.has(data, 'additionalInfoLabel')) {
            this.additional_info_label = Text$1.fromAttributed(data.additionalInfoLabel);
        }
        if (Reflect.has(data, 'customUrlOnTap')) {
            this.custom_url_on_tap = new NavigationEndpoint(data.customUrlOnTap);
        }
        if (Reflect.has(data, 'videoCountText')) {
            this.video_count = data.videoCountText;
        }
        if (Reflect.has(data, 'signInForBusinessEmail')) {
            this.sign_in_for_business_email = Text$1.fromAttributed(data.signInForBusinessEmail);
        }
        if (Reflect.has(data, 'links')) {
            this.links = parseArray(data.links, ChannelExternalLinkView);
        }
        else {
            this.links = [];
        }
    }
}

class AboutChannel extends YTNode {
    static type = 'AboutChannel';
    metadata;
    share_channel;
    constructor(data) {
        super();
        this.metadata = parseItem(data.metadata, AboutChannelView);
        this.share_channel = parseItem(data.shareChannel, Button);
    }
}

class AccountChannel extends YTNode {
    static type = 'AccountChannel';
    title;
    endpoint;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
    }
}

/**
 * Not a real renderer but we treat it as one to keep things organized.
 */
class AccountItem extends YTNode {
    static type = 'AccountItem';
    account_name;
    account_photo;
    is_selected;
    is_disabled;
    has_channel;
    endpoint;
    account_byline;
    channel_handle;
    constructor(data) {
        super();
        this.account_name = new Text$1(data.accountName);
        this.account_photo = Thumbnail.fromResponse(data.accountPhoto);
        this.is_selected = !!data.isSelected;
        this.is_disabled = !!data.isDisabled;
        this.has_channel = !!data.hasChannel;
        this.endpoint = new NavigationEndpoint(data.serviceEndpoint);
        this.account_byline = new Text$1(data.accountByline);
        this.channel_handle = new Text$1(data.channelHandle);
    }
}

class AccountItemSectionHeader extends YTNode {
    static type = 'AccountItemSectionHeader';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class CompactLink extends YTNode {
    static type = 'CompactLink';
    title;
    subtitle;
    endpoint;
    style;
    icon_type;
    secondary_icon_type;
    constructor(data) {
        super();
        this.title = new Text$1(data.title).toString();
        if ('subtitle' in data)
            this.subtitle = new Text$1(data.subtitle);
        if ('icon' in data && 'iconType' in data.icon)
            this.icon_type = data.icon.iconType;
        if ('secondaryIcon' in data && 'iconType' in data.secondaryIcon)
            this.secondary_icon_type = data.secondaryIcon.iconType;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint || data.serviceEndpoint);
        this.style = data.style;
    }
}

class AccountItemSection extends YTNode {
    static type = 'AccountItemSection';
    contents;
    header;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents, [AccountItem, CompactLink]);
        this.header = parseItem(data.header, AccountItemSectionHeader);
    }
}

class AccountSectionList extends YTNode {
    static type = 'AccountSectionList';
    contents;
    footers;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents, AccountItemSection);
        this.footers = parseArray(data.footers, AccountChannel);
    }
}

class AppendContinuationItemsAction extends YTNode {
    static type = 'AppendContinuationItemsAction';
    contents;
    target;
    constructor(data) {
        super();
        this.contents = parseArray(data.continuationItems);
        this.target = data.target;
    }
}

class ChangeEngagementPanelVisibilityAction extends YTNode {
    static type = 'ChangeEngagementPanelVisibilityAction';
    target_id;
    visibility;
    constructor(data) {
        super();
        this.target_id = data.targetId;
        this.visibility = data.visibility;
    }
}

class MultiPageMenu extends YTNode {
    static type = 'MultiPageMenu';
    header;
    sections;
    style;
    constructor(data) {
        super();
        this.header = parseItem(data.header);
        this.sections = parseArray(data.sections);
        this.style = data.style;
    }
}

class GetMultiPageMenuAction extends YTNode {
    static type = 'GetMultiPageMenuAction';
    menu;
    constructor(data) {
        super();
        this.menu = parseItem(data.menu, MultiPageMenu);
    }
}

class SendFeedbackAction extends YTNode {
    static type = 'SendFeedbackAction';
    bucket;
    constructor(data) {
        super();
        this.bucket = data.bucket;
    }
}

class SignalAction extends YTNode {
    static type = 'SignalAction';
    signal;
    constructor(data) {
        super();
        this.signal = data.signal;
    }
}

class ChannelSwitcherPage extends YTNode {
    static type = 'ChannelSwitcherPage';
    header;
    contents;
    constructor(data) {
        super();
        this.header = parseItem(data.header);
        this.contents = parse(data.contents, true);
    }
}

class UpdateChannelSwitcherPageAction extends YTNode {
    static type = 'UpdateChannelSwitcherPageAction';
    header;
    contents;
    constructor(data) {
        super();
        const page = parseItem(data.page, ChannelSwitcherPage);
        if (page) {
            this.header = page.header;
            this.contents = page.contents;
        }
    }
}

class SortFilterSubMenu extends YTNode {
    static type = 'SortFilterSubMenu';
    title;
    icon_type;
    tooltip;
    sub_menu_items;
    accessibility;
    constructor(data) {
        super();
        if ('title' in data) {
            this.title = data.title;
        }
        if ('icon' in data) {
            this.icon_type = data.icon.iconType;
        }
        if ('tooltip' in data) {
            this.tooltip = data.tooltip;
        }
        if ('subMenuItems' in data) {
            this.sub_menu_items = data.subMenuItems.map((item) => ({
                title: item.title,
                selected: item.selected,
                continuation: item.continuation?.reloadContinuationData?.continuation,
                endpoint: new NavigationEndpoint(item.serviceEndpoint || item.navigationEndpoint),
                subtitle: item.subtitle || null
            }));
        }
        if ('accessibility' in data
            && 'accessibilityData' in data.accessibility) {
            this.accessibility = {
                accessibility_data: new AccessibilityData(data.accessibility.accessibilityData)
            };
        }
    }
    get label() {
        return this.accessibility?.accessibility_data?.label;
    }
}

class TranscriptFooter extends YTNode {
    static type = 'TranscriptFooter';
    language_menu;
    constructor(data) {
        super();
        this.language_menu = parseItem(data.languageMenu, SortFilterSubMenu);
    }
}

class TranscriptSearchBox extends YTNode {
    static type = 'TranscriptSearchBox';
    formatted_placeholder;
    clear_button;
    endpoint;
    search_button;
    constructor(data) {
        super();
        this.formatted_placeholder = new Text$1(data.formattedPlaceholder);
        this.clear_button = parseItem(data.clearButton, Button);
        this.endpoint = new NavigationEndpoint(data.onTextChangeCommand);
        this.search_button = parseItem(data.searchButton, Button);
    }
}

class TranscriptSectionHeader extends YTNode {
    static type = 'TranscriptSectionHeader';
    start_ms;
    end_ms;
    snippet;
    constructor(data) {
        super();
        this.start_ms = data.startMs;
        this.end_ms = data.endMs;
        this.snippet = new Text$1(data.snippet);
    }
}

class TranscriptSegment extends YTNode {
    static type = 'TranscriptSegment';
    start_ms;
    end_ms;
    snippet;
    start_time_text;
    target_id;
    constructor(data) {
        super();
        this.start_ms = data.startMs;
        this.end_ms = data.endMs;
        this.snippet = new Text$1(data.snippet);
        this.start_time_text = new Text$1(data.startTimeText);
        this.target_id = data.targetId;
    }
}

class TranscriptSegmentList extends YTNode {
    static type = 'TranscriptSegmentList';
    initial_segments;
    no_result_label;
    retry_label;
    touch_captions_enabled;
    constructor(data) {
        super();
        this.initial_segments = parseArray(data.initialSegments, [TranscriptSegment, TranscriptSectionHeader]);
        this.no_result_label = new Text$1(data.noResultLabel);
        this.retry_label = new Text$1(data.retryLabel);
        this.touch_captions_enabled = data.touchCaptionsEnabled;
    }
}

class TranscriptSearchPanel extends YTNode {
    static type = 'TranscriptSearchPanel';
    header;
    body;
    footer;
    target_id;
    constructor(data) {
        super();
        this.header = parseItem(data.header, TranscriptSearchBox);
        this.body = parseItem(data.body, TranscriptSegmentList);
        this.footer = parseItem(data.footer, TranscriptFooter);
        this.target_id = data.targetId;
    }
}

class Transcript extends YTNode {
    static type = 'Transcript';
    content;
    constructor(data) {
        super();
        this.content = parseItem(data.content, TranscriptSearchPanel);
    }
}

class UpdateEngagementPanelAction extends YTNode {
    static type = 'UpdateEngagementPanelAction';
    target_id;
    content;
    constructor(data) {
        super();
        this.target_id = data.targetId;
        this.content = parseItem(data.content, Transcript);
    }
}

class UpdateSubscribeButtonAction extends YTNode {
    static type = 'UpdateSubscribeButtonAction';
    channel_id;
    subscribed;
    constructor(data) {
        super();
        this.channel_id = data.channelId;
        this.subscribed = data.subscribed;
    }
}

class ActiveAccountHeader extends YTNode {
    static type = 'ActiveAccountHeader';
    account_name;
    account_photo;
    endpoint;
    manage_account_title;
    channel_handle;
    constructor(data) {
        super();
        this.account_name = new Text$1(data.accountName);
        this.account_photo = Thumbnail.fromResponse(data.accountPhoto);
        this.endpoint = new NavigationEndpoint(data.serviceEndpoint);
        this.manage_account_title = new Text$1(data.manageAccountTitle);
        this.channel_handle = new Text$1(data.channelHandle);
    }
}

class MenuTitle extends YTNode {
    static type = 'MenuTitle';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class PlaylistAddToOption extends YTNode {
    static type = 'PlaylistAddToOption';
    add_to_playlist_service_endpoint;
    contains_selected_videos;
    playlist_id;
    privacy;
    privacy_icon;
    remove_from_playlist_service_endpoint;
    title;
    constructor(data) {
        super();
        this.add_to_playlist_service_endpoint = new NavigationEndpoint(data.addToPlaylistServiceEndpoint);
        this.contains_selected_videos = data.containsSelectedVideos;
        this.playlist_id = data.playlistId;
        this.privacy = data.privacy;
        this.privacy_icon = { icon_type: data.privacyIcon?.iconType || null };
        this.remove_from_playlist_service_endpoint = new NavigationEndpoint(data.removeFromPlaylistServiceEndpoint);
        this.title = new Text$1(data.title);
    }
}

class AddToPlaylist extends YTNode {
    static type = 'AddToPlaylist';
    actions;
    playlists;
    constructor(data) {
        super();
        this.actions = parseArray(data.actions, [MenuTitle, Button]);
        this.playlists = parseArray(data.playlists, PlaylistAddToOption);
    }
}

class Alert extends YTNode {
    static type = 'Alert';
    text;
    alert_type;
    constructor(data) {
        super();
        this.text = new Text$1(data.text);
        this.alert_type = data.type;
    }
}

class AlertWithButton extends YTNode {
    static type = 'AlertWithButton';
    text;
    alert_type;
    dismiss_button;
    constructor(data) {
        super();
        this.text = new Text$1(data.text);
        this.alert_type = data.type;
        this.dismiss_button = parseItem(data.dismissButton, Button);
    }
}

class AnimatedThumbnailOverlayView extends YTNode {
    static type = 'AnimatedThumbnailOverlayView';
    thumbnail;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
    }
}

class AttributionView extends YTNode {
    static type = 'AttributionView';
    text;
    suffix;
    constructor(data) {
        super();
        this.text = Text$1.fromAttributed(data.text);
        this.suffix = Text$1.fromAttributed(data.suffix);
    }
}

class AudioOnlyPlayability extends YTNode {
    static type = 'AudioOnlyPlayability';
    audio_only_availability;
    constructor(data) {
        super();
        this.audio_only_availability = data.audioOnlyAvailability;
    }
}

class AutomixPreviewVideo extends YTNode {
    static type = 'AutomixPreviewVideo';
    playlist_video;
    constructor(data) {
        super();
        if (data?.content?.automixPlaylistVideoRenderer?.navigationEndpoint) {
            this.playlist_video = {
                endpoint: new NavigationEndpoint(data.content.automixPlaylistVideoRenderer.navigationEndpoint)
            };
        }
    }
}

class AvatarView extends YTNode {
    static type = 'AvatarView';
    image;
    image_processor;
    avatar_image_size;
    constructor(data) {
        super();
        this.image = Thumbnail.fromResponse(data.image);
        this.avatar_image_size = data.avatarImageSize;
        if (data.image.processor) {
            this.image_processor = {
                border_image_processor: {
                    circular: data.image.processor.borderImageProcessor.circular
                }
            };
        }
    }
}

class CommandContext {
    on_focus;
    on_hidden;
    on_touch_end;
    on_touch_move;
    on_long_press;
    on_tap;
    on_touch_start;
    on_visible;
    on_first_visible;
    on_hover;
    constructor(data) {
        if ('onFocus' in data)
            this.on_focus = new NavigationEndpoint(data.onFocus);
        if ('onHidden' in data)
            this.on_hidden = new NavigationEndpoint(data.onHidden);
        if ('onTouchEnd' in data)
            this.on_touch_end = new NavigationEndpoint(data.onTouchEnd);
        if ('onTouchMove' in data)
            this.on_touch_move = new NavigationEndpoint(data.onTouchMove);
        if ('onLongPress' in data)
            this.on_long_press = new NavigationEndpoint(data.onLongPress);
        if ('onTap' in data)
            this.on_tap = new NavigationEndpoint(data.onTap);
        if ('onTouchStart' in data)
            this.on_touch_start = new NavigationEndpoint(data.onTouchStart);
        if ('onVisible' in data)
            this.on_visible = new NavigationEndpoint(data.onVisible);
        if ('onFirstVisible' in data)
            this.on_first_visible = new NavigationEndpoint(data.onFirstVisible);
        if ('onHover' in data)
            this.on_hover = new NavigationEndpoint(data.onHover);
    }
}

class RendererContext {
    command_context;
    accessibility_context;
    constructor(data) {
        if (!data)
            return;
        if ('commandContext' in data) {
            this.command_context = new CommandContext(data.commandContext);
        }
        if ('accessibilityContext' in data) {
            this.accessibility_context = new AccessibilityContext(data.accessibilityContext);
        }
    }
}

class AvatarStackView extends YTNode {
    static type = 'AvatarStackView';
    avatars;
    text;
    renderer_context;
    constructor(data) {
        super();
        this.avatars = parseArray(data.avatars, AvatarView);
        if (Reflect.has(data, 'text'))
            this.text = Text$1.fromAttributed(data.text);
        this.renderer_context = new RendererContext(data.rendererContext);
    }
}

class ButtonView extends YTNode {
    static type = 'ButtonView';
    secondary_icon_image;
    icon_name;
    enable_icon_button;
    tooltip;
    icon_image_flip_for_rtl;
    button_size;
    icon_position;
    is_full_width;
    state;
    on_disabled_tap;
    custom_border_color;
    on_tap;
    style;
    icon_image;
    custom_dark_theme_border_color;
    title;
    target_id;
    enable_full_width_margins;
    custom_font_color;
    button_type;
    enabled;
    accessibility_id;
    custom_background_color;
    on_long_press;
    title_formatted;
    on_visible;
    icon_trailing;
    accessibility_text;
    constructor(data) {
        super();
        if ('secondaryIconImage' in data)
            this.secondary_icon_image = Thumbnail.fromResponse(data.secondaryIconImage);
        if ('iconName' in data)
            this.icon_name = data.iconName;
        if ('enableIconButton' in data)
            this.enable_icon_button = data.enableIconButton;
        if ('tooltip' in data)
            this.tooltip = data.tooltip;
        if ('iconImageFlipForRtl' in data)
            this.icon_image_flip_for_rtl = data.iconImageFlipForRtl;
        if ('buttonSize' in data)
            this.button_size = data.buttonSize;
        if ('iconPosition' in data)
            this.icon_position = data.iconPosition;
        if ('isFullWidth' in data)
            this.is_full_width = data.isFullWidth;
        if ('state' in data)
            this.state = data.state;
        if ('onDisabledTap' in data)
            this.on_disabled_tap = new NavigationEndpoint(data.onDisabledTap);
        if ('customBorderColor' in data)
            this.custom_border_color = data.customBorderColor;
        if ('onTap' in data)
            this.on_tap = new NavigationEndpoint(data.onTap);
        if ('style' in data)
            this.style = data.style;
        if ('iconImage' in data)
            this.icon_image = data.iconImage;
        if ('customDarkThemeBorderColor' in data)
            this.custom_dark_theme_border_color = data.customDarkThemeBorderColor;
        if ('title' in data)
            this.title = data.title;
        if ('targetId' in data)
            this.target_id = data.targetId;
        if ('enableFullWidthMargins' in data)
            this.enable_full_width_margins = data.enableFullWidthMargins;
        if ('customFontColor' in data)
            this.custom_font_color = data.customFontColor;
        if ('type' in data)
            this.button_type = data.type;
        if ('enabled' in data)
            this.enabled = data.enabled;
        if ('accessibilityId' in data)
            this.accessibility_id = data.accessibilityId;
        if ('customBackgroundColor' in data)
            this.custom_background_color = data.customBackgroundColor;
        if ('onLongPress' in data)
            this.on_long_press = new NavigationEndpoint(data.onLongPress);
        if ('titleFormatted' in data)
            this.title_formatted = data.titleFormatted;
        if ('onVisible' in data)
            this.on_visible = data.onVisible;
        if ('iconTrailing' in data)
            this.icon_trailing = data.iconTrailing;
        if ('accessibilityText' in data)
            this.accessibility_text = data.accessibilityText;
    }
}

class BackgroundPromo extends YTNode {
    static type = 'BackgroundPromo';
    body_text;
    cta_button;
    icon_type;
    title;
    constructor(data) {
        super();
        this.body_text = new Text$1(data.bodyText);
        this.cta_button = parseItem(data.ctaButton, [Button, ButtonView]);
        if (Reflect.has(data, 'icon'))
            this.icon_type = data.icon.iconType;
        this.title = new Text$1(data.title);
    }
}

class BackstageImage extends YTNode {
    static type = 'BackstageImage';
    image;
    endpoint;
    constructor(data) {
        super();
        this.image = Thumbnail.fromResponse(data.image);
        this.endpoint = new NavigationEndpoint(data.command);
    }
}

class ToggleButton extends YTNode {
    static type = 'ToggleButton';
    text;
    toggled_text;
    tooltip;
    toggled_tooltip;
    is_toggled;
    is_disabled;
    icon_type;
    like_count;
    short_like_count;
    endpoint;
    toggled_endpoint;
    button_id;
    target_id;
    constructor(data) {
        super();
        this.text = new Text$1(data.defaultText);
        this.toggled_text = new Text$1(data.toggledText);
        this.tooltip = data.defaultTooltip;
        this.toggled_tooltip = data.toggledTooltip;
        this.is_toggled = data.isToggled;
        this.is_disabled = data.isDisabled;
        this.icon_type = data.defaultIcon?.iconType;
        const acc_label = data?.defaultText?.accessibility?.accessibilityData?.label ||
            data?.accessibilityData?.accessibilityData?.label ||
            data?.accessibility?.label;
        if (this.icon_type == 'LIKE') {
            this.like_count = parseInt(acc_label.replace(/\D/g, ''));
            this.short_like_count = new Text$1(data.defaultText).toString();
        }
        this.endpoint =
            data.defaultServiceEndpoint?.commandExecutorCommand?.commands ?
                new NavigationEndpoint(data.defaultServiceEndpoint.commandExecutorCommand.commands.pop()) :
                new NavigationEndpoint(data.defaultServiceEndpoint);
        this.toggled_endpoint = new NavigationEndpoint(data.toggledServiceEndpoint);
        if (Reflect.has(data, 'toggleButtonSupportedData') && Reflect.has(data.toggleButtonSupportedData, 'toggleButtonIdData')) {
            this.button_id = data.toggleButtonSupportedData.toggleButtonIdData.id;
        }
        if (Reflect.has(data, 'targetId')) {
            this.target_id = data.targetId;
        }
    }
}

class CreatorHeart extends YTNode {
    static type = 'CreatorHeart';
    creator_thumbnail;
    heart_icon_type;
    heart_color;
    hearted_tooltip;
    is_hearted;
    is_enabled;
    kennedy_heart_color_string;
    constructor(data) {
        super();
        this.creator_thumbnail = Thumbnail.fromResponse(data.creatorThumbnail);
        if (Reflect.has(data, 'heartIcon') && Reflect.has(data.heartIcon, 'iconType')) {
            this.heart_icon_type = data.heartIcon.iconType;
        }
        this.heart_color = {
            basic_color_palette_data: {
                foreground_title_color: data.heartColor?.basicColorPaletteData?.foregroundTitleColor
            }
        };
        this.hearted_tooltip = data.heartedTooltip;
        this.is_hearted = data.isHearted;
        this.is_enabled = data.isEnabled;
        this.kennedy_heart_color_string = data.kennedyHeartColorString;
    }
}

class CommentActionButtons extends YTNode {
    static type = 'CommentActionButtons';
    like_button;
    dislike_button;
    reply_button;
    creator_heart;
    constructor(data) {
        super();
        this.like_button = parseItem(data.likeButton, ToggleButton);
        this.dislike_button = parseItem(data.dislikeButton, ToggleButton);
        this.reply_button = parseItem(data.replyButton, Button);
        this.creator_heart = parseItem(data.creatorHeart, CreatorHeart);
    }
}

class ToggleButtonView extends YTNode {
    static type = 'ToggleButtonView';
    default_button;
    toggled_button;
    is_toggling_disabled;
    identifier;
    is_toggled;
    constructor(data) {
        super();
        this.default_button = parseItem(data.defaultButtonViewModel, ButtonView);
        this.toggled_button = parseItem(data.toggledButtonViewModel, ButtonView);
        this.is_toggling_disabled = data.isTogglingDisabled;
        this.identifier = data.identifier;
        if (Reflect.has(data, 'isToggled')) {
            this.is_toggled = data.isToggled;
        }
    }
}

class LikeButtonView extends YTNode {
    static type = 'LikeButtonView';
    toggle_button;
    like_status_entity_key;
    like_status_entity;
    constructor(data) {
        super();
        this.toggle_button = parseItem(data.toggleButtonViewModel, ToggleButtonView);
        this.like_status_entity_key = data.likeStatusEntityKey;
        this.like_status_entity = {
            key: data.likeStatusEntity.key,
            like_status: data.likeStatusEntity.likeStatus
        };
    }
}

class DislikeButtonView extends YTNode {
    static type = 'DislikeButtonView';
    toggle_button;
    dislike_entity_key;
    constructor(data) {
        super();
        this.toggle_button = parseItem(data.toggleButtonViewModel, ToggleButtonView);
        this.dislike_entity_key = data.dislikeEntityKey;
    }
}

class SegmentedLikeDislikeButtonView extends YTNode {
    static type = 'SegmentedLikeDislikeButtonView';
    like_button;
    dislike_button;
    icon_type;
    like_count_entity;
    dynamic_like_count_update_data;
    like_count;
    short_like_count;
    constructor(data) {
        super();
        this.like_button = parseItem(data.likeButtonViewModel, LikeButtonView);
        this.dislike_button = parseItem(data.dislikeButtonViewModel, DislikeButtonView);
        this.icon_type = data.iconType;
        if (this.like_button && this.like_button.toggle_button) {
            const toggle_button = this.like_button.toggle_button;
            if (toggle_button.default_button) {
                this.short_like_count = toggle_button.default_button.title;
                if (toggle_button.default_button.accessibility_text)
                    this.like_count = parseInt(toggle_button.default_button.accessibility_text.replace(/\D/g, ''));
            }
            else if (toggle_button.toggled_button) {
                this.short_like_count = toggle_button.toggled_button.title;
                if (toggle_button.toggled_button.accessibility_text)
                    this.like_count = parseInt(toggle_button.toggled_button.accessibility_text.replace(/\D/g, ''));
            }
        }
        this.like_count_entity = {
            key: data.likeCountEntity.key
        };
        this.dynamic_like_count_update_data = {
            update_status_key: data.dynamicLikeCountUpdateData.updateStatusKey,
            placeholder_like_count_values_key: data.dynamicLikeCountUpdateData.placeholderLikeCountValuesKey,
            update_delay_loop_id: data.dynamicLikeCountUpdateData.updateDelayLoopId,
            update_delay_sec: data.dynamicLikeCountUpdateData.updateDelaySec
        };
    }
}

class MenuServiceItem extends Button {
    static type = 'MenuServiceItem';
    constructor(data) {
        super(data);
    }
}

class DownloadButton extends YTNode {
    static type = 'DownloadButton';
    style;
    size; // TODO: check this
    endpoint;
    target_id;
    constructor(data) {
        super();
        this.style = data.style;
        this.size = data.size;
        this.endpoint = new NavigationEndpoint(data.command);
        this.target_id = data.targetId;
    }
}

class MenuServiceItemDownload extends YTNode {
    static type = 'MenuServiceItemDownload';
    has_separator;
    endpoint;
    constructor(data) {
        super();
        this.has_separator = !!data.hasSeparator;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint || data.serviceEndpoint);
    }
}

class MenuFlexibleItem extends YTNode {
    static type = 'MenuFlexibleItem';
    menu_item;
    top_level_button;
    constructor(data) {
        super();
        this.menu_item = parseItem(data.menuItem, [MenuServiceItem, MenuServiceItemDownload]);
        this.top_level_button = parseItem(data.topLevelButton, [DownloadButton, ButtonView, Button]);
    }
}

class LikeButton extends YTNode {
    static type = 'LikeButton';
    target;
    like_status;
    likes_allowed;
    endpoints;
    constructor(data) {
        super();
        this.target = {
            video_id: data.target.videoId
        };
        this.like_status = data.likeStatus;
        this.likes_allowed = data.likesAllowed;
        if (Reflect.has(data, 'serviceEndpoints')) {
            this.endpoints = data.serviceEndpoints.map((endpoint) => new NavigationEndpoint(endpoint));
        }
    }
}

class FlexibleActionsView extends YTNode {
    static type = 'FlexibleActionsView';
    actions_rows;
    style;
    constructor(data) {
        super();
        this.actions_rows = data.actionsRows.map((row) => ({
            actions: parseArray(row.actions, [ButtonView, ToggleButtonView])
        }));
        this.style = data.style;
    }
}

class Menu extends YTNode {
    static type = 'Menu';
    items;
    flexible_items;
    top_level_buttons;
    accessibility;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
        this.flexible_items = parseArray(data.flexibleItems, MenuFlexibleItem);
        this.top_level_buttons = parseArray(data.topLevelButtons, [ToggleButton, LikeButton, Button, ButtonView, SegmentedLikeDislikeButtonView, FlexibleActionsView]);
        if ('accessibility' in data
            && 'accessibilityData' in data.accessibility) {
            this.accessibility = {
                accessibility_data: new AccessibilityData(data.accessibility.accessibilityData)
            };
        }
    }
    get label() {
        return this.accessibility?.accessibility_data?.label;
    }
    // XXX: alias for consistency
    get contents() {
        return this.items;
    }
}

class BackstagePost extends YTNode {
    static type = 'BackstagePost';
    id;
    author;
    content;
    published;
    poll_status;
    vote_status;
    vote_count;
    menu;
    action_buttons;
    vote_button;
    surface;
    endpoint;
    attachment;
    constructor(data) {
        super();
        this.id = data.postId;
        this.author = new Author({
            ...data.authorText,
            navigationEndpoint: data.authorEndpoint
        }, null, data.authorThumbnail);
        this.content = new Text$1(data.contentText);
        this.published = new Text$1(data.publishedTimeText);
        if (Reflect.has(data, 'pollStatus')) {
            this.poll_status = data.pollStatus;
        }
        if (Reflect.has(data, 'voteStatus')) {
            this.vote_status = data.voteStatus;
        }
        if (Reflect.has(data, 'voteCount')) {
            this.vote_count = new Text$1(data.voteCount);
        }
        if (Reflect.has(data, 'actionMenu')) {
            this.menu = parseItem(data.actionMenu, Menu);
        }
        if (Reflect.has(data, 'actionButtons')) {
            this.action_buttons = parseItem(data.actionButtons, CommentActionButtons);
        }
        if (Reflect.has(data, 'voteButton')) {
            this.vote_button = parseItem(data.voteButton, Button);
        }
        if (Reflect.has(data, 'navigationEndpoint')) {
            this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        }
        if (Reflect.has(data, 'backstageAttachment')) {
            this.attachment = parseItem(data.backstageAttachment);
        }
        this.surface = data.surface;
    }
}

class BackstagePostThread extends YTNode {
    static type = 'BackstagePostThread';
    post;
    constructor(data) {
        super();
        this.post = parseItem(data.post);
    }
}

class BadgeView extends YTNode {
    text;
    style;
    accessibility_label;
    constructor(data) {
        super();
        this.text = data.badgeText;
        this.style = data.badgeStyle;
        this.accessibility_label = data.accessibilityLabel;
    }
}

class SubFeedOption extends YTNode {
    static type = 'SubFeedOption';
    name;
    is_selected;
    endpoint;
    constructor(data) {
        super();
        this.name = new Text$1(data.name);
        this.is_selected = data.isSelected;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
    }
}

class SubFeedSelector extends YTNode {
    static type = 'SubFeedSelector';
    title;
    options;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.options = parseArray(data.options, SubFeedOption);
    }
}

class EomSettingsDisclaimer extends YTNode {
    static type = 'EomSettingsDisclaimer';
    disclaimer;
    info_icon;
    usage_scenario;
    constructor(data) {
        super();
        this.disclaimer = new Text$1(data.disclaimer);
        this.info_icon = {
            icon_type: data.infoIcon.iconType
        };
        this.usage_scenario = data.usageScenario;
    }
}

class SearchBox extends YTNode {
    static type = 'SearchBox';
    endpoint;
    search_button;
    clear_button;
    placeholder_text;
    constructor(data) {
        super();
        this.endpoint = new NavigationEndpoint(data.endpoint);
        this.search_button = parseItem(data.searchButton, Button);
        this.clear_button = parseItem(data.clearButton, Button);
        this.placeholder_text = new Text$1(data.placeholderText);
    }
}

class BrowseFeedActions extends YTNode {
    static type = 'BrowseFeedActions';
    contents;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents, [SubFeedSelector, EomSettingsDisclaimer, ToggleButton, CompactLink, SearchBox, Button]);
    }
}

class BrowserMediaSession extends YTNode {
    static type = 'BrowserMediaSession';
    album;
    thumbnails;
    constructor(data) {
        super();
        this.album = new Text$1(data.album);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnailDetails);
    }
}

class ButtonCardView extends YTNode {
    static type = 'ButtonCardView';
    title;
    icon_name;
    renderer_context;
    constructor(data) {
        super();
        this.title = data.title;
        this.icon_name = data.image.sources[0].clientResource.imageName;
        this.renderer_context = new RendererContext(data.rendererContext);
    }
}

// XXX (LuanRT): This is not a real YTNode, but we treat it as one to keep things clean.
class HeaderLink extends YTNode {
    static type = 'HeaderLink';
    endpoint;
    icon;
    title;
    constructor(data) {
        super();
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.icon = Thumbnail.fromResponse(data.icon);
        this.title = new Text$1(data.title);
    }
}
class ChannelHeaderLinks extends YTNode {
    static type = 'ChannelHeaderLinks';
    primary;
    secondary;
    constructor(data) {
        super();
        this.primary = observe(data.primaryLinks?.map((link) => new HeaderLink(link)) || []);
        this.secondary = observe(data.secondaryLinks?.map((link) => new HeaderLink(link)) || []);
    }
}

class ChannelHeaderLinksView extends YTNode {
    static type = 'ChannelHeaderLinksView';
    first_link;
    more;
    constructor(data) {
        super();
        if (Reflect.has(data, 'firstLink')) {
            this.first_link = Text$1.fromAttributed(data.firstLink);
        }
        if (Reflect.has(data, 'more')) {
            this.more = Text$1.fromAttributed(data.more);
        }
    }
}

class ClipCreationTextInput extends YTNode {
    static type = 'ClipCreationTextInput';
    placeholder_text;
    max_character_limit;
    constructor(data) {
        super();
        this.placeholder_text = new Text$1(data.placeholderText);
        this.max_character_limit = data.maxCharacterLimit;
    }
}

class ClipCreationScrubber extends YTNode {
    static type = 'ClipCreationScrubber';
    length_template;
    max_length_ms;
    min_length_ms;
    default_length_ms;
    window_size_ms;
    start_label;
    end_label;
    duration_label;
    constructor(data) {
        super();
        this.length_template = data.lengthTemplate;
        this.max_length_ms = data.maxLengthMs;
        this.min_length_ms = data.minLengthMs;
        this.default_length_ms = data.defaultLengthMs;
        this.window_size_ms = data.windowSizeMs;
        this.start_label = data.startAccessibility?.accessibilityData?.label;
        this.end_label = data.endAccessibility?.accessibilityData?.label;
        this.duration_label = data.durationAccessibility?.accessibilityData?.label;
    }
}

class ClipAdState extends YTNode {
    static type = 'ClipAdState';
    title;
    body;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.body = new Text$1(data.body);
    }
}

class ClipCreation extends YTNode {
    static type = 'ClipCreation';
    user_avatar;
    title_input;
    scrubber;
    save_button;
    display_name;
    publicity_label;
    cancel_button;
    ad_state_overlay;
    external_video_id;
    publicity_label_icon;
    constructor(data) {
        super();
        this.user_avatar = Thumbnail.fromResponse(data.userAvatar);
        this.title_input = parseItem(data.titleInput, [ClipCreationTextInput]);
        this.scrubber = parseItem(data.scrubber, [ClipCreationScrubber]);
        this.save_button = parseItem(data.saveButton, [Button]);
        this.display_name = new Text$1(data.displayName);
        this.publicity_label = data.publicityLabel;
        this.cancel_button = parseItem(data.cancelButton, [Button]);
        this.ad_state_overlay = parseItem(data.adStateOverlay, [ClipAdState]);
        this.external_video_id = data.externalVideoId;
        this.publicity_label_icon = data.publicityLabelIcon;
    }
}

class ClipSection extends YTNode {
    static type = 'ClipSection';
    contents;
    constructor(data) {
        super();
        this.contents = parse(data.contents, true, [ClipCreation]);
    }
}

class ContinuationItem extends YTNode {
    static type = 'ContinuationItem';
    trigger;
    button;
    endpoint;
    constructor(data) {
        super();
        this.trigger = data.trigger;
        if (Reflect.has(data, 'button')) {
            this.button = parseItem(data.button, Button);
        }
        this.endpoint = new NavigationEndpoint(data.continuationEndpoint);
    }
}

class EngagementPanelTitleHeader extends YTNode {
    static type = 'EngagementPanelTitleHeader';
    title;
    visibility_button;
    contextual_info;
    menu;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.contextual_info = data.contextualInfo ? new Text$1(data.contextualInfo) : undefined;
        this.visibility_button = parseItem(data.visibilityButton, Button);
        this.menu = parseItem(data.menu);
    }
}

class MacroMarkersInfoItem extends YTNode {
    static type = 'MacroMarkersInfoItem';
    info_text;
    menu;
    constructor(data) {
        super();
        this.info_text = new Text$1(data.infoText);
        this.menu = parseItem(data.menu, Menu);
    }
}

class MacroMarkersListItem extends YTNode {
    static type = 'MacroMarkersListItem';
    title;
    time_description;
    thumbnail;
    on_tap_endpoint;
    layout;
    is_highlighted;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.time_description = new Text$1(data.timeDescription);
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.on_tap_endpoint = new NavigationEndpoint(data.onTap);
        this.layout = data.layout;
        this.is_highlighted = !!data.isHighlighted;
    }
}

class MacroMarkersList extends YTNode {
    static type = 'MacroMarkersList';
    contents;
    sync_button_label;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents, [MacroMarkersInfoItem, MacroMarkersListItem]);
        this.sync_button_label = new Text$1(data.syncButtonLabel);
    }
}

class ProductList extends YTNode {
    static type = 'ProductList';
    contents;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents);
    }
}

class SectionList extends YTNode {
    static type = 'SectionList';
    contents;
    target_id;
    continuation;
    header;
    sub_menu;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents);
        if (Reflect.has(data, 'targetId')) {
            this.target_id = data.targetId;
        }
        if (Reflect.has(data, 'continuations')) {
            if (Reflect.has(data.continuations[0], 'nextContinuationData')) {
                this.continuation = data.continuations[0].nextContinuationData.continuation;
            }
            else if (Reflect.has(data.continuations[0], 'reloadContinuationData')) {
                this.continuation = data.continuations[0].reloadContinuationData.continuation;
            }
        }
        if (Reflect.has(data, 'header')) {
            this.header = parseItem(data.header);
        }
        if (Reflect.has(data, 'subMenu')) {
            this.sub_menu = parseItem(data.subMenu);
        }
    }
}

class ExpandableVideoDescriptionBody extends YTNode {
    static type = 'ExpandableVideoDescriptionBody';
    show_more_text;
    show_less_text;
    attributed_description_body_text;
    constructor(data) {
        super();
        this.show_more_text = new Text$1(data.showMoreText);
        this.show_less_text = new Text$1(data.showLessText);
        if (Reflect.has(data, 'attributedDescriptionBodyText')) {
            this.attributed_description_body_text = Text$1.fromAttributed(data.attributedDescriptionBodyText);
        }
    }
}

class SearchRefinementCard extends YTNode {
    static type = 'SearchRefinementCard';
    thumbnails;
    endpoint;
    query;
    constructor(data) {
        super();
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.endpoint = new NavigationEndpoint(data.searchEndpoint);
        this.query = new Text$1(data.query).toString();
    }
}

class GameCard extends YTNode {
    static type = 'GameCard';
    game;
    constructor(data) {
        super();
        this.game = parseItem(data.game);
    }
}

class HorizontalList extends YTNode {
    static type = 'HorizontalList';
    visible_item_count;
    items;
    constructor(data) {
        super();
        this.visible_item_count = data.visibleItemCount;
        this.items = parseArray(data.items);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class ExpandableMetadata extends YTNode {
    static type = 'ExpandableMetadata';
    header;
    expanded_content;
    expand_button;
    collapse_button;
    constructor(data) {
        super();
        if (Reflect.has(data, 'header')) {
            this.header = {
                collapsed_title: new Text$1(data.header.collapsedTitle),
                collapsed_thumbnail: Thumbnail.fromResponse(data.header.collapsedThumbnail),
                collapsed_label: new Text$1(data.header.collapsedLabel),
                expanded_title: new Text$1(data.header.expandedTitle)
            };
        }
        this.expanded_content = parseItem(data.expandedContent, [HorizontalCardList, HorizontalList]);
        this.expand_button = parseItem(data.expandButton, Button);
        this.collapse_button = parseItem(data.collapseButton, Button);
    }
}

class MetadataBadge extends YTNode {
    static type = 'MetadataBadge';
    icon_type;
    style;
    label;
    tooltip;
    constructor(data) {
        super();
        if (Reflect.has(data, 'icon')) {
            this.icon_type = data.icon.iconType;
        }
        if (Reflect.has(data, 'style')) {
            this.style = data.style;
        }
        if (Reflect.has(data, 'label')) {
            this.label = data.label;
        }
        if (Reflect.has(data, 'tooltip') || Reflect.has(data, 'iconTooltip')) {
            this.tooltip = data.tooltip || data.iconTooltip;
        }
    }
}

class ThumbnailOverlayTimeStatus extends YTNode {
    static type = 'ThumbnailOverlayTimeStatus';
    text;
    style;
    constructor(data) {
        super();
        this.text = new Text$1(data.text).toString();
        this.style = data.style;
    }
}

class Video extends YTNode {
    static type = 'Video';
    video_id;
    title;
    untranslated_title;
    description_snippet;
    snippets;
    expandable_metadata;
    additional_metadatas;
    thumbnails;
    thumbnail_overlays;
    rich_thumbnail;
    author;
    badges;
    endpoint;
    published;
    view_count;
    short_view_count;
    upcoming;
    length_text;
    show_action_menu;
    is_watched;
    menu;
    byline_text;
    search_video_result_entity_key;
    service_endpoints;
    service_endpoint;
    style;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.video_id = data.videoId;
        this.expandable_metadata = parseItem(data.expandableMetadata, ExpandableMetadata);
        if ('untranslatedTitle' in data)
            this.untranslated_title = new Text$1(data.untranslatedTitle);
        if ('descriptionSnippet' in data)
            this.description_snippet = new Text$1(data.descriptionSnippet);
        if ('detailedMetadataSnippets' in data) {
            this.snippets = data.detailedMetadataSnippets.map((snippet) => ({
                text: new Text$1(snippet.snippetText),
                hover_text: new Text$1(snippet.snippetHoverText)
            }));
        }
        if ('additionalMetadatas' in data)
            this.additional_metadatas = data.additionalMetadatas.map((meta) => new Text$1(meta));
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        if ('richThumbnail' in data)
            this.rich_thumbnail = parseItem(data.richThumbnail);
        this.author = new Author(data.ownerText, data.ownerBadges, data.channelThumbnailSupportedRenderers?.channelThumbnailWithLinkRenderer?.thumbnail);
        this.badges = parseArray(data.badges, MetadataBadge);
        if ('navigationEndpoint' in data)
            this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        if ('publishedTimeText' in data)
            this.published = new Text$1(data.publishedTimeText);
        if ('viewCountText' in data)
            this.view_count = new Text$1(data.viewCountText);
        if ('shortViewCountText' in data)
            this.short_view_count = new Text$1(data.shortViewCountText);
        if ('upcomingEventData' in data)
            this.upcoming = new Date(Number(`${data.upcomingEventData.startTime}000`));
        this.show_action_menu = !!data.showActionMenu;
        this.is_watched = !!data.isWatched;
        this.menu = parseItem(data.menu, Menu);
        if ('searchVideoResultEntityKey' in data)
            this.search_video_result_entity_key = data.searchVideoResultEntityKey;
        if ('bylineText' in data)
            this.byline_text = new Text$1(data.bylineText);
        if ('lengthText' in data)
            this.length_text = new Text$1(data.lengthText);
        if ('serviceEndpoints' in data)
            this.service_endpoints = data.serviceEndpoints.map((endpoint) => new NavigationEndpoint(endpoint));
        if ('serviceEndpoint' in data)
            this.service_endpoint = new NavigationEndpoint(data.serviceEndpoint);
        if ('style' in data)
            this.style = data.style;
    }
    /**
     * @deprecated Use {@linkcode video_id} instead.
     */
    get id() {
        return this.video_id;
    }
    get description() {
        if (this.snippets)
            return this.snippets.map((snip) => snip.text.toString()).join('');
        return this.description_snippet?.toString() || '';
    }
    get is_live() {
        return this.badges.some((badge) => {
            if (badge.style === 'BADGE_STYLE_TYPE_LIVE_NOW' || badge.label === 'LIVE')
                return true;
        }) || this.thumbnail_overlays.firstOfType(ThumbnailOverlayTimeStatus)?.style === 'LIVE';
    }
    get is_upcoming() {
        return this.upcoming && this.upcoming > new Date();
    }
    get is_premiere() {
        return this.badges.some((badge) => badge.label === 'PREMIERE');
    }
    get is_4k() {
        return this.badges.some((badge) => badge.label === '4K');
    }
    get has_captions() {
        return this.badges.some((badge) => badge.label === 'CC');
    }
    get best_thumbnail() {
        return this.thumbnails[0];
    }
    get duration() {
        const overlay_time_status = this.thumbnail_overlays.firstOfType(ThumbnailOverlayTimeStatus);
        const length_text = this.length_text?.toString() || overlay_time_status?.text.toString();
        return {
            text: length_text,
            seconds: length_text ? timeToSeconds(length_text) : 0
        };
    }
}

class VideoCard extends Video {
    static type = 'VideoCard';
    metadata_text;
    constructor(data) {
        super(data);
        if (Reflect.has(data, 'metadataText')) {
            this.metadata_text = new Text$1(data.metadataText);
            if (this.metadata_text.text) {
                this.short_view_count = new Text$1({ simpleText: this.metadata_text.text.split('·')[0]?.trim() });
                this.published = new Text$1({ simpleText: this.metadata_text.text.split('·')[1]?.trim() });
            }
        }
        if (Reflect.has(data, 'bylineText')) {
            this.author = new Author(data.bylineText, data.ownerBadges, data.channelThumbnailSupportedRenderers?.channelThumbnailWithLinkRenderer?.thumbnail);
        }
    }
}

class ContentPreviewImageView extends YTNode {
    static type = 'ContentPreviewImageView';
    image;
    style;
    constructor(data) {
        super();
        this.image = Thumbnail.fromResponse(data.image);
        this.style = data.style;
    }
}

class VideoAttributeView extends YTNode {
    static type = 'VideoAttributeView';
    image;
    image_style;
    title;
    subtitle;
    secondary_subtitle;
    orientation;
    sizing_rule;
    overflow_menu_on_tap;
    overflow_menu_a11y_label;
    constructor(data) {
        super();
        if (data.image?.sources) {
            this.image = Thumbnail.fromResponse(data.image);
        }
        else {
            this.image = parseItem(data.image, ContentPreviewImageView);
        }
        this.image_style = data.imageStyle;
        this.title = data.title;
        this.subtitle = data.subtitle;
        if (Reflect.has(data, 'secondarySubtitle')) {
            this.secondary_subtitle = {
                content: data.secondarySubtitle.content
            };
        }
        this.orientation = data.orientation;
        this.sizing_rule = data.sizingRule;
        this.overflow_menu_on_tap = new NavigationEndpoint(data.overflowMenuOnTap);
        this.overflow_menu_a11y_label = data.overflowMenuA11yLabel;
    }
}

class HorizontalCardList extends YTNode {
    static type = 'HorizontalCardList';
    cards;
    header;
    previous_button;
    next_button;
    constructor(data) {
        super();
        this.cards = parseArray(data.cards, [VideoAttributeView, SearchRefinementCard, MacroMarkersListItem, GameCard, VideoCard]);
        this.header = parseItem(data.header);
        this.previous_button = parseItem(data.previousButton, Button);
        this.next_button = parseItem(data.nextButton, Button);
    }
}

class Factoid extends YTNode {
    static type = 'Factoid';
    label;
    value;
    accessibility_text;
    constructor(data) {
        super();
        this.label = new Text$1(data.label);
        this.value = new Text$1(data.value);
        this.accessibility_text = data.accessibilityText;
    }
}

class UploadTimeFactoid extends YTNode {
    static type = 'UploadTimeFactoid';
    factoid;
    constructor(data) {
        super();
        this.factoid = parseItem(data.factoid, Factoid);
    }
}

class ViewCountFactoid extends YTNode {
    static type = 'ViewCountFactoid';
    view_count_entity_key;
    factoid;
    view_count_type;
    constructor(data) {
        super();
        this.view_count_entity_key = data.viewCountEntityKey;
        this.factoid = parseItem(data.factoid, [Factoid]);
        this.view_count_type = data.viewCountType;
    }
}

class HypePointsFactoid extends YTNode {
    static type = 'HypePointsFactoid';
    factoid;
    constructor(data) {
        super();
        this.factoid = parseItem(data.factoid, Factoid);
    }
}

class VideoDescriptionHeader extends YTNode {
    static type = 'VideoDescriptionHeader';
    channel;
    channel_navigation_endpoint;
    channel_thumbnail;
    factoids;
    publish_date;
    title;
    views;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.channel = new Text$1(data.channel);
        this.channel_navigation_endpoint = new NavigationEndpoint(data.channelNavigationEndpoint);
        this.channel_thumbnail = Thumbnail.fromResponse(data.channelThumbnail);
        this.publish_date = new Text$1(data.publishDate);
        this.views = new Text$1(data.views);
        this.factoids = parseArray(data.factoid, [Factoid, HypePointsFactoid, ViewCountFactoid, UploadTimeFactoid]);
    }
}

class VideoDescriptionInfocardsSection extends YTNode {
    static type = 'VideoDescriptionInfocardsSection';
    section_title;
    creator_videos_button;
    creator_about_button;
    section_subtitle;
    channel_avatar;
    channel_endpoint;
    constructor(data) {
        super();
        this.section_title = new Text$1(data.sectionTitle);
        this.creator_videos_button = parseItem(data.creatorVideosButton, Button);
        this.creator_about_button = parseItem(data.creatorAboutButton, Button);
        this.section_subtitle = new Text$1(data.sectionSubtitle);
        this.channel_avatar = Thumbnail.fromResponse(data.channelAvatar);
        this.channel_endpoint = new NavigationEndpoint(data.channelEndpoint);
    }
}

class InfoRow extends YTNode {
    static type = 'InfoRow';
    title;
    default_metadata;
    expanded_metadata;
    info_row_expand_status_key;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        if (Reflect.has(data, 'defaultMetadata')) {
            this.default_metadata = new Text$1(data.defaultMetadata);
        }
        if (Reflect.has(data, 'expandedMetadata')) {
            this.expanded_metadata = new Text$1(data.expandedMetadata);
        }
        if (Reflect.has(data, 'infoRowExpandStatusKey')) {
            this.info_row_expand_status_key = data.infoRowExpandStatusKey;
        }
    }
}

class CompactVideo extends YTNode {
    static type = 'CompactVideo';
    video_id;
    thumbnails;
    rich_thumbnail;
    title;
    author;
    view_count;
    short_view_count;
    short_byline_text;
    long_byline_text;
    published;
    badges;
    thumbnail_overlays;
    endpoint;
    menu;
    length_text;
    is_watched;
    service_endpoints;
    service_endpoint;
    style;
    constructor(data) {
        super();
        this.video_id = data.videoId;
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.title = new Text$1(data.title);
        this.author = new Author(data.longBylineText, data.ownerBadges, data.channelThumbnail);
        this.is_watched = !!data.isWatched;
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        this.menu = parseItem(data.menu, Menu);
        this.badges = parseArray(data.badges, MetadataBadge);
        if ('publishedTimeText' in data)
            this.published = new Text$1(data.publishedTimeText);
        if ('shortBylineText' in data)
            this.view_count = new Text$1(data.viewCountText);
        if ('shortViewCountText' in data)
            this.short_view_count = new Text$1(data.shortViewCountText);
        if ('richThumbnail' in data)
            this.rich_thumbnail = parseItem(data.richThumbnail);
        if ('shortBylineText' in data)
            this.short_byline_text = new Text$1(data.shortBylineText);
        if ('longBylineText' in data)
            this.long_byline_text = new Text$1(data.longBylineText);
        if ('lengthText' in data)
            this.length_text = new Text$1(data.lengthText);
        if ('serviceEndpoints' in data)
            this.service_endpoints = data.serviceEndpoints.map((endpoint) => new NavigationEndpoint(endpoint));
        if ('serviceEndpoint' in data)
            this.service_endpoint = new NavigationEndpoint(data.serviceEndpoint);
        if ('navigationEndpoint' in data)
            this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        if ('style' in data)
            this.style = data.style;
    }
    /**
     * @deprecated Use {@linkcode video_id} instead.
     */
    get id() {
        return this.video_id;
    }
    get duration() {
        const overlay_time_status = this.thumbnail_overlays.firstOfType(ThumbnailOverlayTimeStatus);
        const length_text = this.length_text?.toString() || overlay_time_status?.text.toString();
        return {
            text: length_text,
            seconds: length_text ? timeToSeconds(length_text) : 0
        };
    }
    get best_thumbnail() {
        return this.thumbnails[0];
    }
    get is_fundraiser() {
        return this.badges.some((badge) => badge.label === 'Fundraiser');
    }
    get is_live() {
        return this.badges.some((badge) => {
            if (badge.style === 'BADGE_STYLE_TYPE_LIVE_NOW' || badge.label === 'LIVE')
                return true;
        });
    }
    get is_new() {
        return this.badges.some((badge) => badge.label === 'New');
    }
    get is_premiere() {
        return this.badges.some((badge) => badge.style === 'PREMIERE');
    }
}

class CarouselLockup extends YTNode {
    static type = 'CarouselLockup';
    info_rows;
    video_lockup;
    constructor(data) {
        super();
        this.info_rows = parseArray(data.infoRows, InfoRow);
        this.video_lockup = parseItem(data.videoLockup, CompactVideo);
    }
}

class VideoDescriptionMusicSection extends YTNode {
    static type = 'VideoDescriptionMusicSection';
    carousel_lockups;
    section_title;
    constructor(data) {
        super();
        this.carousel_lockups = parseArray(data.carouselLockups, CarouselLockup);
        this.section_title = new Text$1(data.sectionTitle);
    }
}

class VideoDescriptionTranscriptSection extends YTNode {
    static type = 'VideoDescriptionTranscriptSection';
    section_title;
    sub_header_text;
    primary_button;
    constructor(data) {
        super();
        this.section_title = new Text$1(data.sectionTitle);
        this.sub_header_text = new Text$1(data.subHeaderText);
        this.primary_button = parseItem(data.primaryButton, Button);
    }
}

class StructuredDescriptionPlaylistLockup extends YTNode {
    static type = 'StructuredDescriptionPlaylistLockup';
    thumbnail;
    title;
    short_byline_text;
    video_count_short_text;
    endpoint;
    thumbnail_width;
    aspect_ratio;
    max_lines_title;
    max_lines_short_byline_text;
    overlay_position;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.title = new Text$1(data.title);
        this.short_byline_text = new Text$1(data.shortBylineText);
        this.video_count_short_text = new Text$1(data.videoCountShortText);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.thumbnail_width = data.thumbnailWidth;
        this.aspect_ratio = data.aspectRatio;
        this.max_lines_title = data.maxLinesTitle;
        this.max_lines_short_byline_text = data.maxLinesShortBylineText;
        this.overlay_position = data.overlayPosition;
    }
}

class VideoDescriptionCourseSection extends YTNode {
    static type = 'VideoDescriptionCourseSection';
    section_title;
    media_lockups;
    constructor(data) {
        super();
        this.section_title = new Text$1(data.sectionTitle);
        this.media_lockups = parseArray(data.mediaLockups, [StructuredDescriptionPlaylistLockup]);
    }
}

class VideoAttributesSectionView extends YTNode {
    static type = 'VideoAttributesSectionView';
    header_title;
    header_subtitle;
    video_attributes;
    previous_button;
    next_button;
    constructor(data) {
        super();
        this.header_title = data.headerTitle;
        this.header_subtitle = data.headerSubtitle;
        this.video_attributes = parseArray(data.videoAttributeViewModels, VideoAttributeView);
        this.previous_button = parseItem(data.previousButton, ButtonView);
        this.next_button = parseItem(data.nextButton, ButtonView);
    }
}

class HowThisWasMadeSectionView extends YTNode {
    static type = 'HowThisWasMadeSectionView';
    section_title;
    body_text;
    body_header;
    constructor(data) {
        super();
        if (Reflect.has(data, 'sectionText'))
            this.section_title = Text$1.fromAttributed(data.sectionText);
        if (Reflect.has(data, 'bodyText'))
            this.body_text = Text$1.fromAttributed(data.bodyText);
        if (Reflect.has(data, 'bodyHeader'))
            this.body_header = Text$1.fromAttributed(data.bodyHeader);
    }
}

class ReelShelf extends YTNode {
    static type = 'ReelShelf';
    title;
    items;
    endpoint;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.items = parseArray(data.items);
        if (Reflect.has(data, 'endpoint')) {
            this.endpoint = new NavigationEndpoint(data.endpoint);
        }
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class StructuredDescriptionContent extends YTNode {
    static type = 'StructuredDescriptionContent';
    items;
    constructor(data) {
        super();
        this.items = parseArray(data.items, [
            VideoDescriptionHeader, ExpandableVideoDescriptionBody, VideoDescriptionMusicSection,
            VideoDescriptionInfocardsSection, VideoDescriptionCourseSection, VideoDescriptionTranscriptSection,
            VideoDescriptionTranscriptSection, HorizontalCardList, ReelShelf, VideoAttributesSectionView,
            HowThisWasMadeSectionView
        ]);
    }
}

class EngagementPanelSectionList extends YTNode {
    static type = 'EngagementPanelSectionList';
    header;
    content;
    target_id;
    panel_identifier;
    identifier;
    visibility;
    constructor(data) {
        super();
        this.header = parseItem(data.header, EngagementPanelTitleHeader);
        this.content = parseItem(data.content, [VideoAttributeView, SectionList, ContinuationItem, ClipSection, StructuredDescriptionContent, MacroMarkersList, ProductList]);
        this.panel_identifier = data.panelIdentifier;
        this.identifier = data.identifier ? {
            surface: data.identifier.surface,
            tag: data.identifier.tag
        } : undefined;
        this.target_id = data.targetId;
        this.visibility = data.visibility;
    }
}

class ChannelTagline extends YTNode {
    static type = 'ChannelTagline';
    content;
    max_lines;
    more_endpoint;
    more_icon_type;
    more_label;
    target_id;
    constructor(data) {
        super();
        this.content = data.content;
        this.max_lines = data.maxLines;
        this.more_endpoint = data.moreEndpoint.showEngagementPanelEndpoint ? {
            show_engagement_panel_endpoint: {
                engagement_panel: parseItem(data.moreEndpoint.showEngagementPanelEndpoint.engagementPanel, EngagementPanelSectionList),
                engagement_panel_popup_type: data.moreEndpoint.showEngagementPanelEndpoint.engagementPanelPresentationConfigs.engagementPanelPopupPresentationConfig.popupType,
                identifier: {
                    surface: data.moreEndpoint.showEngagementPanelEndpoint.identifier.surface,
                    tag: data.moreEndpoint.showEngagementPanelEndpoint.identifier.tag
                }
            }
        } : new NavigationEndpoint(data.moreEndpoint);
        this.more_icon_type = data.moreIcon.iconType;
        this.more_label = data.moreLabel;
        this.target_id = data.targetId;
    }
}

class SubscriptionNotificationToggleButton extends YTNode {
    static type = 'SubscriptionNotificationToggleButton';
    states;
    current_state_id;
    target_id;
    constructor(data) {
        super();
        this.states = data.states.map((data) => ({
            id: data.stateId,
            next_id: data.nextStateId,
            state: parse(data.state)
        }));
        this.current_state_id = data.currentStateId;
        this.target_id = data.targetId;
    }
}

class SubscribeButton extends YTNode {
    static type = 'SubscribeButton';
    button_text;
    subscribed;
    enabled;
    item_type;
    channel_id;
    show_preferences;
    subscribed_text;
    unsubscribed_text;
    unsubscribe_text;
    notification_preference_button;
    service_endpoints;
    on_subscribe_endpoints;
    on_unsubscribe_endpoints;
    subscribed_entity_key;
    target_id;
    subscribe_accessibility_label;
    unsubscribe_accessibility_label;
    constructor(data) {
        super();
        this.button_text = new Text$1(data.buttonText);
        this.subscribed = data.subscribed;
        this.enabled = data.enabled;
        this.item_type = data.type;
        this.channel_id = data.channelId;
        this.show_preferences = data.showPreferences;
        if (Reflect.has(data, 'subscribedButtonText'))
            this.subscribed_text = new Text$1(data.subscribedButtonText);
        if (Reflect.has(data, 'unsubscribedButtonText'))
            this.unsubscribed_text = new Text$1(data.unsubscribedButtonText);
        if (Reflect.has(data, 'unsubscribeButtonText'))
            this.unsubscribe_text = new Text$1(data.unsubscribeButtonText);
        this.notification_preference_button = parseItem(data.notificationPreferenceButton, SubscriptionNotificationToggleButton);
        if (Reflect.has(data, 'serviceEndpoints'))
            this.service_endpoints = data.serviceEndpoints.map((endpoint) => new NavigationEndpoint(endpoint));
        if (Reflect.has(data, 'onSubscribeEndpoints'))
            this.on_subscribe_endpoints = data.onSubscribeEndpoints.map((endpoint) => new NavigationEndpoint(endpoint));
        if (Reflect.has(data, 'onUnsubscribeEndpoints'))
            this.on_unsubscribe_endpoints = data.onUnsubscribeEndpoints.map((endpoint) => new NavigationEndpoint(endpoint));
        if (Reflect.has(data, 'subscribedEntityKey'))
            this.subscribed_entity_key = data.subscribedEntityKey;
        if (Reflect.has(data, 'targetId'))
            this.target_id = data.targetId;
        if (Reflect.has(data, 'subscribeAccessibility'))
            this.subscribe_accessibility_label = data.subscribeAccessibility.accessibilityData?.label;
        if (Reflect.has(data, 'unsubscribeAccessibility'))
            this.unsubscribe_accessibility_label = data.unsubscribeAccessibility.accessibilityData?.label;
    }
}

class C4TabbedHeader extends YTNode {
    static type = 'C4TabbedHeader';
    author;
    banner;
    tv_banner;
    mobile_banner;
    subscribers;
    videos_count;
    sponsor_button;
    subscribe_button;
    header_links;
    channel_handle;
    channel_id;
    tagline;
    constructor(data) {
        super();
        this.author = new Author({
            simpleText: data.title,
            navigationEndpoint: data.navigationEndpoint
        }, data.badges, data.avatar);
        if (Reflect.has(data, 'banner')) {
            this.banner = Thumbnail.fromResponse(data.banner);
        }
        if (Reflect.has(data, 'tv_banner')) {
            this.tv_banner = Thumbnail.fromResponse(data.tvBanner);
        }
        if (Reflect.has(data, 'mobile_banner')) {
            this.mobile_banner = Thumbnail.fromResponse(data.mobileBanner);
        }
        if (Reflect.has(data, 'subscriberCountText')) {
            this.subscribers = new Text$1(data.subscriberCountText);
        }
        if (Reflect.has(data, 'videosCountText')) {
            this.videos_count = new Text$1(data.videosCountText);
        }
        if (Reflect.has(data, 'sponsorButton')) {
            this.sponsor_button = parseItem(data.sponsorButton, Button);
        }
        if (Reflect.has(data, 'subscribeButton')) {
            this.subscribe_button = parseItem(data.subscribeButton, [SubscribeButton, Button]);
        }
        if (Reflect.has(data, 'headerLinks')) {
            this.header_links = parseItem(data.headerLinks, [ChannelHeaderLinks, ChannelHeaderLinksView]);
        }
        if (Reflect.has(data, 'channelHandleText')) {
            this.channel_handle = new Text$1(data.channelHandleText);
        }
        if (Reflect.has(data, 'channelId')) {
            this.channel_id = data.channelId;
        }
        if (Reflect.has(data, 'tagline')) {
            this.tagline = parseItem(data.tagline, ChannelTagline);
        }
    }
}

class CallToActionButton extends YTNode {
    static type = 'CallToActionButton';
    label;
    icon_type;
    style;
    constructor(data) {
        super();
        this.label = new Text$1(data.label);
        this.icon_type = data.icon.iconType;
        this.style = data.style;
    }
}

class Card extends YTNode {
    static type = 'Card';
    teaser;
    content;
    card_id;
    feature;
    cue_ranges;
    constructor(data) {
        super();
        this.teaser = parseItem(data.teaser);
        this.content = parseItem(data.content);
        if (Reflect.has(data, 'cardId')) {
            this.card_id = data.cardId;
        }
        if (Reflect.has(data, 'feature')) {
            this.feature = data.feature;
        }
        this.cue_ranges = data.cueRanges.map((cr) => ({
            start_card_active_ms: cr.startCardActiveMs,
            end_card_active_ms: cr.endCardActiveMs,
            teaser_duration_ms: cr.teaserDurationMs,
            icon_after_teaser_ms: cr.iconAfterTeaserMs
        }));
    }
}

class CardCollection extends YTNode {
    static type = 'CardCollection';
    cards;
    header;
    allow_teaser_dismiss;
    constructor(data) {
        super();
        this.cards = parseArray(data.cards);
        this.header = new Text$1(data.headerText);
        this.allow_teaser_dismiss = data.allowTeaserDismiss;
    }
}

class CarouselHeader extends YTNode {
    static type = 'CarouselHeader';
    contents;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents);
    }
}

class CarouselItem extends YTNode {
    static type = 'CarouselItem';
    items;
    background_color;
    layout_style;
    pagination_thumbnails;
    paginator_alignment;
    constructor(data) {
        super();
        this.items = parseArray(data.carouselItems);
        this.background_color = data.backgroundColor;
        this.layout_style = data.layoutStyle;
        this.pagination_thumbnails = Thumbnail.fromResponse(data.paginationThumbnails);
        this.paginator_alignment = data.paginatorAlignment;
    }
    // XXX: For consistency.
    get contents() {
        return this.items;
    }
}

class TextCarouselItemView extends YTNode {
    static type = 'TextCarouselItemView';
    icon_name;
    text;
    on_tap_endpoint;
    button;
    constructor(data) {
        super();
        this.icon_name = data.iconName;
        this.text = Text$1.fromAttributed(data.text);
        this.on_tap_endpoint = new NavigationEndpoint(data.onTap);
        this.button = parseItem(data.button, ButtonView);
    }
}

class CarouselItemView extends YTNode {
    static type = 'CarouselItemView';
    item_type;
    carousel_item;
    constructor(data) {
        super();
        this.item_type = data.itemType;
        this.carousel_item = parseItem(data.carouselItem, TextCarouselItemView);
    }
}

class CarouselTitleView extends YTNode {
    static type = 'CarouselTitleView';
    title;
    previous_button;
    next_button;
    constructor(data) {
        super();
        this.title = data.title;
        this.previous_button = parseItem(data.previousButton, ButtonView);
        this.next_button = parseItem(data.nextButton, ButtonView);
    }
}

class Channel extends YTNode {
    static type = 'Channel';
    id;
    author;
    subscriber_count;
    video_count;
    long_byline;
    short_byline;
    endpoint;
    subscribe_button;
    description_snippet;
    constructor(data) {
        super();
        this.id = data.channelId;
        this.author = new Author({
            ...data.title,
            navigationEndpoint: data.navigationEndpoint
        }, data.ownerBadges, data.thumbnail);
        // XXX: `subscriberCountText` is now the channel's handle and `videoCountText` is the subscriber count.
        this.subscriber_count = new Text$1(data.subscriberCountText);
        this.video_count = new Text$1(data.videoCountText);
        this.long_byline = new Text$1(data.longBylineText);
        this.short_byline = new Text$1(data.shortBylineText);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.subscribe_button = parseItem(data.subscribeButton, [SubscribeButton, Button]);
        this.description_snippet = new Text$1(data.descriptionSnippet);
    }
}

class ChannelAboutFullMetadata extends YTNode {
    static type = 'ChannelAboutFullMetadata';
    id;
    name;
    avatar;
    canonical_channel_url;
    primary_links;
    view_count;
    joined_date;
    description;
    email_reveal;
    can_reveal_email;
    country;
    buttons;
    constructor(data) {
        super();
        this.id = data.channelId;
        this.name = new Text$1(data.title);
        this.avatar = Thumbnail.fromResponse(data.avatar);
        this.canonical_channel_url = data.canonicalChannelUrl;
        this.primary_links = data.primaryLinks?.map((link) => ({
            endpoint: new NavigationEndpoint(link.navigationEndpoint),
            icon: Thumbnail.fromResponse(link.icon),
            title: new Text$1(link.title)
        })) ?? [];
        this.view_count = new Text$1(data.viewCountText);
        this.joined_date = new Text$1(data.joinedDateText);
        this.description = new Text$1(data.description);
        this.email_reveal = new NavigationEndpoint(data.onBusinessEmailRevealClickCommand);
        this.can_reveal_email = !data.signInForBusinessEmail;
        this.country = new Text$1(data.country);
        this.buttons = parseArray(data.actionButtons, Button);
    }
}

class ChannelAgeGate extends YTNode {
    static type = 'ChannelAgeGate';
    channel_title;
    avatar;
    header;
    main_text;
    sign_in_button;
    secondary_text;
    constructor(data) {
        super();
        this.channel_title = data.channelTitle;
        this.avatar = Thumbnail.fromResponse(data.avatar);
        this.header = new Text$1(data.header);
        this.main_text = new Text$1(data.mainText);
        this.sign_in_button = parseItem(data.signInButton, Button);
        this.secondary_text = new Text$1(data.secondaryText);
    }
}

class ChannelFeaturedContent extends YTNode {
    static type = 'ChannelFeaturedContent';
    title;
    items;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.items = parseArray(data.items);
    }
}

class ChannelMetadata extends YTNode {
    static type = 'ChannelMetadata';
    title;
    description;
    url;
    rss_url;
    vanity_channel_url;
    external_id;
    is_family_safe;
    keywords;
    avatar;
    music_artist_name;
    available_countries;
    android_deep_link;
    android_appindexing_link;
    ios_appindexing_link;
    constructor(data) {
        super();
        this.title = data.title;
        this.description = data.description;
        this.url = data.channelUrl;
        this.rss_url = data.rssUrl;
        this.vanity_channel_url = data.vanityChannelUrl;
        this.external_id = data.externalId;
        this.is_family_safe = data.isFamilySafe;
        this.keywords = data.keywords;
        this.avatar = Thumbnail.fromResponse(data.avatar);
        // Can be an empty string sometimes, so we need the extra length check
        this.music_artist_name = typeof data.musicArtistName === 'string' && data.musicArtistName.length > 0 ? data.musicArtistName : undefined;
        this.available_countries = data.availableCountryCodes;
        this.android_deep_link = data.androidDeepLink;
        this.android_appindexing_link = data.androidAppindexingLink;
        this.ios_appindexing_link = data.iosAppindexingLink;
    }
}

class ChannelMobileHeader extends YTNode {
    static type = 'ChannelMobileHeader';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class ChannelOptions extends YTNode {
    static type = 'ChannelOptions';
    avatar;
    endpoint;
    name;
    links;
    constructor(data) {
        super();
        this.avatar = Thumbnail.fromResponse(data.avatar);
        this.endpoint = new NavigationEndpoint(data.avatarEndpoint);
        this.name = data.name;
        this.links = data.links.map((link) => new Text$1(link));
    }
}

class ChannelOwnerEmptyState extends YTNode {
    static type = 'ChannelOwnerEmptyState';
    illustration;
    description;
    constructor(data) {
        super();
        this.illustration = Thumbnail.fromResponse(data.illustration);
        this.description = new Text$1(data.description);
    }
}

class ChannelSubMenu extends YTNode {
    static type = 'ChannelSubMenu';
    content_type_sub_menu_items;
    sort_setting;
    constructor(data) {
        super();
        this.content_type_sub_menu_items = data.contentTypeSubMenuItems.map((item) => ({
            endpoint: new NavigationEndpoint(item.navigationEndpoint || item.endpoint),
            selected: item.selected,
            title: item.title
        }));
        this.sort_setting = parseItem(data.sortSetting);
    }
}

class ChannelSwitcherHeader extends YTNode {
    static type = 'ChannelSwitcherHeader';
    title;
    button;
    constructor(data) {
        super();
        this.title = new Text$1(data.title).toString();
        if (Reflect.has(data, 'button')) {
            this.button = parseItem(data.button, Button);
        }
    }
}

class ChannelThumbnailWithLink extends YTNode {
    static type = 'ChannelThumbnailWithLink';
    thumbnails;
    endpoint;
    accessibility;
    constructor(data) {
        super();
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        if ('accessibility' in data
            && 'accessibilityData' in data.accessibility) {
            this.accessibility = {
                accessibility_data: new AccessibilityData(data.accessibility.accessibilityData)
            };
        }
    }
    get label() {
        return this.accessibility?.accessibility_data?.label;
    }
}

class ChannelVideoPlayer extends YTNode {
    static type = 'ChannelVideoPlayer';
    id;
    title;
    description;
    view_count;
    published_time;
    constructor(data) {
        super();
        this.id = data.videoId;
        this.title = new Text$1(data.title);
        this.description = new Text$1(data.description);
        this.view_count = new Text$1(data.viewCountText);
        this.published_time = new Text$1(data.publishedTimeText);
    }
}

class Chapter extends YTNode {
    static type = 'Chapter';
    title;
    time_range_start_millis;
    thumbnail;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.time_range_start_millis = data.timeRangeStartMillis;
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
    }
}

class ChildVideo extends YTNode {
    static type = 'ChildVideo';
    id;
    title;
    duration;
    endpoint;
    constructor(data) {
        super();
        this.id = data.videoId;
        this.title = new Text$1(data.title);
        this.duration = {
            text: data.lengthText.simpleText,
            seconds: timeToSeconds(data.lengthText.simpleText)
        };
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
    }
}

class ChipView extends YTNode {
    static type = 'ChipView';
    text;
    display_type;
    endpoint;
    chip_entity_key;
    constructor(data) {
        super();
        this.text = data.text;
        this.display_type = data.displayType;
        this.endpoint = new NavigationEndpoint(data.tapCommand);
        this.chip_entity_key = data.chipEntityKey;
    }
}

class ChipBarView extends YTNode {
    static type = 'ChipBarView';
    chips;
    constructor(data) {
        super();
        this.chips = parseArray(data.chips, ChipView);
    }
}

class ChipCloudChip extends YTNode {
    static type = 'ChipCloudChip';
    is_selected;
    endpoint;
    text;
    constructor(data) {
        super();
        this.is_selected = data.isSelected;
        if (Reflect.has(data, 'navigationEndpoint')) {
            this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        }
        this.text = new Text$1(data.text).toString();
    }
}

class ChipCloud extends YTNode {
    static type = 'ChipCloud';
    chips;
    next_button;
    previous_button;
    horizontal_scrollable;
    constructor(data) {
        super();
        this.chips = parseArray(data.chips, ChipCloudChip);
        this.next_button = parseItem(data.nextButton, Button);
        this.previous_button = parseItem(data.previousButton, Button);
        this.horizontal_scrollable = data.horizontalScrollable;
    }
}

class ClientSideToggleMenuItem extends YTNode {
    static type = 'ClientSideToggleMenuItem';
    text;
    icon_type;
    toggled_text;
    toggled_icon_type;
    is_toggled;
    menu_item_identifier;
    endpoint;
    logging_directives;
    constructor(data) {
        super();
        this.text = new Text$1(data.defaultText);
        this.icon_type = data.defaultIcon.iconType;
        this.toggled_text = new Text$1(data.toggledText);
        this.toggled_icon_type = data.toggledIcon.iconType;
        if (Reflect.has(data, 'isToggled')) {
            this.is_toggled = data.isToggled;
        }
        this.menu_item_identifier = data.menuItemIdentifier;
        this.endpoint = new NavigationEndpoint(data.command);
        if (Reflect.has(data, 'loggingDirectives')) {
            this.logging_directives = {
                visibility: {
                    types: data.loggingDirectives.visibility.types
                },
                enable_displaylogger_experiment: data.loggingDirectives.enableDisplayloggerExperiment
            };
        }
    }
}

class CollaboratorInfoCardContent extends YTNode {
    static type = 'CollaboratorInfoCardContent';
    channel_avatar;
    custom_text;
    channel_name;
    subscriber_count;
    endpoint;
    constructor(data) {
        super();
        this.channel_avatar = Thumbnail.fromResponse(data.channelAvatar);
        this.custom_text = new Text$1(data.customText);
        this.channel_name = new Text$1(data.channelName);
        this.subscriber_count = new Text$1(data.subscriberCountText);
        this.endpoint = new NavigationEndpoint(data.endpoint);
    }
}

class CollageHeroImage extends YTNode {
    static type = 'CollageHeroImage';
    left;
    top_right;
    bottom_right;
    endpoint;
    constructor(data) {
        super();
        this.left = Thumbnail.fromResponse(data.leftThumbnail);
        this.top_right = Thumbnail.fromResponse(data.topRightThumbnail);
        this.bottom_right = Thumbnail.fromResponse(data.bottomRightThumbnail);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
    }
}

class ThumbnailHoverOverlayView extends YTNode {
    static type = 'ThumbnailHoverOverlayView';
    icon_name;
    text;
    style;
    constructor(data) {
        super();
        this.icon_name = data.icon.sources[0].clientResource.imageName;
        this.text = Text$1.fromAttributed(data.text);
        this.style = data.style;
    }
}

class ThumbnailBadgeView extends YTNode {
    static type = 'ThumbnailBadgeView';
    icon_name;
    text;
    badge_style;
    background_color;
    constructor(data) {
        super();
        this.text = data.text;
        this.badge_style = data.badgeStyle;
        if (data.backgroundColor) {
            this.background_color = {
                light_theme: data.backgroundColor.lightTheme,
                dark_theme: data.backgroundColor.darkTheme
            };
        }
        if (data.iconName) {
            this.icon_name = data.icon.sources[0].clientResource.imageName;
        }
    }
}

class ThumbnailOverlayBadgeView extends YTNode {
    static type = 'ThumbnailOverlayBadgeView';
    badges;
    position;
    constructor(data) {
        super();
        this.badges = parseArray(data.thumbnailBadges, ThumbnailBadgeView);
        this.position = data.position;
    }
}

class ThumbnailHoverOverlayToggleActionsView extends YTNode {
    static type = 'ThumbnailHoverOverlayToggleActionsView';
    buttons;
    constructor(data) {
        super();
        this.buttons = parseArray(data.buttons, ToggleButtonView);
    }
}

class ThumbnailOverlayProgressBarView extends YTNode {
    static type = 'ThumbnailOverlayProgressBarView';
    start_percent;
    constructor(data) {
        super();
        this.start_percent = data.startPercent;
    }
}

class ThumbnailBottomOverlayView extends YTNode {
    static type = 'ThumbnailBottomOverlayView';
    progress_bar;
    badges;
    constructor(data) {
        super();
        this.progress_bar = parseItem(data.progressBar, ThumbnailOverlayProgressBarView);
        this.badges = parseArray(data.badges, ThumbnailBadgeView);
    }
}

class ThumbnailView extends YTNode {
    static type = 'ThumbnailView';
    image;
    overlays;
    background_color;
    constructor(data) {
        super();
        this.image = Thumbnail.fromResponse(data.image);
        this.overlays = parseArray(data.overlays, [
            ThumbnailHoverOverlayToggleActionsView, ThumbnailBottomOverlayView,
            ThumbnailOverlayBadgeView, ThumbnailHoverOverlayView,
            AnimatedThumbnailOverlayView
        ]);
        if ('backgroundColor' in data) {
            this.background_color = {
                light_theme: data.backgroundColor.lightTheme,
                dark_theme: data.backgroundColor.darkTheme
            };
        }
    }
}

class CollectionThumbnailView extends YTNode {
    static type = 'CollectionThumbnailView';
    primary_thumbnail;
    stack_color;
    constructor(data) {
        super();
        this.primary_thumbnail = parseItem(data.primaryThumbnail, ThumbnailView);
        if (data.stackColor) {
            this.stack_color = {
                light_theme: data.stackColor.lightTheme,
                dark_theme: data.stackColor.darkTheme
            };
        }
    }
}

class AddToPlaylistCommand extends YTNode {
    static type = 'AddToPlaylistCommand';
    open_miniplayer;
    video_id;
    list_type;
    endpoint;
    video_ids;
    constructor(data) {
        super();
        this.open_miniplayer = data.openMiniplayer;
        this.video_id = data.videoId;
        this.list_type = data.listType;
        this.endpoint = new NavigationEndpoint(data.onCreateListCommand);
        this.video_ids = data.videoIds;
    }
}

class ContinuationCommand extends YTNode {
    static type = 'ContinuationCommand';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        switch (this.#data.request) {
            case 'CONTINUATION_REQUEST_TYPE_WATCH_NEXT':
                return 'next';
            case 'CONTINUATION_REQUEST_TYPE_BROWSE':
                return 'browse';
            case 'CONTINUATION_REQUEST_TYPE_SEARCH':
                return 'search';
            case 'CONTINUATION_REQUEST_TYPE_ACCOUNTS_LIST':
                return 'account/accounts_list';
            case 'CONTINUATION_REQUEST_TYPE_COMMENTS_NOTIFICATION_MENU':
                return 'notification/get_notification_menu';
            case 'CONTINUATION_REQUEST_TYPE_COMMENT_REPLIES':
                return 'comment/get_comment_replies';
            case 'CONTINUATION_REQUEST_TYPE_REEL_WATCH_SEQUENCE':
                return 'reel/reel_watch_sequence';
            case 'CONTINUATION_REQUEST_TYPE_GET_PANEL':
                return 'get_panel';
            default:
                return '';
        }
    }
    buildRequest() {
        const request = {};
        if (this.#data.formData)
            request.formData = this.#data.formData;
        if (this.#data.token)
            request.continuation = this.#data.token;
        if (this.#data.request === 'CONTINUATION_REQUEST_TYPE_COMMENTS_NOTIFICATION_MENU') {
            request.notificationsMenuRequestType = 'NOTIFICATIONS_MENU_REQUEST_TYPE_COMMENTS';
            if (this.#data.token) {
                request.fetchCommentsParams = {
                    continuation: this.#data.token
                };
                delete request.continuation;
            }
        }
        return request;
    }
}

const API_PATH$i = 'kids/get_kids_blocklist_picker';
class GetKidsBlocklistPickerCommand extends YTNode {
    static type = 'GetKidsBlocklistPickerCommand';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$i;
    }
    buildRequest() {
        const request = {};
        if (this.#data.blockedForKidsContent)
            request.blockedForKidsContent = this.#data.blockedForKidsContent;
        return request;
    }
}

class RunAttestationCommand extends YTNode {
    static type = 'RunAttestationCommand';
    engagement_type;
    ids;
    constructor(data) {
        super();
        this.engagement_type = data.engagementType;
        if (Reflect.has(data, 'ids')) {
            this.ids = data.ids.map((id) => ({
                encrypted_video_id: id.encryptedVideoId,
                external_channel_id: id.externalChannelId,
                comment_id: id.commentId,
                external_owner_id: id.externalOwnerId,
                artist_id: id.artistId,
                playlist_id: id.playlistId,
                external_post_id: id.externalPostId,
                share_id: id.shareId
            }));
        }
    }
}

class ShowDialogCommand extends YTNode {
    static type = 'ShowDialogCommand';
    inline_content;
    remove_default_padding;
    constructor(data) {
        super();
        this.inline_content = parseItem(data.panelLoadingStrategy?.inlineContent);
        this.remove_default_padding = !!data.removeDefaultPadding;
    }
}

class UpdateEngagementPanelContentCommand extends YTNode {
    static type = 'UpdateEngagementPanelContentCommand';
    content_source_panel_identifier;
    target_panel_identifier;
    constructor(data) {
        super();
        this.content_source_panel_identifier = data.contentSourcePanelIdentifier;
        this.target_panel_identifier = data.targetPanelIdentifier;
    }
}

class AuthorCommentBadge extends YTNode {
    static type = 'AuthorCommentBadge';
    #data;
    icon_type;
    tooltip;
    style;
    constructor(data) {
        super();
        if (Reflect.has(data, 'icon') && Reflect.has(data.icon, 'iconType')) {
            this.icon_type = data.icon.iconType;
        }
        this.tooltip = data.iconTooltip;
        // *** For consistency
        if (this.tooltip === 'Verified') {
            this.style = 'BADGE_STYLE_TYPE_VERIFIED';
            data.style = 'BADGE_STYLE_TYPE_VERIFIED';
        }
        this.#data = data;
    }
    get orig_badge() {
        return this.#data;
    }
}

class EmojiPicker extends YTNode {
    static type = 'EmojiPicker';
    id;
    categories;
    category_buttons;
    search_placeholder;
    search_no_results;
    pick_skin_tone;
    clear_search_label;
    skin_tone_generic_label;
    skin_tone_light_label;
    skin_tone_medium_light_label;
    skin_tone_medium_label;
    skin_tone_medium_dark_label;
    skin_tone_dark_label;
    constructor(data) {
        super();
        this.id = data.id;
        this.categories = parseArray(data.categories);
        this.category_buttons = parseArray(data.categoryButtons);
        this.search_placeholder = new Text$1(data.searchPlaceholderText);
        this.search_no_results = new Text$1(data.searchNoResultsText);
        this.pick_skin_tone = new Text$1(data.pickSkinToneText);
        this.clear_search_label = data.clearSearchLabel;
        this.skin_tone_generic_label = data.skinToneGenericLabel;
        this.skin_tone_light_label = data.skinToneLightLabel;
        this.skin_tone_medium_light_label = data.skinToneMediumLightLabel;
        this.skin_tone_medium_label = data.skinToneMediumLabel;
        this.skin_tone_medium_dark_label = data.skinToneMediumDarkLabel;
        this.skin_tone_dark_label = data.skinToneDarkLabel;
    }
}

class CommentDialog extends YTNode {
    static type = 'CommentDialog';
    editable_text;
    author_thumbnail;
    submit_button;
    cancel_button;
    placeholder;
    emoji_button;
    emoji_picker;
    constructor(data) {
        super();
        this.editable_text = new Text$1(data.editableText);
        this.author_thumbnail = Thumbnail.fromResponse(data.authorThumbnail);
        this.submit_button = parseItem(data.submitButton, Button);
        this.cancel_button = parseItem(data.cancelButton, Button);
        this.placeholder = new Text$1(data.placeholderText);
        this.emoji_button = parseItem(data.emojiButton, Button);
        this.emoji_picker = parseItem(data.emojiPicker, EmojiPicker);
    }
}

class CommentReplies extends YTNode {
    static type = 'CommentReplies';
    contents;
    view_replies;
    hide_replies;
    view_replies_creator_thumbnail;
    has_channel_owner_replied;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents);
        this.view_replies = parseItem(data.viewReplies, Button);
        this.hide_replies = parseItem(data.hideReplies, Button);
        this.view_replies_creator_thumbnail = Thumbnail.fromResponse(data.viewRepliesCreatorThumbnail);
        this.has_channel_owner_replied = !!data.viewRepliesCreatorThumbnail;
    }
}

class CommentReplyDialog extends YTNode {
    static type = 'CommentReplyDialog';
    reply_button;
    cancel_button;
    author_thumbnail;
    placeholder;
    error_message;
    constructor(data) {
        super();
        this.reply_button = parseItem(data.replyButton, Button);
        this.cancel_button = parseItem(data.cancelButton, Button);
        this.author_thumbnail = Thumbnail.fromResponse(data.authorThumbnail);
        this.placeholder = new Text$1(data.placeholderText);
        this.error_message = new Text$1(data.errorMessage);
    }
}

class CommentsSimplebox extends YTNode {
    static type = 'CommentsSimplebox';
    simplebox_avatar;
    simplebox_placeholder;
    constructor(data) {
        super();
        this.simplebox_avatar = Thumbnail.fromResponse(data.simpleboxAvatar);
        this.simplebox_placeholder = new Text$1(data.simpleboxPlaceholder);
    }
}

class CommentsEntryPointTeaser extends YTNode {
    static type = 'CommentsEntryPointTeaser';
    teaser_avatar;
    teaser_content;
    constructor(data) {
        super();
        if (Reflect.has(data, 'teaserAvatar')) {
            this.teaser_avatar = Thumbnail.fromResponse(data.teaserAvatar);
        }
        if (Reflect.has(data, 'teaserContent')) {
            this.teaser_content = new Text$1(data.teaserContent);
        }
    }
}

class CommentsEntryPointHeader extends YTNode {
    static type = 'CommentsEntryPointHeader';
    header;
    comment_count;
    teaser_avatar;
    teaser_content;
    content_renderer;
    simplebox_placeholder;
    constructor(data) {
        super();
        if (Reflect.has(data, 'headerText')) {
            this.header = new Text$1(data.headerText);
        }
        if (Reflect.has(data, 'commentCount')) {
            this.comment_count = new Text$1(data.commentCount);
        }
        if (Reflect.has(data, 'teaserAvatar') || Reflect.has(data, 'simpleboxAvatar')) {
            this.teaser_avatar = Thumbnail.fromResponse(data.teaserAvatar || data.simpleboxAvatar);
        }
        if (Reflect.has(data, 'teaserContent')) {
            this.teaser_content = new Text$1(data.teaserContent);
        }
        if (Reflect.has(data, 'contentRenderer')) {
            this.content_renderer = parseItem(data.contentRenderer, [CommentsEntryPointTeaser, CommentsSimplebox]);
        }
        if (Reflect.has(data, 'simpleboxPlaceholder')) {
            this.simplebox_placeholder = new Text$1(data.simpleboxPlaceholder);
        }
    }
}

class CommentsHeader extends YTNode {
    static type = 'CommentsHeader';
    title;
    count;
    comments_count;
    create_renderer;
    sort_menu;
    custom_emojis;
    constructor(data) {
        super();
        this.title = new Text$1(data.titleText);
        this.count = new Text$1(data.countText);
        this.comments_count = new Text$1(data.commentsCount);
        this.create_renderer = parseItem(data.createRenderer);
        this.sort_menu = parseItem(data.sortMenu, SortFilterSubMenu);
        if (Reflect.has(data, 'customEmojis')) {
            this.custom_emojis = data.customEmojis.map((emoji) => ({
                emoji_id: emoji.emojiId,
                shortcuts: emoji.shortcuts,
                search_terms: emoji.searchTerms,
                image: Thumbnail.fromResponse(emoji.image),
                is_custom_emoji: emoji.isCustomEmoji
            }));
        }
    }
}

class CommentSimplebox extends YTNode {
    static type = 'CommentSimplebox';
    submit_button;
    cancel_button;
    author_thumbnail;
    placeholder;
    avatar_size;
    constructor(data) {
        super();
        this.submit_button = parseItem(data.submitButton, Button);
        this.cancel_button = parseItem(data.cancelButton, Button);
        this.author_thumbnail = Thumbnail.fromResponse(data.authorThumbnail);
        this.placeholder = new Text$1(data.placeholderText);
        this.avatar_size = data.avatarSize;
    }
}

class VoiceReplyContainerView extends YTNode {
    static type = 'VoiceReplyContainerView';
    voice_reply_unavailable_text;
    transcript_text;
    constructor(data) {
        super();
        this.voice_reply_unavailable_text = Text$1.fromAttributed(data.voiceReplyUnavailableText);
        this.transcript_text = Text$1.fromAttributed(data.transcriptText);
    }
}

class CommentView extends YTNode {
    static type = 'CommentView';
    #actions;
    like_command;
    dislike_command;
    unlike_command;
    undislike_command;
    reply_command;
    prepare_account_command;
    comment_id;
    is_pinned;
    keys;
    content;
    published_time;
    author_is_channel_owner;
    creator_thumbnail_url;
    like_button_a11y;
    like_count;
    like_count_liked;
    like_count_a11y;
    like_active_tooltip;
    like_inactive_tooltip;
    dislike_active_tooltip;
    dislike_inactive_tooltip;
    heart_active_tooltip;
    reply_count;
    reply_count_a11y;
    is_member;
    member_badge;
    author;
    is_liked;
    is_disliked;
    is_hearted;
    voice_reply_container;
    constructor(data) {
        super();
        this.comment_id = data.commentId;
        this.is_pinned = !!data.pinnedText;
        this.keys = {
            comment: data.commentKey,
            comment_surface: data.commentSurfaceKey,
            toolbar_state: data.toolbarStateKey,
            toolbar_surface: data.toolbarSurfaceKey,
            shared: data.sharedKey
        };
    }
    applyMutations(comment, toolbar_state, toolbar_surface, comment_surface) {
        if (comment) {
            this.content = Text$1.fromAttributed(comment.properties.content);
            this.published_time = comment.properties.publishedTime;
            this.author_is_channel_owner = !!comment.author.isCreator;
            this.creator_thumbnail_url = comment.toolbar.creatorThumbnailUrl;
            this.like_count = comment.toolbar.likeCountNotliked ? comment.toolbar.likeCountNotliked : '0';
            this.like_count_liked = comment.toolbar.likeCountLiked ? comment.toolbar.likeCountLiked : '0';
            this.like_count_a11y = comment.toolbar.likeCountA11y;
            this.like_active_tooltip = comment.toolbar.likeActiveTooltip;
            this.like_inactive_tooltip = comment.toolbar.likeInactiveTooltip;
            this.dislike_active_tooltip = comment.toolbar.dislikeActiveTooltip;
            this.dislike_inactive_tooltip = comment.toolbar.dislikeInactiveTooltip;
            this.like_button_a11y = comment.toolbar.likeButtonA11y;
            this.heart_active_tooltip = comment.toolbar.heartActiveTooltip;
            this.reply_count_a11y = comment.toolbar.replyCountA11y;
            this.reply_count = comment.toolbar.replyCount ? comment.toolbar.replyCount : '0';
            this.is_member = !!comment.author.sponsorBadgeUrl;
            if (Reflect.has(comment.author, 'sponsorBadgeUrl')) {
                this.member_badge = {
                    url: comment.author.sponsorBadgeUrl,
                    a11y: comment.author.A11y
                };
            }
            this.author = new Author({
                simpleText: comment.author.displayName,
                navigationEndpoint: comment.avatar.endpoint
            }, comment.author, comment.avatar.image, comment.author.channelId);
        }
        if (toolbar_state) {
            this.is_hearted = toolbar_state.heartState === 'TOOLBAR_HEART_STATE_HEARTED';
            this.is_liked = toolbar_state.likeState === 'TOOLBAR_LIKE_STATE_LIKED';
            this.is_disliked = toolbar_state.likeState === 'TOOLBAR_LIKE_STATE_DISLIKED';
        }
        if (toolbar_surface) {
            if ('prepareAccountCommand' in toolbar_surface) {
                this.prepare_account_command = new NavigationEndpoint(toolbar_surface.prepareAccountCommand);
            }
            else {
                this.like_command = new NavigationEndpoint(toolbar_surface.likeCommand);
                this.dislike_command = new NavigationEndpoint(toolbar_surface.dislikeCommand);
                this.unlike_command = new NavigationEndpoint(toolbar_surface.unlikeCommand);
                this.undislike_command = new NavigationEndpoint(toolbar_surface.undislikeCommand);
                this.reply_command = new NavigationEndpoint(toolbar_surface.replyCommand);
            }
        }
        if (comment_surface) {
            if ('voiceReplyContainerViewModel' in comment_surface) {
                this.voice_reply_container = parseItem(comment_surface.voiceReplyContainerViewModel, VoiceReplyContainerView);
            }
        }
    }
    /**
     * Likes the comment.
     * @returns A promise that resolves to the API response.
     * @throws If the Actions instance is not set for this comment or if the like command is not found.
     */
    async like() {
        if (!this.#actions)
            throw new InnertubeError('Actions instance not set for this comment.');
        if (!this.like_command)
            throw new InnertubeError('Like command not found.');
        if (this.is_liked)
            throw new InnertubeError('This comment is already liked.', { comment_id: this.comment_id });
        return this.like_command.call(this.#actions);
    }
    /**
     * Dislikes the comment.
     * @returns A promise that resolves to the API response.
     * @throws If the Actions instance is not set for this comment or if the dislike command is not found.
     */
    async dislike() {
        if (!this.#actions)
            throw new InnertubeError('Actions instance not set for this comment.');
        if (!this.dislike_command)
            throw new InnertubeError('Dislike command not found.');
        if (this.is_disliked)
            throw new InnertubeError('This comment is already disliked.', { comment_id: this.comment_id });
        return this.dislike_command.call(this.#actions);
    }
    /**
     * Unlikes the comment.
     * @returns A promise that resolves to the API response.
     * @throws If the Actions instance is not set for this comment or if the unlike command is not found.
     */
    async unlike() {
        if (!this.#actions)
            throw new InnertubeError('Actions instance not set for this comment.');
        if (!this.unlike_command)
            throw new InnertubeError('Unlike command not found.');
        if (!this.is_liked)
            throw new InnertubeError('This comment is not liked.', { comment_id: this.comment_id });
        return this.unlike_command.call(this.#actions);
    }
    /**
     * Undislikes the comment.
     * @returns A promise that resolves to the API response.
     * @throws If the Actions instance is not set for this comment or if the undislike command is not found.
     */
    async undislike() {
        if (!this.#actions)
            throw new InnertubeError('Actions instance not set for this comment.');
        if (!this.undislike_command)
            throw new InnertubeError('Undislike command not found.');
        if (!this.is_disliked)
            throw new InnertubeError('This comment is not disliked.', { comment_id: this.comment_id });
        return this.undislike_command.call(this.#actions);
    }
    /**
     * Replies to the comment.
     * @param comment_text - The text of the reply.
     * @returns A promise that resolves to the API response.
     * @throws If the Actions instance is not set for this comment or if the reply command is not found.
     */
    async reply(comment_text) {
        if (!this.#actions)
            throw new InnertubeError('Actions instance not set for this comment.');
        if (!this.reply_command)
            throw new InnertubeError('Reply command not found.');
        const dialog = this.reply_command.dialog?.as(CommentReplyDialog);
        if (!dialog)
            throw new InnertubeError('Reply dialog not found.');
        const reply_button = dialog.reply_button;
        if (!reply_button)
            throw new InnertubeError('Reply button not found in the dialog.');
        if (!reply_button.endpoint)
            throw new InnertubeError('Reply button endpoint not found.');
        return reply_button.endpoint.call(this.#actions, { commentText: comment_text });
    }
    /**
     * Translates the comment to the specified target language.
     * @param target_language - The target language to translate the comment to, e.g. 'en', 'ja'.
     * @returns Resolves to an ApiResponse object with the translated content, if available.
     * @throws if the Actions instance is not set for this comment or if the comment content is not found.
     */
    async translate(target_language) {
        if (!this.#actions)
            throw new InnertubeError('Actions instance not set for this comment.');
        if (!this.content)
            throw new InnertubeError('Comment content not found.', { comment_id: this.comment_id });
        // Emojis must be removed otherwise InnerTube throws a 400 status code at us.
        const text = this.content.toString().replace(/[^\p{L}\p{N}\p{P}\p{Z}]/gu, '');
        const payload = { text, target_language };
        const action = encodeCommentActionParams(22, payload);
        const response = await this.#actions.execute('comment/perform_comment_action', { action });
        // XXX: Should move this to Parser#parseResponse
        const mutations = response.data.frameworkUpdates?.entityBatchUpdate?.mutations;
        const content = mutations?.[0]?.payload?.commentEntityPayload?.translatedContent?.content;
        return { ...response, content };
    }
    setActions(actions) {
        this.#actions = actions;
    }
}

class CommentThread extends YTNode {
    static type = 'CommentThread';
    comment;
    replies;
    comment_replies_data;
    is_moderated_elq_comment;
    has_replies;
    #actions;
    #continuation;
    constructor(data) {
        super();
        this.comment = parseItem(data.commentViewModel, CommentView);
        this.comment_replies_data = parseItem(data.replies, CommentReplies);
        this.is_moderated_elq_comment = data.isModeratedElqComment;
        this.has_replies = !!this.comment_replies_data;
    }
    get has_continuation() {
        if (!this.replies)
            throw new InnertubeError('Cannot determine if there is a continuation because this thread\'s replies have not been loaded.');
        return !!this.#continuation;
    }
    /**
     * Retrieves replies to this comment thread.
     */
    async getReplies() {
        if (!this.#actions)
            throw new InnertubeError('Actions instance not set for this thread.');
        if (!this.comment_replies_data)
            throw new InnertubeError('This comment has no replies.', this);
        const continuation = this.comment_replies_data.contents?.firstOfType(ContinuationItem);
        if (!continuation)
            throw new InnertubeError('Replies continuation not found.');
        const response = await continuation.endpoint.call(this.#actions, { parse: true });
        if (!response.on_response_received_endpoints_memo)
            throw new InnertubeError('Unexpected response.', response);
        this.replies = this.#getPatchedReplies(response.on_response_received_endpoints_memo);
        this.#continuation = response.on_response_received_endpoints_memo.getType(ContinuationItem)[0];
        return this;
    }
    /**
     * Retrieves next batch of replies.
     */
    async getContinuation() {
        if (!this.replies)
            throw new InnertubeError('Cannot retrieve continuation because this thread\'s replies have not been loaded.');
        if (!this.#continuation)
            throw new InnertubeError('Continuation not found.');
        if (!this.#actions)
            throw new InnertubeError('Actions instance not set for this thread.');
        const load_more_button = this.#continuation.button?.as(Button);
        if (!load_more_button)
            throw new InnertubeError('"Load more" button not found.');
        const response = await load_more_button.endpoint.call(this.#actions, { parse: true });
        if (!response.on_response_received_endpoints_memo)
            throw new InnertubeError('Unexpected response.', response);
        this.replies = this.#getPatchedReplies(response.on_response_received_endpoints_memo);
        this.#continuation = response.on_response_received_endpoints_memo.getType(ContinuationItem)[0];
        return this;
    }
    setActions(actions) {
        this.#actions = actions;
    }
    #getPatchedReplies(data) {
        return observe(data.getType(CommentView).map((comment) => {
            comment.setActions(this.#actions);
            return comment;
        }));
    }
}

class PdgCommentChip extends YTNode {
    static type = 'PdgCommentChip';
    text;
    color_pallette;
    icon_type;
    constructor(data) {
        super();
        this.text = new Text$1(data.chipText);
        this.color_pallette = {
            background_color: data.chipColorPalette?.backgroundColor,
            foreground_title_color: data.chipColorPalette?.foregroundTitleColor
        };
        if (Reflect.has(data, 'chipIcon') && Reflect.has(data.chipIcon, 'iconType')) {
            this.icon_type = data.chipIcon.iconType;
        }
    }
}

class SponsorCommentBadge extends YTNode {
    static type = 'SponsorCommentBadge';
    custom_badge;
    tooltip;
    constructor(data) {
        super();
        this.custom_badge = Thumbnail.fromResponse(data.customBadge);
        this.tooltip = data.tooltip;
    }
}

class CompactChannel extends YTNode {
    static type = 'CompactChannel';
    title;
    channel_id;
    thumbnail;
    display_name;
    video_count;
    subscriber_count;
    endpoint;
    tv_banner;
    menu;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.channel_id = data.channelId;
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.display_name = new Text$1(data.displayName);
        this.video_count = new Text$1(data.videoCountText);
        this.subscriber_count = new Text$1(data.subscriberCountText);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.tv_banner = Thumbnail.fromResponse(data.tvBanner);
        this.menu = parseItem(data.menu, Menu);
    }
}

class PlaylistCustomThumbnail extends YTNode {
    static type = 'PlaylistCustomThumbnail';
    thumbnail;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
    }
}

class PlaylistVideoThumbnail extends YTNode {
    static type = 'PlaylistVideoThumbnail';
    thumbnail;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
    }
}

class Playlist extends YTNode {
    static type = 'Playlist';
    id;
    title;
    author;
    thumbnails;
    thumbnail_renderer;
    video_count;
    video_count_short;
    first_videos;
    share_url;
    menu;
    badges;
    endpoint;
    thumbnail_overlays;
    view_playlist;
    constructor(data) {
        super();
        this.id = data.playlistId;
        this.title = new Text$1(data.title);
        this.author = data.shortBylineText?.simpleText ?
            new Text$1(data.shortBylineText) :
            new Author(data.longBylineText, data.ownerBadges, null);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail || { thumbnails: data.thumbnails.map((th) => th.thumbnails).flat(1) });
        this.video_count = new Text$1(data.thumbnailText);
        this.video_count_short = new Text$1(data.videoCountShortText);
        this.first_videos = parseArray(data.videos);
        this.share_url = data.shareUrl || null;
        this.menu = parseItem(data.menu);
        this.badges = parseArray(data.ownerBadges);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        if (Reflect.has(data, 'thumbnailRenderer')) {
            this.thumbnail_renderer = parseItem(data.thumbnailRenderer, [PlaylistVideoThumbnail, PlaylistCustomThumbnail]) || undefined;
        }
        if (Reflect.has(data, 'viewPlaylistText')) {
            this.view_playlist = new Text$1(data.viewPlaylistText);
        }
    }
}

class CompactMix extends Playlist {
    static type = 'CompactMix';
    constructor(data) {
        super(data);
    }
}

class CompactMovie extends YTNode {
    static type = 'CompactMovie';
    id;
    title;
    top_metadata_items;
    thumbnails;
    thumbnail_overlays;
    author;
    duration;
    endpoint;
    badges;
    use_vertical_poster;
    menu;
    constructor(data) {
        super();
        const overlay_time_status = data.thumbnailOverlays
            .find((overlay) => overlay.thumbnailOverlayTimeStatusRenderer)
            ?.thumbnailOverlayTimeStatusRenderer.text || 'N/A';
        this.id = data.videoId;
        this.title = new Text$1(data.title);
        this.top_metadata_items = new Text$1(data.topMetadataItems);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        this.author = new Author(data.shortBylineText);
        const durationText = data.lengthText ? new Text$1(data.lengthText).toString() : new Text$1(overlay_time_status).toString();
        this.duration = {
            text: durationText,
            seconds: timeToSeconds(durationText)
        };
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.badges = parseArray(data.badges);
        this.use_vertical_poster = data.useVerticalPoster;
        this.menu = parseItem(data.menu, Menu);
    }
}

class CompactPlaylist extends Playlist {
    static type = 'CompactPlaylist';
    constructor(data) {
        super(data);
    }
}

class CompactStation extends YTNode {
    static type = 'CompactStation';
    title;
    description;
    video_count;
    endpoint;
    thumbnail;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.description = new Text$1(data.description);
        this.video_count = new Text$1(data.videoCountText);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
    }
}

class CompositeVideoPrimaryInfo extends YTNode {
    static type = 'CompositeVideoPrimaryInfo';
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    constructor(data) {
        super();
    }
}

class ConfirmDialog extends YTNode {
    static type = 'ConfirmDialog';
    title;
    confirm_button;
    cancel_button;
    dialog_messages;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.confirm_button = parseItem(data.confirmButton, Button);
        this.cancel_button = parseItem(data.cancelButton, Button);
        this.dialog_messages = data.dialogMessages.map((txt) => new Text$1(txt));
    }
}

class ContentMetadataView extends YTNode {
    static type = 'ContentMetadataView';
    metadata_rows;
    delimiter;
    constructor(data) {
        super();
        this.metadata_rows = data.metadataRows.map((row) => ({
            metadata_parts: row.metadataParts?.map((part) => ({
                text: part.text ? Text$1.fromAttributed(part.text) : null,
                avatar_stack: parseItem(part.avatarStack, AvatarStackView),
                enable_truncation: data.enableTruncation
            })),
            badges: parseArray(row.badges, BadgeView)
        }));
        this.delimiter = data.delimiter;
    }
}

class Message extends YTNode {
    static type = 'Message';
    text;
    constructor(data) {
        super();
        this.text = new Text$1(data.text);
    }
}

class ConversationBar extends YTNode {
    static type = 'ConversationBar';
    availability_message;
    constructor(data) {
        super();
        this.availability_message = parseItem(data.availabilityMessage, Message);
    }
}

class CopyLink extends YTNode {
    static type = 'CopyLink';
    copy_button;
    short_url;
    style;
    constructor(data) {
        super();
        this.copy_button = parseItem(data.copyButton, Button);
        this.short_url = data.shortUrl;
        this.style = data.style;
    }
}

class DropdownView extends YTNode {
    static type = 'DropdownView';
    label;
    placeholder_text;
    disabled;
    options;
    dropdown_type;
    id;
    constructor(data) {
        super();
        this.label = new Text$1(data.label);
        this.placeholder_text = new Text$1(data.placeholderText);
        this.disabled = !!data.disabled;
        this.dropdown_type = data.type;
        this.id = data.id;
        if (Reflect.has(data, 'options')) {
            this.options = data.options.map((option) => ({
                title: new Text$1(option.title),
                subtitle: new Text$1(option.subtitle),
                leading_image: Thumbnail.fromResponse(option.leadingImage),
                value: { privacy_status_value: option.value?.privacyStatusValue },
                on_tap: new NavigationEndpoint(option.onTap),
                is_selected: !!option.isSelected
            }));
        }
    }
}

class TextFieldView extends YTNode {
    static type = 'TextFieldView';
    display_properties;
    content_properties;
    initial_state;
    form_field_metadata;
    constructor(data) {
        super();
        if (Reflect.has(data, 'displayProperties')) {
            this.display_properties = {
                isMultiline: !!data.displayProperties.isMultiline,
                disableNewLines: !!data.displayProperties.disableNewLines
            };
        }
        if (Reflect.has(data, 'contentProperties')) {
            this.content_properties = {
                labelText: data.contentProperties.labelText,
                placeholderText: data.contentProperties.placeholderText,
                maxCharacterCount: data.contentProperties.maxCharacterCount
            };
        }
        if (Reflect.has(data, 'initialState')) {
            this.initial_state = {
                isFocused: !!data.initialState.isFocused
            };
        }
        if (Reflect.has(data, 'formFieldMetadata')) {
            this.form_field_metadata = {
                formId: data.formFieldMetadata.formId,
                fieldId: data.formFieldMetadata.fieldId
            };
        }
    }
}

class CreatePlaylistDialogFormView extends YTNode {
    static type = 'CreatePlaylistDialogFormView';
    playlist_title;
    playlist_visibility;
    disable_playlist_collaborate;
    create_playlist_params_collaboration_enabled;
    create_playlist_params_collaboration_disabled;
    video_ids;
    constructor(data) {
        super();
        this.playlist_title = parseItem(data.playlistTitle, TextFieldView);
        this.playlist_visibility = parseItem(data.playlistVisibility, DropdownView);
        this.disable_playlist_collaborate = !!data.disablePlaylistCollaborate;
        this.create_playlist_params_collaboration_enabled = data.createPlaylistParamsCollaborationEnabled;
        this.create_playlist_params_collaboration_disabled = data.createPlaylistParamsCollaborationDisabled;
        this.video_ids = data.videoIds;
    }
}

class DecoratedAvatarView extends YTNode {
    static type = 'DecoratedAvatarView';
    avatar;
    a11y_label;
    renderer_context;
    constructor(data) {
        super();
        this.avatar = parseItem(data.avatar, AvatarView);
        this.a11y_label = data.a11yLabel;
        this.renderer_context = new RendererContext(data.rendererContext);
    }
}

class HeatMarker extends YTNode {
    static type = 'HeatMarker';
    time_range_start_millis;
    marker_duration_millis;
    heat_marker_intensity_score_normalized;
    constructor(data) {
        super();
        this.time_range_start_millis = Number.parseInt(data.startMillis, 10);
        this.marker_duration_millis = Number.parseInt(data.durationMillis, 10);
        this.heat_marker_intensity_score_normalized = data.intensityScoreNormalized;
    }
}

class TimedMarkerDecoration extends YTNode {
    static type = 'TimedMarkerDecoration';
    visible_time_range_start_millis;
    visible_time_range_end_millis;
    decoration_time_millis;
    label;
    icon;
    constructor(data) {
        super();
        this.visible_time_range_start_millis = data.visibleTimeRangeStartMillis;
        this.visible_time_range_end_millis = data.visibleTimeRangeEndMillis;
        this.decoration_time_millis = data.decorationTimeMillis;
        this.label = new Text$1(data.label);
        this.icon = data.icon;
    }
}

class Heatmap extends YTNode {
    static type = 'Heatmap';
    max_height_dp;
    min_height_dp;
    show_hide_animation_duration_millis;
    heat_markers;
    heat_markers_decorations;
    constructor(data) {
        super();
        this.max_height_dp = data.maxHeightDp;
        this.min_height_dp = data.minHeightDp;
        this.show_hide_animation_duration_millis = data.showHideAnimationDurationMillis;
        this.heat_markers = parseArray(data.heatMarkers, HeatMarker);
        this.heat_markers_decorations = parseArray(data.heatMarkersDecorations, TimedMarkerDecoration);
    }
}

class Marker extends YTNode {
    static type = 'Marker';
    marker_key;
    value;
    constructor(data) {
        super();
        this.marker_key = data.key;
        this.value = {};
        if (Reflect.has(data, 'value')) {
            if (Reflect.has(data.value, 'heatmap')) {
                this.value.heatmap = parseItem(data.value.heatmap, Heatmap);
            }
            if (Reflect.has(data.value, 'chapters')) {
                this.value.chapters = parseArray(data.value.chapters, Chapter);
            }
        }
    }
}
class MultiMarkersPlayerBar extends YTNode {
    static type = 'MultiMarkersPlayerBar';
    markers_map;
    constructor(data) {
        super();
        this.markers_map = observe(data.markersMap?.map((marker) => new Marker(marker)) || []);
    }
}

class DecoratedPlayerBar extends YTNode {
    static type = 'DecoratedPlayerBar';
    player_bar;
    player_bar_action_button;
    constructor(data) {
        super();
        this.player_bar = parseItem(data.playerBar, MultiMarkersPlayerBar);
        this.player_bar_action_button = parseItem(data.playerBarActionButton, Button);
    }
}

class DefaultPromoPanel extends YTNode {
    static type = 'DefaultPromoPanel';
    title;
    description;
    endpoint;
    large_form_factor_background_thumbnail;
    small_form_factor_background_thumbnail;
    scrim_color_values;
    min_panel_display_duration_ms;
    min_video_play_duration_ms;
    scrim_duration;
    metadata_order;
    panel_layout;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.description = new Text$1(data.description);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.large_form_factor_background_thumbnail = parseItem(data.largeFormFactorBackgroundThumbnail);
        this.small_form_factor_background_thumbnail = parseItem(data.smallFormFactorBackgroundThumbnail);
        this.scrim_color_values = data.scrimColorValues;
        this.min_panel_display_duration_ms = data.minPanelDisplayDurationMs;
        this.min_video_play_duration_ms = data.minVideoPlayDurationMs;
        this.scrim_duration = data.scrimDuration;
        this.metadata_order = data.metadataOrder;
        this.panel_layout = data.panelLayout;
    }
}

class DescriptionPreviewView extends YTNode {
    static type = 'DescriptionPreviewView';
    description;
    max_lines;
    truncation_text;
    always_show_truncation_text;
    more_endpoint;
    renderer_context;
    constructor(data) {
        super();
        if (Reflect.has(data, 'description'))
            this.description = Text$1.fromAttributed(data.description);
        if (Reflect.has(data, 'maxLines'))
            this.max_lines = parseInt(data.maxLines);
        if (Reflect.has(data, 'truncationText'))
            this.truncation_text = Text$1.fromAttributed(data.truncationText);
        this.always_show_truncation_text = !!data.alwaysShowTruncationText;
        // @TODO: Do something about this.
        if (data.rendererContext.commandContext?.onTap?.innertubeCommand?.showEngagementPanelEndpoint) {
            const endpoint = data.rendererContext.commandContext?.onTap?.innertubeCommand?.showEngagementPanelEndpoint;
            this.more_endpoint = {
                show_engagement_panel_endpoint: {
                    engagement_panel: parseItem(endpoint.engagementPanel, EngagementPanelSectionList),
                    engagement_panel_popup_type: endpoint.engagementPanelPresentationConfigs.engagementPanelPopupPresentationConfig.popupType,
                    identifier: {
                        surface: endpoint.identifier.surface,
                        tag: endpoint.identifier.tag
                    }
                }
            };
        }
        this.renderer_context = new RendererContext(data.rendererContext);
    }
}

class DialogHeaderView extends YTNode {
    static type = 'DialogHeaderView';
    headline;
    constructor(data) {
        super();
        this.headline = Text$1.fromAttributed(data.headline);
    }
}

class PanelFooterView extends YTNode {
    static type = 'PanelFooterView';
    primary_button;
    secondary_button;
    should_hide_divider;
    constructor(data) {
        super();
        this.primary_button = parseItem(data.primaryButton, ButtonView);
        this.secondary_button = parseItem(data.secondaryButton, ButtonView);
        this.should_hide_divider = !!data.shouldHideDivider;
    }
}

class FormFooterView extends YTNode {
    static type = 'FormFooterView';
    panel_footer;
    form_id;
    container_type;
    constructor(data) {
        super();
        this.panel_footer = parseItem(data.panelFooter, PanelFooterView);
        this.form_id = data.formId;
        this.container_type = data.containerType;
    }
}

class SubscribeButtonView extends YTNode {
    static type = 'SubscribeButtonView';
    subscribe_button_content;
    unsubscribe_button_content;
    disable_notification_bell;
    button_style;
    is_signed_out;
    background_style;
    disable_subscribe_button;
    on_show_subscription_options;
    channel_id;
    enable_subscribe_button_post_click_animation;
    bell_accessiblity_data;
    constructor(data) {
        super();
        this.subscribe_button_content = this.#parseButtonContent(data.subscribeButtonContent);
        this.unsubscribe_button_content = this.#parseButtonContent(data.unsubscribeButtonContent);
        this.disable_notification_bell = data.disableNotificationBell;
        this.button_style = {
            unsubscribed_state_style: data.buttonStyle.unsubscribedStateStyle,
            subscribed_state_style: data.buttonStyle.subscribedStateStyle
        };
        this.is_signed_out = data.isSignedOut;
        this.background_style = data.backgroundStyle;
        this.disable_subscribe_button = data.disableSubscribeButton;
        this.on_show_subscription_options = new NavigationEndpoint(data.onShowSubscriptionOptions);
        this.channel_id = data.channelId;
        this.enable_subscribe_button_post_click_animation = data.enableSubscribeButtonPostClickAnimation;
        this.bell_accessiblity_data = {
            off_label: data.bellAccessibilityData.offLabel,
            all_label: data.bellAccessibilityData.allLabel,
            occasional_label: data.bellAccessibilityData.occasionalLabel,
            disabled_label: data.bellAccessibilityData.disabledLabel
        };
    }
    #parseButtonContent(data) {
        return {
            button_text: data.buttonText,
            accessibility_text: data.accessibilityText,
            image_name: data.imageName,
            subscribe_state_subscribed: data.subscribeState.subscribed,
            endpoint: new NavigationEndpoint(data.onTapCommand)
        };
    }
}

class ListItemView extends YTNode {
    static type = 'ListItemView';
    title;
    subtitle;
    leading_accessory;
    renderer_context;
    trailing_buttons;
    constructor(data) {
        super();
        this.title = Text$1.fromAttributed(data.title);
        this.subtitle = Text$1.fromAttributed(data.subtitle);
        this.leading_accessory = parseItem(data.leadingAccessory, AvatarView);
        this.renderer_context = new RendererContext(data.rendererContext);
        if ('trailingButtons' in data) {
            this.trailing_buttons = parseArray(data.trailingButtons.buttons, SubscribeButtonView);
        }
    }
}

class ListView extends YTNode {
    static type = 'ListView';
    items;
    constructor(data) {
        super();
        this.items = parseArray(data.listItems, ListItemView);
    }
}

class DialogView extends YTNode {
    static type = 'DialogView';
    header;
    footer;
    custom_content;
    constructor(data) {
        super();
        this.header = parseItem(data.header, DialogHeaderView);
        this.footer = parseItem(data.footer, [FormFooterView, PanelFooterView]);
        this.custom_content = parseItem(data.customContent, [CreatePlaylistDialogFormView, ListView]);
    }
}

class DidYouMean extends YTNode {
    static type = 'DidYouMean';
    text;
    corrected_query;
    endpoint;
    constructor(data) {
        super();
        this.text = new Text$1(data.didYouMean).toString();
        this.corrected_query = new Text$1(data.correctedQuery);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint || data.correctedQueryEndpoint);
    }
}

class DismissableDialogContentSection extends YTNode {
    static type = 'DismissableDialogContentSection';
    title;
    subtitle;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
    }
}

class DismissableDialog extends YTNode {
    static type = 'DismissableDialog';
    title;
    sections;
    metadata;
    display_style;
    constructor(data) {
        super();
        this.title = data.title;
        this.sections = parseArray(data.sections, DismissableDialogContentSection);
        this.metadata = parseItem(data.metadata);
        this.display_style = data.displayStyle;
    }
}

class DynamicTextView extends YTNode {
    static type = 'DynamicTextView';
    text;
    max_lines;
    constructor(data) {
        super();
        this.text = Text$1.fromAttributed(data.text);
        this.max_lines = parseInt(data.maxLines);
    }
}

class ChildElement extends YTNode {
    static type = 'ChildElement';
    text;
    properties;
    child_elements;
    constructor(data) {
        super();
        if (Reflect.has(data, 'type') && Reflect.has(data.type, 'textType')) {
            this.text = data.type.textType.text?.content;
        }
        this.properties = data.properties;
        if (Reflect.has(data, 'childElements')) {
            this.child_elements = data.childElements.map((el) => new ChildElement(el));
        }
    }
}

class Element extends YTNode {
    static type = 'Element';
    model;
    child_elements;
    constructor(data) {
        super();
        if (Reflect.has(data, 'elementRenderer')) {
            return parseItem(data, Element);
        }
        const type = data.newElement.type.componentType;
        this.model = parseItem(type?.model);
        if (Reflect.has(data, 'newElement') && Reflect.has(data.newElement, 'childElements')) {
            this.child_elements = observe(data.newElement.childElements?.map((el) => new ChildElement(el)) || []);
        }
    }
}

class EmergencyOnebox extends YTNode {
    static type = 'EmergencyOnebox';
    title;
    first_option;
    menu;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.first_option = parseItem(data.firstOption);
        this.menu = parseItem(data.menu, Menu);
    }
}

class EmojiPickerCategory extends YTNode {
    static type = 'EmojiPickerCategory';
    category_id;
    title;
    emoji_ids;
    image_loading_lazy;
    category_type;
    constructor(data) {
        super();
        this.category_id = data.categoryId;
        this.title = new Text$1(data.title);
        this.emoji_ids = data.emojiIds;
        this.image_loading_lazy = !!data.imageLoadingLazy;
        this.category_type = data.categoryType;
    }
}

class EmojiPickerCategoryButton extends YTNode {
    static type = 'EmojiPickerCategoryButton';
    category_id;
    icon_type;
    tooltip;
    constructor(data) {
        super();
        this.category_id = data.categoryId;
        if (Reflect.has(data, 'icon')) {
            this.icon_type = data.icon?.iconType;
        }
        this.tooltip = data.tooltip;
    }
}

class EmojiPickerUpsellCategory extends YTNode {
    static type = 'EmojiPickerUpsellCategory';
    category_id;
    title;
    upsell;
    emoji_tooltip;
    endpoint;
    emoji_ids;
    constructor(data) {
        super();
        this.category_id = data.categoryId;
        this.title = new Text$1(data.title);
        this.upsell = new Text$1(data.upsell);
        this.emoji_tooltip = data.emojiTooltip;
        this.endpoint = new NavigationEndpoint(data.command);
        this.emoji_ids = data.emojiIds;
    }
}

const API_PATH$h = 'playlist/get_add_to_playlist';
class AddToPlaylistServiceEndpoint extends YTNode {
    static type = 'AddToPlaylistServiceEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$h;
    }
    buildRequest() {
        const request = {};
        request.videoIds = this.#data.videoIds ? this.#data.videoIds : [this.#data.videoId];
        if (this.#data.playlistId)
            request.playlistId = this.#data.playlistId;
        if (this.#data.params)
            request.params = this.#data.params;
        request.excludeWatchLater = !!this.#data.excludeWatchLater;
        return request;
    }
}

class AddToPlaylistEndpoint extends AddToPlaylistServiceEndpoint {
    static type = 'AddToPlaylistEndpoint';
    constructor(data) {
        super(data);
    }
}

const API_PATH$g = 'browse';
class BrowseEndpoint extends YTNode {
    static type = 'BrowseEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$g;
    }
    buildRequest() {
        const request = {};
        if (this.#data.browseId)
            request.browseId = this.#data.browseId;
        if (this.#data.params)
            request.params = this.#data.params;
        if (this.#data.query)
            request.query = this.#data.query;
        if (this.#data.browseId === 'FEsubscriptions') {
            request.subscriptionSettingsState = this.#data.subscriptionSettingsState || 'MY_SUBS_SETTINGS_STATE_LAYOUT_FORMAT_LIST';
        }
        if (this.#data.browseId === 'SPaccount_playback') {
            request.formData = this.#data.formData || {
                accountSettingsFormData: {
                    flagCaptionsDefaultOff: false,
                    flagAutoCaptionsDefaultOn: false,
                    flagDisableInlinePreview: false,
                    flagAudioDescriptionDefaultOn: false
                }
            };
        }
        if (this.#data.browseId === 'FEwhat_to_watch') {
            if (this.#data.browseRequestSupportedMetadata)
                request.browseRequestSupportedMetadata = this.#data.browseRequestSupportedMetadata;
            if (this.#data.inlineSettingStatus)
                request.inlineSettingStatus = this.#data.inlineSettingStatus;
        }
        return request;
    }
}

const API_PATH$f = 'comment/create_comment';
class CreateCommentEndpoint extends YTNode {
    static type = 'CreateCommentEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$f;
    }
    buildRequest() {
        const request = {};
        if (this.#data.createCommentParams)
            request.createCommentParams = this.#data.createCommentParams;
        if (this.#data.commentText)
            request.commentText = this.#data.commentText;
        if (this.#data.attachedVideoId)
            request.videoAttachment = { videoId: this.#data.attachedVideoId };
        else if (this.#data.pollOptions)
            request.pollAttachment = { choices: this.#data.pollOptions };
        else if (this.#data.imageBlobId)
            request.imageAttachment = { encryptedBlobId: this.#data.imageBlobId };
        else if (this.#data.sharedPostId)
            request.sharedPostAttachment = { postId: this.#data.sharedPostId };
        if (this.#data.accessRestrictions && typeof this.#data.accessRestrictions === 'number') {
            const restriction = this.#data.accessRestrictions === 1 ? 'RESTRICTION_TYPE_EVERYONE' : 'RESTRICTION_TYPE_SPONSORS_ONLY';
            request.accessRestrictions = { restriction };
        }
        if (this.#data.botguardResponse)
            request.botguardResponse = this.#data.botguardResponse;
        return request;
    }
}

const API_PATH$e = 'playlist/create';
class CreatePlaylistServiceEndpoint extends YTNode {
    static type = 'CreatePlaylistServiceEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$e;
    }
    buildRequest() {
        const request = {};
        if (this.#data.title)
            request.title = this.#data.title;
        if (this.#data.privacyStatus)
            request.privacyStatus = this.#data.privacyStatus;
        if (this.#data.description)
            request.description = this.#data.description;
        if (this.#data.videoIds)
            request.videoIds = this.#data.videoIds;
        if (this.#data.params)
            request.params = this.#data.params;
        if (this.#data.sourcePlaylistId)
            request.sourcePlaylistId = this.#data.sourcePlaylistId;
        return request;
    }
}

const API_PATH$d = 'playlist/delete';
class DeletePlaylistEndpoint extends YTNode {
    static type = 'DeletePlaylistEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$d;
    }
    buildRequest() {
        const request = {};
        if (this.#data.playlistId)
            request.playlistId = this.#data.sourcePlaylistId;
        return request;
    }
}

const API_PATH$c = 'feedback';
class FeedbackEndpoint extends YTNode {
    static type = 'FeedbackEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$c;
    }
    buildRequest() {
        const request = {};
        if (this.#data.feedbackToken)
            request.feedbackTokens = [this.#data.feedbackToken];
        if (this.#data.cpn)
            request.feedbackContext = { cpn: this.#data.cpn };
        request.isFeedbackTokenUnencrypted = !!this.#data.isFeedbackTokenUnencrypted;
        request.shouldMerge = !!this.#data.shouldMerge;
        return request;
    }
}

const API_PATH$b = 'account/accounts_list';
class GetAccountsListInnertubeEndpoint extends YTNode {
    static type = 'GetAccountsListInnertubeEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$b;
    }
    buildRequest() {
        const request = {};
        if (this.#data.requestType) {
            request.requestType = this.#data.requestType;
            if (this.#data.requestType === 'ACCOUNTS_LIST_REQUEST_TYPE_CHANNEL_SWITCHER' || this.#data.requestType === 'ACCOUNTS_LIST_REQUEST_TYPE_IDENTITY_PROMPT') {
                if (this.#data.nextUrl)
                    request.nextNavendpoint = {
                        urlEndpoint: {
                            url: this.#data.nextUrl
                        }
                    };
            }
        }
        if (this.#data.channelSwitcherQuery)
            request.channelSwitcherQuery = this.#data.channelSwitcherQuery;
        if (this.#data.triggerChannelCreation)
            request.triggerChannelCreation = this.#data.triggerChannelCreation;
        if (this.#data.contentOwnerConfig && this.#data.contentOwnerConfig.externalContentOwnerId)
            request.contentOwnerConfig = this.#data.contentOwnerConfig;
        if (this.#data.obfuscatedSelectedGaiaId)
            request.obfuscatedSelectedGaiaId = this.#data.obfuscatedSelectedGaiaId;
        if (this.#data.selectedSerializedDelegationContext)
            request.selectedSerializedDelegationContext = this.#data.selectedSerializedDelegationContext;
        if (this.#data.callCircumstance)
            request.callCircumstance = this.#data.callCircumstance;
        return request;
    }
}

class HideEngagementPanelEndpoint extends YTNode {
    static type = 'HideEngagementPanelEndpoint';
    panel_identifier;
    constructor(data) {
        super();
        this.panel_identifier = data.panelIdentifier;
    }
}

const LIKE_API_PATH = 'like/like';
const DISLIKE_API_PATH = 'like/dislike';
const REMOVE_LIKE_API_PATH = 'like/removelike';
class LikeEndpoint extends YTNode {
    static type = 'LikeEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return this.#data.status === 'DISLIKE' ?
            DISLIKE_API_PATH : this.#data.status === 'INDIFFERENT' ?
            REMOVE_LIKE_API_PATH : LIKE_API_PATH;
    }
    buildRequest() {
        const request = {};
        if (this.#data.target)
            request.target = this.#data.target;
        const params = this.getParams();
        if (params)
            request.params = params;
        return request;
    }
    getParams() {
        switch (this.#data.status) {
            case 'LIKE':
                return this.#data.likeParams;
            case 'DISLIKE':
                return this.#data.dislikeParams;
            case 'INDIFFERENT':
                return this.#data.removeLikeParams;
            default:
                return undefined;
        }
    }
}

const API_PATH$a = 'live_chat/get_item_context_menu';
class LiveChatItemContextMenuEndpoint extends YTNode {
    static type = 'LiveChatItemContextMenuEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$a;
    }
    buildRequest() {
        const request = {};
        if (this.#data.params)
            request.params = this.#data.params;
        return request;
    }
}

const API_PATH$9 = 'notification/modify_channel_preference';
class ModifyChannelNotificationPreferenceEndpoint extends YTNode {
    static type = 'ModifyChannelNotificationPreferenceEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$9;
    }
    buildRequest() {
        const request = {};
        if (this.#data.params)
            request.params = this.#data.params;
        if (this.#data.secondaryParams)
            request.secondaryParams = this.#data.secondaryParams;
        return request;
    }
}

const API_PATH$8 = 'comment/perform_comment_action';
class PerformCommentActionEndpoint extends YTNode {
    static type = 'PerformCommentActionEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$8;
    }
    buildRequest() {
        const request = {};
        if (this.#data.actions)
            request.actions = this.#data.actions;
        if (this.#data.action)
            request.actions = [this.#data.action];
        return request;
    }
}

const API_PATH$7 = 'browse/edit_playlist';
class PlaylistEditEndpoint extends YTNode {
    static type = 'PlaylistEditEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$7;
    }
    buildRequest() {
        const request = {};
        if (this.#data.actions)
            request.actions = this.#data.actions;
        if (this.#data.playlistId)
            request.playlistId = this.#data.playlistId;
        if (this.#data.params)
            request.params = this.#data.params;
        return request;
    }
}

const API_PATH$6 = 'player';
class WatchEndpoint extends YTNode {
    static type = 'WatchEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$6;
    }
    buildRequest() {
        const request = {};
        if (this.#data.videoId)
            request.videoId = this.#data.videoId;
        if (this.#data.playlistId)
            request.playlistId = this.#data.playlistId;
        if (this.#data.index !== undefined || this.#data.playlistIndex !== undefined)
            request.playlistIndex = this.#data.index || this.#data.playlistIndex;
        if (this.#data.playerParams || this.#data.params)
            request.params = this.#data.playerParams || this.#data.params;
        if (this.#data.startTimeSeconds)
            request.startTimeSecs = this.#data.startTimeSeconds;
        if (this.#data.overrideMutedAtStart)
            request.overrideMutedAtStart = this.#data.overrideMutedAtStart;
        request.racyCheckOk = !!this.#data.racyCheckOk;
        request.contentCheckOk = !!this.#data.contentCheckOk;
        return request;
    }
}

class PrefetchWatchCommand extends WatchEndpoint {
    static type = 'PrefetchWatchCommand';
    constructor(data) {
        super(data);
    }
}

const API_PATH$5 = 'reel/reel_item_watch';
class ReelWatchEndpoint extends YTNode {
    static type = 'ReelWatchEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$5;
    }
    buildRequest() {
        const request = {};
        if (this.#data.videoId) {
            request.playerRequest = {
                videoId: this.#data.videoId
            };
        }
        if (request.playerRequest) {
            if (this.#data.playerParams)
                request.playerRequest.params = this.#data.playerParams;
            if (this.#data.racyCheckOk)
                request.playerRequest.racyCheckOk = !!this.#data.racyCheckOk;
            if (this.#data.contentCheckOk)
                request.playerRequest.contentCheckOk = !!this.#data.contentCheckOk;
        }
        if (this.#data.params)
            request.params = this.#data.params;
        if (this.#data.inputType)
            request.inputType = this.#data.inputType;
        request.disablePlayerResponse = !!this.#data.disablePlayerResponse;
        return request;
    }
}

const API_PATH$4 = 'search';
class SearchEndpoint extends YTNode {
    static type = 'SearchEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$4;
    }
    buildRequest() {
        const request = {};
        if (this.#data.query)
            request.query = this.#data.query;
        if (this.#data.params)
            request.params = this.#data.params;
        if (this.#data.webSearchboxStatsUrl)
            request.webSearchboxStatsUrl = this.#data.webSearchboxStatsUrl;
        if (this.#data.suggestStats)
            request.suggestStats = this.#data.suggestStats;
        return request;
    }
}

const API_PATH$3 = 'share/get_share_panel';
class ShareEntityServiceEndpoint extends YTNode {
    static type = 'ShareEntityServiceEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$3;
    }
    buildRequest() {
        const request = {};
        if (this.#data.serializedShareEntity)
            request.serializedSharedEntity = this.#data.serializedShareEntity;
        if (this.#data.clientParams)
            request.clientParams = this.#data.clientParams;
        return request;
    }
}

class ShareEndpoint extends ShareEntityServiceEndpoint {
    static type = 'ShareEndpoint';
    constructor(data) {
        super(data);
    }
}

class ShareEntityEndpoint extends ShareEntityServiceEndpoint {
    static type = 'ShareEntityEndpoint';
    constructor(data) {
        super(data);
    }
}

class ShowEngagementPanelEndpoint extends YTNode {
    static type = 'ShowEngagementPanelEndpoint';
    panel_identifier;
    source_panel_identifier;
    constructor(data) {
        super();
        this.panel_identifier = data.panelIdentifier;
        this.source_panel_identifier = data.sourcePanelIdentifier;
    }
}

class SignalServiceEndpoint extends YTNode {
    static type = 'SignalServiceEndpoint';
    actions;
    signal;
    constructor(data) {
        super();
        if (Array.isArray(data.actions)) {
            this.actions = parseArray(data.actions.map((action) => {
                delete action.clickTrackingParams;
                return action;
            }));
        }
        this.signal = data.signal;
    }
}

const API_PATH$2 = 'subscription/subscribe';
class SubscribeEndpoint extends YTNode {
    static type = 'SubscribeEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$2;
    }
    buildRequest() {
        const request = {};
        if (this.#data.channelIds)
            request.channelIds = this.#data.channelIds;
        if (this.#data.siloName)
            request.siloName = this.#data.siloName;
        if (this.#data.params)
            request.params = this.#data.params;
        if (this.#data.botguardResponse)
            request.botguardResponse = this.#data.botguardResponse;
        if (this.#data.feature)
            request.clientFeature = this.#data.feature;
        return request;
    }
}

const API_PATH$1 = 'subscription/unsubscribe';
class UnsubscribeEndpoint extends YTNode {
    static type = 'UnsubscribeEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH$1;
    }
    buildRequest() {
        const request = {};
        if (this.#data.channelIds)
            request.channelIds = this.#data.channelIds;
        if (this.#data.siloName)
            request.siloName = this.#data.siloName;
        if (this.#data.params)
            request.params = this.#data.params;
        return request;
    }
}

const API_PATH = 'next';
class WatchNextEndpoint extends YTNode {
    static type = 'WatchNextEndpoint';
    #data;
    constructor(data) {
        super();
        this.#data = data;
    }
    getApiPath() {
        return API_PATH;
    }
    buildRequest() {
        const request = {};
        if (this.#data.videoId)
            request.videoId = this.#data.videoId;
        if (this.#data.playlistId)
            request.playlistId = this.#data.playlistId;
        if (this.#data.index !== undefined || this.#data.playlistIndex !== undefined)
            request.playlistIndex = this.#data.index || this.#data.playlistIndex;
        if (this.#data.playerParams || this.#data.params)
            request.params = this.#data.playerParams || this.#data.params;
        request.racyCheckOk = !!this.#data.racyCheckOk;
        request.contentCheckOk = !!this.#data.contentCheckOk;
        return request;
    }
}

class Endscreen extends YTNode {
    static type = 'Endscreen';
    elements;
    start_ms;
    constructor(data) {
        super();
        this.elements = parseArray(data.elements);
        this.start_ms = data.startMs;
    }
}

class EndscreenElement extends YTNode {
    static type = 'EndscreenElement';
    style;
    title;
    endpoint;
    image;
    icon;
    metadata;
    call_to_action;
    hovercard_button;
    is_subscribe;
    playlist_length;
    thumbnail_overlays;
    left;
    top;
    width;
    aspect_ratio;
    start_ms;
    end_ms;
    id;
    constructor(data) {
        super();
        this.style = data.style;
        this.title = new Text$1(data.title);
        this.endpoint = new NavigationEndpoint(data.endpoint);
        if (Reflect.has(data, 'image')) {
            this.image = Thumbnail.fromResponse(data.image);
        }
        if (Reflect.has(data, 'icon')) {
            this.icon = Thumbnail.fromResponse(data.icon);
        }
        if (Reflect.has(data, 'metadata')) {
            this.metadata = new Text$1(data.metadata);
        }
        if (Reflect.has(data, 'callToAction')) {
            this.call_to_action = new Text$1(data.callToAction);
        }
        if (Reflect.has(data, 'hovercardButton')) {
            this.hovercard_button = parseItem(data.hovercardButton);
        }
        if (Reflect.has(data, 'isSubscribe')) {
            this.is_subscribe = !!data.isSubscribe;
        }
        if (Reflect.has(data, 'playlistLength')) {
            this.playlist_length = new Text$1(data.playlistLength);
        }
        if (Reflect.has(data, 'thumbnailOverlays')) {
            this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        }
        this.left = parseFloat(data.left);
        this.width = parseFloat(data.width);
        this.top = parseFloat(data.top);
        this.aspect_ratio = parseFloat(data.aspectRatio);
        this.start_ms = parseFloat(data.startMs);
        this.end_ms = parseFloat(data.endMs);
        this.id = data.id;
    }
}

class EndScreenPlaylist extends YTNode {
    static type = 'EndScreenPlaylist';
    id;
    title;
    author;
    endpoint;
    thumbnails;
    video_count;
    constructor(data) {
        super();
        this.id = data.playlistId;
        this.title = new Text$1(data.title);
        this.author = new Text$1(data.longBylineText);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.video_count = new Text$1(data.videoCountText);
    }
}

class EndScreenVideo extends YTNode {
    static type = 'EndScreenVideo';
    id;
    title;
    thumbnails;
    thumbnail_overlays;
    author;
    endpoint;
    short_view_count;
    badges;
    duration;
    constructor(data) {
        super();
        this.id = data.videoId;
        this.title = new Text$1(data.title);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        this.author = new Author(data.shortBylineText, data.ownerBadges);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.short_view_count = new Text$1(data.shortViewCountText);
        this.badges = parseArray(data.badges);
        this.duration = {
            text: new Text$1(data.lengthText).toString(),
            seconds: data.lengthInSeconds
        };
    }
}

class ExpandableTab extends YTNode {
    static type = 'ExpandableTab';
    title;
    endpoint;
    selected;
    content;
    constructor(data) {
        super();
        this.title = data.title;
        this.endpoint = new NavigationEndpoint(data.endpoint);
        this.selected = data.selected;
        this.content = parseItem(data.content);
    }
}

class ExpandedShelfContents extends YTNode {
    static type = 'ExpandedShelfContents';
    items;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class FancyDismissibleDialog extends YTNode {
    static type = 'FancyDismissibleDialog';
    dialog_message;
    confirm_label;
    constructor(data) {
        super();
        this.dialog_message = new Text$1(data.dialogMessage);
        this.confirm_label = new Text$1(data.confirmLabel);
    }
}

class FeedFilterChipBar extends YTNode {
    static type = 'FeedFilterChipBar';
    contents;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents, ChipCloudChip);
    }
}

class FeedNudge extends YTNode {
    static type = 'FeedNudge';
    title;
    subtitle;
    endpoint;
    apply_modernized_style;
    trim_style;
    background_style;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
        this.endpoint = new NavigationEndpoint(data.impressionEndpoint);
        this.apply_modernized_style = data.applyModernizedStyle;
        this.trim_style = data.trimStyle;
        this.background_style = data.backgroundStyle;
    }
}

class FeedTabbedHeader extends YTNode {
    static type = 'FeedTabbedHeader';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class GameDetails extends YTNode {
    static type = 'GameDetails';
    title;
    box_art;
    box_art_overlay_text;
    endpoint;
    is_official_box_art;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.box_art = Thumbnail.fromResponse(data.boxArt);
        this.box_art_overlay_text = new Text$1(data.boxArtOverlayText);
        this.endpoint = new NavigationEndpoint(data.endpoint);
        this.is_official_box_art = !!data.isOfficialBoxArt;
    }
}

class Grid extends YTNode {
    static type = 'Grid';
    items;
    is_collapsible;
    visible_row_count;
    target_id;
    continuation;
    header;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
        if (Reflect.has(data, 'header')) {
            this.header = parseItem(data.header);
        }
        if (Reflect.has(data, 'isCollapsible')) {
            this.is_collapsible = data.isCollapsible;
        }
        if (Reflect.has(data, 'visibleRowCount')) {
            this.visible_row_count = data.visibleRowCount;
        }
        if (Reflect.has(data, 'targetId')) {
            this.target_id = data.targetId;
        }
        this.continuation = data.continuations?.[0]?.nextContinuationData?.continuation || null;
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class GridChannel extends YTNode {
    static type = 'GridChannel';
    id;
    author;
    subscribers;
    video_count;
    endpoint;
    subscribe_button;
    constructor(data) {
        super();
        this.id = data.channelId;
        this.author = new Author({
            ...data.title,
            navigationEndpoint: data.navigationEndpoint
        }, data.ownerBadges, data.thumbnail);
        this.subscribers = new Text$1(data.subscriberCountText);
        this.video_count = new Text$1(data.videoCountText);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.subscribe_button = parseItem(data.subscribeButton);
    }
}

class GridHeader extends YTNode {
    static type = 'GridHeader';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class GridMix extends YTNode {
    static type = 'GridMix';
    id;
    title;
    author;
    thumbnails;
    video_count;
    video_count_short;
    endpoint;
    secondary_endpoint;
    thumbnail_overlays;
    constructor(data) {
        super();
        this.id = data.playlistId;
        this.title = new Text$1(data.title);
        this.author = data.shortBylineText?.simpleText ?
            new Text$1(data.shortBylineText) : data.longBylineText?.simpleText ?
            new Text$1(data.longBylineText) : null;
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.video_count = new Text$1(data.videoCountText);
        this.video_count_short = new Text$1(data.videoCountShortText);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.secondary_endpoint = new NavigationEndpoint(data.secondaryNavigationEndpoint);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
    }
}

class GridMovie extends YTNode {
    static type = 'GridMovie';
    id;
    title;
    thumbnails;
    duration;
    endpoint;
    badges;
    metadata;
    thumbnail_overlays;
    constructor(data) {
        super();
        const length_alt = data.thumbnailOverlays.find((overlay) => overlay.hasOwnProperty('thumbnailOverlayTimeStatusRenderer'))?.thumbnailOverlayTimeStatusRenderer;
        this.id = data.videoId;
        this.title = new Text$1(data.title);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.duration = data.lengthText ? new Text$1(data.lengthText) : length_alt?.text ? new Text$1(length_alt.text) : null;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.badges = parseArray(data.badges, MetadataBadge);
        this.metadata = new Text$1(data.metadata);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
    }
}

class GridPlaylist extends YTNode {
    static type = 'GridPlaylist';
    id;
    title;
    author;
    badges;
    endpoint;
    view_playlist;
    thumbnails;
    thumbnail_renderer;
    sidebar_thumbnails;
    video_count;
    video_count_short;
    constructor(data) {
        super();
        this.id = data.playlistId;
        this.title = new Text$1(data.title);
        if (Reflect.has(data, 'shortBylineText')) {
            this.author = new Author(data.shortBylineText, data.ownerBadges);
        }
        this.badges = parseArray(data.ownerBadges);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.view_playlist = new Text$1(data.viewPlaylistText);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.thumbnail_renderer = parseItem(data.thumbnailRenderer);
        this.sidebar_thumbnails = [].concat(...data.sidebarThumbnails?.map((thumbnail) => Thumbnail.fromResponse(thumbnail)) || []) || null;
        this.video_count = new Text$1(data.thumbnailText);
        this.video_count_short = new Text$1(data.videoCountShortText);
    }
}

class GridShelfView extends YTNode {
    static type = 'GridShelfView';
    contents;
    header;
    content_aspect_ratio;
    enable_vertical_expansion;
    show_more_button;
    show_less_button;
    min_collapsed_item_count;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents);
        this.header = parseItem(data.header);
        this.content_aspect_ratio = data.contentAspectRatio;
        this.enable_vertical_expansion = data.enableVerticalExpansion;
        this.show_more_button = parseItem(data.showMoreButton, ButtonView);
        this.show_less_button = parseItem(data.showLessButton, ButtonView);
        this.min_collapsed_item_count = data.minCollapsedItemCount;
    }
}

class ShowCustomThumbnail extends YTNode {
    static type = 'ShowCustomThumbnail';
    thumbnail;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
    }
}

class ThumbnailOverlayBottomPanel extends YTNode {
    static type = 'ThumbnailOverlayBottomPanel';
    text;
    icon_type;
    constructor(data) {
        super();
        if (Reflect.has(data, 'text')) {
            this.text = new Text$1(data.text);
        }
        if (Reflect.has(data, 'icon') && Reflect.has(data.icon, 'iconType')) {
            this.icon_type = data.icon.iconType;
        }
    }
}

class GridShow extends YTNode {
    static type = 'GridShow';
    title;
    thumbnail_renderer;
    endpoint;
    long_byline_text;
    thumbnail_overlays;
    author;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.thumbnail_renderer = parseItem(data.thumbnailRenderer, ShowCustomThumbnail);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.long_byline_text = new Text$1(data.longBylineText);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays, ThumbnailOverlayBottomPanel);
        this.author = new Author(data.shortBylineText, undefined);
    }
}

class GridVideo extends YTNode {
    static type = 'GridVideo';
    video_id;
    title;
    thumbnails;
    thumbnail_overlays;
    rich_thumbnail;
    published;
    duration;
    author;
    views;
    short_view_count;
    endpoint;
    menu;
    buttons;
    upcoming;
    upcoming_text;
    is_reminder_set;
    constructor(data) {
        super();
        const length_alt = data.thumbnailOverlays.find((overlay) => overlay.hasOwnProperty('thumbnailOverlayTimeStatusRenderer'))?.thumbnailOverlayTimeStatusRenderer;
        this.video_id = data.videoId;
        this.title = new Text$1(data.title);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        this.rich_thumbnail = parseItem(data.richThumbnail);
        this.published = new Text$1(data.publishedTimeText);
        this.duration = data.lengthText ? new Text$1(data.lengthText) : length_alt?.text ? new Text$1(length_alt.text) : null;
        this.author = data.shortBylineText && new Author(data.shortBylineText, data.ownerBadges);
        this.views = new Text$1(data.viewCountText);
        this.short_view_count = new Text$1(data.shortViewCountText);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.menu = parseItem(data.menu, Menu);
        if (Reflect.has(data, 'buttons')) {
            this.buttons = parseArray(data.buttons);
        }
        if (Reflect.has(data, 'upcomingEventData')) {
            this.upcoming = new Date(Number(`${data.upcomingEventData.startTime}000`));
            this.upcoming_text = new Text$1(data.upcomingEventData.upcomingEventText);
            this.is_reminder_set = !!data.upcomingEventData?.isReminderSet;
        }
    }
    /**
     * @deprecated Use {@linkcode video_id} instead.
     */
    get id() {
        return this.video_id;
    }
    get is_upcoming() {
        return Boolean(this.upcoming && this.upcoming > new Date());
    }
}

class GuideEntry extends YTNode {
    static type = 'GuideEntry';
    title;
    endpoint;
    icon_type;
    thumbnails;
    badges;
    is_primary;
    constructor(data) {
        super();
        this.title = new Text$1(data.formattedTitle);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint || data.serviceEndpoint);
        if (Reflect.has(data, 'icon') && Reflect.has(data.icon, 'iconType')) {
            this.icon_type = data.icon.iconType;
        }
        if (Reflect.has(data, 'thumbnail')) {
            this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        }
        // (LuanRT) XXX: Check this property's data and parse it.
        if (Reflect.has(data, 'badges')) {
            this.badges = data.badges;
        }
        this.is_primary = !!data.isPrimary;
    }
}

class GuideCollapsibleEntry extends YTNode {
    static type = 'GuideCollapsibleEntry';
    expander_item;
    collapser_item;
    expandable_items;
    constructor(data) {
        super();
        this.expander_item = parseItem(data.expanderItem, GuideEntry);
        this.collapser_item = parseItem(data.collapserItem, GuideEntry);
        this.expandable_items = parseArray(data.expandableItems);
    }
}

class GuideCollapsibleSectionEntry extends YTNode {
    static type = 'GuideCollapsibleSectionEntry';
    header_entry;
    expander_icon;
    collapser_icon;
    section_items;
    constructor(data) {
        super();
        this.header_entry = parseItem(data.headerEntry);
        this.expander_icon = data.expanderIcon.iconType;
        this.collapser_icon = data.collapserIcon.iconType;
        this.section_items = parseArray(data.sectionItems);
    }
}

class GuideDownloadsEntry extends GuideEntry {
    static type = 'GuideDownloadsEntry';
    always_show;
    constructor(data) {
        super(data.entryRenderer.guideEntryRenderer);
        this.always_show = !!data.alwaysShow;
    }
}

class GuideSection extends YTNode {
    static type = 'GuideSection';
    title;
    items;
    constructor(data) {
        super();
        if (Reflect.has(data, 'formattedTitle')) {
            this.title = new Text$1(data.formattedTitle);
        }
        this.items = parseArray(data.items);
    }
}

class GuideSubscriptionsSection extends GuideSection {
    static type = 'GuideSubscriptionsSection';
}

class HashtagHeader extends YTNode {
    static type = 'HashtagHeader';
    hashtag;
    hashtag_info;
    constructor(data) {
        super();
        this.hashtag = new Text$1(data.hashtag);
        this.hashtag_info = new Text$1(data.hashtagInfoText);
    }
}

class HashtagTile extends YTNode {
    static type = 'HashtagTile';
    hashtag;
    hashtag_info_text;
    hashtag_thumbnail;
    endpoint;
    hashtag_background_color;
    hashtag_video_count;
    hashtag_channel_count;
    constructor(data) {
        super();
        this.hashtag = new Text$1(data.hashtag);
        this.hashtag_info_text = new Text$1(data.hashtagInfoText);
        this.hashtag_thumbnail = Thumbnail.fromResponse(data.hashtagThumbnail);
        this.endpoint = new NavigationEndpoint(data.onTapCommand);
        this.hashtag_background_color = data.hashtagBackgroundColor;
        this.hashtag_video_count = new Text$1(data.hashtagVideoCount);
        this.hashtag_channel_count = new Text$1(data.hashtagChannelCount);
    }
}

class HeroPlaylistThumbnail extends YTNode {
    static type = 'HeroPlaylistThumbnail';
    thumbnails;
    on_tap_endpoint;
    constructor(data) {
        super();
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.on_tap_endpoint = new NavigationEndpoint(data.onTap);
    }
}

let Panel$1 = class Panel extends YTNode {
    static type = 'Panel';
    thumbnail;
    background_image;
    strapline;
    title;
    description;
    text_on_tap_endpoint;
    cta;
    constructor(data) {
        super();
        if (data.thumbnail) {
            this.thumbnail = {
                image: Thumbnail.fromResponse(data.thumbnail.image),
                endpoint: new NavigationEndpoint(data.thumbnail.onTap),
                on_long_press_endpoint: new NavigationEndpoint(data.thumbnail.onLongPress),
                content_mode: data.thumbnail.contentMode,
                crop_options: data.thumbnail.cropOptions
            };
        }
        this.background_image = {
            image: Thumbnail.fromResponse(data.backgroundImage.image),
            gradient_image: Thumbnail.fromResponse(data.backgroundImage.gradientImage)
        };
        this.strapline = data.strapline;
        this.title = data.title;
        this.description = data.description;
        this.cta = {
            icon_name: data.cta.iconName,
            title: data.cta.title,
            endpoint: new NavigationEndpoint(data.cta.onTap),
            accessibility_text: data.cta.accessibilityText,
            state: data.cta.state
        };
        this.text_on_tap_endpoint = new NavigationEndpoint(data.textOnTap);
    }
};
class HighlightsCarousel extends YTNode {
    static type = 'HighlightsCarousel';
    panels;
    constructor(data) {
        super();
        this.panels = observe(data.highlightsCarousel.panels.map((el) => new Panel$1(el)));
    }
}

class SearchSuggestion extends YTNode {
    static type = 'SearchSuggestion';
    suggestion;
    endpoint;
    icon_type;
    service_endpoint;
    constructor(data) {
        super();
        this.suggestion = new Text$1(data.suggestion);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        if (Reflect.has(data, 'icon')) {
            this.icon_type = data.icon.iconType;
        }
        if (Reflect.has(data, 'serviceEndpoint')) {
            this.service_endpoint = new NavigationEndpoint(data.serviceEndpoint);
        }
    }
}

class HistorySuggestion extends SearchSuggestion {
    static type = 'HistorySuggestion';
    constructor(data) {
        super(data);
    }
}

class HorizontalMovieList extends YTNode {
    static type = 'HorizontalMovieList';
    items;
    previous_button;
    next_button;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
        this.previous_button = parseItem(data.previousButton, Button);
        this.next_button = parseItem(data.nextButton, Button);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class IconLink extends YTNode {
    static type = 'IconLink';
    icon_type;
    tooltip;
    endpoint;
    constructor(data) {
        super();
        this.icon_type = data.icon?.iconType;
        if (Reflect.has(data, 'tooltip')) {
            this.tooltip = new Text$1(data.tooltip).toString();
        }
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
    }
}

class ImageBannerView extends YTNode {
    static type = 'ImageBannerView';
    image;
    style;
    constructor(data) {
        super();
        this.image = Thumbnail.fromResponse(data.image);
        this.style = data.style;
    }
}

class IncludingResultsFor extends YTNode {
    static type = 'IncludingResultsFor';
    including_results_for;
    corrected_query;
    corrected_query_endpoint;
    search_only_for;
    original_query;
    original_query_endpoint;
    constructor(data) {
        super();
        this.including_results_for = new Text$1(data.includingResultsFor);
        this.corrected_query = new Text$1(data.correctedQuery);
        this.corrected_query_endpoint = new NavigationEndpoint(data.correctedQueryEndpoint);
        this.search_only_for = Reflect.has(data, 'searchOnlyFor') ? new Text$1(data.searchOnlyFor) : undefined;
        this.original_query = Reflect.has(data, 'originalQuery') ? new Text$1(data.originalQuery) : undefined;
        this.original_query_endpoint = Reflect.has(data, 'originalQueryEndpoint') ? new NavigationEndpoint(data.originalQueryEndpoint) : undefined;
    }
}

class InfoPanelContent extends YTNode {
    static type = 'InfoPanelContent';
    title;
    source;
    paragraphs;
    attributed_paragraphs;
    thumbnail;
    source_endpoint;
    truncate_paragraphs;
    background;
    inline_link_icon_type;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.source = new Text$1(data.source);
        if (Reflect.has(data, 'paragraphs'))
            this.paragraphs = data.paragraphs.map((p) => new Text$1(p));
        if (Reflect.has(data, 'attributedParagraphs'))
            this.attributed_paragraphs = data.attributedParagraphs.map((p) => Text$1.fromAttributed(p));
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.source_endpoint = new NavigationEndpoint(data.sourceEndpoint);
        this.truncate_paragraphs = !!data.truncateParagraphs;
        this.background = data.background;
        if (Reflect.has(data, 'inlineLinkIcon') && Reflect.has(data.inlineLinkIcon, 'iconType')) {
            this.inline_link_icon_type = data.inlineLinkIcon.iconType;
        }
    }
}

class InfoPanelContainer extends YTNode {
    static type = 'InfoPanelContainer';
    title;
    menu;
    content;
    header_endpoint;
    background;
    title_style;
    icon_type;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.menu = parseItem(data.menu, Menu);
        this.content = parseItem(data.content, InfoPanelContent);
        if (data.headerEndpoint)
            this.header_endpoint = new NavigationEndpoint(data.headerEndpoint);
        this.background = data.background;
        this.title_style = data.titleStyle;
        if (Reflect.has(data, 'icon')) {
            this.icon_type = data.icon?.iconType;
        }
    }
}

class InteractiveTabbedHeader extends YTNode {
    static type = 'InteractiveTabbedHeader';
    header_type;
    title;
    description;
    metadata;
    badges;
    box_art;
    banner;
    buttons;
    auto_generated;
    constructor(data) {
        super();
        this.header_type = data.type;
        this.title = new Text$1(data.title);
        this.description = new Text$1(data.description);
        this.metadata = new Text$1(data.metadata);
        this.badges = parseArray(data.badges, MetadataBadge);
        this.box_art = Thumbnail.fromResponse(data.boxArt);
        this.banner = Thumbnail.fromResponse(data.banner);
        this.buttons = parseArray(data.buttons, [SubscribeButton, Button]);
        this.auto_generated = new Text$1(data.autoGenerated);
    }
}

class ItemSectionHeader extends YTNode {
    static type = 'ItemSectionHeader';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class ItemSectionTab extends YTNode {
    static type = 'Tab';
    title;
    selected;
    endpoint;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.selected = !!data.selected;
        this.endpoint = new NavigationEndpoint(data.endpoint);
    }
}

class ItemSectionTabbedHeader extends YTNode {
    static type = 'ItemSectionTabbedHeader';
    title;
    tabs;
    end_items;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.tabs = parseArray(data.tabs, ItemSectionTab);
        if (Reflect.has(data, 'endItems')) {
            this.end_items = parseArray(data.endItems);
        }
    }
}

class SortFilterHeader extends YTNode {
    static type = 'SortFilterHeader';
    filter_menu;
    constructor(data) {
        super();
        this.filter_menu = parseItem(data.filterMenu, SortFilterSubMenu);
    }
}

class ItemSection extends YTNode {
    static type = 'ItemSection';
    header;
    contents;
    target_id;
    continuation;
    constructor(data) {
        super();
        this.header = parseItem(data.header, [CommentsHeader, ItemSectionHeader, ItemSectionTabbedHeader, SortFilterHeader, FeedFilterChipBar]);
        this.contents = parseArray(data.contents);
        if (data.targetId || data.sectionIdentifier) {
            this.target_id = data.targetId || data.sectionIdentifier;
        }
        if (data.continuations) {
            this.continuation = data.continuations?.at(0)?.nextContinuationData?.continuation;
        }
    }
}

class LiveChat extends YTNode {
    static type = 'LiveChat';
    header;
    initial_display_state;
    continuation;
    client_messages;
    is_replay;
    constructor(data) {
        super();
        this.header = parseItem(data.header);
        this.initial_display_state = data.initialDisplayState;
        this.continuation = data.continuations[0]?.reloadContinuationData?.continuation;
        this.client_messages = {
            reconnect_message: new Text$1(data.clientMessages.reconnectMessage),
            unable_to_reconnect_message: new Text$1(data.clientMessages.unableToReconnectMessage),
            fatal_error: new Text$1(data.clientMessages.fatalError),
            reconnected_message: new Text$1(data.clientMessages.reconnectedMessage),
            generic_error: new Text$1(data.clientMessages.genericError)
        };
        this.is_replay = !!data.isReplay;
    }
}

class LiveChatBannerHeader extends YTNode {
    static type = 'LiveChatBannerHeader';
    text;
    icon_type;
    context_menu_button;
    constructor(data) {
        super();
        this.text = new Text$1(data.text);
        if (Reflect.has(data, 'icon') && Reflect.has(data.icon, 'iconType')) {
            this.icon_type = data.icon.iconType;
        }
        this.context_menu_button = parseItem(data.contextMenuButton, Button);
    }
}

class LiveChatBanner extends YTNode {
    static type = 'LiveChatBanner';
    header;
    contents;
    action_id;
    viewer_is_creator;
    target_id;
    is_stackable;
    background_type;
    banner_type;
    banner_properties_is_ephemeral;
    banner_properties_auto_collapse_delay_seconds;
    constructor(data) {
        super();
        this.header = parseItem(data.header, LiveChatBannerHeader);
        this.contents = parseItem(data.contents);
        this.action_id = data.actionId;
        if (Reflect.has(data, 'viewerIsCreator')) {
            this.viewer_is_creator = data.viewerIsCreator;
        }
        this.target_id = data.targetId;
        this.is_stackable = data.isStackable;
        if (Reflect.has(data, 'backgroundType')) {
            this.background_type = data.backgroundType;
        }
        this.banner_type = data.bannerType;
        if (Reflect.has(data, 'bannerProperties') &&
            Reflect.has(data.bannerProperties, 'isEphemeral')) {
            this.banner_properties_is_ephemeral = Boolean(data.bannerProperties.isEphemeral);
        }
        if (Reflect.has(data, 'bannerProperties') &&
            Reflect.has(data.bannerProperties, 'autoCollapseDelay') &&
            Reflect.has(data.bannerProperties.autoCollapseDelay, 'seconds')) {
            this.banner_properties_auto_collapse_delay_seconds = data.bannerProperties.autoCollapseDelay.seconds;
        }
    }
}

class AddBannerToLiveChatCommand extends YTNode {
    static type = 'AddBannerToLiveChatCommand';
    banner;
    constructor(data) {
        super();
        this.banner = parseItem(data.bannerRenderer, LiveChatBanner);
    }
}

class AddChatItemAction extends YTNode {
    static type = 'AddChatItemAction';
    item;
    client_id;
    constructor(data) {
        super();
        this.item = parseItem(data.item);
        if (Reflect.has(data, 'clientId')) {
            this.client_id = data.clientId;
        }
    }
}

class AddLiveChatTickerItemAction extends YTNode {
    static type = 'AddLiveChatTickerItemAction';
    item;
    duration_sec; // TODO: check this assumption.
    constructor(data) {
        super();
        this.item = parseItem(data.item);
        this.duration_sec = data.durationSec;
    }
}

class DimChatItemAction extends YTNode {
    static type = 'DimChatItemAction';
    client_assigned_id;
    constructor(data) {
        super();
        this.client_assigned_id = data.clientAssignedId;
    }
}

class BumperUserEduContentView extends YTNode {
    static type = 'BumperUserEduContentView';
    text;
    image_name;
    image_color;
    constructor(data) {
        super();
        this.text = Text$1.fromAttributed(data.text);
        this.image_name = data.image.sources[0].clientResource.imageName;
        this.image_color = data.image.sources[0].clientResource.imageColor;
    }
}

class CreatorHeartView extends YTNode {
    static type = 'CreatorHeartView';
    creator_thumbnail;
    hearted_icon_name;
    unhearted_icon_name;
    unhearted_icon_processor;
    hearted_hover_text;
    hearted_accessibility_label;
    unhearted_accessibility_label;
    engagement_state_key;
    constructor(data) {
        super();
        this.creator_thumbnail = Thumbnail.fromResponse(data.creatorThumbnail);
        this.hearted_icon_name = data.heartedIcon.sources[0].clientResource.imageName;
        this.unhearted_icon_name = data.unheartedIcon.sources[0].clientResource.imageName;
        this.unhearted_icon_processor = {
            border_image_processor: {
                image_tint: {
                    color: data.unheartedIcon.processor.borderImageProcessor.imageTint.color
                }
            }
        };
        this.hearted_hover_text = data.heartedHoverText;
        this.hearted_accessibility_label = data.heartedAccessibilityLabel;
        this.unhearted_accessibility_label = data.unheartedAccessibilityLabel;
        this.engagement_state_key = data.engagementStateKey;
    }
}

class LiveChatAutoModMessage extends YTNode {
    static type = 'LiveChatAutoModMessage';
    menu_endpoint;
    moderation_buttons;
    auto_moderated_item;
    header_text;
    timestamp;
    id;
    constructor(data) {
        super();
        this.menu_endpoint = new NavigationEndpoint(data.contextMenuEndpoint);
        this.moderation_buttons = parseArray(data.moderationButtons, Button);
        this.auto_moderated_item = parseItem(data.autoModeratedItem);
        this.header_text = new Text$1(data.headerText);
        this.timestamp = Math.floor(parseInt(data.timestampUsec) / 1000);
        this.id = data.id;
    }
}

class LiveChatBannerChatSummary extends YTNode {
    static type = 'LiveChatBannerChatSummary';
    id;
    chat_summary;
    icon_type;
    like_feedback_button;
    dislike_feedback_button;
    constructor(data) {
        super();
        this.id = data.liveChatSummaryId;
        this.chat_summary = new Text$1(data.chatSummary);
        this.icon_type = data.icon.iconType;
        this.like_feedback_button = parseItem(data.likeFeedbackButton, ToggleButtonView);
        this.dislike_feedback_button = parseItem(data.dislikeFeedbackButton, ToggleButtonView);
    }
}

class LiveChatBannerPoll extends YTNode {
    static type = 'LiveChatBannerPoll';
    poll_question;
    author_photo;
    choices;
    collapsed_state_entity_key;
    live_chat_poll_state_entity_key;
    context_menu_button;
    constructor(data) {
        super();
        this.poll_question = new Text$1(data.pollQuestion);
        this.author_photo = Thumbnail.fromResponse(data.authorPhoto);
        this.choices = data.pollChoices.map((choice) => ({
            option_id: choice.pollOptionId,
            text: new Text$1(choice.text).toString() // XXX: This toString should probably not be used here.
        }));
        this.collapsed_state_entity_key = data.collapsedStateEntityKey;
        this.live_chat_poll_state_entity_key = data.liveChatPollStateEntityKey;
        this.context_menu_button = parseItem(data.contextMenuButton, Button);
    }
}

class LiveChatBannerRedirect extends YTNode {
    static type = 'LiveChatBannerRedirect';
    banner_message;
    author_photo;
    inline_action_button;
    context_menu_button;
    constructor(data) {
        super();
        this.banner_message = new Text$1(data.bannerMessage);
        this.author_photo = Thumbnail.fromResponse(data.authorPhoto);
        this.inline_action_button = parseItem(data.inlineActionButton, Button);
        this.context_menu_button = parseItem(data.contextMenuButton, Button);
    }
}

class LiveChatItemBumperView extends YTNode {
    static type = 'LiveChatItemBumperView';
    content;
    constructor(data) {
        super();
        this.content = parseItem(data.content, BumperUserEduContentView);
    }
}

class LiveChatMembershipItem extends YTNode {
    static type = 'LiveChatMembershipItem';
    id;
    timestamp;
    timestamp_usec;
    timestamp_text;
    header_primary_text;
    header_subtext;
    message;
    author;
    menu_endpoint;
    context_menu_accessibility_label;
    constructor(data) {
        super();
        this.id = data.id;
        this.timestamp = Math.floor(parseInt(data.timestampUsec) / 1000);
        this.timestamp_usec = data.timestampUsec;
        if (Reflect.has(data, 'timestampText')) {
            this.timestamp_text = new Text$1(data.timestampText);
        }
        if (Reflect.has(data, 'headerPrimaryText')) {
            this.header_primary_text = new Text$1(data.headerPrimaryText);
        }
        this.header_subtext = new Text$1(data.headerSubtext);
        if (Reflect.has(data, 'message')) {
            this.message = new Text$1(data.message);
        }
        this.author = new Author(data.authorName, data.authorBadges, data.authorPhoto, data.authorExternalChannelId);
        this.menu_endpoint = new NavigationEndpoint(data.contextMenuEndpoint);
        this.context_menu_accessibility_label = data.contextMenuAccessibility.accessibilityData.label;
    }
}

class LiveChatModeChangeMessage extends YTNode {
    static type = 'LiveChatModeChangeMessage';
    id;
    icon_type;
    text;
    subtext;
    timestamp;
    timestamp_usec;
    timestamp_text;
    constructor(data) {
        super();
        this.id = data.id;
        this.icon_type = data.icon.iconType;
        this.text = new Text$1(data.text);
        this.subtext = new Text$1(data.subtext);
        this.timestamp = Math.floor(parseInt(data.timestampUsec) / 1000);
        this.timestamp_usec = data.timestampUsec;
        this.timestamp_text = new Text$1(data.timestampText);
    }
}

class PdgReplyButtonView extends YTNode {
    static type = 'PdgReplyButtonView';
    reply_button;
    reply_count_entity_key;
    reply_count_placeholder;
    constructor(data) {
        super();
        this.reply_button = parseItem(data.replyButton, ButtonView);
        this.reply_count_entity_key = data.replyCountEntityKey;
        this.reply_count_placeholder = Text$1.fromAttributed(data.replyCountPlaceholder);
    }
}

class LiveChatPaidMessage extends YTNode {
    static type = 'LiveChatPaidMessage';
    id;
    message;
    author;
    author_name_text_color;
    header_background_color;
    header_text_color;
    body_background_color;
    body_text_color;
    purchase_amount;
    menu_endpoint;
    context_menu_accessibility_label;
    timestamp;
    timestamp_usec;
    timestamp_text;
    timestamp_color;
    header_overlay_image;
    text_input_background_color;
    lower_bumper;
    creator_heart_button;
    is_v2_style;
    reply_button;
    constructor(data) {
        super();
        this.id = data.id;
        this.message = new Text$1(data.message);
        this.author = new Author(data.authorName, data.authorBadges, data.authorPhoto, data.authorExternalChannelId);
        this.author_name_text_color = data.authorNameTextColor;
        this.header_background_color = data.headerBackgroundColor;
        this.header_text_color = data.headerTextColor;
        this.body_background_color = data.bodyBackgroundColor;
        this.body_text_color = data.bodyTextColor;
        this.purchase_amount = new Text$1(data.purchaseAmountText).toString();
        this.menu_endpoint = new NavigationEndpoint(data.contextMenuEndpoint);
        this.context_menu_accessibility_label = data.contextMenuAccessibility.accessibilityData.label;
        this.timestamp = Math.floor(parseInt(data.timestampUsec) / 1000);
        this.timestamp_usec = data.timestampUsec;
        if (Reflect.has(data, 'timestampText')) {
            this.timestamp_text = new Text$1(data.timestampText).toString();
        }
        this.timestamp_color = data.timestampColor;
        if (Reflect.has(data, 'headerOverlayImage')) {
            this.header_overlay_image = Thumbnail.fromResponse(data.headerOverlayImage);
        }
        this.text_input_background_color = data.textInputBackgroundColor;
        this.lower_bumper = parseItem(data.lowerBumper, LiveChatItemBumperView);
        this.creator_heart_button = parseItem(data.creatorHeartButton, CreatorHeartView);
        this.is_v2_style = data.isV2Style;
        this.reply_button = parseItem(data.replyButton, PdgReplyButtonView);
    }
}

class LiveChatPaidSticker extends YTNode {
    static type = 'LiveChatPaidSticker';
    id;
    author;
    money_chip_background_color;
    money_chip_text_color;
    background_color;
    author_name_text_color;
    sticker;
    sticker_accessibility_label;
    sticker_display_width;
    sticker_display_height;
    purchase_amount;
    menu_endpoint;
    context_menu;
    context_menu_accessibility_label;
    timestamp;
    timestamp_usec;
    is_v2_style;
    constructor(data) {
        super();
        this.id = data.id;
        this.author = new Author(data.authorName, data.authorBadges, data.authorPhoto, data.authorExternalChannelId);
        this.money_chip_background_color = data.moneyChipBackgroundColor;
        this.money_chip_text_color = data.moneyChipTextColor;
        this.background_color = data.backgroundColor;
        this.author_name_text_color = data.authorNameTextColor;
        this.sticker = Thumbnail.fromResponse(data.sticker);
        this.sticker_accessibility_label = data.sticker.accessibility.accessibilityData.label;
        this.sticker_display_width = data.stickerDisplayWidth;
        this.sticker_display_height = data.stickerDisplayHeight;
        this.purchase_amount = new Text$1(data.purchaseAmountText).toString();
        this.menu_endpoint = new NavigationEndpoint(data.contextMenuEndpoint);
        this.context_menu = this.menu_endpoint;
        this.context_menu_accessibility_label = data.contextMenuAccessibility.accessibilityData.label;
        this.timestamp = Math.floor(parseInt(data.timestampUsec) / 1000);
        this.timestamp_usec = data.timestampUsec;
        this.is_v2_style = data.isV2Style;
    }
}

class LiveChatPlaceholderItem extends YTNode {
    static type = 'LiveChatPlaceholderItem';
    id;
    timestamp;
    constructor(data) {
        super();
        this.id = data.id;
        this.timestamp = Math.floor(parseInt(data.timestampUsec) / 1000);
    }
}

class LiveChatProductItem extends YTNode {
    static type = 'LiveChatProductItem';
    title;
    accessibility_title;
    thumbnail;
    price;
    vendor_name;
    from_vendor_text;
    information_button;
    endpoint;
    creator_message;
    creator_name;
    author_photo;
    information_dialog;
    is_verified;
    creator_custom_message;
    constructor(data) {
        super();
        this.title = data.title;
        this.accessibility_title = data.accessibilityTitle;
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.price = data.price;
        this.vendor_name = data.vendorName;
        this.from_vendor_text = data.fromVendorText;
        this.information_button = parseItem(data.informationButton);
        this.endpoint = new NavigationEndpoint(data.onClickCommand);
        this.creator_message = data.creatorMessage;
        this.creator_name = data.creatorName;
        this.author_photo = Thumbnail.fromResponse(data.authorPhoto);
        this.information_dialog = parseItem(data.informationDialog);
        this.is_verified = data.isVerified;
        this.creator_custom_message = new Text$1(data.creatorCustomMessage);
    }
}

class LiveChatRestrictedParticipation extends YTNode {
    static type = 'LiveChatRestrictedParticipation';
    message;
    icon_type;
    constructor(data) {
        super();
        this.message = new Text$1(data.message);
        if (Reflect.has(data, 'icon') && Reflect.has(data.icon, 'iconType')) {
            this.icon_type = data.icon.iconType;
        }
        // TODO: parse onClickCommand
    }
}

class LiveChatAuthorBadge extends MetadataBadge {
    static type = 'LiveChatAuthorBadge';
    custom_thumbnail;
    constructor(data) {
        super(data);
        this.custom_thumbnail = Thumbnail.fromResponse(data.customThumbnail);
    }
}

class LiveChatSponsorshipsHeader extends YTNode {
    static type = 'LiveChatSponsorshipsHeader';
    author_name;
    author_photo;
    author_badges;
    primary_text;
    menu_endpoint;
    context_menu_accessibility_label;
    image;
    constructor(data) {
        super();
        this.author_name = new Text$1(data.authorName);
        this.author_photo = Thumbnail.fromResponse(data.authorPhoto);
        this.author_badges = parseArray(data.authorBadges, LiveChatAuthorBadge);
        this.primary_text = new Text$1(data.primaryText);
        this.menu_endpoint = new NavigationEndpoint(data.contextMenuEndpoint);
        this.context_menu_accessibility_label = data.contextMenuAccessibility.accessibilityData.label;
        this.image = Thumbnail.fromResponse(data.image);
    }
}

class LiveChatSponsorshipsGiftPurchaseAnnouncement extends YTNode {
    static type = 'LiveChatSponsorshipsGiftPurchaseAnnouncement';
    id;
    timestamp_usec;
    author_external_channel_id;
    header;
    constructor(data) {
        super();
        this.id = data.id;
        this.timestamp_usec = data.timestampUsec;
        this.author_external_channel_id = data.authorExternalChannelId;
        this.header = parseItem(data.header, LiveChatSponsorshipsHeader);
    }
}

class LiveChatSponsorshipsGiftRedemptionAnnouncement extends YTNode {
    static type = 'LiveChatSponsorshipsGiftRedemptionAnnouncement';
    id;
    timestamp_usec;
    timestamp_text;
    author;
    message;
    menu_endpoint;
    context_menu_accessibility_label;
    constructor(data) {
        super();
        this.id = data.id;
        this.timestamp_usec = data.timestampUsec;
        this.timestamp_text = new Text$1(data.timestampText);
        this.author = new Author(data.authorName, data.authorBadges, data.authorPhoto, data.authorExternalChannelId);
        this.message = new Text$1(data.message);
        this.menu_endpoint = new NavigationEndpoint(data.contextMenuEndpoint);
        this.context_menu_accessibility_label = data.contextMenuAccessibility.accessibilityData.label;
    }
}

class LiveChatTextMessage extends YTNode {
    static type = 'LiveChatTextMessage';
    id;
    message;
    inline_action_buttons;
    timestamp;
    timestamp_usec;
    timestamp_text;
    author;
    menu_endpoint;
    context_menu_accessibility_label;
    before_content_buttons;
    constructor(data) {
        super();
        this.id = data.id;
        this.message = new Text$1(data.message);
        this.inline_action_buttons = parseArray(data.inlineActionButtons, Button);
        this.timestamp = Math.floor(parseInt(data.timestampUsec) / 1000);
        this.timestamp_usec = data.timestampUsec;
        if (Reflect.has(data, 'timestampText')) {
            this.timestamp_text = new Text$1(data.timestampText).toString();
        }
        this.author = new Author(data.authorName, data.authorBadges, data.authorPhoto, data.authorExternalChannelId);
        if (Reflect.has(data, 'contextMenuEndpoint')) {
            this.menu_endpoint = new NavigationEndpoint(data.contextMenuEndpoint);
        }
        if (Reflect.has(data, 'contextMenuAccessibility') &&
            Reflect.has(data.contextMenuAccessibility, 'accessibilityData') &&
            Reflect.has(data.contextMenuAccessibility.accessibilityData, 'label')) {
            this.context_menu_accessibility_label = data.contextMenuAccessibility.accessibilityData.label;
        }
        this.before_content_buttons = parseArray(data.beforeContentButtons, ButtonView);
    }
}

class LiveChatTickerPaidMessageItem extends YTNode {
    static type = 'LiveChatTickerPaidMessageItem';
    id;
    author;
    amount;
    amount_text_color;
    start_background_color;
    end_background_color;
    duration_sec;
    full_duration_sec;
    show_item;
    show_item_endpoint;
    animation_origin;
    open_engagement_panel_command;
    constructor(data) {
        super();
        this.id = data.id;
        this.author = new Author(data.authorName || data.authorUsername, data.authorBadges, data.authorPhoto, data.authorExternalChannelId);
        if (Reflect.has(data, 'amount')) {
            this.amount = new Text$1(data.amount);
        }
        this.amount_text_color = data.amountTextColor;
        this.start_background_color = data.startBackgroundColor;
        this.end_background_color = data.endBackgroundColor;
        this.duration_sec = data.durationSec;
        this.full_duration_sec = data.fullDurationSec;
        this.show_item = parseItem(data.showItemEndpoint?.showLiveChatItemEndpoint?.renderer);
        this.show_item_endpoint = new NavigationEndpoint(data.showItemEndpoint);
        this.animation_origin = data.animationOrigin;
        this.open_engagement_panel_command = new NavigationEndpoint(data.openEngagementPanelCommand);
    }
}

class LiveChatTickerPaidStickerItem extends YTNode {
    static type = 'LiveChatTickerPaidStickerItem';
    id;
    author_external_channel_id;
    author_photo;
    start_background_color;
    end_background_color;
    duration_sec;
    full_duration_sec;
    show_item;
    show_item_endpoint;
    ticker_thumbnails;
    constructor(data) {
        super();
        this.id = data.id;
        this.author_external_channel_id = data.authorExternalChannelId;
        this.author_photo = Thumbnail.fromResponse(data.authorPhoto);
        this.start_background_color = data.startBackgroundColor;
        this.end_background_color = data.endBackgroundColor;
        this.duration_sec = data.durationSec;
        this.full_duration_sec = data.fullDurationSec;
        this.show_item = parseItem(data.showItemEndpoint?.showLiveChatItemEndpoint?.renderer);
        this.show_item_endpoint = new NavigationEndpoint(data.showItemEndpoint);
        this.ticker_thumbnails = data.tickerThumbnails.map((item) => ({
            thumbnails: Thumbnail.fromResponse(item),
            label: item?.accessibility?.accessibilityData?.label
        }));
    }
}

class LiveChatTickerSponsorItem extends YTNode {
    static type = 'LiveChatTickerSponsorItem';
    id;
    detail;
    author;
    duration_sec;
    constructor(data) {
        super();
        this.id = data.id;
        this.detail = new Text$1(data.detailText);
        this.author = new Author(data.authorName, data.authorBadges, data.sponsorPhoto, data.authorExternalChannelId);
        this.duration_sec = data.durationSec;
        // TODO: Parse remaining props.
    }
}

class LiveChatViewerEngagementMessage extends YTNode {
    static type = 'LiveChatViewerEngagementMessage';
    id;
    timestamp;
    timestamp_usec;
    icon_type;
    message;
    action_button;
    menu_endpoint;
    context_menu_accessibility_label;
    constructor(data) {
        super();
        this.id = data.id;
        if (Reflect.has(data, 'timestampUsec')) {
            this.timestamp = Math.floor(parseInt(data.timestampUsec) / 1000);
            this.timestamp_usec = data.timestampUsec;
        }
        if (Reflect.has(data, 'icon') && Reflect.has(data.icon, 'iconType')) {
            this.icon_type = data.icon.iconType;
        }
        this.message = new Text$1(data.message);
        this.action_button = parseItem(data.actionButton);
        if (Reflect.has(data, 'contextMenuEndpoint')) {
            this.menu_endpoint = new NavigationEndpoint(data.contextMenuEndpoint);
        }
        if (Reflect.has(data, 'contextMenuAccessibility') &&
            Reflect.has(data.contextMenuAccessibility, 'accessibilityData') &&
            Reflect.has(data.contextMenuAccessibility.accessibilityData, 'label')) {
            this.context_menu_accessibility_label = data.contextMenuAccessibility.accessibilityData.label;
        }
    }
}

class PollHeader extends YTNode {
    static type = 'PollHeader';
    poll_question;
    thumbnails;
    metadata;
    live_chat_poll_type;
    context_menu_button;
    constructor(data) {
        super();
        this.poll_question = new Text$1(data.pollQuestion);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.metadata = new Text$1(data.metadataText);
        this.live_chat_poll_type = data.liveChatPollType;
        this.context_menu_button = parseItem(data.contextMenuButton, Button);
    }
}

class LiveChatActionPanel extends YTNode {
    static type = 'LiveChatActionPanel';
    id;
    contents;
    target_id;
    constructor(data) {
        super();
        this.id = data.id;
        this.contents = parse(data.contents);
        this.target_id = data.targetId;
    }
}

class MarkChatItemAsDeletedAction extends YTNode {
    static type = 'MarkChatItemAsDeletedAction';
    deleted_state_message;
    target_item_id;
    constructor(data) {
        super();
        this.deleted_state_message = new Text$1(data.deletedStateMessage);
        this.target_item_id = data.targetItemId;
    }
}

class MarkChatItemsByAuthorAsDeletedAction extends YTNode {
    static type = 'MarkChatItemsByAuthorAsDeletedAction';
    deleted_state_message;
    external_channel_id;
    constructor(data) {
        super();
        this.deleted_state_message = new Text$1(data.deletedStateMessage);
        this.external_channel_id = data.externalChannelId;
    }
}

class RemoveBannerForLiveChatCommand extends YTNode {
    static type = 'RemoveBannerForLiveChatCommand';
    target_action_id;
    constructor(data) {
        super();
        this.target_action_id = data.targetActionId;
    }
}

class RemoveChatItemAction extends YTNode {
    static type = 'RemoveChatItemAction';
    target_item_id;
    constructor(data) {
        super();
        this.target_item_id = data.targetItemId;
    }
}

class RemoveChatItemByAuthorAction extends YTNode {
    static type = 'RemoveChatItemByAuthorAction';
    external_channel_id;
    constructor(data) {
        super();
        this.external_channel_id = data.externalChannelId;
    }
}

class ReplaceChatItemAction extends YTNode {
    static type = 'ReplaceChatItemAction';
    target_item_id;
    replacement_item;
    constructor(data) {
        super();
        this.target_item_id = data.targetItemId;
        this.replacement_item = parseItem(data.replacementItem);
    }
}

class ReplaceLiveChatAction extends YTNode {
    static type = 'ReplaceLiveChatAction';
    to_replace;
    replacement;
    constructor(data) {
        super();
        this.to_replace = data.toReplace;
        this.replacement = parseItem(data.replacement);
    }
}

class ReplayChatItemAction extends YTNode {
    static type = 'ReplayChatItemAction';
    actions;
    video_offset_time_msec;
    constructor(data) {
        super();
        this.actions = parseArray(data.actions?.map((action) => {
            delete action.clickTrackingParams;
            return action;
        }));
        this.video_offset_time_msec = data.videoOffsetTimeMsec;
    }
}

class ShowLiveChatActionPanelAction extends YTNode {
    static type = 'ShowLiveChatActionPanelAction';
    panel_to_show;
    constructor(data) {
        super();
        this.panel_to_show = parseItem(data.panelToShow, LiveChatActionPanel);
    }
}

class ShowLiveChatDialogAction extends YTNode {
    static type = 'ShowLiveChatDialogAction';
    dialog;
    constructor(data) {
        super();
        this.dialog = parseItem(data.dialog);
    }
}

class ShowLiveChatTooltipCommand extends YTNode {
    static type = 'ShowLiveChatTooltipCommand';
    tooltip;
    constructor(data) {
        super();
        this.tooltip = parseItem(data.tooltip);
    }
}

class UpdateDateTextAction extends YTNode {
    static type = 'UpdateDateTextAction';
    date_text;
    constructor(data) {
        super();
        this.date_text = new Text$1(data.dateText).toString();
    }
}

class UpdateDescriptionAction extends YTNode {
    static type = 'UpdateDescriptionAction';
    description;
    constructor(data) {
        super();
        this.description = new Text$1(data.description);
    }
}

class UpdateLiveChatPollAction extends YTNode {
    static type = 'UpdateLiveChatPollAction';
    poll_to_update;
    constructor(data) {
        super();
        this.poll_to_update = parseItem(data.pollToUpdate);
    }
}

class UpdateTitleAction extends YTNode {
    static type = 'UpdateTitleAction';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class UpdateToggleButtonTextAction extends YTNode {
    static type = 'UpdateToggleButtonTextAction';
    default_text;
    toggled_text;
    button_id;
    constructor(data) {
        super();
        this.default_text = new Text$1(data.defaultText).toString();
        this.toggled_text = new Text$1(data.toggledText).toString();
        this.button_id = data.buttonId;
    }
}

class UpdateViewershipAction extends YTNode {
    static type = 'UpdateViewershipAction';
    view_count;
    extra_short_view_count;
    original_view_count;
    unlabeled_view_count_value;
    is_live;
    constructor(data) {
        super();
        const view_count_renderer = data.viewCount.videoViewCountRenderer;
        this.view_count = new Text$1(view_count_renderer.viewCount);
        this.extra_short_view_count = new Text$1(view_count_renderer.extraShortViewCount);
        this.original_view_count = parseInt(view_count_renderer.originalViewCount);
        this.unlabeled_view_count_value = new Text$1(view_count_renderer.unlabeledViewCountValue);
        this.is_live = view_count_renderer.isLive;
    }
}

class LiveChatDialog extends YTNode {
    static type = 'LiveChatDialog';
    confirm_button;
    dialog_messages;
    constructor(data) {
        super();
        this.confirm_button = parseItem(data.confirmButton, Button);
        this.dialog_messages = data.dialogMessages.map((el) => new Text$1(el));
    }
}

class LiveChatHeader extends YTNode {
    static type = 'LiveChatHeader';
    overflow_menu;
    collapse_button;
    view_selector;
    constructor(data) {
        super();
        this.overflow_menu = parseItem(data.overflowMenu, Menu);
        this.collapse_button = parseItem(data.collapseButton, Button);
        this.view_selector = parseItem(data.viewSelector, SortFilterSubMenu);
    }
}

class LiveChatItemList extends YTNode {
    static type = 'LiveChatItemList';
    max_items_to_display;
    more_comments_below_button;
    constructor(data) {
        super();
        this.max_items_to_display = data.maxItemsToDisplay;
        this.more_comments_below_button = parseItem(data.moreCommentsBelowButton, Button);
    }
}

class LiveChatMessageInput extends YTNode {
    static type = 'LiveChatMessageInput';
    author_name;
    author_photo;
    send_button;
    target_id;
    constructor(data) {
        super();
        this.author_name = new Text$1(data.authorName);
        this.author_photo = Thumbnail.fromResponse(data.authorPhoto);
        this.send_button = parseItem(data.sendButton, Button);
        this.target_id = data.targetId;
    }
}

class LiveChatParticipant extends YTNode {
    static type = 'LiveChatParticipant';
    name;
    photo;
    badges;
    constructor(data) {
        super();
        this.name = new Text$1(data.authorName);
        this.photo = Thumbnail.fromResponse(data.authorPhoto);
        this.badges = parseArray(data.authorBadges);
    }
}

class LiveChatParticipantsList extends YTNode {
    static type = 'LiveChatParticipantsList';
    title;
    participants;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.participants = parseArray(data.participants, LiveChatParticipant);
    }
}

class LockupMetadataView extends YTNode {
    static type = 'LockupMetadataView';
    title;
    metadata;
    image;
    menu_button;
    constructor(data) {
        super();
        this.title = Text$1.fromAttributed(data.title);
        this.metadata = parseItem(data.metadata, ContentMetadataView);
        this.image = parseItem(data.image, [DecoratedAvatarView, AvatarStackView]);
        this.menu_button = parseItem(data.menuButton, ButtonView);
    }
}

class LockupView extends YTNode {
    static type = 'LockupView';
    content_image;
    metadata;
    content_id;
    content_type;
    renderer_context;
    constructor(data) {
        super();
        this.content_image = parseItem(data.contentImage, [CollectionThumbnailView, ThumbnailView]);
        this.metadata = parseItem(data.metadata, LockupMetadataView);
        this.content_id = data.contentId;
        this.content_type = data.contentType.replace('LOCKUP_CONTENT_TYPE_', '');
        this.renderer_context = new RendererContext(data.rendererContext);
    }
}

/**
 * Represents a list of markers for a video. Can contain different types of markers:
 * - MARKER_TYPE_HEATMAP: Heat map markers showing audience engagement data
 * - Other marker types may exist but are not currently handled
 */
class MacroMarkersListEntity extends YTNode {
    static type = 'MacroMarkersListEntity';
    marker_entity_key;
    external_video_id;
    /** The type of markers in this entity (e.g., 'MARKER_TYPE_HEATMAP') */
    marker_type;
    markers;
    max_height_dp;
    min_height_dp;
    show_hide_animation_duration_millis;
    timed_marker_decorations;
    // Store raw API data for use in toHeatmap
    raw_api_markers;
    raw_api_decorations;
    constructor(data) {
        super();
        this.marker_entity_key = data.key;
        this.external_video_id = data.externalVideoId;
        this.marker_type = data.markersList?.markerType || '';
        // Store raw API data
        this.raw_api_markers = data.markersList?.markers || [];
        this.raw_api_decorations = data.markersList?.markersDecoration?.timedMarkerDecorations || [];
        // Parse markers array using the updated HeatMarker constructor
        this.markers = observe(this.raw_api_markers.map((marker) => new HeatMarker(marker)));
        // Extract metadata
        const heatmapMetadata = data.markersList?.markersMetadata?.heatmapMetadata;
        this.max_height_dp = heatmapMetadata?.maxHeightDp || 40;
        this.min_height_dp = heatmapMetadata?.minHeightDp || 4;
        this.show_hide_animation_duration_millis =
            heatmapMetadata?.showHideAnimationDurationMillis || 200;
        // Parse timed marker decorations
        // Assuming TimedMarkerDecoration constructor handles raw API decoration objects correctly
        this.timed_marker_decorations = observe(this.raw_api_decorations.map((decoration) => new TimedMarkerDecoration(decoration)));
    }
    /**
    * Checks if this MacroMarkersListEntity represents heatmap data.
    * Only heatmap markers can be converted to Heatmap objects.
    */
    isHeatmap() {
        return this.marker_type === 'MARKER_TYPE_HEATMAP';
    }
    /**
    * Converts this MacroMarkersListEntity to a Heatmap object
    * for compatibility with existing code. Only works for heatmap markers.
    * @returns Heatmap object if this entity contains heatmap data, null otherwise
    */
    toHeatmap() {
        if (!this.isHeatmap()) {
            return null;
        }
        const wrappedHeatMarkers = this.raw_api_markers.map((marker) => ({ HeatMarker: marker }));
        const wrappedDecorations = this.raw_api_decorations.map((decoration) => ({ TimedMarkerDecoration: decoration }));
        const heatmapRawPayload = {
            maxHeightDp: this.max_height_dp,
            minHeightDp: this.min_height_dp,
            showHideAnimationDurationMillis: this.show_hide_animation_duration_millis,
            heatMarkers: wrappedHeatMarkers,
            heatMarkersDecorations: wrappedDecorations
        };
        return parseItem({ Heatmap: heatmapRawPayload }, Heatmap);
    }
}

class MenuNavigationItem extends Button {
    static type = 'MenuNavigationItem';
    constructor(data) {
        super(data);
    }
}

class MenuPopup extends YTNode {
    static type = 'MenuPopup';
    items;
    constructor(data) {
        super();
        this.items = parseArray(data.items, [MenuNavigationItem, MenuServiceItem]);
    }
}

class Notification extends YTNode {
    static type = 'Notification';
    thumbnails;
    video_thumbnails;
    short_message;
    sent_time;
    notification_id;
    endpoint;
    record_click_endpoint;
    menu;
    read;
    constructor(data) {
        super();
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.video_thumbnails = Thumbnail.fromResponse(data.videoThumbnail);
        this.short_message = new Text$1(data.shortMessage);
        this.sent_time = new Text$1(data.sentTimeText);
        this.notification_id = data.notificationId;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.record_click_endpoint = new NavigationEndpoint(data.recordClickEndpoint);
        this.menu = parseItem(data.contextualMenu);
        this.read = data.read;
    }
}

class MultiPageMenuNotificationSection extends YTNode {
    static type = 'MultiPageMenuNotificationSection';
    notification_section_title;
    items;
    constructor(data) {
        super();
        if ('notificationSectionTitle' in data) {
            this.notification_section_title = new Text$1(data.notificationSectionTitle);
        }
        this.items = parseArray(data.items, [Notification, Message, ContinuationItem]);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class MusicMenuItemDivider extends YTNode {
    static type = 'MusicMenuItemDivider';
    // eslint-disable-next-line
    constructor(_data) {
        super();
        // XXX: Should check if this ever has any data.
    }
}

class MusicMultiSelectMenuItem extends YTNode {
    static type = 'MusicMultiSelectMenuItem';
    title;
    form_item_entity_key;
    selected_icon_type;
    endpoint;
    selected;
    constructor(data) {
        super();
        this.title = new Text$1(data.title).toString();
        this.form_item_entity_key = data.formItemEntityKey;
        if (Reflect.has(data, 'selectedIcon')) {
            this.selected_icon_type = data.selectedIcon.iconType;
        }
        // @TODO: Check if there any other endpoints we can parse.
        if (Reflect.has(data, 'selectedCommand')) {
            this.endpoint = new NavigationEndpoint(data.selectedCommand);
        }
        this.selected = !!this.endpoint;
    }
}

class MusicMultiSelectMenu extends YTNode {
    static type = 'MusicMultiSelectMenu';
    title;
    options;
    constructor(data) {
        super();
        if (Reflect.has(data, 'title') && Reflect.has(data.title, 'musicMenuTitleRenderer')) {
            this.title = new Text$1(data.title.musicMenuTitleRenderer?.primaryText);
        }
        this.options = parseArray(data.options, [MusicMultiSelectMenuItem, MusicMenuItemDivider]);
    }
}

class SimpleMenuHeader extends YTNode {
    static type = 'SimpleMenuHeader';
    title;
    buttons;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.buttons = parseArray(data.buttons, Button);
    }
}

class MerchandiseItem extends YTNode {
    static type = 'MerchandiseItem';
    title;
    description;
    thumbnails;
    price;
    vendor_name;
    button_text;
    button_accessibility_text;
    from_vendor_text;
    additional_fees_text;
    region_format;
    endpoint;
    constructor(data) {
        super();
        this.title = data.title;
        this.description = data.description;
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.price = data.price;
        this.vendor_name = data.vendorName;
        this.button_text = data.buttonText;
        this.button_accessibility_text = data.buttonAccessibilityText;
        this.from_vendor_text = data.fromVendorText;
        this.additional_fees_text = data.additionalFeesText;
        this.region_format = data.regionFormat;
        this.endpoint = new NavigationEndpoint(data.buttonCommand);
    }
}

class MerchandiseShelf extends YTNode {
    static type = 'MerchandiseShelf';
    title;
    menu;
    items;
    constructor(data) {
        super();
        this.title = data.title;
        this.menu = parseItem(data.actionButton);
        this.items = parseArray(data.items);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class MetadataRow extends YTNode {
    static type = 'MetadataRow';
    title;
    contents;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.contents = data.contents.map((content) => new Text$1(content));
    }
}

class MetadataRowContainer extends YTNode {
    static type = 'MetadataRowContainer';
    rows;
    collapsed_item_count;
    constructor(data) {
        super();
        this.rows = parseArray(data.rows);
        this.collapsed_item_count = data.collapsedItemCount;
    }
}

class MetadataRowHeader extends YTNode {
    static type = 'MetadataRowHeader';
    content;
    has_divider_line;
    constructor(data) {
        super();
        this.content = new Text$1(data.content);
        this.has_divider_line = data.hasDividerLine;
    }
}

class MetadataScreen extends YTNode {
    static type = 'MetadataScreen';
    section_list;
    constructor(data) {
        super();
        this.section_list = parseItem(data);
    }
}

class MicroformatData extends YTNode {
    static type = 'MicroformatData';
    url_canonical;
    title;
    description;
    thumbnail;
    site_name;
    app_name;
    android_package;
    ios_app_store_id;
    ios_app_arguments;
    og_type;
    url_applinks_web;
    url_applinks_ios;
    url_applinks_android;
    url_twitter_ios;
    url_twitter_android;
    twitter_card_type;
    twitter_site_handle;
    schema_dot_org_type;
    noindex;
    is_unlisted;
    is_family_safe;
    tags;
    available_countries;
    constructor(data) {
        super();
        this.url_canonical = data.urlCanonical;
        this.title = data.title;
        this.description = data.description;
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.site_name = data.siteName;
        this.app_name = data.appName;
        this.android_package = data.androidPackage;
        this.ios_app_store_id = data.iosAppStoreId;
        this.ios_app_arguments = data.iosAppArguments;
        this.og_type = data.ogType;
        this.url_applinks_web = data.urlApplinksWeb;
        this.url_applinks_ios = data.urlApplinksIos;
        this.url_applinks_android = data.urlApplinksAndroid;
        this.url_twitter_ios = data.urlTwitterIos;
        this.url_twitter_android = data.urlTwitterAndroid;
        this.twitter_card_type = data.twitterCardType;
        this.twitter_site_handle = data.twitterSiteHandle;
        this.schema_dot_org_type = data.schemaDotOrgType;
        this.noindex = data.noindex;
        this.is_unlisted = data.unlisted;
        this.is_family_safe = data.familySafe;
        this.tags = data.tags;
        this.available_countries = data.availableCountries;
        // XXX: linkAlternatives?
    }
}

class Mix extends Playlist {
    static type = 'Mix';
    constructor(data) {
        super(data);
    }
}

class ModalWithTitleAndButton extends YTNode {
    static type = 'ModalWithTitleAndButton';
    title;
    content;
    button;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.content = new Text$1(data.content);
        this.button = parseItem(data.button, Button);
    }
}

class Movie extends YTNode {
    static type = 'Movie';
    id;
    title;
    description_snippet;
    top_metadata_items;
    thumbnails;
    thumbnail_overlays;
    author;
    duration;
    endpoint;
    badges;
    use_vertical_poster;
    show_action_menu;
    menu;
    constructor(data) {
        super();
        const overlay_time_status = data.thumbnailOverlays
            .find((overlay) => overlay.thumbnailOverlayTimeStatusRenderer)
            ?.thumbnailOverlayTimeStatusRenderer.text || 'N/A';
        this.id = data.videoId;
        this.title = new Text$1(data.title);
        if (Reflect.has(data, 'descriptionSnippet')) {
            this.description_snippet = new Text$1(data.descriptionSnippet);
        }
        this.top_metadata_items = new Text$1(data.topMetadataItems);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        this.author = new Author(data.longBylineText, data.ownerBadges, data.channelThumbnailSupportedRenderers?.channelThumbnailWithLinkRenderer?.thumbnail);
        this.duration = {
            text: data.lengthText ? new Text$1(data.lengthText).toString() : new Text$1(overlay_time_status).toString(),
            seconds: timeToSeconds(data.lengthText ? new Text$1(data.lengthText).toString() : new Text$1(overlay_time_status).toString())
        };
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.badges = parseArray(data.badges);
        this.use_vertical_poster = data.useVerticalPoster;
        this.show_action_menu = data.showActionMenu;
        this.menu = parseItem(data.menu, Menu);
    }
}

class MovingThumbnail extends YTNode {
    static type = 'MovingThumbnail';
    constructor(data) {
        super();
        return data.movingThumbnailDetails?.thumbnails.map((thumbnail) => new Thumbnail(thumbnail)).sort((a, b) => b.width - a.width);
    }
}

class MusicCardShelfHeaderBasic extends YTNode {
    static type = 'MusicCardShelfHeaderBasic';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class MusicInlineBadge extends YTNode {
    static type = 'MusicInlineBadge';
    icon_type;
    accessibility;
    constructor(data) {
        super();
        this.icon_type = data.icon.iconType;
        if ('accessibilityData' in data
            && 'accessibilityData' in data.accessibilityData) {
            this.accessibility = {
                accessibility_data: new AccessibilityData(data.accessibilityData.accessibilityData)
            };
        }
    }
    get label() {
        return this.accessibility?.accessibility_data?.label;
    }
}

class MusicPlayButton extends YTNode {
    static type = 'MusicPlayButton';
    endpoint;
    play_icon_type;
    pause_icon_type;
    icon_color;
    accessibility_play_data;
    accessibility_pause_data;
    constructor(data) {
        super();
        this.endpoint = new NavigationEndpoint(data.playNavigationEndpoint);
        this.play_icon_type = data.playIcon.iconType;
        this.pause_icon_type = data.pauseIcon.iconType;
        if ('accessibilityPlayData' in data
            && 'accessibilityData' in data.accessibilityPlayData) {
            this.accessibility_play_data = {
                accessibility_data: new AccessibilityData(data.accessibilityPlayData.accessibilityData)
            };
        }
        if ('accessibilityPauseData' in data
            && 'accessibilityData' in data.accessibilityPauseData) {
            this.accessibility_pause_data = {
                accessibility_data: new AccessibilityData(data.accessibilityPauseData.accessibilityData)
            };
        }
        this.icon_color = data.iconColor;
    }
    get play_label() {
        return this.accessibility_play_data?.accessibility_data?.label;
    }
    get pause_label() {
        return this.accessibility_pause_data?.accessibility_data?.label;
    }
}

class MusicItemThumbnailOverlay extends YTNode {
    static type = 'MusicItemThumbnailOverlay';
    content;
    content_position;
    display_style;
    constructor(data) {
        super();
        this.content = parseItem(data.content, MusicPlayButton);
        this.content_position = data.contentPosition;
        this.display_style = data.displayStyle;
    }
}

class MusicThumbnail extends YTNode {
    static type = 'MusicThumbnail';
    contents;
    constructor(data) {
        super();
        this.contents = Thumbnail.fromResponse(data.thumbnail);
    }
}

class MusicCardShelf extends YTNode {
    static type = 'MusicCardShelf';
    thumbnail;
    title;
    subtitle;
    buttons;
    menu;
    on_tap;
    header;
    end_icon_type;
    subtitle_badges;
    thumbnail_overlay;
    contents;
    constructor(data) {
        super();
        this.thumbnail = parseItem(data.thumbnail, MusicThumbnail);
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
        this.buttons = parseArray(data.buttons, Button);
        this.menu = parseItem(data.menu, Menu);
        this.on_tap = new NavigationEndpoint(data.onTap);
        this.header = parseItem(data.header, MusicCardShelfHeaderBasic);
        if (Reflect.has(data, 'endIcon') && Reflect.has(data.endIcon, 'iconType')) {
            this.end_icon_type = data.endIcon.iconType;
        }
        this.subtitle_badges = parseArray(data.subtitleBadges, MusicInlineBadge);
        this.thumbnail_overlay = parseItem(data.thumbnailOverlay, MusicItemThumbnailOverlay);
        if (Reflect.has(data, 'contents')) {
            this.contents = parseArray(data.contents);
        }
    }
}

class MusicCarouselShelfBasicHeader extends YTNode {
    static type = 'MusicCarouselShelfBasicHeader';
    title;
    strapline;
    thumbnail;
    more_content;
    end_icons;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        if (Reflect.has(data, 'strapline')) {
            this.strapline = new Text$1(data.strapline);
        }
        if (Reflect.has(data, 'thumbnail')) {
            this.thumbnail = parseItem(data.thumbnail, MusicThumbnail);
        }
        if (Reflect.has(data, 'moreContentButton')) {
            this.more_content = parseItem(data.moreContentButton, Button);
        }
        if (Reflect.has(data, 'endIcons')) {
            this.end_icons = parseArray(data.endIcons, IconLink);
        }
    }
}

class MusicMultiRowListItem extends YTNode {
    static type = 'MusicMultiRowListItem';
    thumbnail;
    overlay;
    on_tap;
    menu;
    subtitle;
    title;
    second_title;
    description;
    display_style;
    constructor(data) {
        super();
        this.thumbnail = parseItem(data.thumbnail, MusicThumbnail);
        this.overlay = parseItem(data.overlay, MusicItemThumbnailOverlay);
        this.on_tap = new NavigationEndpoint(data.onTap);
        this.menu = parseItem(data.menu, Menu);
        this.subtitle = new Text$1(data.subtitle);
        this.title = new Text$1(data.title);
        if (Reflect.has(data, 'secondTitle')) {
            this.second_title = new Text$1(data.secondTitle);
        }
        if (Reflect.has(data, 'description')) {
            this.description = new Text$1(data.description);
        }
        if (Reflect.has(data, 'displayStyle')) {
            this.display_style = data.displayStyle;
        }
    }
}

class MusicNavigationButton extends YTNode {
    static type = 'MusicNavigationButton';
    button_text;
    endpoint;
    constructor(data) {
        super();
        this.button_text = new Text$1(data.buttonText).toString();
        this.endpoint = new NavigationEndpoint(data.clickCommand);
    }
}

class MusicResponsiveListItemFixedColumn extends YTNode {
    static type = 'musicResponsiveListItemFlexColumnRenderer';
    title;
    display_priority;
    constructor(data) {
        super();
        this.title = new Text$1(data.text);
        this.display_priority = data.displayPriority;
    }
}

class MusicResponsiveListItemFlexColumn extends YTNode {
    static type = 'MusicResponsiveListItemFlexColumn';
    title;
    display_priority;
    constructor(data) {
        super();
        this.title = new Text$1(data.text);
        this.display_priority = data.displayPriority;
    }
}

// TODO: Clean up and refactor this.
class MusicResponsiveListItem extends YTNode {
    static type = 'MusicResponsiveListItem';
    flex_columns;
    fixed_columns;
    endpoint;
    item_type;
    index;
    thumbnail;
    badges;
    menu;
    overlay;
    id;
    title;
    duration;
    album;
    artists;
    views;
    authors;
    name;
    subtitle;
    subscribers;
    song_count;
    // TODO: these might be replaceable with Author class
    author;
    item_count;
    year;
    constructor(data) {
        super();
        this.flex_columns = parseArray(data.flexColumns, MusicResponsiveListItemFlexColumn);
        this.fixed_columns = parseArray(data.fixedColumns, MusicResponsiveListItemFixedColumn);
        const playlist_item_data = {
            video_id: data?.playlistItemData?.videoId || null,
            playlist_set_video_id: data?.playlistItemData?.playlistSetVideoId || null
        };
        if (Reflect.has(data, 'navigationEndpoint')) {
            this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        }
        let page_type = this.endpoint?.payload?.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType;
        if (!page_type) {
            const is_non_music_track = this.flex_columns.find((col) => col.title.endpoint?.payload?.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType === 'MUSIC_PAGE_TYPE_NON_MUSIC_AUDIO_TRACK_PAGE');
            if (is_non_music_track) {
                page_type = 'MUSIC_PAGE_TYPE_NON_MUSIC_AUDIO_TRACK_PAGE';
            }
        }
        switch (page_type) {
            case 'MUSIC_PAGE_TYPE_ALBUM':
                this.item_type = 'album';
                this.#parseAlbum();
                break;
            case 'MUSIC_PAGE_TYPE_PLAYLIST':
                this.item_type = 'playlist';
                this.#parsePlaylist();
                break;
            case 'MUSIC_PAGE_TYPE_ARTIST':
            case 'MUSIC_PAGE_TYPE_USER_CHANNEL':
                this.item_type = 'artist';
                this.#parseArtist();
                break;
            case 'MUSIC_PAGE_TYPE_LIBRARY_ARTIST':
                this.item_type = 'library_artist';
                this.#parseLibraryArtist();
                break;
            case 'MUSIC_PAGE_TYPE_NON_MUSIC_AUDIO_TRACK_PAGE':
                this.item_type = 'non_music_track';
                this.#parseNonMusicTrack(playlist_item_data);
                break;
            case 'MUSIC_PAGE_TYPE_PODCAST_SHOW_DETAIL_PAGE':
                this.item_type = 'podcast_show';
                this.#parsePodcastShow();
                break;
            default:
                if (this.flex_columns[1]) {
                    this.#parseVideoOrSong(playlist_item_data);
                }
                else {
                    this.#parseOther();
                }
        }
        if (Reflect.has(data, 'index')) {
            this.index = new Text$1(data.index);
        }
        if (Reflect.has(data, 'thumbnail')) {
            this.thumbnail = parseItem(data.thumbnail, MusicThumbnail);
        }
        if (Reflect.has(data, 'badges')) {
            this.badges = parseArray(data.badges);
        }
        if (Reflect.has(data, 'menu')) {
            this.menu = parseItem(data.menu, Menu);
        }
        if (Reflect.has(data, 'overlay')) {
            this.overlay = parseItem(data.overlay, MusicItemThumbnailOverlay);
        }
    }
    #parseOther() {
        this.title = this.flex_columns[0].title.toString();
        if (this.endpoint) {
            this.item_type = 'endpoint';
        }
        else {
            this.item_type = 'unknown';
        }
    }
    #parseVideoOrSong(playlist_item_data) {
        const music_video_type = this.flex_columns.at(0)?.title.runs?.at(0)?.endpoint?.payload?.watchEndpointMusicSupportedConfigs?.watchEndpointMusicConfig?.musicVideoType;
        switch (music_video_type) {
            case 'MUSIC_VIDEO_TYPE_UGC':
            case 'MUSIC_VIDEO_TYPE_OMV':
                this.item_type = 'video';
                this.#parseVideo(playlist_item_data);
                break;
            case 'MUSIC_VIDEO_TYPE_ATV':
                this.item_type = 'song';
                this.#parseSong(playlist_item_data);
                break;
            default:
                this.#parseOther();
        }
    }
    #parseSong(playlist_item_data) {
        this.id = playlist_item_data.video_id || this.endpoint?.payload?.videoId;
        this.title = this.flex_columns[0].title.toString();
        const duration_text = this.flex_columns.at(1)?.title.runs?.find((run) => (/^\d+$/).test(run.text.replace(/:/g, '')))?.text || this.fixed_columns[0]?.title?.toString();
        if (duration_text) {
            this.duration = {
                text: duration_text,
                seconds: timeToSeconds(duration_text)
            };
        }
        const album_run = this.flex_columns.at(1)?.title.runs?.find((run) => (isTextRun(run) && run.endpoint) &&
            run.endpoint.payload.browseId.startsWith('MPR')) ||
            this.flex_columns.at(2)?.title.runs?.find((run) => (isTextRun(run) && run.endpoint) &&
                run.endpoint.payload.browseId.startsWith('MPR'));
        if (album_run && isTextRun(album_run)) {
            this.album = {
                id: album_run.endpoint?.payload?.browseId,
                name: album_run.text,
                endpoint: album_run.endpoint
            };
        }
        const artist_runs = this.flex_columns.at(1)?.title.runs?.filter((run) => (isTextRun(run) && run.endpoint) && run.endpoint.payload.browseId.startsWith('UC'));
        if (artist_runs) {
            this.artists = artist_runs.map((run) => ({
                name: run.text,
                channel_id: isTextRun(run) ? run.endpoint?.payload?.browseId : undefined,
                endpoint: isTextRun(run) ? run.endpoint : undefined
            }));
        }
    }
    #parseVideo(playlist_item_data) {
        this.id = playlist_item_data.video_id;
        this.title = this.flex_columns[0].title.toString();
        this.views = this.flex_columns.at(1)?.title.runs?.find((run) => run.text.match(/(.*?) views/))?.toString();
        const author_runs = this.flex_columns.at(1)?.title.runs?.filter((run) => (isTextRun(run) && run.endpoint) &&
            run.endpoint.payload.browseId.startsWith('UC'));
        if (author_runs) {
            this.authors = author_runs.map((run) => {
                return {
                    name: run.text,
                    channel_id: isTextRun(run) ? run.endpoint?.payload?.browseId : undefined,
                    endpoint: isTextRun(run) ? run.endpoint : undefined
                };
            });
        }
        const duration_text = this.flex_columns[1].title.runs?.find((run) => (/^\d+$/).test(run.text.replace(/:/g, '')))?.text || this.fixed_columns[0]?.title.runs?.find((run) => (/^\d+$/).test(run.text.replace(/:/g, '')))?.text;
        if (duration_text) {
            this.duration = {
                text: duration_text,
                seconds: timeToSeconds(duration_text)
            };
        }
    }
    #parseArtist() {
        this.id = this.endpoint?.payload?.browseId;
        this.name = this.flex_columns[0].title.toString();
        this.subtitle = this.flex_columns.at(1)?.title;
        this.subscribers = this.subtitle?.runs?.find((run) => (/^(\d*\.)?\d+[M|K]? subscribers?$/i).test(run.text))?.text || '';
    }
    #parseLibraryArtist() {
        this.name = this.flex_columns[0].title.toString();
        this.subtitle = this.flex_columns.at(1)?.title;
        this.song_count = this.subtitle?.runs?.find((run) => (/^\d+(,\d+)? songs?$/i).test(run.text))?.text || '';
    }
    #parseNonMusicTrack(playlist_item_data) {
        this.id = playlist_item_data.video_id || this.endpoint?.payload?.videoId;
        this.title = this.flex_columns[0].title.toString();
    }
    #parsePodcastShow() {
        this.id = this.endpoint?.payload?.browseId;
        this.title = this.flex_columns[0].title.toString();
    }
    #parseAlbum() {
        this.id = this.endpoint?.payload?.browseId;
        this.title = this.flex_columns[0].title.toString();
        const author_run = this.flex_columns.at(1)?.title.runs?.find((run) => (isTextRun(run) && run.endpoint) &&
            run.endpoint.payload.browseId.startsWith('UC'));
        if (author_run && isTextRun(author_run)) {
            this.author = {
                name: author_run.text,
                channel_id: author_run.endpoint?.payload?.browseId,
                endpoint: author_run.endpoint
            };
        }
        this.year = this.flex_columns.at(1)?.title.runs?.find((run) => (/^[12][0-9]{3}$/).test(run.text))?.text;
    }
    #parsePlaylist() {
        this.id = this.endpoint?.payload?.browseId;
        this.title = this.flex_columns[0].title.toString();
        const item_count_run = this.flex_columns.at(1)?.title
            .runs?.find((run) => run.text.match(/\d+ (song|songs)/));
        this.item_count = item_count_run ? item_count_run.text : undefined;
        const author_run = this.flex_columns.at(1)?.title.runs?.find((run) => (isTextRun(run) && run.endpoint) &&
            run.endpoint.payload.browseId.startsWith('UC'));
        if (author_run && isTextRun(author_run)) {
            this.author = {
                name: author_run.text,
                channel_id: author_run.endpoint?.payload?.browseId,
                endpoint: author_run.endpoint
            };
        }
    }
    get thumbnails() {
        return this.thumbnail?.contents || [];
    }
}

// TODO: Refactor this.
class MusicTwoRowItem extends YTNode {
    static type = 'MusicTwoRowItem';
    title;
    endpoint;
    id;
    subtitle;
    badges;
    item_type;
    subscribers;
    item_count;
    year;
    views;
    artists;
    author;
    thumbnail;
    thumbnail_overlay;
    menu;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.id =
            this.endpoint?.payload?.browseId ||
                this.endpoint?.payload?.videoId;
        this.subtitle = new Text$1(data.subtitle);
        this.badges = parse(data.subtitleBadges);
        const page_type = this.endpoint?.payload?.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType;
        switch (page_type) {
            case 'MUSIC_PAGE_TYPE_ARTIST':
                this.item_type = 'artist';
                break;
            case 'MUSIC_PAGE_TYPE_PLAYLIST':
                this.item_type = 'playlist';
                break;
            case 'MUSIC_PAGE_TYPE_ALBUM':
                this.item_type = 'album';
                break;
            default:
                if (this.endpoint?.metadata?.api_url === '/next') {
                    this.item_type = 'endpoint';
                }
                else if (this.subtitle.runs?.[0]) {
                    if (this.subtitle.runs[0].text !== 'Song') {
                        this.item_type = 'video';
                    }
                    else {
                        this.item_type = 'song';
                    }
                }
                else if (this.endpoint) {
                    this.item_type = 'endpoint';
                }
                else {
                    this.item_type = 'unknown';
                }
                break;
        }
        if (this.item_type == 'artist') {
            this.subscribers = this.subtitle.runs?.find((run) => (/^(\d*\.)?\d+[M|K]? subscribers?$/i).test(run.text))?.text || '';
        }
        else if (this.item_type == 'playlist') {
            const item_count_run = this.subtitle.runs?.find((run) => run.text.match(/\d+ songs|song/));
            this.item_count = item_count_run ? item_count_run.text : null;
        }
        else if (this.item_type == 'album') {
            const artists = this.subtitle.runs?.filter((run) => run.endpoint?.payload?.browseId.startsWith('UC'));
            if (artists) {
                this.artists = artists.map((artist) => ({
                    name: artist.text,
                    channel_id: artist.endpoint?.payload?.browseId,
                    endpoint: artist.endpoint
                }));
            }
            this.year = this.subtitle.runs?.slice(-1)[0].text;
            if (isNaN(Number(this.year)))
                delete this.year;
        }
        else if (this.item_type == 'video') {
            this.views = this?.subtitle.runs?.find((run) => run?.text.match(/(.*?) views/))?.text || 'N/A';
            const author = this.subtitle.runs?.find((run) => run.endpoint?.payload?.browseId?.startsWith('UC'));
            if (author) {
                this.author = {
                    name: author?.text,
                    channel_id: author?.endpoint?.payload?.browseId,
                    endpoint: author?.endpoint
                };
            }
        }
        else if (this.item_type == 'song') {
            const artists = this.subtitle.runs?.filter((run) => run.endpoint?.payload?.browseId.startsWith('UC'));
            if (artists) {
                this.artists = artists.map((artist) => ({
                    name: artist?.text,
                    channel_id: artist?.endpoint?.payload?.browseId,
                    endpoint: artist?.endpoint
                }));
            }
        }
        this.thumbnail = Thumbnail.fromResponse(data.thumbnailRenderer.musicThumbnailRenderer.thumbnail);
        this.thumbnail_overlay = parseItem(data.thumbnailOverlay, MusicItemThumbnailOverlay);
        this.menu = parseItem(data.menu, Menu);
    }
}

class MusicCarouselShelf extends YTNode {
    static type = 'MusicCarouselShelf';
    header;
    contents;
    num_items_per_column;
    constructor(data) {
        super();
        this.header = parseItem(data.header, MusicCarouselShelfBasicHeader);
        this.contents = parseArray(data.contents, [MusicTwoRowItem, MusicResponsiveListItem, MusicMultiRowListItem, MusicNavigationButton]);
        if (Reflect.has(data, 'numItemsPerColumn')) {
            this.num_items_per_column = parseInt(data.numItemsPerColumn);
        }
    }
}

class MusicDescriptionShelf extends YTNode {
    static type = 'MusicDescriptionShelf';
    description;
    max_collapsed_lines;
    max_expanded_lines;
    footer;
    constructor(data) {
        super();
        this.description = new Text$1(data.description);
        if (Reflect.has(data, 'maxCollapsedLines')) {
            this.max_collapsed_lines = data.maxCollapsedLines;
        }
        if (Reflect.has(data, 'maxExpandedLines')) {
            this.max_expanded_lines = data.maxExpandedLines;
        }
        this.footer = new Text$1(data.footer);
    }
}

class MusicDetailHeader extends YTNode {
    static type = 'MusicDetailHeader';
    title;
    description;
    subtitle;
    second_subtitle;
    year;
    song_count;
    total_duration;
    thumbnails;
    badges;
    author;
    menu;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.description = new Text$1(data.description);
        this.subtitle = new Text$1(data.subtitle);
        this.second_subtitle = new Text$1(data.secondSubtitle);
        this.year = this.subtitle.runs?.find((run) => (/^[12][0-9]{3}$/).test(run.text))?.text || '';
        this.song_count = this.second_subtitle.runs?.[0]?.text || '';
        this.total_duration = this.second_subtitle.runs?.[2]?.text || '';
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail.croppedSquareThumbnailRenderer.thumbnail);
        this.badges = parseArray(data.subtitleBadges);
        const author = this.subtitle.runs?.find((run) => run?.endpoint?.payload?.browseId.startsWith('UC'));
        if (author) {
            this.author = {
                name: author.text,
                channel_id: author.endpoint?.payload?.browseId,
                endpoint: author.endpoint
            };
        }
        this.menu = parseItem(data.menu);
    }
}

class MusicDownloadStateBadge extends YTNode {
    static type = 'MusicDownloadStateBadge';
    playlist_id;
    supported_download_states;
    constructor(data) {
        super();
        this.playlist_id = data.playlistId;
        this.supported_download_states = data.supportedDownloadStates;
    }
}

class MusicEditablePlaylistDetailHeader extends YTNode {
    static type = 'MusicEditablePlaylistDetailHeader';
    header;
    edit_header;
    playlist_id;
    constructor(data) {
        super();
        this.header = parseItem(data.header);
        this.edit_header = parseItem(data.editHeader);
        this.playlist_id = data.playlistId;
    }
}

class MusicElementHeader extends YTNode {
    static type = 'MusicElementHeader';
    element;
    constructor(data) {
        super();
        this.element = Reflect.has(data, 'elementRenderer') ? parseItem(data, Element) : null;
    }
}

class MusicHeader extends YTNode {
    static type = 'MusicHeader';
    header;
    title;
    constructor(data) {
        super();
        if (Reflect.has(data, 'header')) {
            this.header = parseItem(data.header);
        }
        if (Reflect.has(data, 'title')) {
            this.title = new Text$1(data.title);
        }
    }
}

class MusicImmersiveHeader extends YTNode {
    static type = 'MusicImmersiveHeader';
    title;
    menu;
    more_button;
    play_button;
    share_endpoint;
    start_radio_button;
    subscription_button;
    description;
    thumbnail;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.menu = parseItem(data.menu, Menu);
        this.more_button = parseItem(data.moreButton, ToggleButton);
        this.play_button = parseItem(data.playButton, Button);
        if ('shareEndpoint' in data)
            this.share_endpoint = new NavigationEndpoint(data.shareEndpoint);
        this.start_radio_button = parseItem(data.startRadioButton, Button);
        this.subscription_button = parseItem(data.subscriptionButton, SubscribeButton);
        this.description = new Text$1(data.description);
        this.thumbnail = parseItem(data.thumbnail, MusicThumbnail);
    }
}

class ActionButton {
    static type = 'ActionButton';
    icon_name;
    endpoint;
    a11y_text;
    style;
    constructor(data) {
        this.icon_name = data.iconName;
        this.endpoint = new NavigationEndpoint(data.onTap);
        this.a11y_text = data.a11yText;
        this.style = data.style;
    }
}
class Panel {
    static type = 'Panel';
    image;
    content_mode;
    crop_options;
    image_aspect_ratio;
    caption;
    action_buttons;
    constructor(data) {
        this.image = Thumbnail.fromResponse(data.image.image);
        this.content_mode = data.image.contentMode;
        this.crop_options = data.image.cropOptions;
        this.image_aspect_ratio = data.imageAspectRatio;
        this.caption = data.caption;
        this.action_buttons = data.actionButtons.map((el) => new ActionButton(el));
    }
}
class MusicLargeCardItemCarousel extends YTNode {
    static type = 'MusicLargeCardItemCarousel';
    panels;
    header;
    constructor(data) {
        super();
        // TODO: check this
        this.header = data.shelf.header;
        this.panels = data.shelf.panels.map((el) => new Panel(el));
    }
}

class MusicPlaylistEditHeader extends YTNode {
    static type = 'MusicPlaylistEditHeader';
    title;
    edit_title;
    edit_description;
    privacy;
    playlist_id;
    endpoint;
    privacy_dropdown;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.edit_title = new Text$1(data.editTitle);
        this.edit_description = new Text$1(data.editDescription);
        this.privacy = data.privacy;
        this.playlist_id = data.playlistId;
        this.endpoint = new NavigationEndpoint(data.collaborationSettingsCommand);
        this.privacy_dropdown = parseItem(data.privacyDropdown, Dropdown);
    }
}

class MusicPlaylistShelf extends YTNode {
    static type = 'MusicPlaylistShelf';
    playlist_id;
    contents;
    collapsed_item_count;
    continuation;
    constructor(data) {
        super();
        this.playlist_id = data.playlistId;
        this.contents = parseArray(data.contents, [MusicResponsiveListItem, ContinuationItem]);
        this.collapsed_item_count = data.collapsedItemCount;
        this.continuation = data.continuations?.[0]?.nextContinuationData?.continuation || null;
    }
}

class PlaylistPanelVideo extends YTNode {
    static type = 'PlaylistPanelVideo';
    title;
    thumbnail;
    endpoint;
    selected;
    video_id;
    duration;
    author;
    album;
    artists;
    badges;
    menu;
    set_video_id;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.selected = data.selected;
        this.video_id = data.videoId;
        this.duration = {
            text: new Text$1(data.lengthText).toString(),
            seconds: timeToSeconds(new Text$1(data.lengthText).toString())
        };
        const album = new Text$1(data.longBylineText).runs?.find((run) => run.endpoint?.payload?.browseId?.startsWith('MPR'));
        const artists = new Text$1(data.longBylineText).runs?.filter((run) => run.endpoint?.payload?.browseId?.startsWith('UC'));
        this.author = new Text$1(data.shortBylineText).toString();
        if (album) {
            this.album = {
                id: album.endpoint?.payload?.browseId,
                name: album.text,
                year: new Text$1(data.longBylineText).runs?.slice(-1)[0].text,
                endpoint: album.endpoint
            };
        }
        if (artists) {
            this.artists = artists.map((artist) => ({
                name: artist.text,
                channel_id: artist.endpoint?.payload?.browseId,
                endpoint: artist.endpoint
            }));
        }
        this.badges = parseArray(data.badges);
        this.menu = parseItem(data.menu);
        this.set_video_id = data.playlistSetVideoId;
    }
}

class PlaylistPanelVideoWrapper extends YTNode {
    static type = 'PlaylistPanelVideoWrapper';
    primary;
    counterpart;
    constructor(data) {
        super();
        this.primary = parseItem(data.primaryRenderer, PlaylistPanelVideo);
        if (Reflect.has(data, 'counterpart')) {
            this.counterpart = observe(data.counterpart.map((item) => parseItem(item.counterpartRenderer, PlaylistPanelVideo)) || []);
        }
    }
}

class PlaylistPanel extends YTNode {
    static type = 'PlaylistPanel';
    title;
    title_text;
    contents;
    playlist_id;
    is_infinite;
    continuation;
    is_editable;
    preview_description;
    num_items_to_show;
    constructor(data) {
        super();
        this.title = data.title;
        this.title_text = new Text$1(data.titleText);
        this.contents = parseArray(data.contents, [PlaylistPanelVideoWrapper, PlaylistPanelVideo, AutomixPreviewVideo]);
        this.playlist_id = data.playlistId;
        this.is_infinite = data.isInfinite;
        this.continuation = data.continuations?.[0]?.nextRadioContinuationData?.continuation || data.continuations?.[0]?.nextContinuationData?.continuation;
        this.is_editable = data.isEditable;
        this.preview_description = data.previewDescription;
        this.num_items_to_show = data.numItemsToShow;
    }
}

class MusicQueue extends YTNode {
    static type = 'MusicQueue';
    content;
    constructor(data) {
        super();
        this.content = parseItem(data.content, PlaylistPanel);
    }
}

class MusicResponsiveHeader extends YTNode {
    static type = 'MusicResponsiveHeader';
    thumbnail;
    buttons;
    title;
    subtitle;
    strapline_text_one;
    strapline_thumbnail;
    second_subtitle;
    subtitle_badge;
    description;
    constructor(data) {
        super();
        this.thumbnail = parseItem(data.thumbnail, MusicThumbnail);
        this.buttons = parseArray(data.buttons, [DownloadButton, ToggleButton, MusicPlayButton, Button, Menu]);
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
        this.strapline_text_one = new Text$1(data.straplineTextOne);
        this.strapline_thumbnail = parseItem(data.straplineThumbnail, MusicThumbnail);
        this.second_subtitle = new Text$1(data.secondSubtitle);
        if (Reflect.has(data, 'subtitleBadge')) {
            this.subtitle_badge = parseArray(data.subtitleBadge, MusicInlineBadge);
        }
        if (Reflect.has(data, 'description')) {
            this.description = parseItem(data.description, MusicDescriptionShelf);
        }
    }
}

class MusicShelf extends YTNode {
    static type = 'MusicShelf';
    title;
    contents;
    endpoint;
    continuation;
    bottom_text;
    bottom_button;
    subheaders;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.contents = parseArray(data.contents, MusicResponsiveListItem);
        if (Reflect.has(data, 'bottomEndpoint')) {
            this.endpoint = new NavigationEndpoint(data.bottomEndpoint);
        }
        if (Reflect.has(data, 'continuations')) {
            this.continuation =
                data.continuations?.[0].nextContinuationData?.continuation ||
                    data.continuations?.[0].reloadContinuationData?.continuation;
        }
        if (Reflect.has(data, 'bottomText')) {
            this.bottom_text = new Text$1(data.bottomText);
        }
        if (Reflect.has(data, 'bottomButton')) {
            this.bottom_button = parseItem(data.bottomButton, Button);
        }
        if (Reflect.has(data, 'subheaders')) {
            this.subheaders = parseArray(data.subheaders);
        }
    }
}

class MusicSideAlignedItem extends YTNode {
    static type = 'MusicSideAlignedItem';
    start_items;
    end_items;
    constructor(data) {
        super();
        if (Reflect.has(data, 'startItems')) {
            this.start_items = parseArray(data.startItems);
        }
        if (Reflect.has(data, 'endItems')) {
            this.end_items = parseArray(data.endItems);
        }
    }
}

class MusicSortFilterButton extends YTNode {
    static type = 'MusicSortFilterButton';
    title;
    icon_type;
    menu;
    constructor(data) {
        super();
        this.title = new Text$1(data.title).toString();
        if (Reflect.has(data, 'icon')) {
            this.icon_type = data.icon.iconType;
        }
        this.menu = parseItem(data.menu, MusicMultiSelectMenu);
    }
}

class MusicTastebuilderShelfThumbnail extends YTNode {
    static type = 'MusicTastebuilderShelfThumbnail';
    thumbnail;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
    }
}

class MusicTasteBuilderShelf extends YTNode {
    static type = 'MusicTasteBuilderShelf';
    thumbnail;
    primary_text;
    secondary_text;
    action_button;
    is_visible;
    constructor(data) {
        super();
        this.thumbnail = parseItem(data.thumbnail, MusicTastebuilderShelfThumbnail);
        this.primary_text = new Text$1(data.primaryText);
        this.secondary_text = new Text$1(data.secondaryText);
        this.action_button = parseItem(data.actionButton, Button);
        this.is_visible = data.isVisible;
    }
}

class MusicVisualHeader extends YTNode {
    static type = 'MusicVisualHeader';
    title;
    thumbnail;
    menu;
    foreground_thumbnail;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.thumbnail = data.thumbnail ? Thumbnail.fromResponse(data.thumbnail.musicThumbnailRenderer?.thumbnail) : [];
        this.menu = parseItem(data.menu, Menu);
        this.foreground_thumbnail = data.foregroundThumbnail ? Thumbnail.fromResponse(data.foregroundThumbnail.musicThumbnailRenderer?.thumbnail) : [];
    }
}

class MobileTopbar extends YTNode {
    static type = 'MobileTopbar';
    placeholder_text;
    buttons;
    logo_type;
    constructor(data) {
        super();
        this.placeholder_text = new Text$1(data.placeholderText);
        this.buttons = parseArray(data.buttons);
        if (Reflect.has(data, 'logo') && Reflect.has(data.logo, 'iconType'))
            this.logo_type = data.logo.iconType;
    }
}

class MultiPageMenuSection extends YTNode {
    static type = 'MultiPageMenuSection';
    items;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
    }
}

class PivotBar extends YTNode {
    static type = 'PivotBar';
    items;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
    }
}

class PivotBarItem extends YTNode {
    static type = 'PivotBarItem';
    pivot_identifier;
    endpoint;
    title;
    accessibility_label;
    icon_type;
    accessibility;
    constructor(data) {
        super();
        this.pivot_identifier = data.pivotIdentifier;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.title = new Text(data.title);
        if ('accessibility' in data
            && 'accessibilityData' in data.accessibility) {
            this.accessibility = {
                accessibility_data: new AccessibilityData(data.accessibility.accessibilityData)
            };
        }
        if (Reflect.has(data, 'icon') && Reflect.has(data.icon, 'iconType'))
            this.icon_type = data.icon.iconType;
    }
    get label() {
        return this.accessibility?.accessibility_data?.label;
    }
}

class TopbarMenuButton extends YTNode {
    static type = 'TopbarMenuButton';
    icon_type;
    menu_renderer;
    target_id;
    constructor(data) {
        super();
        if (Reflect.has(data, 'icon') && Reflect.has(data.icon, 'iconType'))
            this.icon_type = data.icon.iconType;
        this.menu_renderer = parseItem(data.menuRenderer);
        this.target_id = data.targetId;
    }
}

class NotificationAction extends YTNode {
    static type = 'NotificationAction';
    response_text;
    constructor(data) {
        super();
        this.response_text = new Text$1(data.responseText);
    }
}

class OpenOnePickAddVideoModalCommand extends YTNode {
    static type = 'OpenOnePickAddVideoModalCommand';
    list_id;
    modal_title;
    select_button_label;
    constructor(data) {
        super();
        this.list_id = data.listId;
        this.modal_title = data.modalTitle;
        this.select_button_label = data.selectButtonLabel;
    }
}

class PageHeaderView extends YTNode {
    static type = 'PageHeaderView';
    title;
    image;
    animated_image;
    hero_image;
    metadata;
    actions;
    description;
    attributation;
    banner;
    constructor(data) {
        super();
        this.title = parseItem(data.title, DynamicTextView);
        this.image = parseItem(data.image, [ContentPreviewImageView, DecoratedAvatarView]);
        this.animated_image = parseItem(data.animatedImage, ContentPreviewImageView);
        this.hero_image = parseItem(data.heroImage, ContentPreviewImageView);
        this.metadata = parseItem(data.metadata, ContentMetadataView);
        this.actions = parseItem(data.actions, FlexibleActionsView);
        this.description = parseItem(data.description, DescriptionPreviewView);
        this.attributation = parseItem(data.attributation, AttributionView);
        this.banner = parseItem(data.banner, ImageBannerView);
    }
}

class PageHeader extends YTNode {
    static type = 'PageHeader';
    page_title;
    content;
    constructor(data) {
        super();
        this.page_title = data.pageTitle;
        this.content = parseItem(data.content, PageHeaderView);
    }
}

class PageIntroduction extends YTNode {
    static type = 'PageIntroduction';
    header_text;
    body_text;
    page_title;
    header_icon_type;
    constructor(data) {
        super();
        this.header_text = new Text$1(data.headerText).toString();
        this.body_text = new Text$1(data.bodyText).toString();
        this.page_title = new Text$1(data.pageTitle).toString();
        this.header_icon_type = data.headerIcon.iconType;
    }
}

class PivotButton extends YTNode {
    static type = 'PivotButton';
    thumbnail;
    endpoint;
    content_description;
    target_id;
    sound_attribution_title;
    waveform_animation_style;
    background_animation_style;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.endpoint = new NavigationEndpoint(data.onClickCommand);
        this.content_description = new Text$1(data.contentDescription);
        this.target_id = data.targetId;
        this.sound_attribution_title = new Text$1(data.soundAttributionTitle);
        this.waveform_animation_style = data.waveformAnimationStyle;
        this.background_animation_style = data.backgroundAnimationStyle;
    }
}

class PlayerAnnotationsExpanded extends YTNode {
    static type = 'PlayerAnnotationsExpanded';
    featured_channel;
    allow_swipe_dismiss;
    annotation_id;
    constructor(data) {
        super();
        if (Reflect.has(data, 'featuredChannel')) {
            this.featured_channel = {
                start_time_ms: data.featuredChannel.startTimeMs,
                end_time_ms: data.featuredChannel.endTimeMs,
                watermark: Thumbnail.fromResponse(data.featuredChannel.watermark),
                channel_name: data.featuredChannel.channelName,
                endpoint: new NavigationEndpoint(data.featuredChannel.navigationEndpoint),
                subscribe_button: parseItem(data.featuredChannel.subscribeButton)
            };
        }
        this.allow_swipe_dismiss = data.allowSwipeDismiss;
        this.annotation_id = data.annotationId;
    }
}

class PlayerCaptionsTracklist extends YTNode {
    static type = 'PlayerCaptionsTracklist';
    caption_tracks;
    audio_tracks;
    default_audio_track_index;
    translation_languages;
    constructor(data) {
        super();
        if (Reflect.has(data, 'captionTracks')) {
            this.caption_tracks = data.captionTracks.map((ct) => ({
                base_url: ct.baseUrl,
                name: new Text$1(ct.name),
                vss_id: ct.vssId,
                language_code: ct.languageCode,
                kind: ct.kind,
                is_translatable: ct.isTranslatable
            }));
        }
        if (Reflect.has(data, 'audioTracks')) {
            this.audio_tracks = data.audioTracks.map((at) => ({
                audio_track_id: at.audioTrackId,
                captions_initial_state: at.captionsInitialState,
                default_caption_track_index: at.defaultCaptionTrackIndex,
                has_default_track: at.hasDefaultTrack,
                visibility: at.visibility,
                caption_track_indices: at.captionTrackIndices
            }));
        }
        if (Reflect.has(data, 'defaultAudioTrackIndex')) {
            this.default_audio_track_index = data.defaultAudioTrackIndex;
        }
        if (Reflect.has(data, 'translationLanguages')) {
            this.translation_languages = data.translationLanguages.map((tl) => ({
                language_code: tl.languageCode,
                language_name: new Text$1(tl.languageName)
            }));
        }
    }
}

class PlayerOverflow extends YTNode {
    static type = 'PlayerOverflow';
    endpoint;
    enable_listen_first;
    constructor(data) {
        super();
        this.endpoint = new NavigationEndpoint(data.endpoint);
        this.enable_listen_first = data.enableListenFirst;
    }
}

class PlayerControlsOverlay extends YTNode {
    static type = 'PlayerControlsOverlay';
    overflow;
    constructor(data) {
        super();
        this.overflow = parseItem(data.overflow, PlayerOverflow);
    }
}

class PlayerErrorMessage extends YTNode {
    static type = 'PlayerErrorMessage';
    subreason;
    reason;
    proceed_button;
    thumbnails;
    icon_type;
    constructor(data) {
        super();
        this.subreason = new Text$1(data.subreason);
        this.reason = new Text$1(data.reason);
        this.proceed_button = parseItem(data.proceedButton, Button);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        if (Reflect.has(data, 'icon')) {
            this.icon_type = data.icon.iconType;
        }
    }
}

class PlayerLegacyDesktopYpcOffer extends YTNode {
    static type = 'PlayerLegacyDesktopYpcOffer';
    title;
    thumbnail;
    offer_description;
    offer_id;
    constructor(data) {
        super();
        this.title = data.itemTitle;
        this.thumbnail = data.itemThumbnail;
        this.offer_description = data.offerDescription;
        this.offer_id = data.offerId;
    }
}

class YpcTrailer extends YTNode {
    static type = 'YpcTrailer';
    video_message;
    player_response;
    constructor(data) {
        super();
        this.video_message = data.fullVideoMessage;
        this.player_response = data.unserializedPlayerResponse;
    }
}

class PlayerLegacyDesktopYpcTrailer extends YTNode {
    static type = 'PlayerLegacyDesktopYpcTrailer';
    video_id;
    title;
    thumbnail;
    offer_headline;
    offer_description;
    offer_id;
    offer_button_text;
    video_message;
    trailer;
    constructor(data) {
        super();
        this.video_id = data.trailerVideoId;
        this.title = data.itemTitle;
        this.thumbnail = data.itemThumbnail;
        this.offer_headline = data.offerHeadline;
        this.offer_description = data.offerDescription;
        this.offer_id = data.offerId;
        this.offer_button_text = data.offerButtonText;
        this.video_message = data.fullVideoMessage;
        this.trailer = parseItem(data.ypcTrailer, YpcTrailer);
    }
}

class PlayerLiveStoryboardSpec extends YTNode {
    static type = 'PlayerLiveStoryboardSpec';
    board;
    constructor(data) {
        super();
        const [template_url, thumbnail_width, thumbnail_height, columns, rows] = data.spec.split('#');
        this.board = {
            type: 'live',
            template_url,
            thumbnail_width: parseInt(thumbnail_width, 10),
            thumbnail_height: parseInt(thumbnail_height, 10),
            columns: parseInt(columns, 10),
            rows: parseInt(rows, 10)
        };
    }
}

class PlayerMicroformat extends YTNode {
    static type = 'PlayerMicroformat';
    title;
    description;
    thumbnails;
    embed;
    length_seconds;
    channel;
    is_family_safe;
    is_unlisted;
    has_ypc_metadata;
    view_count;
    category;
    publish_date;
    upload_date;
    available_countries;
    start_timestamp;
    end_timestamp;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.description = new Text$1(data.description);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        if (Reflect.has(data, 'embed')) {
            this.embed = {
                iframe_url: data.embed.iframeUrl,
                flash_url: data.embed.flashUrl,
                flash_secure_url: data.embed.flashSecureUrl,
                width: data.embed.width,
                height: data.embed.height
            };
        }
        this.length_seconds = parseInt(data.lengthSeconds);
        this.channel = {
            id: data.externalChannelId,
            name: data.ownerChannelName,
            url: data.ownerProfileUrl
        };
        this.is_family_safe = !!data.isFamilySafe;
        this.is_unlisted = !!data.isUnlisted;
        this.has_ypc_metadata = !!data.hasYpcMetadata;
        this.view_count = parseInt(data.viewCount);
        this.category = data.category;
        this.publish_date = data.publishDate;
        this.upload_date = data.uploadDate;
        this.available_countries = data.availableCountries;
        this.start_timestamp = data.liveBroadcastDetails?.startTimestamp ? new Date(data.liveBroadcastDetails.startTimestamp) : null;
        this.end_timestamp = data.liveBroadcastDetails?.endTimestamp ? new Date(data.liveBroadcastDetails.endTimestamp) : null;
    }
}

class PlayerOverlayAutoplay extends YTNode {
    static type = 'PlayerOverlayAutoplay';
    title;
    video_id;
    video_title;
    short_view_count;
    // @TODO: Find out what these are.
    prefer_immediate_redirect;
    count_down_secs_for_fullscreen;
    published;
    background;
    thumbnail_overlays;
    author;
    cancel_button;
    next_button;
    close_button;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.video_id = data.videoId;
        this.video_title = new Text$1(data.videoTitle);
        this.short_view_count = new Text$1(data.shortViewCountText);
        this.prefer_immediate_redirect = data.preferImmediateRedirect;
        this.count_down_secs_for_fullscreen = data.countDownSecsForFullscreen;
        this.published = new Text$1(data.publishedTimeText);
        this.background = Thumbnail.fromResponse(data.background);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        this.author = new Author(data.byline);
        this.cancel_button = parseItem(data.cancelButton, Button);
        this.next_button = parseItem(data.nextButton, Button);
        this.close_button = parseItem(data.closeButton, Button);
    }
}

class PlayerOverlayVideoDetails extends YTNode {
    static type = 'PlayerOverlayVideoDetails';
    title;
    subtitle;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
    }
}

class WatchNextEndScreen extends YTNode {
    static type = 'WatchNextEndScreen';
    results;
    title;
    constructor(data) {
        super();
        this.results = parseArray(data.results, [EndScreenVideo, EndScreenPlaylist]);
        this.title = new Text$1(data.title).toString();
    }
}

class PlayerOverlay extends YTNode {
    static type = 'PlayerOverlay';
    end_screen;
    autoplay;
    share_button;
    add_to_menu;
    fullscreen_engagement;
    actions;
    browser_media_session;
    decorated_player_bar;
    video_details;
    constructor(data) {
        super();
        this.end_screen = parseItem(data.endScreen, WatchNextEndScreen);
        this.autoplay = parseItem(data.autoplay, PlayerOverlayAutoplay);
        this.share_button = parseItem(data.shareButton, Button);
        this.add_to_menu = parseItem(data.addToMenu, Menu);
        this.fullscreen_engagement = parseItem(data.fullscreenEngagement);
        this.actions = parseArray(data.actions);
        this.browser_media_session = parseItem(data.browserMediaSession);
        this.decorated_player_bar = parseItem(data.decoratedPlayerBarRenderer, DecoratedPlayerBar);
        this.video_details = parseItem(data.videoDetails, PlayerOverlayVideoDetails);
    }
}

class PlaylistHeader extends YTNode {
    static type = 'PlaylistHeader';
    id;
    title;
    subtitle;
    stats;
    brief_stats;
    author;
    description;
    num_videos;
    view_count;
    can_share;
    can_delete;
    is_editable;
    privacy;
    save_button;
    shuffle_play_button;
    menu;
    banner;
    constructor(data) {
        super();
        this.id = data.playlistId;
        this.title = new Text$1(data.title);
        this.subtitle = data.subtitle ? new Text$1(data.subtitle) : null;
        this.stats = data.stats.map((stat) => new Text$1(stat));
        this.brief_stats = data.briefStats.map((stat) => new Text$1(stat));
        this.author = data.ownerText || data.ownerEndpoint ? new Author({ ...data.ownerText, navigationEndpoint: data.ownerEndpoint }, data.ownerBadges, null) : null;
        this.description = new Text$1(data.descriptionText);
        this.num_videos = new Text$1(data.numVideosText);
        this.view_count = new Text$1(data.viewCountText);
        this.can_share = data.shareData.canShare;
        this.can_delete = data.editableDetails.canDelete;
        this.is_editable = data.isEditable;
        this.privacy = data.privacy;
        this.save_button = parseItem(data.saveButton);
        this.shuffle_play_button = parseItem(data.shufflePlayButton);
        this.menu = parseItem(data.moreActionsMenu);
        this.banner = parseItem(data.playlistHeaderBanner);
    }
}

class PlaylistInfoCardContent extends YTNode {
    static type = 'PlaylistInfoCardContent';
    title;
    thumbnails;
    video_count;
    channel_name;
    endpoint;
    constructor(data) {
        super();
        this.title = new Text$1(data.playlistTitle);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.video_count = new Text$1(data.playlistVideoCount);
        this.channel_name = new Text$1(data.channelName);
        this.endpoint = new NavigationEndpoint(data.action);
    }
}

class PlaylistMetadata extends YTNode {
    static type = 'PlaylistMetadata';
    title;
    description;
    constructor(data) {
        super();
        this.title = data.title;
        this.description = data.description || null;
        // XXX: Appindexing should be in microformat.
    }
}

class PlaylistSidebar extends YTNode {
    static type = 'PlaylistSidebar';
    items;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
    }
    // XXX: alias for consistency
    get contents() {
        return this.items;
    }
}

class PlaylistSidebarPrimaryInfo extends YTNode {
    static type = 'PlaylistSidebarPrimaryInfo';
    stats;
    thumbnail_renderer;
    title;
    menu;
    endpoint;
    description;
    constructor(data) {
        super();
        this.stats = data.stats.map((stat) => new Text$1(stat));
        this.thumbnail_renderer = parseItem(data.thumbnailRenderer);
        this.title = new Text$1(data.title);
        this.menu = parseItem(data.menu);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.description = new Text$1(data.description);
    }
}

class PlaylistSidebarSecondaryInfo extends YTNode {
    static type = 'PlaylistSidebarSecondaryInfo';
    owner;
    button;
    constructor(data) {
        super();
        this.owner = parseItem(data.videoOwner);
        this.button = parseItem(data.button);
    }
}

class PlaylistThumbnailOverlay extends YTNode {
    static type = 'PlaylistThumbnailOverlay';
    icon_type;
    text;
    constructor(data) {
        super();
        if (Reflect.has(data, 'icon'))
            this.icon_type = data.icon.iconType;
        this.text = new Text$1(data.text);
    }
}

class PlaylistVideo extends YTNode {
    static type = 'PlaylistVideo';
    id;
    index;
    title;
    author;
    thumbnails;
    thumbnail_overlays;
    set_video_id;
    endpoint;
    is_playable;
    menu;
    upcoming;
    video_info;
    accessibility_label;
    style;
    duration;
    constructor(data) {
        super();
        this.id = data.videoId;
        this.index = new Text$1(data.index);
        this.title = new Text$1(data.title);
        this.author = new Author(data.shortBylineText);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.thumbnail_overlays = parseArray(data.thumbnailOverlays);
        this.set_video_id = data?.setVideoId;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.is_playable = data.isPlayable;
        this.menu = parseItem(data.menu, Menu);
        this.video_info = new Text$1(data.videoInfo);
        this.accessibility_label = data.title.accessibility.accessibilityData.label;
        if (Reflect.has(data, 'style')) {
            this.style = data.style;
        }
        const upcoming = data.upcomingEventData && Number(`${data.upcomingEventData.startTime}000`);
        if (upcoming) {
            this.upcoming = new Date(upcoming);
        }
        this.duration = {
            text: new Text$1(data.lengthText).toString(),
            seconds: parseInt(data.lengthSeconds)
        };
    }
    get is_live() {
        return this.thumbnail_overlays.firstOfType(ThumbnailOverlayTimeStatus)?.style === 'LIVE';
    }
    get is_upcoming() {
        return this.thumbnail_overlays.firstOfType(ThumbnailOverlayTimeStatus)?.style === 'UPCOMING';
    }
}

class PlaylistVideoList extends YTNode {
    static type = 'PlaylistVideoList';
    id;
    is_editable;
    can_reorder;
    videos;
    constructor(data) {
        super();
        this.id = data.playlistId;
        this.is_editable = data.isEditable;
        this.can_reorder = data.canReorder;
        this.videos = parseArray(data.contents);
    }
}

class Poll extends YTNode {
    static type = 'Poll';
    choices;
    poll_type;
    total_votes;
    live_chat_poll_id;
    constructor(data) {
        super();
        this.choices = data.choices.map((choice) => ({
            text: new Text$1(choice.text),
            select_endpoint: choice.selectServiceEndpoint ? new NavigationEndpoint(choice.selectServiceEndpoint) : null,
            deselect_endpoint: choice.deselectServiceEndpoint ? new NavigationEndpoint(choice.deselectServiceEndpoint) : null,
            vote_ratio_if_selected: choice?.voteRatioIfSelected || null,
            vote_percentage_if_selected: new Text$1(choice.votePercentageIfSelected),
            vote_ratio_if_not_selected: choice?.voteRatioIfSelected || null,
            vote_percentage_if_not_selected: new Text$1(choice.votePercentageIfSelected),
            image: choice.image ? Thumbnail.fromResponse(choice.image) : null
        }));
        if (Reflect.has(data, 'type'))
            this.poll_type = data.type;
        if (Reflect.has(data, 'totalVotes'))
            this.total_votes = new Text$1(data.totalVotes);
        if (Reflect.has(data, 'liveChatPollId'))
            this.live_chat_poll_id = data.liveChatPollId;
    }
}

class Post extends BackstagePost {
    static type = 'Post';
    constructor(data) {
        super(data);
    }
}

class PostMultiImage extends YTNode {
    static type = 'PostMultiImage';
    images;
    constructor(data) {
        super();
        this.images = parseArray(data.images, BackstageImage);
    }
}

class PremiereTrailerBadge extends YTNode {
    static type = 'PremiereTrailerBadge';
    label;
    constructor(data) {
        super();
        this.label = new Text$1(data.label);
    }
}

class ProductListHeader extends YTNode {
    static type = 'ProductListHeader';
    title;
    suppress_padding_disclaimer;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.suppress_padding_disclaimer = !!data.suppressPaddingDisclaimer;
    }
}

class ProductListItem extends YTNode {
    static type = 'ProductListItem';
    title;
    accessibility_title;
    thumbnail;
    price;
    endpoint;
    merchant_name;
    stay_in_app;
    view_button;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.accessibility_title = data.accessibilityTitle;
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.price = data.price;
        this.endpoint = new NavigationEndpoint(data.onClickCommand);
        this.merchant_name = data.merchantName;
        this.stay_in_app = !!data.stayInApp;
        this.view_button = parseItem(data.viewButton, Button);
    }
}

class ProfileColumn extends YTNode {
    static type = 'ProfileColumn';
    items;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class ProfileColumnStats extends YTNode {
    static type = 'ProfileColumnStats';
    items;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class ProfileColumnStatsEntry extends YTNode {
    static type = 'ProfileColumnStatsEntry';
    label;
    value;
    constructor(data) {
        super();
        this.label = new Text$1(data.label);
        this.value = new Text$1(data.value);
    }
}

class ProfileColumnUserInfo extends YTNode {
    static type = 'ProfileColumnUserInfo';
    title;
    thumbnails;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
    }
}

class Quiz extends YTNode {
    static type = 'Quiz';
    choices;
    total_votes;
    constructor(data) {
        super();
        this.choices = data.choices.map((choice) => ({
            text: new Text$1(choice.text),
            is_correct: choice.isCorrect
        }));
        this.total_votes = new Text$1(data.totalVotes);
    }
}

class RecognitionShelf extends YTNode {
    static type = 'RecognitionShelf';
    title;
    subtitle;
    avatars;
    button;
    surface;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
        this.avatars = data.avatars.map((avatar) => new Thumbnail(avatar));
        this.button = parseItem(data.button, Button);
        this.surface = data.surface;
    }
}

class ReelItem extends YTNode {
    static type = 'ReelItem';
    id;
    title;
    thumbnails;
    views;
    endpoint;
    accessibility;
    constructor(data) {
        super();
        this.id = data.videoId;
        this.title = new Text$1(data.headline);
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.views = new Text$1(data.viewCountText);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        if ('accessibility' in data
            && 'accessibilityData' in data.accessibility) {
            this.accessibility = {
                accessibility_data: new AccessibilityData(data.accessibility.accessibilityData)
            };
        }
    }
    get label() {
        return this.accessibility?.accessibility_data?.label;
    }
}

class ReelPlayerHeader extends YTNode {
    static type = 'ReelPlayerHeader';
    reel_title_text;
    timestamp_text;
    channel_title_text;
    channel_thumbnail;
    author;
    constructor(data) {
        super();
        this.reel_title_text = new Text$1(data.reelTitleText);
        this.timestamp_text = new Text$1(data.timestampText);
        this.channel_title_text = new Text$1(data.channelTitleText);
        this.channel_thumbnail = Thumbnail.fromResponse(data.channelThumbnail);
        this.author = new Author(data.channelNavigationEndpoint, undefined);
    }
}

class ReelPlayerOverlay extends YTNode {
    static type = 'ReelPlayerOverlay';
    like_button;
    reel_player_header_supported_renderers;
    menu;
    next_item_button;
    prev_item_button;
    subscribe_button_renderer;
    style;
    view_comments_button;
    share_button;
    pivot_button;
    info_panel;
    constructor(data) {
        super();
        this.like_button = parseItem(data.likeButton, LikeButton);
        this.reel_player_header_supported_renderers = parseItem(data.reelPlayerHeaderSupportedRenderers, ReelPlayerHeader);
        this.menu = parseItem(data.menu, Menu);
        this.next_item_button = parseItem(data.nextItemButton, Button);
        this.prev_item_button = parseItem(data.prevItemButton, Button);
        this.subscribe_button_renderer = parseItem(data.subscribeButtonRenderer, [Button, SubscribeButton]);
        this.style = data.style;
        this.view_comments_button = parseItem(data.viewCommentsButton, Button);
        this.share_button = parseItem(data.shareButton, Button);
        this.pivot_button = parseItem(data.pivotButton, PivotButton);
        this.info_panel = parseItem(data.infoPanel, InfoPanelContainer);
    }
}

class RelatedChipCloud extends YTNode {
    static type = 'RelatedChipCloud';
    content;
    constructor(data) {
        super();
        this.content = parseItem(data.content);
    }
}

class RichGrid extends YTNode {
    static type = 'RichGrid';
    header;
    contents;
    target_id;
    constructor(data) {
        super();
        // (Daniel Wykerd) XXX: we don't parse the masthead since it is usually an advertisement
        // (Daniel Wykerd) XXX: reflowOptions aren't parsed, I think its only used internally for layout
        this.header = parseItem(data.header);
        this.contents = parseArray(data.contents);
        if (Reflect.has(data, 'targetId'))
            this.target_id = data.targetId;
    }
}

class RichItem extends YTNode {
    static type = 'RichItem';
    content;
    constructor(data) {
        super();
        this.content = parseItem(data.content);
    }
}

class RichListHeader extends YTNode {
    static type = 'RichListHeader';
    title;
    subtitle;
    title_style;
    icon_type;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
        if (Reflect.has(data, 'titleStyle')) {
            this.title_style = data.titleStyle.style;
        }
        if (Reflect.has(data, 'icon')) {
            this.icon_type = data.icon.iconType;
        }
    }
}

class RichMetadata extends YTNode {
    static type = 'RichMetadata';
    thumbnail;
    title;
    subtitle;
    call_to_action;
    icon_type;
    endpoint;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
        this.call_to_action = new Text$1(data.callToAction);
        if (Reflect.has(data, 'callToActionIcon')) {
            this.icon_type = data.callToActionIcon.iconType;
        }
        this.endpoint = new NavigationEndpoint(data.endpoint);
    }
}

class RichMetadataRow extends YTNode {
    static type = 'RichMetadataRow';
    contents;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents);
    }
}

class RichSection extends YTNode {
    static type = 'RichSection';
    content;
    full_bleed;
    target_id;
    constructor(data) {
        super();
        this.content = parseItem(data.content);
        this.full_bleed = !!data.fullBleed;
        if ('targetId' in data) {
            this.target_id = data.targetId;
        }
    }
}

class RichShelf extends YTNode {
    static type = 'RichShelf';
    title;
    contents;
    endpoint;
    subtitle;
    is_expanded;
    is_bottom_divider_hidden;
    is_top_divider_hidden;
    layout_sizing;
    icon_type;
    menu;
    next_button;
    previous_button;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.contents = parseArray(data.contents);
        this.is_expanded = !!data.is_expanded;
        this.is_bottom_divider_hidden = !!data.isBottomDividerHidden;
        this.is_top_divider_hidden = !!data.isTopDividerHidden;
        if ('endpoint' in data) {
            this.endpoint = new NavigationEndpoint(data.endpoint);
        }
        if ('subtitle' in data) {
            this.subtitle = new Text$1(data.subtitle);
        }
        if ('layoutSizing' in data) {
            this.layout_sizing = data.layoutSizing;
        }
        if ('icon' in data) {
            this.icon_type = data.icon.iconType;
        }
        this.menu = parseItem(data.menu);
        this.next_button = parseItem(data.nextButton);
        this.previous_button = parseItem(data.previousButton);
    }
}

class SearchFilter extends YTNode {
    static type = 'SearchFilter';
    label;
    endpoint;
    tooltip;
    status;
    constructor(data) {
        super();
        this.label = new Text$1(data.label);
        this.endpoint = new NavigationEndpoint(data.endpoint || data.navigationEndpoint);
        this.tooltip = data.tooltip;
        if (Reflect.has(data, 'status')) {
            this.status = data.status;
        }
    }
    get disabled() {
        return this.status === 'FILTER_STATUS_DISABLED';
    }
    get selected() {
        return this.status === 'FILTER_STATUS_SELECTED';
    }
}

class SearchFilterGroup extends YTNode {
    static type = 'SearchFilterGroup';
    title;
    filters;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.filters = parseArray(data.filters, SearchFilter);
    }
}

class SearchFilterOptionsDialog extends YTNode {
    static type = 'SearchFilterOptionsDialog';
    title;
    groups;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.groups = parseArray(data.groups, SearchFilterGroup);
    }
}

class SearchHeader extends YTNode {
    static type = 'SearchHeader';
    chip_bar;
    search_filter_button;
    constructor(data) {
        super();
        this.chip_bar = parseItem(data.chipBar, ChipCloud);
        this.search_filter_button = parseItem(data.searchFilterButton, Button);
    }
}

class SearchSubMenu extends YTNode {
    static type = 'SearchSubMenu';
    title;
    groups;
    button;
    constructor(data) {
        super();
        if (Reflect.has(data, 'title'))
            this.title = new Text$1(data.title);
        if (Reflect.has(data, 'groups'))
            this.groups = parseArray(data.groups, SearchFilterGroup);
        if (Reflect.has(data, 'button'))
            this.button = parseItem(data.button, ToggleButton);
    }
}

class SearchSuggestionsSection extends YTNode {
    static type = 'SearchSuggestionsSection';
    contents;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents);
    }
}

class UniversalWatchCard extends YTNode {
    static type = 'UniversalWatchCard';
    header;
    call_to_action;
    sections;
    collapsed_label;
    constructor(data) {
        super();
        this.header = parseItem(data.header);
        this.call_to_action = parseItem(data.callToAction);
        this.sections = parseArray(data.sections);
        if (Reflect.has(data, 'collapsedLabel')) {
            this.collapsed_label = new Text$1(data.collapsedLabel);
        }
    }
}

class SecondarySearchContainer extends YTNode {
    static type = 'SecondarySearchContainer';
    target_id;
    contents;
    constructor(data) {
        super();
        this.contents = parseArray(data.contents, [UniversalWatchCard]);
    }
}

class SectionHeaderView extends YTNode {
    static type = 'SectionHeaderView';
    headline;
    constructor(data) {
        super();
        this.headline = Text$1.fromAttributed(data.headline);
    }
}

class SegmentedLikeDislikeButton extends YTNode {
    static type = 'SegmentedLikeDislikeButton';
    like_button;
    dislike_button;
    constructor(data) {
        super();
        this.like_button = parseItem(data.likeButton, [ToggleButton, Button]);
        this.dislike_button = parseItem(data.dislikeButton, [ToggleButton, Button]);
    }
}

class SettingBoolean extends YTNode {
    static type = 'SettingBoolean';
    title;
    summary;
    enable_endpoint;
    disable_endpoint;
    item_id;
    constructor(data) {
        super();
        if (Reflect.has(data, 'title')) {
            this.title = new Text$1(data.title);
        }
        if (Reflect.has(data, 'summary')) {
            this.summary = new Text$1(data.summary);
        }
        if (Reflect.has(data, 'enableServiceEndpoint')) {
            this.enable_endpoint = new NavigationEndpoint(data.enableServiceEndpoint);
        }
        if (Reflect.has(data, 'disableServiceEndpoint')) {
            this.disable_endpoint = new NavigationEndpoint(data.disableServiceEndpoint);
        }
        this.item_id = data.itemId;
    }
}

class SettingsCheckbox extends YTNode {
    static type = 'SettingsCheckbox';
    title;
    help_text;
    enabled;
    disabled;
    id;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.help_text = new Text$1(data.helpText);
        this.enabled = data.enabled;
        this.disabled = data.disabled;
        this.id = data.id;
    }
}

class SettingsSwitch extends YTNode {
    static type = 'SettingsSwitch';
    title;
    subtitle;
    enabled;
    enable_endpoint;
    disable_endpoint;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
        this.enabled = data.enabled;
        this.enable_endpoint = new NavigationEndpoint(data.enableServiceEndpoint);
        this.disable_endpoint = new NavigationEndpoint(data.disableServiceEndpoint);
    }
}

class SettingsOptions extends YTNode {
    static type = 'SettingsOptions';
    title;
    text;
    options;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        if (Reflect.has(data, 'text')) {
            this.text = new Text$1(data.text).toString();
        }
        if (Reflect.has(data, 'options')) {
            this.options = parseArray(data.options, [
                SettingsSwitch, Dropdown, CopyLink,
                SettingsCheckbox, ChannelOptions
            ]);
        }
    }
}

class SettingsSidebar extends YTNode {
    static type = 'SettingsSidebar';
    title;
    items;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.items = parseArray(data.items, CompactLink);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class SharedPost extends YTNode {
    static type = 'SharedPost';
    thumbnail;
    content;
    published;
    menu;
    original_post;
    id;
    endpoint;
    expand_button;
    author;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.content = new Text$1(data.content);
        this.published = new Text$1(data.publishedTimeText);
        this.menu = parseItem(data.actionMenu, Menu);
        this.original_post = parseItem(data.originalPost, [BackstagePost, Post]);
        this.id = data.postId;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.expand_button = parseItem(data.expandButton, Button);
        this.author = new Author(data.displayName, undefined);
    }
}

class SharePanelHeader extends YTNode {
    static type = 'SharePanelHeader';
    title;
    constructor(data) {
        super();
        this.title = parseItem(data.title);
    }
}

class SharePanelTitleV15 extends YTNode {
    static type = 'SharePanelTitleV15';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class ShareTarget extends YTNode {
    static type = 'ShareTarget';
    endpoint;
    service_name;
    target_id;
    title;
    constructor(data) {
        super();
        if (Reflect.has(data, 'serviceEndpoint'))
            this.endpoint = new NavigationEndpoint(data.serviceEndpoint);
        else if (Reflect.has(data, 'navigationEndpoint'))
            this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.service_name = data.serviceName;
        this.target_id = data.targetId;
        this.title = new Text$1(data.title);
    }
}

class Shelf extends YTNode {
    static type = 'Shelf';
    title;
    endpoint;
    content;
    icon_type;
    menu;
    play_all_button;
    subtitle;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        if (Reflect.has(data, 'endpoint')) {
            this.endpoint = new NavigationEndpoint(data.endpoint);
        }
        this.content = parseItem(data.content);
        if (Reflect.has(data, 'icon')) {
            this.icon_type = data.icon.iconType;
        }
        if (Reflect.has(data, 'menu')) {
            this.menu = parseItem(data.menu);
        }
        if (Reflect.has(data, 'playAllButton')) {
            this.play_all_button = parseItem(data.playAllButton, Button);
        }
        if (Reflect.has(data, 'subtitle')) {
            this.subtitle = new Text$1(data.subtitle);
        }
    }
}

class ShortsLockupView extends YTNode {
    static type = 'ShortsLockupView';
    entity_id;
    accessibility_text;
    thumbnail;
    on_tap_endpoint;
    menu_on_tap;
    index_in_collection;
    menu_on_tap_a11y_label;
    overlay_metadata;
    inline_player_data;
    badge;
    constructor(data) {
        super();
        this.entity_id = data.entityId;
        this.accessibility_text = data.accessibilityText;
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.on_tap_endpoint = new NavigationEndpoint(data.onTap);
        this.menu_on_tap = new NavigationEndpoint(data.menuOnTap);
        this.index_in_collection = data.indexInCollection;
        this.menu_on_tap_a11y_label = data.menuOnTapA11yLabel;
        this.overlay_metadata = {
            primary_text: data.overlayMetadata.primaryText ? Text$1.fromAttributed(data.overlayMetadata.primaryText) : undefined,
            secondary_text: data.overlayMetadata.secondaryText ? Text$1.fromAttributed(data.overlayMetadata.secondaryText) : undefined
        };
        if (data.inlinePlayerData?.onVisible) {
            this.inline_player_data = new NavigationEndpoint(data.inlinePlayerData.onVisible);
        }
        if (data.badge) {
            this.badge = parseItem(data.badge, BadgeView);
        }
    }
}

class ShowingResultsFor extends YTNode {
    static type = 'ShowingResultsFor';
    corrected_query;
    original_query;
    corrected_query_endpoint;
    original_query_endpoint;
    search_instead_for;
    showing_results_for;
    constructor(data) {
        super();
        this.corrected_query = new Text$1(data.correctedQuery);
        this.original_query = new Text$1(data.originalQuery);
        this.corrected_query_endpoint = new NavigationEndpoint(data.correctedQueryEndpoint);
        this.original_query_endpoint = new NavigationEndpoint(data.originalQueryEndpoint);
        this.search_instead_for = new Text$1(data.searchInsteadFor);
        this.showing_results_for = new Text$1(data.showingResultsFor);
    }
}

class SimpleCardContent extends YTNode {
    static type = 'SimpleCardContent';
    image;
    title;
    display_domain;
    show_link_icon;
    call_to_action;
    endpoint;
    constructor(data) {
        super();
        this.image = Thumbnail.fromResponse(data.image);
        this.title = new Text$1(data.title);
        this.display_domain = new Text$1(data.displayDomain);
        this.show_link_icon = data.showLinkIcon;
        this.call_to_action = new Text$1(data.callToAction);
        this.endpoint = new NavigationEndpoint(data.command);
    }
}

class SimpleCardTeaser extends YTNode {
    static type = 'SimpleCardTeaser';
    message;
    prominent; // @TODO: or string?
    constructor(data) {
        super();
        this.message = new Text$1(data.message);
        this.prominent = data.prominent;
    }
}

class SimpleTextSection extends YTNode {
    static type = 'SimpleTextSection';
    lines;
    style;
    constructor(data) {
        super();
        this.lines = data.lines.map((line) => new Text$1(line));
        this.style = data.layoutStyle;
    }
}

class SingleActionEmergencySupport extends YTNode {
    static type = 'SingleActionEmergencySupport';
    action_text;
    nav_text;
    details;
    icon_type;
    endpoint;
    constructor(data) {
        super();
        this.action_text = new Text$1(data.actionText);
        this.nav_text = new Text$1(data.navigationText);
        this.details = new Text$1(data.detailsText);
        this.icon_type = data.icon.iconType;
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
    }
}

class Tab extends YTNode {
    static type = 'Tab';
    title;
    selected;
    endpoint;
    content;
    constructor(data) {
        super();
        this.title = data.title || 'N/A';
        this.selected = !!data.selected;
        this.endpoint = new NavigationEndpoint(data.endpoint);
        this.content = parseItem(data.content, [SectionList, MusicQueue, RichGrid]);
    }
}

class SingleColumnBrowseResults extends YTNode {
    static type = 'SingleColumnBrowseResults';
    tabs;
    constructor(data) {
        super();
        this.tabs = parseArray(data.tabs, Tab);
    }
}

class SingleColumnMusicWatchNextResults extends YTNode {
    static type = 'SingleColumnMusicWatchNextResults';
    contents;
    constructor(data) {
        super();
        this.contents = parse(data);
    }
}

class SingleHeroImage extends YTNode {
    static type = 'SingleHeroImage';
    thumbnails;
    style;
    constructor(data) {
        super();
        this.thumbnails = Thumbnail.fromResponse(data.thumbnail);
        this.style = data.style;
    }
}

class SlimOwner extends YTNode {
    static type = 'SlimOwner';
    thumbnail;
    title;
    endpoint;
    subscribe_button;
    constructor(data) {
        super();
        this.thumbnail = Thumbnail.fromResponse(data.thumbnail);
        this.title = new Text$1(data.title);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.subscribe_button = parseItem(data.subscribeButton, SubscribeButton);
    }
}

class SlimVideoMetadata extends YTNode {
    static type = 'SlimVideoMetadata';
    title;
    collapsed_subtitle;
    expanded_subtitle;
    owner;
    description;
    video_id;
    date;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.collapsed_subtitle = new Text$1(data.collapsedSubtitle);
        this.expanded_subtitle = new Text$1(data.expandedSubtitle);
        this.owner = parseItem(data.owner);
        this.description = new Text$1(data.description);
        this.video_id = data.videoId;
        this.date = new Text$1(data.dateText);
    }
}

class StartAt extends YTNode {
    static type = 'StartAt';
    start_at_option_label;
    constructor(data) {
        super();
        this.start_at_option_label = new Text$1(data.startAtOptionLabel);
    }
}

class Tabbed extends YTNode {
    static type = 'Tabbed';
    contents;
    constructor(data) {
        super();
        this.contents = parse(data);
    }
}

class TabbedSearchResults extends YTNode {
    static type = 'TabbedSearchResults';
    tabs;
    constructor(data) {
        super();
        this.tabs = parseArray(data.tabs, Tab);
    }
}

class TextHeader extends YTNode {
    static type = 'TextHeader';
    title;
    style;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.style = data.style;
    }
}

class ThirdPartyShareTargetSection extends YTNode {
    static type = 'ThirdPartyShareTargetSection';
    share_targets;
    constructor(data) {
        super();
        this.share_targets = parseArray(data.shareTargets, ShareTarget);
    }
}

class ThumbnailLandscapePortrait extends YTNode {
    static type = 'ThumbnailLandscapePortrait';
    landscape;
    portrait;
    constructor(data) {
        super();
        this.landscape = Thumbnail.fromResponse(data.landscape);
        this.portrait = Thumbnail.fromResponse(data.portrait);
    }
}

class ThumbnailOverlayEndorsement extends YTNode {
    static type = 'ThumbnailOverlayEndorsement';
    text;
    constructor(data) {
        super();
        this.text = new Text$1(data.text).toString();
    }
}

class ThumbnailOverlayHoverText extends YTNode {
    static type = 'ThumbnailOverlayHoverText';
    text;
    icon_type;
    constructor(data) {
        super();
        this.text = new Text$1(data.text);
        this.icon_type = data.icon.iconType;
    }
}

class ThumbnailOverlayInlineUnplayable extends YTNode {
    static type = 'ThumbnailOverlayInlineUnplayable';
    text;
    icon_type;
    constructor(data) {
        super();
        this.text = new Text$1(data.text).toString();
        this.icon_type = data.icon.iconType;
    }
}

class ThumbnailOverlayLoadingPreview extends YTNode {
    static type = 'ThumbnailOverlayLoadingPreview';
    text;
    constructor(data) {
        super();
        this.text = new Text$1(data.text);
    }
}

class ThumbnailOverlayNowPlaying extends YTNode {
    static type = 'ThumbnailOverlayNowPlaying';
    text;
    constructor(data) {
        super();
        this.text = new Text$1(data.text).toString();
    }
}

class ThumbnailOverlayPinking extends YTNode {
    static type = 'ThumbnailOverlayPinking';
    hack;
    constructor(data) {
        super();
        this.hack = data.hack;
    }
}

class ThumbnailOverlayPlaybackStatus extends YTNode {
    static type = 'ThumbnailOverlayPlaybackStatus';
    texts;
    constructor(data) {
        super();
        this.texts = data.texts.map((text) => new Text$1(text));
    }
}

class ThumbnailOverlayResumePlayback extends YTNode {
    static type = 'ThumbnailOverlayResumePlayback';
    percent_duration_watched;
    constructor(data) {
        super();
        this.percent_duration_watched = data.percentDurationWatched;
    }
}

class ThumbnailOverlaySidePanel extends YTNode {
    static type = 'ThumbnailOverlaySidePanel';
    text;
    icon_type;
    constructor(data) {
        super();
        this.text = new Text$1(data.text);
        this.icon_type = data.icon.iconType;
    }
}

class ThumbnailOverlayToggleButton extends YTNode {
    static type = 'ThumbnailOverlayToggleButton';
    is_toggled;
    icon_type;
    tooltip;
    toggled_endpoint;
    untoggled_endpoint;
    constructor(data) {
        super();
        if (Reflect.has(data, 'isToggled')) {
            this.is_toggled = data.isToggled;
        }
        this.icon_type = {
            toggled: data.toggledIcon.iconType,
            untoggled: data.untoggledIcon.iconType
        };
        this.tooltip = {
            toggled: data.toggledTooltip,
            untoggled: data.untoggledTooltip
        };
        if (data.toggledServiceEndpoint)
            this.toggled_endpoint = new NavigationEndpoint(data.toggledServiceEndpoint);
        if (data.untoggledServiceEndpoint)
            this.untoggled_endpoint = new NavigationEndpoint(data.untoggledServiceEndpoint);
    }
}

class TitleAndButtonListHeader extends YTNode {
    static type = 'TitleAndButtonListHeader';
    title;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
    }
}

class ToggleFormField extends YTNode {
    static type = 'ToggleFormField';
    label;
    toggled;
    toggle_on_action;
    toggle_off_action;
    constructor(data) {
        super();
        this.label = new Text(data.label);
        this.toggled = data.toggled;
        if ('toggleOnAction' in data)
            this.toggle_on_action = new NavigationEndpoint(data.toggleOnAction);
        if ('toggleOffAction' in data)
            this.toggle_off_action = new NavigationEndpoint(data.toggleOffAction);
    }
}

class ToggleMenuServiceItem extends YTNode {
    static type = 'ToggleMenuServiceItem';
    text;
    toggled_text;
    icon_type;
    toggled_icon_type;
    default_endpoint;
    toggled_endpoint;
    constructor(data) {
        super();
        this.text = new Text$1(data.defaultText);
        this.toggled_text = new Text$1(data.toggledText);
        this.icon_type = data.defaultIcon.iconType;
        this.toggled_icon_type = data.toggledIcon.iconType;
        this.default_endpoint = new NavigationEndpoint(data.defaultServiceEndpoint);
        this.toggled_endpoint = new NavigationEndpoint(data.toggledServiceEndpoint);
    }
}

class Tooltip extends YTNode {
    static type = 'Tooltip';
    promo_config;
    target_id;
    details;
    suggested_position;
    dismiss_stratedy;
    dwell_time_ms;
    constructor(data) {
        super();
        this.promo_config = {
            promo_id: data.promoConfig.promoId,
            impression_endpoints: data.promoConfig.impressionEndpoints
                .map((endpoint) => new NavigationEndpoint(endpoint)),
            accept: new NavigationEndpoint(data.promoConfig.acceptCommand),
            dismiss: new NavigationEndpoint(data.promoConfig.dismissCommand)
        };
        this.target_id = data.targetId;
        this.details = new Text$1(data.detailsText);
        this.suggested_position = data.suggestedPosition.type;
        this.dismiss_stratedy = data.dismissStrategy.type;
        this.dwell_time_ms = parseInt(data.dwellTimeMs);
    }
}

class TopicChannelDetails extends YTNode {
    static type = 'TopicChannelDetails';
    title;
    avatar;
    subtitle;
    subscribe_button;
    endpoint;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.avatar = Thumbnail.fromResponse(data.thumbnail ?? data.avatar);
        this.subtitle = new Text$1(data.subtitle);
        this.subscribe_button = parseItem(data.subscribeButton, SubscribeButton);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
    }
}

class TwoColumnBrowseResults extends YTNode {
    static type = 'TwoColumnBrowseResults';
    tabs;
    secondary_contents;
    constructor(data) {
        super();
        this.tabs = parseArray(data.tabs, [Tab, ExpandableTab]);
        this.secondary_contents = parseItem(data.secondaryContents, [SectionList, BrowseFeedActions, ProfileColumn]);
    }
}

class TwoColumnSearchResults extends YTNode {
    static type = 'TwoColumnSearchResults';
    header;
    primary_contents;
    secondary_contents;
    target_id;
    constructor(data) {
        super();
        this.header = parseItem(data.header);
        this.primary_contents = parseItem(data.primaryContents, [RichGrid, SectionList]);
        this.secondary_contents = parseItem(data.secondaryContents, [SecondarySearchContainer]);
        if ('targetId' in data) {
            this.target_id = data.targetId;
        }
    }
}

class TwoColumnWatchNextResults extends YTNode {
    static type = 'TwoColumnWatchNextResults';
    results;
    secondary_results;
    conversation_bar;
    playlist;
    autoplay;
    constructor(data) {
        super();
        this.results = parseArray(data.results?.results.contents);
        this.secondary_results = parseArray(data.secondaryResults?.secondaryResults.results);
        this.conversation_bar = parseItem(data?.conversationBar);
        const playlistData = data.playlist?.playlist;
        if (playlistData) {
            this.playlist = {
                id: playlistData.playlistId,
                title: playlistData.title,
                author: playlistData.shortBylineText?.simpleText ?
                    new Text$1(playlistData.shortBylineText) :
                    new Author(playlistData.longBylineText),
                contents: parseArray(playlistData.contents),
                current_index: playlistData.currentIndex,
                is_infinite: !!playlistData.isInfinite,
                menu: parseItem(playlistData.menu, Menu)
            };
        }
        const autoplayData = data.autoplay?.autoplay;
        if (autoplayData) {
            this.autoplay = {
                sets: autoplayData.sets.map((set) => this.#parseAutoplaySet(set))
            };
            if (autoplayData.modifiedSets) {
                this.autoplay.modified_sets = autoplayData.modifiedSets.map((set) => this.#parseAutoplaySet(set));
            }
            if (autoplayData.countDownSecs) {
                this.autoplay.count_down_secs = autoplayData.countDownSecs;
            }
        }
    }
    #parseAutoplaySet(data) {
        const result = {
            autoplay_video: new NavigationEndpoint(data.autoplayVideo)
        };
        if (data.nextButtonVideo) {
            result.next_button_video = new NavigationEndpoint(data.nextButtonVideo);
        }
        return result;
    }
}

class UnifiedSharePanel extends YTNode {
    static type = 'UnifiedSharePanel';
    third_party_network_section;
    header;
    share_panel_version;
    show_loading_spinner;
    constructor(data) {
        super();
        if (data.contents) {
            const contents = data.contents.find((content) => content.thirdPartyNetworkSection);
            if (contents) {
                this.third_party_network_section = {
                    share_target_container: parseItem(contents.thirdPartyNetworkSection.shareTargetContainer, ThirdPartyShareTargetSection),
                    copy_link_container: parseItem(contents.thirdPartyNetworkSection.copyLinkContainer, CopyLink),
                    start_at_container: parseItem(contents.thirdPartyNetworkSection.startAtContainer, StartAt)
                };
            }
        }
        this.header = parseItem(data.header, SharePanelHeader);
        this.share_panel_version = data.sharePanelVersion;
        if (Reflect.has(data, 'showLoadingSpinner'))
            this.show_loading_spinner = data.showLoadingSpinner;
    }
}

class UpsellDialog extends YTNode {
    static type = 'UpsellDialog';
    message_title;
    message_text;
    action_button;
    dismiss_button;
    is_visible;
    constructor(data) {
        super();
        this.message_title = new Text$1(data.dialogMessageTitle);
        this.message_text = new Text$1(data.dialogMessageText);
        this.action_button = parseItem(data.actionButton, Button);
        this.dismiss_button = parseItem(data.dismissButton, Button);
        this.is_visible = data.isVisible;
    }
}

class VerticalList extends YTNode {
    static type = 'VerticalList';
    items;
    collapsed_item_count; // Number?
    collapsed_state_button_text;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
        this.collapsed_item_count = data.collapsedItemCount;
        this.collapsed_state_button_text = new Text$1(data.collapsedStateButtonText);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class VerticalWatchCardList extends YTNode {
    static type = 'VerticalWatchCardList';
    items;
    view_all_text;
    view_all_endpoint;
    constructor(data) {
        super();
        this.items = parseArray(data.items);
        this.view_all_text = new Text$1(data.viewAllText);
        this.view_all_endpoint = new NavigationEndpoint(data.viewAllEndpoint);
    }
    // XXX: Alias for consistency.
    get contents() {
        return this.items;
    }
}

class VideoInfoCardContent extends YTNode {
    static type = 'VideoInfoCardContent';
    title;
    channel_name;
    view_count;
    video_thumbnails;
    duration;
    endpoint;
    constructor(data) {
        super();
        this.title = new Text$1(data.videoTitle);
        this.channel_name = new Text$1(data.channelName);
        this.view_count = new Text$1(data.viewCountText);
        this.video_thumbnails = Thumbnail.fromResponse(data.videoThumbnail);
        this.duration = new Text$1(data.lengthString);
        this.endpoint = new NavigationEndpoint(data.action);
    }
}

class VideoMetadataCarouselView extends YTNode {
    static type = 'VideoMetadataCarouselView';
    carousel_titles;
    carousel_items;
    constructor(data) {
        super();
        this.carousel_titles = parse(data.carouselTitles, true, CarouselTitleView);
        this.carousel_items = parse(data.carouselItems, true, CarouselItemView);
    }
}

class SubscriptionButton {
    static type = 'SubscriptionButton';
    text;
    subscribed;
    subscription_type;
    constructor(data) {
        this.text = new Text$1(data.text);
        this.subscribed = data.isSubscribed;
        if ('subscriptionType' in data)
            this.subscription_type = data.subscriptionType;
    }
}

class VideoOwner extends YTNode {
    static type = 'VideoOwner';
    subscription_button;
    subscriber_count;
    author;
    constructor(data) {
        super();
        if ('subscriptionButton' in data)
            this.subscription_button = new SubscriptionButton(data.subscriptionButton);
        this.subscriber_count = new Text$1(data.subscriberCountText);
        this.author = new Author({
            ...data.title,
            navigationEndpoint: data.navigationEndpoint
        }, data.badges, data.thumbnail);
    }
}

class VideoViewCount extends YTNode {
    static type = 'VideoViewCount';
    original_view_count;
    short_view_count;
    extra_short_view_count;
    view_count;
    constructor(data) {
        super();
        this.original_view_count = data.originalViewCount;
        this.short_view_count = new Text$1(data.shortViewCount);
        this.extra_short_view_count = new Text$1(data.extraShortViewCount);
        this.view_count = new Text$1(data.viewCount);
    }
}

class VideoPrimaryInfo extends YTNode {
    static type = 'VideoPrimaryInfo';
    title;
    super_title_link;
    station_name;
    view_count;
    badges;
    published;
    relative_date;
    menu;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        if ('superTitleLink' in data)
            this.super_title_link = new Text$1(data.superTitleLink);
        if ('stationName' in data)
            this.station_name = new Text$1(data.stationName);
        this.view_count = parseItem(data.viewCount, VideoViewCount);
        this.badges = parseArray(data.badges, MetadataBadge);
        this.published = new Text$1(data.dateText);
        this.relative_date = new Text$1(data.relativeDateText);
        this.menu = parseItem(data.videoActions, Menu);
    }
}

class VideoSecondaryInfo extends YTNode {
    static type = 'VideoSecondaryInfo';
    owner;
    description;
    description_placeholder;
    subscribe_button;
    metadata;
    show_more_text;
    show_less_text;
    default_expanded;
    description_collapsed_lines;
    constructor(data) {
        super();
        this.owner = parseItem(data.owner, VideoOwner);
        this.description = new Text$1(data.description);
        if ('attributedDescription' in data)
            this.description = Text$1.fromAttributed(data.attributedDescription);
        if ('descriptionPlaceholder' in data)
            this.description_placeholder = new Text$1(data.descriptionPlaceholder);
        this.subscribe_button = parseItem(data.subscribeButton, [SubscribeButton, Button]);
        this.metadata = parseItem(data.metadataRowContainer, MetadataRowContainer);
        this.show_more_text = new Text$1(data.showMoreText);
        this.show_less_text = new Text$1(data.showLessText);
        this.default_expanded = data.defaultExpanded;
        this.description_collapsed_lines = data.descriptionCollapsedLines;
    }
}

class WatchCardCompactVideo extends YTNode {
    static type = 'WatchCardCompactVideo';
    title;
    subtitle;
    duration;
    style;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.subtitle = new Text$1(data.subtitle);
        this.duration = {
            text: new Text$1(data.lengthText).toString(),
            seconds: timeToSeconds(data.lengthText.simpleText)
        };
        this.style = data.style;
    }
}

class WatchCardHeroVideo extends YTNode {
    static type = 'WatchCardHeroVideo';
    endpoint;
    call_to_action_button;
    hero_image;
    label;
    constructor(data) {
        super();
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.call_to_action_button = parseItem(data.callToActionButton);
        this.hero_image = parseItem(data.heroImage);
        this.label = data.lengthText?.accessibility.accessibilityData.label || '';
    }
}

class WatchCardRichHeader extends YTNode {
    static type = 'WatchCardRichHeader';
    title;
    title_endpoint;
    subtitle;
    author;
    style;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.title_endpoint = new NavigationEndpoint(data.titleNavigationEndpoint);
        this.subtitle = new Text$1(data.subtitle);
        this.author = new Author(data, data.titleBadge ? [data.titleBadge] : null, data.avatar);
        this.author.name = this.title.toString();
        this.style = data.style;
    }
}

class WatchCardSectionSequence extends YTNode {
    static type = 'WatchCardSectionSequence';
    lists;
    constructor(data) {
        super();
        this.lists = parseArray(data.lists);
    }
}

class WatchNextTabbedResults extends TwoColumnBrowseResults {
    static type = 'WatchNextTabbedResults';
    constructor(data) {
        super(data);
    }
}

class AnchoredSection extends YTNode {
    static type = 'AnchoredSection';
    title;
    content;
    endpoint;
    category_assets;
    category_type;
    constructor(data) {
        super();
        this.title = data.title;
        this.content = parseItem(data.content, SectionList);
        this.endpoint = new NavigationEndpoint(data.navigationEndpoint);
        this.category_assets = {
            asset_key: data.categoryAssets?.assetKey,
            background_color: data.categoryAssets?.backgroundColor
        };
        this.category_type = data.categoryType;
    }
}

class KidsBlocklistPickerItem extends YTNode {
    static type = 'KidsBlocklistPickerItem';
    #actions;
    child_display_name;
    child_account_description;
    avatar;
    block_button;
    blocked_entity_key;
    constructor(data) {
        super();
        this.child_display_name = new Text$1(data.childDisplayName);
        this.child_account_description = new Text$1(data.childAccountDescription);
        this.avatar = Thumbnail.fromResponse(data.avatar);
        this.block_button = parseItem(data.blockButton, [ToggleButton]);
        this.blocked_entity_key = data.blockedEntityKey;
    }
    async blockChannel() {
        if (!this.#actions)
            throw new InnertubeError('An active caller must be provide to perform this operation.');
        const button = this.block_button;
        if (!button)
            throw new InnertubeError('Block button was not found.', { child_display_name: this.child_display_name });
        if (button.is_toggled)
            throw new InnertubeError('This channel is already blocked.', { child_display_name: this.child_display_name });
        const response = await button.endpoint.call(this.#actions, { parse: false });
        return response;
    }
    setActions(actions) {
        this.#actions = actions;
    }
}

class KidsBlocklistPicker extends YTNode {
    static type = 'KidsBlocklistPicker';
    title;
    child_rows;
    done_button;
    successful_toast_action_message;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.child_rows = parse(data.childRows, true, [KidsBlocklistPickerItem]);
        this.done_button = parseItem(data.doneButton, [Button]);
        this.successful_toast_action_message = new Text$1(data.successfulToastActionMessage);
    }
}

class KidsCategoryTab extends YTNode {
    static type = 'KidsCategoryTab';
    title;
    category_assets;
    category_type;
    endpoint;
    constructor(data) {
        super();
        this.title = new Text$1(data.title);
        this.category_assets = {
            asset_key: data.categoryAssets?.assetKey,
            background_color: data.categoryAssets?.backgroundColor
        };
        this.category_type = data.categoryType;
        this.endpoint = new NavigationEndpoint(data.endpoint);
    }
}

class KidsCategoriesHeader extends YTNode {
    static type = 'kidsCategoriesHeader';
    category_tabs;
    privacy_button;
    constructor(data) {
        super();
        this.category_tabs = parseArray(data.categoryTabs, KidsCategoryTab);
        this.privacy_button = parseItem(data.privacyButtonRenderer, Button);
    }
}

class KidsHomeScreen extends YTNode {
    static type = 'kidsHomeScreen';
    anchors;
    constructor(data) {
        super();
        this.anchors = parseArray(data.anchors, AnchoredSection);
    }
}

// This file was auto generated, do not edit.
// See ./scripts/build-parser-map.js

var YTNodes = /*#__PURE__*/Object.freeze({
  __proto__: null,
  AboutChannel: AboutChannel,
  AboutChannelView: AboutChannelView,
  AccountChannel: AccountChannel,
  AccountItem: AccountItem,
  AccountItemSection: AccountItemSection,
  AccountItemSectionHeader: AccountItemSectionHeader,
  AccountSectionList: AccountSectionList,
  ActiveAccountHeader: ActiveAccountHeader,
  AddBannerToLiveChatCommand: AddBannerToLiveChatCommand,
  AddChatItemAction: AddChatItemAction,
  AddLiveChatTickerItemAction: AddLiveChatTickerItemAction,
  AddToPlaylist: AddToPlaylist,
  AddToPlaylistCommand: AddToPlaylistCommand,
  AddToPlaylistEndpoint: AddToPlaylistEndpoint,
  AddToPlaylistServiceEndpoint: AddToPlaylistServiceEndpoint,
  Alert: Alert,
  AlertWithButton: AlertWithButton,
  AnchoredSection: AnchoredSection,
  AnimatedThumbnailOverlayView: AnimatedThumbnailOverlayView,
  AppendContinuationItemsAction: AppendContinuationItemsAction,
  AttributionView: AttributionView,
  AudioOnlyPlayability: AudioOnlyPlayability,
  AuthorCommentBadge: AuthorCommentBadge,
  AutomixPreviewVideo: AutomixPreviewVideo,
  AvatarStackView: AvatarStackView,
  AvatarView: AvatarView,
  BackgroundPromo: BackgroundPromo,
  BackstageImage: BackstageImage,
  BackstagePost: BackstagePost,
  BackstagePostThread: BackstagePostThread,
  BadgeView: BadgeView,
  BrowseEndpoint: BrowseEndpoint,
  BrowseFeedActions: BrowseFeedActions,
  BrowserMediaSession: BrowserMediaSession,
  BumperUserEduContentView: BumperUserEduContentView,
  Button: Button,
  ButtonCardView: ButtonCardView,
  ButtonView: ButtonView,
  C4TabbedHeader: C4TabbedHeader,
  CallToActionButton: CallToActionButton,
  Card: Card,
  CardCollection: CardCollection,
  CarouselHeader: CarouselHeader,
  CarouselItem: CarouselItem,
  CarouselItemView: CarouselItemView,
  CarouselLockup: CarouselLockup,
  CarouselTitleView: CarouselTitleView,
  ChangeEngagementPanelVisibilityAction: ChangeEngagementPanelVisibilityAction,
  Channel: Channel,
  ChannelAboutFullMetadata: ChannelAboutFullMetadata,
  ChannelAgeGate: ChannelAgeGate,
  ChannelExternalLinkView: ChannelExternalLinkView,
  ChannelFeaturedContent: ChannelFeaturedContent,
  ChannelHeaderLinks: ChannelHeaderLinks,
  ChannelHeaderLinksView: ChannelHeaderLinksView,
  ChannelMetadata: ChannelMetadata,
  ChannelMobileHeader: ChannelMobileHeader,
  ChannelOptions: ChannelOptions,
  ChannelOwnerEmptyState: ChannelOwnerEmptyState,
  ChannelSubMenu: ChannelSubMenu,
  ChannelSwitcherHeader: ChannelSwitcherHeader,
  ChannelSwitcherPage: ChannelSwitcherPage,
  ChannelTagline: ChannelTagline,
  ChannelThumbnailWithLink: ChannelThumbnailWithLink,
  ChannelVideoPlayer: ChannelVideoPlayer,
  Chapter: Chapter,
  ChildVideo: ChildVideo,
  ChipBarView: ChipBarView,
  ChipCloud: ChipCloud,
  ChipCloudChip: ChipCloudChip,
  ChipView: ChipView,
  ClientSideToggleMenuItem: ClientSideToggleMenuItem,
  ClipAdState: ClipAdState,
  ClipCreation: ClipCreation,
  ClipCreationScrubber: ClipCreationScrubber,
  ClipCreationTextInput: ClipCreationTextInput,
  ClipSection: ClipSection,
  CollaboratorInfoCardContent: CollaboratorInfoCardContent,
  CollageHeroImage: CollageHeroImage,
  CollectionThumbnailView: CollectionThumbnailView,
  CommandExecutorCommand: CommandExecutorCommand,
  CommentActionButtons: CommentActionButtons,
  CommentDialog: CommentDialog,
  CommentReplies: CommentReplies,
  CommentReplyDialog: CommentReplyDialog,
  CommentSimplebox: CommentSimplebox,
  CommentThread: CommentThread,
  CommentView: CommentView,
  CommentsEntryPointHeader: CommentsEntryPointHeader,
  CommentsEntryPointTeaser: CommentsEntryPointTeaser,
  CommentsHeader: CommentsHeader,
  CommentsSimplebox: CommentsSimplebox,
  CompactChannel: CompactChannel,
  CompactLink: CompactLink,
  CompactMix: CompactMix,
  CompactMovie: CompactMovie,
  CompactPlaylist: CompactPlaylist,
  CompactStation: CompactStation,
  CompactVideo: CompactVideo,
  CompositeVideoPrimaryInfo: CompositeVideoPrimaryInfo,
  ConfirmDialog: ConfirmDialog,
  ContentMetadataView: ContentMetadataView,
  ContentPreviewImageView: ContentPreviewImageView,
  ContinuationCommand: ContinuationCommand,
  ContinuationItem: ContinuationItem,
  ConversationBar: ConversationBar,
  CopyLink: CopyLink,
  CreateCommentEndpoint: CreateCommentEndpoint,
  CreatePlaylistDialog: CreatePlaylistDialog,
  CreatePlaylistDialogFormView: CreatePlaylistDialogFormView,
  CreatePlaylistServiceEndpoint: CreatePlaylistServiceEndpoint,
  CreatorHeart: CreatorHeart,
  CreatorHeartView: CreatorHeartView,
  DecoratedAvatarView: DecoratedAvatarView,
  DecoratedPlayerBar: DecoratedPlayerBar,
  DefaultPromoPanel: DefaultPromoPanel,
  DeletePlaylistEndpoint: DeletePlaylistEndpoint,
  DescriptionPreviewView: DescriptionPreviewView,
  DialogHeaderView: DialogHeaderView,
  DialogView: DialogView,
  DidYouMean: DidYouMean,
  DimChatItemAction: DimChatItemAction,
  DislikeButtonView: DislikeButtonView,
  DismissableDialog: DismissableDialog,
  DismissableDialogContentSection: DismissableDialogContentSection,
  DownloadButton: DownloadButton,
  Dropdown: Dropdown,
  DropdownItem: DropdownItem,
  DropdownView: DropdownView,
  DynamicTextView: DynamicTextView,
  Element: Element,
  EmergencyOnebox: EmergencyOnebox,
  EmojiPicker: EmojiPicker,
  EmojiPickerCategory: EmojiPickerCategory,
  EmojiPickerCategoryButton: EmojiPickerCategoryButton,
  EmojiPickerUpsellCategory: EmojiPickerUpsellCategory,
  EndScreenPlaylist: EndScreenPlaylist,
  EndScreenVideo: EndScreenVideo,
  Endscreen: Endscreen,
  EndscreenElement: EndscreenElement,
  EngagementPanelSectionList: EngagementPanelSectionList,
  EngagementPanelTitleHeader: EngagementPanelTitleHeader,
  EomSettingsDisclaimer: EomSettingsDisclaimer,
  ExpandableMetadata: ExpandableMetadata,
  ExpandableTab: ExpandableTab,
  ExpandableVideoDescriptionBody: ExpandableVideoDescriptionBody,
  ExpandedShelfContents: ExpandedShelfContents,
  Factoid: Factoid,
  FancyDismissibleDialog: FancyDismissibleDialog,
  FeedFilterChipBar: FeedFilterChipBar,
  FeedNudge: FeedNudge,
  FeedTabbedHeader: FeedTabbedHeader,
  FeedbackEndpoint: FeedbackEndpoint,
  FlexibleActionsView: FlexibleActionsView,
  FormFooterView: FormFooterView,
  GameCard: GameCard,
  GameDetails: GameDetails,
  GetAccountsListInnertubeEndpoint: GetAccountsListInnertubeEndpoint,
  GetKidsBlocklistPickerCommand: GetKidsBlocklistPickerCommand,
  GetMultiPageMenuAction: GetMultiPageMenuAction,
  Grid: Grid,
  GridChannel: GridChannel,
  GridHeader: GridHeader,
  GridMix: GridMix,
  GridMovie: GridMovie,
  GridPlaylist: GridPlaylist,
  GridShelfView: GridShelfView,
  GridShow: GridShow,
  GridVideo: GridVideo,
  GuideCollapsibleEntry: GuideCollapsibleEntry,
  GuideCollapsibleSectionEntry: GuideCollapsibleSectionEntry,
  GuideDownloadsEntry: GuideDownloadsEntry,
  GuideEntry: GuideEntry,
  GuideSection: GuideSection,
  GuideSubscriptionsSection: GuideSubscriptionsSection,
  HashtagHeader: HashtagHeader,
  HashtagTile: HashtagTile,
  HeatMarker: HeatMarker,
  Heatmap: Heatmap,
  HeroPlaylistThumbnail: HeroPlaylistThumbnail,
  HideEngagementPanelEndpoint: HideEngagementPanelEndpoint,
  HighlightsCarousel: HighlightsCarousel,
  HistorySuggestion: HistorySuggestion,
  HorizontalCardList: HorizontalCardList,
  HorizontalList: HorizontalList,
  HorizontalMovieList: HorizontalMovieList,
  HowThisWasMadeSectionView: HowThisWasMadeSectionView,
  HypePointsFactoid: HypePointsFactoid,
  IconLink: IconLink,
  ImageBannerView: ImageBannerView,
  IncludingResultsFor: IncludingResultsFor,
  InfoPanelContainer: InfoPanelContainer,
  InfoPanelContent: InfoPanelContent,
  InfoRow: InfoRow,
  InteractiveTabbedHeader: InteractiveTabbedHeader,
  ItemSection: ItemSection,
  ItemSectionHeader: ItemSectionHeader,
  ItemSectionTab: ItemSectionTab,
  ItemSectionTabbedHeader: ItemSectionTabbedHeader,
  KidsBlocklistPicker: KidsBlocklistPicker,
  KidsBlocklistPickerItem: KidsBlocklistPickerItem,
  KidsCategoriesHeader: KidsCategoriesHeader,
  KidsCategoryTab: KidsCategoryTab,
  KidsHomeScreen: KidsHomeScreen,
  LikeButton: LikeButton,
  LikeButtonView: LikeButtonView,
  LikeEndpoint: LikeEndpoint,
  ListItemView: ListItemView,
  ListView: ListView,
  LiveChat: LiveChat,
  LiveChatActionPanel: LiveChatActionPanel,
  LiveChatAuthorBadge: LiveChatAuthorBadge,
  LiveChatAutoModMessage: LiveChatAutoModMessage,
  LiveChatBanner: LiveChatBanner,
  LiveChatBannerChatSummary: LiveChatBannerChatSummary,
  LiveChatBannerHeader: LiveChatBannerHeader,
  LiveChatBannerPoll: LiveChatBannerPoll,
  LiveChatBannerRedirect: LiveChatBannerRedirect,
  LiveChatDialog: LiveChatDialog,
  LiveChatHeader: LiveChatHeader,
  LiveChatItemBumperView: LiveChatItemBumperView,
  LiveChatItemContextMenuEndpoint: LiveChatItemContextMenuEndpoint,
  LiveChatItemList: LiveChatItemList,
  LiveChatMembershipItem: LiveChatMembershipItem,
  LiveChatMessageInput: LiveChatMessageInput,
  LiveChatModeChangeMessage: LiveChatModeChangeMessage,
  LiveChatPaidMessage: LiveChatPaidMessage,
  LiveChatPaidSticker: LiveChatPaidSticker,
  LiveChatParticipant: LiveChatParticipant,
  LiveChatParticipantsList: LiveChatParticipantsList,
  LiveChatPlaceholderItem: LiveChatPlaceholderItem,
  LiveChatProductItem: LiveChatProductItem,
  LiveChatRestrictedParticipation: LiveChatRestrictedParticipation,
  LiveChatSponsorshipsGiftPurchaseAnnouncement: LiveChatSponsorshipsGiftPurchaseAnnouncement,
  LiveChatSponsorshipsGiftRedemptionAnnouncement: LiveChatSponsorshipsGiftRedemptionAnnouncement,
  LiveChatSponsorshipsHeader: LiveChatSponsorshipsHeader,
  LiveChatTextMessage: LiveChatTextMessage,
  LiveChatTickerPaidMessageItem: LiveChatTickerPaidMessageItem,
  LiveChatTickerPaidStickerItem: LiveChatTickerPaidStickerItem,
  LiveChatTickerSponsorItem: LiveChatTickerSponsorItem,
  LiveChatViewerEngagementMessage: LiveChatViewerEngagementMessage,
  LockupMetadataView: LockupMetadataView,
  LockupView: LockupView,
  MacroMarkersInfoItem: MacroMarkersInfoItem,
  MacroMarkersList: MacroMarkersList,
  MacroMarkersListEntity: MacroMarkersListEntity,
  MacroMarkersListItem: MacroMarkersListItem,
  MarkChatItemAsDeletedAction: MarkChatItemAsDeletedAction,
  MarkChatItemsByAuthorAsDeletedAction: MarkChatItemsByAuthorAsDeletedAction,
  Menu: Menu,
  MenuFlexibleItem: MenuFlexibleItem,
  MenuNavigationItem: MenuNavigationItem,
  MenuPopup: MenuPopup,
  MenuServiceItem: MenuServiceItem,
  MenuServiceItemDownload: MenuServiceItemDownload,
  MenuTitle: MenuTitle,
  MerchandiseItem: MerchandiseItem,
  MerchandiseShelf: MerchandiseShelf,
  Message: Message,
  MetadataBadge: MetadataBadge,
  MetadataRow: MetadataRow,
  MetadataRowContainer: MetadataRowContainer,
  MetadataRowHeader: MetadataRowHeader,
  MetadataScreen: MetadataScreen,
  MicroformatData: MicroformatData,
  Mix: Mix,
  MobileTopbar: MobileTopbar,
  ModalWithTitleAndButton: ModalWithTitleAndButton,
  ModifyChannelNotificationPreferenceEndpoint: ModifyChannelNotificationPreferenceEndpoint,
  Movie: Movie,
  MovingThumbnail: MovingThumbnail,
  MultiMarkersPlayerBar: MultiMarkersPlayerBar,
  MultiPageMenu: MultiPageMenu,
  MultiPageMenuNotificationSection: MultiPageMenuNotificationSection,
  MultiPageMenuSection: MultiPageMenuSection,
  MusicCardShelf: MusicCardShelf,
  MusicCardShelfHeaderBasic: MusicCardShelfHeaderBasic,
  MusicCarouselShelf: MusicCarouselShelf,
  MusicCarouselShelfBasicHeader: MusicCarouselShelfBasicHeader,
  MusicDescriptionShelf: MusicDescriptionShelf,
  MusicDetailHeader: MusicDetailHeader,
  MusicDownloadStateBadge: MusicDownloadStateBadge,
  MusicEditablePlaylistDetailHeader: MusicEditablePlaylistDetailHeader,
  MusicElementHeader: MusicElementHeader,
  MusicHeader: MusicHeader,
  MusicImmersiveHeader: MusicImmersiveHeader,
  MusicInlineBadge: MusicInlineBadge,
  MusicItemThumbnailOverlay: MusicItemThumbnailOverlay,
  MusicLargeCardItemCarousel: MusicLargeCardItemCarousel,
  MusicMenuItemDivider: MusicMenuItemDivider,
  MusicMultiRowListItem: MusicMultiRowListItem,
  MusicMultiSelectMenu: MusicMultiSelectMenu,
  MusicMultiSelectMenuItem: MusicMultiSelectMenuItem,
  MusicNavigationButton: MusicNavigationButton,
  MusicPlayButton: MusicPlayButton,
  MusicPlaylistEditHeader: MusicPlaylistEditHeader,
  MusicPlaylistShelf: MusicPlaylistShelf,
  MusicQueue: MusicQueue,
  MusicResponsiveHeader: MusicResponsiveHeader,
  MusicResponsiveListItem: MusicResponsiveListItem,
  MusicResponsiveListItemFixedColumn: MusicResponsiveListItemFixedColumn,
  MusicResponsiveListItemFlexColumn: MusicResponsiveListItemFlexColumn,
  MusicShelf: MusicShelf,
  MusicSideAlignedItem: MusicSideAlignedItem,
  MusicSortFilterButton: MusicSortFilterButton,
  MusicTastebuilderShelf: MusicTasteBuilderShelf,
  MusicTastebuilderShelfThumbnail: MusicTastebuilderShelfThumbnail,
  MusicThumbnail: MusicThumbnail,
  MusicTwoRowItem: MusicTwoRowItem,
  MusicVisualHeader: MusicVisualHeader,
  NavigationEndpoint: NavigationEndpoint,
  Notification: Notification,
  NotificationAction: NotificationAction,
  OpenOnePickAddVideoModalCommand: OpenOnePickAddVideoModalCommand,
  OpenPopupAction: OpenPopupAction,
  PageHeader: PageHeader,
  PageHeaderView: PageHeaderView,
  PageIntroduction: PageIntroduction,
  PanelFooterView: PanelFooterView,
  PdgCommentChip: PdgCommentChip,
  PdgReplyButtonView: PdgReplyButtonView,
  PerformCommentActionEndpoint: PerformCommentActionEndpoint,
  PivotBar: PivotBar,
  PivotBarItem: PivotBarItem,
  PivotButton: PivotButton,
  PlayerAnnotationsExpanded: PlayerAnnotationsExpanded,
  PlayerCaptionsTracklist: PlayerCaptionsTracklist,
  PlayerControlsOverlay: PlayerControlsOverlay,
  PlayerErrorMessage: PlayerErrorMessage,
  PlayerLegacyDesktopYpcOffer: PlayerLegacyDesktopYpcOffer,
  PlayerLegacyDesktopYpcTrailer: PlayerLegacyDesktopYpcTrailer,
  PlayerLiveStoryboardSpec: PlayerLiveStoryboardSpec,
  PlayerMicroformat: PlayerMicroformat,
  PlayerOverflow: PlayerOverflow,
  PlayerOverlay: PlayerOverlay,
  PlayerOverlayAutoplay: PlayerOverlayAutoplay,
  PlayerOverlayVideoDetails: PlayerOverlayVideoDetails,
  PlayerStoryboardSpec: PlayerStoryboardSpec,
  Playlist: Playlist,
  PlaylistAddToOption: PlaylistAddToOption,
  PlaylistCustomThumbnail: PlaylistCustomThumbnail,
  PlaylistEditEndpoint: PlaylistEditEndpoint,
  PlaylistHeader: PlaylistHeader,
  PlaylistInfoCardContent: PlaylistInfoCardContent,
  PlaylistMetadata: PlaylistMetadata,
  PlaylistPanel: PlaylistPanel,
  PlaylistPanelVideo: PlaylistPanelVideo,
  PlaylistPanelVideoWrapper: PlaylistPanelVideoWrapper,
  PlaylistSidebar: PlaylistSidebar,
  PlaylistSidebarPrimaryInfo: PlaylistSidebarPrimaryInfo,
  PlaylistSidebarSecondaryInfo: PlaylistSidebarSecondaryInfo,
  PlaylistThumbnailOverlay: PlaylistThumbnailOverlay,
  PlaylistVideo: PlaylistVideo,
  PlaylistVideoList: PlaylistVideoList,
  PlaylistVideoThumbnail: PlaylistVideoThumbnail,
  Poll: Poll,
  PollHeader: PollHeader,
  Post: Post,
  PostMultiImage: PostMultiImage,
  PrefetchWatchCommand: PrefetchWatchCommand,
  PremiereTrailerBadge: PremiereTrailerBadge,
  ProductList: ProductList,
  ProductListHeader: ProductListHeader,
  ProductListItem: ProductListItem,
  ProfileColumn: ProfileColumn,
  ProfileColumnStats: ProfileColumnStats,
  ProfileColumnStatsEntry: ProfileColumnStatsEntry,
  ProfileColumnUserInfo: ProfileColumnUserInfo,
  Quiz: Quiz,
  RecognitionShelf: RecognitionShelf,
  ReelItem: ReelItem,
  ReelPlayerHeader: ReelPlayerHeader,
  ReelPlayerOverlay: ReelPlayerOverlay,
  ReelShelf: ReelShelf,
  ReelWatchEndpoint: ReelWatchEndpoint,
  RelatedChipCloud: RelatedChipCloud,
  RemoveBannerForLiveChatCommand: RemoveBannerForLiveChatCommand,
  RemoveChatItemAction: RemoveChatItemAction,
  RemoveChatItemByAuthorAction: RemoveChatItemByAuthorAction,
  ReplaceChatItemAction: ReplaceChatItemAction,
  ReplaceLiveChatAction: ReplaceLiveChatAction,
  ReplayChatItemAction: ReplayChatItemAction,
  RichGrid: RichGrid,
  RichItem: RichItem,
  RichListHeader: RichListHeader,
  RichMetadata: RichMetadata,
  RichMetadataRow: RichMetadataRow,
  RichSection: RichSection,
  RichShelf: RichShelf,
  RunAttestationCommand: RunAttestationCommand,
  SearchBox: SearchBox,
  SearchEndpoint: SearchEndpoint,
  SearchFilter: SearchFilter,
  SearchFilterGroup: SearchFilterGroup,
  SearchFilterOptionsDialog: SearchFilterOptionsDialog,
  SearchHeader: SearchHeader,
  SearchRefinementCard: SearchRefinementCard,
  SearchSubMenu: SearchSubMenu,
  SearchSuggestion: SearchSuggestion,
  SearchSuggestionsSection: SearchSuggestionsSection,
  SecondarySearchContainer: SecondarySearchContainer,
  SectionHeaderView: SectionHeaderView,
  SectionList: SectionList,
  SegmentedLikeDislikeButton: SegmentedLikeDislikeButton,
  SegmentedLikeDislikeButtonView: SegmentedLikeDislikeButtonView,
  SendFeedbackAction: SendFeedbackAction,
  SettingBoolean: SettingBoolean,
  SettingsCheckbox: SettingsCheckbox,
  SettingsOptions: SettingsOptions,
  SettingsSidebar: SettingsSidebar,
  SettingsSwitch: SettingsSwitch,
  ShareEndpoint: ShareEndpoint,
  ShareEntityEndpoint: ShareEntityEndpoint,
  ShareEntityServiceEndpoint: ShareEntityServiceEndpoint,
  SharePanelHeader: SharePanelHeader,
  SharePanelTitleV15: SharePanelTitleV15,
  ShareTarget: ShareTarget,
  SharedPost: SharedPost,
  Shelf: Shelf,
  ShortsLockupView: ShortsLockupView,
  ShowCustomThumbnail: ShowCustomThumbnail,
  ShowDialogCommand: ShowDialogCommand,
  ShowEngagementPanelEndpoint: ShowEngagementPanelEndpoint,
  ShowLiveChatActionPanelAction: ShowLiveChatActionPanelAction,
  ShowLiveChatDialogAction: ShowLiveChatDialogAction,
  ShowLiveChatTooltipCommand: ShowLiveChatTooltipCommand,
  ShowingResultsFor: ShowingResultsFor,
  SignalAction: SignalAction,
  SignalServiceEndpoint: SignalServiceEndpoint,
  SimpleCardContent: SimpleCardContent,
  SimpleCardTeaser: SimpleCardTeaser,
  SimpleMenuHeader: SimpleMenuHeader,
  SimpleTextSection: SimpleTextSection,
  SingleActionEmergencySupport: SingleActionEmergencySupport,
  SingleColumnBrowseResults: SingleColumnBrowseResults,
  SingleColumnMusicWatchNextResults: SingleColumnMusicWatchNextResults,
  SingleHeroImage: SingleHeroImage,
  SlimOwner: SlimOwner,
  SlimVideoMetadata: SlimVideoMetadata,
  SortFilterHeader: SortFilterHeader,
  SortFilterSubMenu: SortFilterSubMenu,
  SponsorCommentBadge: SponsorCommentBadge,
  StartAt: StartAt,
  StructuredDescriptionContent: StructuredDescriptionContent,
  StructuredDescriptionPlaylistLockup: StructuredDescriptionPlaylistLockup,
  SubFeedOption: SubFeedOption,
  SubFeedSelector: SubFeedSelector,
  SubscribeButton: SubscribeButton,
  SubscribeButtonView: SubscribeButtonView,
  SubscribeEndpoint: SubscribeEndpoint,
  SubscriptionNotificationToggleButton: SubscriptionNotificationToggleButton,
  Tab: Tab,
  Tabbed: Tabbed,
  TabbedSearchResults: TabbedSearchResults,
  TextCarouselItemView: TextCarouselItemView,
  TextFieldView: TextFieldView,
  TextHeader: TextHeader,
  ThirdPartyShareTargetSection: ThirdPartyShareTargetSection,
  ThumbnailBadgeView: ThumbnailBadgeView,
  ThumbnailBottomOverlayView: ThumbnailBottomOverlayView,
  ThumbnailHoverOverlayToggleActionsView: ThumbnailHoverOverlayToggleActionsView,
  ThumbnailHoverOverlayView: ThumbnailHoverOverlayView,
  ThumbnailLandscapePortrait: ThumbnailLandscapePortrait,
  ThumbnailOverlayBadgeView: ThumbnailOverlayBadgeView,
  ThumbnailOverlayBottomPanel: ThumbnailOverlayBottomPanel,
  ThumbnailOverlayEndorsement: ThumbnailOverlayEndorsement,
  ThumbnailOverlayHoverText: ThumbnailOverlayHoverText,
  ThumbnailOverlayInlineUnplayable: ThumbnailOverlayInlineUnplayable,
  ThumbnailOverlayLoadingPreview: ThumbnailOverlayLoadingPreview,
  ThumbnailOverlayNowPlaying: ThumbnailOverlayNowPlaying,
  ThumbnailOverlayPinking: ThumbnailOverlayPinking,
  ThumbnailOverlayPlaybackStatus: ThumbnailOverlayPlaybackStatus,
  ThumbnailOverlayProgressBarView: ThumbnailOverlayProgressBarView,
  ThumbnailOverlayResumePlayback: ThumbnailOverlayResumePlayback,
  ThumbnailOverlaySidePanel: ThumbnailOverlaySidePanel,
  ThumbnailOverlayTimeStatus: ThumbnailOverlayTimeStatus,
  ThumbnailOverlayToggleButton: ThumbnailOverlayToggleButton,
  ThumbnailView: ThumbnailView,
  TimedMarkerDecoration: TimedMarkerDecoration,
  TitleAndButtonListHeader: TitleAndButtonListHeader,
  ToggleButton: ToggleButton,
  ToggleButtonView: ToggleButtonView,
  ToggleFormField: ToggleFormField,
  ToggleMenuServiceItem: ToggleMenuServiceItem,
  Tooltip: Tooltip,
  TopbarMenuButton: TopbarMenuButton,
  TopicChannelDetails: TopicChannelDetails,
  Transcript: Transcript,
  TranscriptFooter: TranscriptFooter,
  TranscriptSearchBox: TranscriptSearchBox,
  TranscriptSearchPanel: TranscriptSearchPanel,
  TranscriptSectionHeader: TranscriptSectionHeader,
  TranscriptSegment: TranscriptSegment,
  TranscriptSegmentList: TranscriptSegmentList,
  TwoColumnBrowseResults: TwoColumnBrowseResults,
  TwoColumnSearchResults: TwoColumnSearchResults,
  TwoColumnWatchNextResults: TwoColumnWatchNextResults,
  UnifiedSharePanel: UnifiedSharePanel,
  UniversalWatchCard: UniversalWatchCard,
  UnsubscribeEndpoint: UnsubscribeEndpoint,
  UpdateChannelSwitcherPageAction: UpdateChannelSwitcherPageAction,
  UpdateDateTextAction: UpdateDateTextAction,
  UpdateDescriptionAction: UpdateDescriptionAction,
  UpdateEngagementPanelAction: UpdateEngagementPanelAction,
  UpdateEngagementPanelContentCommand: UpdateEngagementPanelContentCommand,
  UpdateLiveChatPollAction: UpdateLiveChatPollAction,
  UpdateSubscribeButtonAction: UpdateSubscribeButtonAction,
  UpdateTitleAction: UpdateTitleAction,
  UpdateToggleButtonTextAction: UpdateToggleButtonTextAction,
  UpdateViewershipAction: UpdateViewershipAction,
  UploadTimeFactoid: UploadTimeFactoid,
  UpsellDialog: UpsellDialog,
  VerticalList: VerticalList,
  VerticalWatchCardList: VerticalWatchCardList,
  Video: Video,
  VideoAttributeView: VideoAttributeView,
  VideoAttributesSectionView: VideoAttributesSectionView,
  VideoCard: VideoCard,
  VideoDescriptionCourseSection: VideoDescriptionCourseSection,
  VideoDescriptionHeader: VideoDescriptionHeader,
  VideoDescriptionInfocardsSection: VideoDescriptionInfocardsSection,
  VideoDescriptionMusicSection: VideoDescriptionMusicSection,
  VideoDescriptionTranscriptSection: VideoDescriptionTranscriptSection,
  VideoInfoCardContent: VideoInfoCardContent,
  VideoMetadataCarouselView: VideoMetadataCarouselView,
  VideoOwner: VideoOwner,
  VideoPrimaryInfo: VideoPrimaryInfo,
  VideoSecondaryInfo: VideoSecondaryInfo,
  VideoViewCount: VideoViewCount,
  ViewCountFactoid: ViewCountFactoid,
  VoiceReplyContainerView: VoiceReplyContainerView,
  WatchCardCompactVideo: WatchCardCompactVideo,
  WatchCardHeroVideo: WatchCardHeroVideo,
  WatchCardRichHeader: WatchCardRichHeader,
  WatchCardSectionSequence: WatchCardSectionSequence,
  WatchEndpoint: WatchEndpoint,
  WatchNextEndScreen: WatchNextEndScreen,
  WatchNextEndpoint: WatchNextEndpoint,
  WatchNextTabbedResults: WatchNextTabbedResults,
  YpcTrailer: YpcTrailer
});

/* eslint-disable no-cond-assign */
// noinspection JSAssignmentUsedAsCondition
const IGNORED_KEYS = new Set([
    'trackingParams', 'accessibility', 'accessibilityData'
]);
const RENDERER_EXAMPLES = {};
function camelToSnake(str) {
    return str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`);
}
/**
 * Infer the type of key given its value
 * @param key - The key to infer the type of
 * @param value - The value of the key
 * @returns The inferred type
 */
function inferType(key, value) {
    let return_value = false;
    if (typeof value === 'object' && value != null) {
        if (return_value = isRenderer(value)) {
            RENDERER_EXAMPLES[return_value] = Reflect.get(value, Reflect.ownKeys(value)[0]);
            return {
                type: 'renderer',
                renderers: [return_value],
                optional: false
            };
        }
        if (return_value = isRendererList(value)) {
            for (const [key, value] of Object.entries(return_value)) {
                RENDERER_EXAMPLES[key] = value;
            }
            return {
                type: 'array',
                array_type: 'renderer',
                renderers: Object.keys(return_value),
                optional: false
            };
        }
        if (return_value = isMiscType(key, value)) {
            return return_value;
        }
        if (return_value = isArrayType(value)) {
            return return_value;
        }
    }
    const primitive_type = typeof value;
    if (primitive_type === 'object')
        return {
            type: 'object',
            keys: Object.entries(value).map(([key, value]) => [key, inferType(key, value)]),
            optional: false
        };
    return {
        type: 'primitive',
        typeof: [primitive_type],
        optional: false
    };
}
/**
 * Checks if the given value is an array of renderers
 * @param value - The value to check
 * @returns If it is a renderer list, return an object with keys being the classnames, and values being an example of that class.
 * Otherwise, return false.
 */
function isRendererList(value) {
    const arr = Array.isArray(value);
    if (arr && value.length === 0)
        return false;
    const is_list = arr && value.every((item) => isRenderer(item));
    return (is_list ?
        Object.fromEntries(value.map((item) => {
            const key = Reflect.ownKeys(item)[0].toString();
            return [sanitizeClassName(key), item[key]];
        })) :
        false);
}
/**
 * Check if the given value is a misc type.
 * @param key - The key of the value
 * @param value - The value to check
 * @returns If it is a misc type, return the InferenceType. Otherwise, return false.
 */
function isMiscType(key, value) {
    if (typeof value === 'object' && value !== null) {
        // NavigationEndpoint
        if (key.endsWith('Endpoint') || key.endsWith('Command') || key === 'endpoint') {
            return {
                type: 'misc',
                endpoint: new NavigationEndpoint(value),
                optional: false,
                misc_type: 'NavigationEndpoint'
            };
        }
        // Text
        if (Reflect.has(value, 'simpleText') || Reflect.has(value, 'runs')) {
            const textNode = new Text$1(value);
            return {
                type: 'misc',
                misc_type: 'Text',
                optional: false,
                endpoint: textNode.endpoint,
                text: textNode.toString()
            };
        }
        // Thumbnail
        if (Reflect.has(value, 'thumbnails') && Array.isArray(Reflect.get(value, 'thumbnails'))) {
            return {
                type: 'misc',
                misc_type: 'Thumbnail',
                optional: false
            };
        }
    }
    return false;
}
/**
 * Check if the given value is a renderer
 * @param value - The value to check
 * @returns If it is a renderer, return the class name. Otherwise, return false.
 */
function isRenderer(value) {
    const is_object = typeof value === 'object';
    if (!is_object)
        return false;
    const keys = Reflect.ownKeys(value);
    if (keys.length === 1) {
        const first_key = keys[0].toString();
        if (first_key.endsWith('Renderer') || first_key.endsWith('Model')) {
            return sanitizeClassName(first_key);
        }
    }
    return false;
}
/**
 * Checks if the given value is an array
 * @param value - The value to check
 * @returns If it is an array, return the InferenceType. Otherwise, return false.
 */
function isArrayType(value) {
    if (!Array.isArray(value))
        return false;
    // If the array is empty, we can't infer anything
    if (value.length === 0)
        return {
            type: 'array',
            array_type: 'primitive',
            items: {
                type: 'primitive',
                typeof: ['never'],
                optional: false
            },
            optional: false
        };
    // We'll infer the primitive type of the array entries
    const array_entry_types = value.map((item) => typeof item);
    // We only support arrays that have the same primitive type throughout
    const all_same_type = array_entry_types.every((type) => type === array_entry_types[0]);
    if (!all_same_type)
        return {
            type: 'array',
            array_type: 'primitive',
            items: {
                type: 'primitive',
                typeof: ['unknown'],
                optional: false
            },
            optional: false
        };
    const type = array_entry_types[0];
    if (type !== 'object')
        return {
            type: 'array',
            array_type: 'primitive',
            items: {
                type: 'primitive',
                typeof: [type],
                optional: false
            },
            optional: false
        };
    let key_type = [];
    for (let i = 0; i < value.length; i++) {
        const current_keys = Object.entries(value[i]).map(([key, value]) => [key, inferType(key, value)]);
        if (i === 0) {
            key_type = current_keys;
            continue;
        }
        key_type = mergeKeyInfo(key_type, current_keys).resolved_key_info;
    }
    return {
        type: 'array',
        array_type: 'object',
        items: {
            type: 'object',
            keys: key_type,
            optional: false
        },
        optional: false
    };
}
function introspectKeysFirstPass(classdata) {
    if (typeof classdata !== 'object' || classdata === null) {
        throw new InnertubeError('Generator: Cannot introspect non-object', {
            classdata
        });
    }
    const keys = Reflect.ownKeys(classdata)
        .filter((key) => !isIgnoredKey(key))
        .filter((key) => typeof key === 'string');
    return keys.map((key) => {
        const value = Reflect.get(classdata, key);
        const inferred_type = inferType(key, value);
        return [key, inferred_type];
    });
}
function introspectKeysSecondPass(key_info) {
    // The second pass will detect Author
    const channel_nav = key_info.filter(([, value]) => {
        if (value.type !== 'misc')
            return false;
        if (!(value.misc_type === 'NavigationEndpoint' || value.misc_type === 'Text'))
            return false;
        return value.endpoint?.metadata.page_type === 'WEB_PAGE_TYPE_CHANNEL';
    });
    // Whichever one has the longest text is the most probable match
    const most_probable_match = channel_nav.sort(([, a], [, b]) => {
        if (a.type !== 'misc' || b.type !== 'misc')
            return 0;
        if (a.misc_type !== 'Text' || b.misc_type !== 'Text')
            return 0;
        return b.text.length - a.text.length;
    });
    const excluded_keys = new Set();
    const canonical_channel_nave = most_probable_match[0];
    let author;
    // We've found an author
    if (canonical_channel_nave) {
        excluded_keys.add(canonical_channel_nave[0]);
        // Now to locate its metadata
        // We'll first get all the keys in the classdata
        const keys = key_info.map(([key]) => key);
        // Check for anything ending in 'Badges' equals 'badges'
        const badges = keys.filter((key) => key.endsWith('Badges') || key === 'badges');
        // The likely candidate is the one with some prefix (owner, author)
        const likely_badges = badges.filter((key) => key.startsWith('owner') || key.startsWith('author'));
        // If we have a likely candidate, we'll use that
        const canonical_badges = likely_badges[0] ?? badges[0];
        // Now we have the author and its badges
        // Verify that its actually badges
        const badge_key_info = key_info.find(([key]) => key === canonical_badges);
        const is_badges = badge_key_info ?
            badge_key_info[1].type === 'array' && badge_key_info[1].array_type === 'renderer' && Reflect.has(badge_key_info[1].renderers, 'MetadataBadge') :
            false;
        if (is_badges && canonical_badges)
            excluded_keys.add(canonical_badges);
        // TODO: next we check for the author's thumbnail
        author = {
            type: 'misc',
            misc_type: 'Author',
            optional: false,
            params: [
                canonical_channel_nave[0],
                is_badges ? canonical_badges : undefined
            ]
        };
    }
    if (author) {
        key_info.push(['author', author]);
    }
    return key_info.filter(([key]) => !excluded_keys.has(key));
}
function introspect2(classdata) {
    const key_info = introspectKeysFirstPass(classdata);
    return introspectKeysSecondPass(key_info);
}
/**
 * Introspect an example of a class in order to determine its key info and dependencies
 * @param classdata - The example of the class
 * @returns The key info and any unimplemented dependencies
 */
function introspect(classdata) {
    const key_info = introspect2(classdata);
    const dependencies = new Map();
    for (const [, value] of key_info) {
        if (value.type === 'renderer' || (value.type === 'array' && value.array_type === 'renderer'))
            for (const renderer of value.renderers) {
                const example = RENDERER_EXAMPLES[renderer];
                if (example)
                    dependencies.set(renderer, example);
            }
    }
    const unimplemented_dependencies = Array.from(dependencies).filter(([classname]) => !hasParser(classname));
    return {
        key_info,
        unimplemented_dependencies
    };
}
/**
 * Is this key ignored by the parser?
 * @param key - The key to check
 * @returns Whether or not the key is ignored
 */
function isIgnoredKey(key) {
    return typeof key === 'string' && IGNORED_KEYS.has(key);
}
/**
 * Given a classname and its resolved key info, create a new class
 * @param classname - The name of the class
 * @param key_info - The resolved key info
 * @param logger - The logger to log errors to
 * @returns Class based on the key info extending YTNode
 */
function createRuntimeClass(classname, key_info, logger) {
    logger({
        error_type: 'class_not_found',
        classname,
        key_info
    });
    const node = class extends YTNode {
        static type = classname;
        static #key_info = new Map();
        static set key_info(key_info) {
            this.#key_info = new Map(key_info);
        }
        static get key_info() {
            return [...this.#key_info.entries()];
        }
        constructor(data) {
            super();
            const { key_info, unimplemented_dependencies } = introspect(data);
            const { resolved_key_info, changed_keys } = mergeKeyInfo(node.key_info, key_info);
            const did_change = changed_keys.length > 0;
            if (did_change) {
                node.key_info = resolved_key_info;
                logger({
                    error_type: 'class_changed',
                    classname,
                    key_info: node.key_info,
                    changed_keys
                });
            }
            for (const [name, data] of unimplemented_dependencies)
                generateRuntimeClass(name, data, logger);
            for (const [key, value] of key_info) {
                let snake_key = camelToSnake(key);
                if (value.type === 'misc' && value.misc_type === 'NavigationEndpoint')
                    snake_key = 'endpoint';
                Reflect.set(this, snake_key, parse$1(key, value, data));
            }
        }
    };
    node.key_info = key_info;
    Object.defineProperty(node, 'name', { value: classname, writable: false });
    return node;
}
/**
 * Given example data for a class, introspect, implement dependencies, and create a new class
 * @param classname - The name of the class
 * @param classdata - The example of the class
 * @param logger - The logger to log errors to
 * @returns Class based on the example classdata extending YTNode
 */
function generateRuntimeClass(classname, classdata, logger) {
    const { key_info, unimplemented_dependencies } = introspect(classdata);
    const JITNode = createRuntimeClass(classname, key_info, logger);
    addRuntimeParser(classname, JITNode);
    for (const [name, data] of unimplemented_dependencies)
        generateRuntimeClass(name, data, logger);
    return JITNode;
}
/**
 * Generate a typescript class based on the key info
 * @param classname - The name of the class
 * @param key_info - The key info, as returned by {@link introspect}
 * @returns Typescript class file
 */
function generateTypescriptClass(classname, key_info) {
    const props = [];
    const constructor_lines = [
        'super();'
    ];
    for (const [key, value] of key_info) {
        let snake_key = camelToSnake(key);
        if (value.type === 'misc' && value.misc_type === 'NavigationEndpoint')
            snake_key = 'endpoint';
        props.push(`${snake_key}${value.optional ? '?' : ''}: ${toTypeDeclaration(value)};`);
        constructor_lines.push(`this.${snake_key} = ${toParser(key, value)};`);
    }
    return `class ${classname} extends YTNode {\n  static type = '${classname}';\n\n  ${props.join('\n  ')}\n\n  constructor(data: RawNode) {\n    ${constructor_lines.join('\n    ')}\n  }\n}\n`;
}
function toTypeDeclarationObject(indentation, keys) {
    return `{\n${keys.map(([key, value]) => `${' '.repeat((indentation + 2) * 2)}${camelToSnake(key)}${value.optional ? '?' : ''}: ${toTypeDeclaration(value, indentation + 1)}`).join(',\n')}\n${' '.repeat((indentation + 1) * 2)}}`;
}
/**
 * For a given inference type, get the typescript type declaration
 * @param inference_type - The inference type to get the declaration for
 * @param indentation - The indentation level (used for objects)
 * @returns Typescript type declaration
 */
function toTypeDeclaration(inference_type, indentation = 0) {
    switch (inference_type.type) {
        case 'renderer': {
            return `${inference_type.renderers.map((type) => `YTNodes.${type}`).join(' | ')} | null`;
        }
        case 'array': {
            switch (inference_type.array_type) {
                case 'renderer':
                    return `ObservedArray<${inference_type.renderers.map((type) => `YTNodes.${type}`).join(' | ')}> | null`;
                case 'primitive':
                    {
                        const items_list = inference_type.items.typeof;
                        if (inference_type.items.optional && !items_list.includes('undefined'))
                            items_list.push('undefined');
                        const items = items_list.length === 1 ?
                            `${items_list[0]}` : `(${items_list.join(' | ')})`;
                        return `${items}[]`;
                    }
                case 'object':
                    return `${toTypeDeclarationObject(indentation, inference_type.items.keys)}[]`;
                default:
                    throw new Error('Unreachable code reached! Switch missing case!');
            }
        }
        case 'object': {
            return toTypeDeclarationObject(indentation, inference_type.keys);
        }
        case 'misc': {
            switch (inference_type.misc_type) {
                case 'Thumbnail':
                    return 'Thumbnail[]';
                default:
                    return inference_type.misc_type;
            }
        }
        case 'primitive': {
            return inference_type.typeof.join(' | ');
        }
    }
}
function toParserObject(indentation, keys, key_path, key) {
    const new_keypath = [...key_path, key];
    return `{\n${keys.map(([key, value]) => `${' '.repeat((indentation + 2) * 2)}${camelToSnake(key)}: ${toParser(key, value, new_keypath, indentation + 1)}`).join(',\n')}\n${' '.repeat((indentation + 1) * 2)}}`;
}
/**
 * Generate statements to parse a given inference type
 * @param key - The key to parse
 * @param inference_type - The inference type to parse
 * @param key_path - The path to the key (excluding the key itself)
 * @param indentation - The indentation level (used for objects)
 * @returns Statement to parse the given key
 */
function toParser(key, inference_type, key_path = ['data'], indentation = 1) {
    let parser = 'undefined';
    switch (inference_type.type) {
        case 'renderer':
            {
                parser = `Parser.parseItem(${key_path.join('.')}.${key}, ${toParserValidTypes(inference_type.renderers)})`;
            }
            break;
        case 'array':
            {
                switch (inference_type.array_type) {
                    case 'renderer':
                        parser = `Parser.parse(${key_path.join('.')}.${key}, true, ${toParserValidTypes(inference_type.renderers)})`;
                        break;
                    case 'object':
                        parser = `${key_path.join('.')}.${key}.map((item: any) => (${toParserObject(indentation, inference_type.items.keys, [], 'item')}))`;
                        break;
                    case 'primitive':
                        parser = `${key_path.join('.')}.${key}`;
                        break;
                    default:
                        throw new Error('Unreachable code reached! Switch missing case!');
                }
            }
            break;
        case 'object':
            {
                parser = toParserObject(indentation, inference_type.keys, key_path, key);
            }
            break;
        case 'misc':
            switch (inference_type.misc_type) {
                case 'Thumbnail':
                    parser = `Thumbnail.fromResponse(${key_path.join('.')}.${key})`;
                    break;
                case 'Author':
                    {
                        const author_parser = `new Author(${key_path.join('.')}.${inference_type.params[0]}, ${inference_type.params[1] ? `${key_path.join('.')}.${inference_type.params[1]}` : 'undefined'})`;
                        if (inference_type.optional)
                            return `Reflect.has(${key_path.join('.')}, '${inference_type.params[0]}') ? ${author_parser} : undefined`;
                        return author_parser;
                    }
                default:
                    parser = `new ${inference_type.misc_type}(${key_path.join('.')}.${key})`;
                    break;
            }
            if (parser === 'undefined')
                throw new Error('Unreachable code reached! Switch missing case!');
            break;
        case 'primitive':
            parser = `${key_path.join('.')}.${key}`;
            break;
    }
    if (inference_type.optional)
        return `Reflect.has(${key_path.join('.')}, '${key}') ? ${parser} : undefined`;
    return parser;
}
function toParserValidTypes(types) {
    if (types.length === 1) {
        return `YTNodes.${types[0]}`;
    }
    return `[ ${types.map((type) => `YTNodes.${type}`).join(', ')} ]`;
}
function accessDataFromKeyPath(root, key_path) {
    let data = root;
    for (const key of key_path)
        data = data[key];
    return data;
}
function hasDataFromKeyPath(root, key_path) {
    let data = root;
    for (const key of key_path)
        if (!Reflect.has(data, key))
            return false;
        else
            data = data[key];
    return true;
}
function parseObject(key, data, key_path, keys, should_optional) {
    const obj = {};
    const new_key_path = [...key_path, key];
    for (const [key, value] of keys) {
        obj[key] = should_optional ? parse$1(key, value, data, new_key_path) : undefined;
    }
    return obj;
}
/**
 * Parse a value from a given key path using the given inference type
 * @param key - The key to parse
 * @param inference_type - The inference type to parse
 * @param data - The data to parse from
 * @param key_path - The path to the key (excluding the key itself)
 * @returns The parsed value
 */
function parse$1(key, inference_type, data, key_path = ['data']) {
    const should_optional = !inference_type.optional || hasDataFromKeyPath({ data }, [...key_path, key]);
    switch (inference_type.type) {
        case 'renderer': {
            return should_optional ? parseItem(accessDataFromKeyPath({ data }, [...key_path, key]), inference_type.renderers.map((type) => getParserByName(type))) : undefined;
        }
        case 'array': {
            switch (inference_type.array_type) {
                case 'renderer':
                    return should_optional ? parse(accessDataFromKeyPath({ data }, [...key_path, key]), true, inference_type.renderers.map((type) => getParserByName(type))) : undefined;
                case 'object':
                    return should_optional ? accessDataFromKeyPath({ data }, [...key_path, key]).map((_, idx) => {
                        return parseObject(`${idx}`, data, [...key_path, key], inference_type.items.keys, should_optional);
                    }) : undefined;
                case 'primitive':
                    return should_optional ? accessDataFromKeyPath({ data }, [...key_path, key]) : undefined;
                default:
                    throw new Error('Unreachable code reached! Switch missing case!');
            }
        }
        case 'object': {
            return parseObject(key, data, key_path, inference_type.keys, should_optional);
        }
        case 'misc':
            switch (inference_type.misc_type) {
                case 'NavigationEndpoint':
                    return should_optional ? new NavigationEndpoint(accessDataFromKeyPath({ data }, [...key_path, key])) : undefined;
                case 'Text':
                    return should_optional ? new Text$1(accessDataFromKeyPath({ data }, [...key_path, key])) : undefined;
                case 'Thumbnail':
                    return should_optional ? Thumbnail.fromResponse(accessDataFromKeyPath({ data }, [...key_path, key])) : undefined;
                case 'Author': {
                    const author_should_optional = !inference_type.optional || hasDataFromKeyPath({ data }, [...key_path, inference_type.params[0]]);
                    return author_should_optional ? new Author(accessDataFromKeyPath({ data }, [...key_path, inference_type.params[0]]), inference_type.params[1] ?
                        accessDataFromKeyPath({ data }, [...key_path, inference_type.params[1]]) : undefined) : undefined;
                }
                default:
                    throw new Error('Unreachable code reached! Switch missing case!');
            }
        case 'primitive':
            return accessDataFromKeyPath({ data }, [...key_path, key]);
    }
}
/**
 * Merges two sets of key info, resolving any conflicts
 * @param key_info - The current key info
 * @param new_key_info - The new key info
 * @returns The merged key info
 */
function mergeKeyInfo(key_info, new_key_info) {
    const changed_keys = new Map();
    const current_keys = new Set(key_info.map(([key]) => key));
    const new_keys = new Set(new_key_info.map(([key]) => key));
    const added_keys = new_key_info.filter(([key]) => !current_keys.has(key));
    const removed_keys = key_info.filter(([key]) => !new_keys.has(key));
    const common_keys = key_info.filter(([key]) => new_keys.has(key));
    const new_key_map = new Map(new_key_info);
    for (const [key, type] of common_keys) {
        const new_type = new_key_map.get(key);
        if (!new_type)
            continue;
        if (type.type !== new_type.type) {
            // We've got a type mismatch, this is unknown, we do not resolve unions
            changed_keys.set(key, {
                type: 'primitive',
                typeof: ['unknown'],
                optional: true
            });
            continue;
        }
        // We've got the same type, so we can now resolve the changes
        switch (type.type) {
            case 'object':
                {
                    if (new_type.type !== 'object')
                        continue;
                    const { resolved_key_info } = mergeKeyInfo(type.keys, new_type.keys);
                    const resolved_key = {
                        type: 'object',
                        keys: resolved_key_info,
                        optional: type.optional || new_type.optional
                    };
                    const did_change = JSON.stringify(resolved_key) !== JSON.stringify(type);
                    if (did_change)
                        changed_keys.set(key, resolved_key);
                }
                break;
            case 'renderer':
                {
                    if (new_type.type !== 'renderer')
                        continue;
                    const union_map = {
                        ...type.renderers,
                        ...new_type.renderers
                    };
                    const either_optional = type.optional || new_type.optional;
                    const resolved_key = {
                        type: 'renderer',
                        renderers: union_map,
                        optional: either_optional
                    };
                    const did_change = JSON.stringify({
                        ...resolved_key,
                        renderers: Object.keys(resolved_key.renderers)
                    }) !== JSON.stringify({
                        ...type,
                        renderers: Object.keys(type.renderers)
                    });
                    if (did_change)
                        changed_keys.set(key, resolved_key);
                }
                break;
            case 'array': {
                if (new_type.type !== 'array')
                    continue;
                switch (type.array_type) {
                    case 'renderer':
                        {
                            if (new_type.array_type !== 'renderer') {
                                // Type mismatch
                                changed_keys.set(key, {
                                    type: 'array',
                                    array_type: 'primitive',
                                    items: {
                                        type: 'primitive',
                                        typeof: ['unknown'],
                                        optional: true
                                    },
                                    optional: true
                                });
                                continue;
                            }
                            const union_map = {
                                ...type.renderers,
                                ...new_type.renderers
                            };
                            const either_optional = type.optional || new_type.optional;
                            const resolved_key = {
                                type: 'array',
                                array_type: 'renderer',
                                renderers: union_map,
                                optional: either_optional
                            };
                            const did_change = JSON.stringify({
                                ...resolved_key,
                                renderers: Object.keys(resolved_key.renderers)
                            }) !== JSON.stringify({
                                ...type,
                                renderers: Object.keys(type.renderers)
                            });
                            if (did_change)
                                changed_keys.set(key, resolved_key);
                        }
                        break;
                    case 'object':
                        {
                            if (new_type.array_type === 'primitive' && new_type.items.typeof.length == 1 && new_type.items.typeof[0] === 'never') {
                                // It's an empty array. We assume the type is unchanged
                                continue;
                            }
                            if (new_type.array_type !== 'object') {
                                // Type mismatch
                                changed_keys.set(key, {
                                    type: 'array',
                                    array_type: 'primitive',
                                    items: {
                                        type: 'primitive',
                                        typeof: ['unknown'],
                                        optional: true
                                    },
                                    optional: true
                                });
                                continue;
                            }
                            const { resolved_key_info } = mergeKeyInfo(type.items.keys, new_type.items.keys);
                            const resolved_key = {
                                type: 'array',
                                array_type: 'object',
                                items: {
                                    type: 'object',
                                    keys: resolved_key_info,
                                    optional: type.items.optional || new_type.items.optional
                                },
                                optional: type.optional || new_type.optional
                            };
                            const did_change = JSON.stringify(resolved_key) !== JSON.stringify(type);
                            if (did_change)
                                changed_keys.set(key, resolved_key);
                        }
                        break;
                    case 'primitive':
                        {
                            if (type.items.typeof.includes('never') && new_type.array_type === 'object') {
                                // Type is now known from previously unknown
                                changed_keys.set(key, new_type);
                                continue;
                            }
                            if (new_type.array_type !== 'primitive') {
                                // Type mismatch
                                changed_keys.set(key, {
                                    type: 'array',
                                    array_type: 'primitive',
                                    items: {
                                        type: 'primitive',
                                        typeof: ['unknown'],
                                        optional: true
                                    },
                                    optional: true
                                });
                                continue;
                            }
                            const key_types = new Set([...new_type.items.typeof, ...type.items.typeof]);
                            if (key_types.size > 1 && key_types.has('never'))
                                key_types.delete('never');
                            const resolved_key = {
                                type: 'array',
                                array_type: 'primitive',
                                items: {
                                    type: 'primitive',
                                    typeof: Array.from(key_types),
                                    optional: type.items.optional || new_type.items.optional
                                },
                                optional: type.optional || new_type.optional
                            };
                            const did_change = JSON.stringify(resolved_key) !== JSON.stringify(type);
                            if (did_change)
                                changed_keys.set(key, resolved_key);
                        }
                        break;
                    default:
                        throw new Error('Unreachable code reached! Switch missing case!');
                }
                break;
            }
            case 'misc':
                {
                    if (new_type.type !== 'misc')
                        continue;
                    if (type.misc_type !== new_type.misc_type) {
                        // We've got a type mismatch, this is unknown, we do not resolve unions
                        changed_keys.set(key, {
                            type: 'primitive',
                            typeof: ['unknown'],
                            optional: true
                        });
                    }
                    switch (type.misc_type) {
                        case 'Author':
                            {
                                if (new_type.misc_type !== 'Author')
                                    break;
                                const had_optional_param = type.params[1] || new_type.params[1];
                                const either_optional = type.optional || new_type.optional;
                                const resolved_key = {
                                    type: 'misc',
                                    misc_type: 'Author',
                                    optional: either_optional,
                                    params: [new_type.params[0], had_optional_param]
                                };
                                const did_change = JSON.stringify(resolved_key) !== JSON.stringify(type);
                                if (did_change)
                                    changed_keys.set(key, resolved_key);
                            }
                            break;
                        // Other cases can not change
                    }
                }
                break;
            case 'primitive':
                {
                    if (new_type.type !== 'primitive')
                        continue;
                    const resolved_key = {
                        type: 'primitive',
                        typeof: Array.from(new Set([...new_type.typeof, ...type.typeof])),
                        optional: type.optional || new_type.optional
                    };
                    const did_change = JSON.stringify(resolved_key) !== JSON.stringify(type);
                    if (did_change)
                        changed_keys.set(key, resolved_key);
                }
                break;
        }
    }
    for (const [key, type] of added_keys) {
        changed_keys.set(key, {
            ...type,
            optional: true
        });
    }
    for (const [key, type] of removed_keys) {
        changed_keys.set(key, {
            ...type,
            optional: true
        });
    }
    const unchanged_keys = key_info.filter(([key]) => !changed_keys.has(key));
    const resolved_key_info_map = new Map([...unchanged_keys, ...changed_keys]);
    const resolved_key_info = [...resolved_key_info_map.entries()];
    return {
        resolved_key_info,
        changed_keys: [...changed_keys.entries()]
    };
}

const TAG = 'Parser';
const IGNORED_LIST = new Set([
    'AdSlot',
    'DisplayAd',
    'SearchPyv',
    'MealbarPromo',
    'PrimetimePromo',
    'PromotedSparklesWeb',
    'CompactPromotedVideo',
    'BrandVideoShelf',
    'BrandVideoSingleton',
    'StatementBanner',
    'GuideSigninPromo',
    'AdsEngagementPanelContent',
    'MiniGameCardView'
]);
const RUNTIME_NODES = new Map(Object.entries(YTNodes));
const DYNAMIC_NODES = new Map();
let ERROR_HANDLER = ({ classname, ...context }) => {
    switch (context.error_type) {
        case 'parse':
            if (context.error instanceof Error) {
                warn(TAG, new InnertubeError(`Something went wrong at ${classname}!\n` +
                    `This is a bug, please report it at ${packageInfo.bugs.url}`, {
                    stack: context.error.stack,
                    classdata: JSON.stringify(context.classdata, null, 2)
                }));
            }
            break;
        case 'typecheck':
            warn(TAG, new ParsingError(`Type mismatch, got ${classname} expected ${Array.isArray(context.expected) ? context.expected.join(' | ') : context.expected}.`, context.classdata));
            break;
        case 'mutation_data_missing':
            warn(TAG, new InnertubeError(`Mutation data required for processing ${classname}, but none found.\n` +
                `This is a bug, please report it at ${packageInfo.bugs.url}`));
            break;
        case 'mutation_data_invalid':
            warn(TAG, new InnertubeError(`Mutation data missing or invalid for ${context.failed} out of ${context.total} MusicMultiSelectMenuItems. ` +
                `The titles of the failed items are: ${context.titles.join(', ')}.\n` +
                `This is a bug, please report it at ${packageInfo.bugs.url}`));
            break;
        case 'class_not_found':
            warn(TAG, new InnertubeError(`${classname} not found!\n` +
                `This is a bug, want to help us fix it? Follow the instructions at ${packageInfo.homepage.split('#', 1)[0]}/blob/main/docs/updating-the-parser.md or report it at ${packageInfo.bugs.url}!\n` +
                `Introspected and JIT generated this class in the meantime:\n${generateTypescriptClass(classname, context.key_info)}`));
            break;
        case 'class_changed':
            warn(TAG, `${classname} changed!\n` +
                `The following keys where altered: ${context.changed_keys.map(([key]) => camelToSnake(key)).join(', ')}\n` +
                `The class has changed to:\n${generateTypescriptClass(classname, context.key_info)}`);
            break;
        default:
            warn(TAG, 'Unreachable code reached at ParserErrorHandler');
            break;
    }
};
function _addToMemo(classname, result) {
    return;
}
function shouldIgnore(classname) {
    return IGNORED_LIST.has(classname);
}
function sanitizeClassName(input) {
    return (input.charAt(0).toUpperCase() + input.slice(1))
        .replace(/Renderer|Model/g, '')
        .replace(/Radio/g, 'Mix').trim();
}
function getParserByName(classname) {
    const ParserConstructor = RUNTIME_NODES.get(classname);
    if (!ParserConstructor) {
        const error = new Error(`Module not found: ${classname}`);
        error.code = 'MODULE_NOT_FOUND';
        throw error;
    }
    return ParserConstructor;
}
function hasParser(classname) {
    return RUNTIME_NODES.has(classname);
}
function addRuntimeParser(classname, ParserConstructor) {
    RUNTIME_NODES.set(classname, ParserConstructor);
    DYNAMIC_NODES.set(classname, ParserConstructor);
}
function parseItem(data, validTypes) {
    if (!data)
        return null;
    const keys = Object.keys(data);
    if (!keys.length)
        return null;
    const classname = sanitizeClassName(keys[0]);
    if (!shouldIgnore(classname)) {
        try {
            const has_target_class = hasParser(classname);
            const TargetClass = has_target_class ?
                getParserByName(classname) :
                generateRuntimeClass(classname, data[keys[0]], ERROR_HANDLER);
            if (validTypes) {
                if (Array.isArray(validTypes)) {
                    if (!validTypes.some((type) => type.type === TargetClass.type)) {
                        ERROR_HANDLER({
                            classdata: data[keys[0]],
                            classname,
                            error_type: 'typecheck',
                            expected: validTypes.map((type) => type.type)
                        });
                        return null;
                    }
                }
                else if (TargetClass.type !== validTypes.type) {
                    ERROR_HANDLER({
                        classdata: data[keys[0]],
                        classname,
                        error_type: 'typecheck',
                        expected: validTypes.type
                    });
                    return null;
                }
            }
            const result = new TargetClass(data[keys[0]]);
            _addToMemo(classname, result);
            return result;
        }
        catch (err) {
            ERROR_HANDLER({
                classname,
                classdata: data[keys[0]],
                error: err,
                error_type: 'parse'
            });
            return null;
        }
    }
    return null;
}
function parseArray(data, validTypes) {
    if (Array.isArray(data)) {
        const results = [];
        for (const item of data) {
            const result = parseItem(item, validTypes);
            if (result) {
                results.push(result);
            }
        }
        return observe(results);
    }
    else if (!data) {
        return observe([]);
    }
    throw new ParsingError('Expected array but got a single item');
}
function parse(data, requireArray, validTypes) {
    if (!data)
        return null;
    if (Array.isArray(data)) {
        const results = [];
        for (const item of data) {
            const result = parseItem(item, validTypes);
            if (result) {
                results.push(result);
            }
        }
        const res = observe(results);
        return requireArray ? res : new SuperParsedResult(res);
    }
    else if (requireArray) {
        throw new ParsingError('Expected array but got a single item');
    }
    return new SuperParsedResult(parseItem(data, validTypes));
}
const command_regexp = /Command$/;
const endpoint_regexp = /Endpoint$/;
const action_regexp = /Action$/;
/**
 * Parses an InnerTube command and returns a YTNode instance if applicable.
 * @param data - The raw node data to parse
 * @returns A YTNode instance if parsing is successful, undefined otherwise
 */
function parseCommand(data) {
    let keys = [];
    try {
        keys = Object.keys(data);
    }
    catch { /** NO-OP */ }
    for (const key of keys) {
        const value = data[key];
        if (command_regexp.test(key) || endpoint_regexp.test(key) || action_regexp.test(key)) {
            const classname = sanitizeClassName(key);
            if (shouldIgnore(classname))
                return undefined;
            try {
                const has_target_class = hasParser(classname);
                if (has_target_class)
                    return new (getParserByName(classname))(value);
            }
            catch (error) {
                ERROR_HANDLER({
                    error,
                    classname,
                    classdata: value,
                    error_type: 'parse'
                });
            }
        }
    }
}
/**
 * Parses an array of InnerTube command nodes.
 * @param commands - Array of raw command nodes to parse
 * @returns An observed array of parsed YTNodes
 */
function parseCommands(commands) {
    if (Array.isArray(commands)) {
        const results = [];
        for (const item of commands) {
            const result = parseCommand(item);
            if (result) {
                results.push(result);
            }
        }
        return observe(results);
    }
    else if (!commands)
        return observe([]);
    throw new ParsingError('Expected array but got a single item');
}

class Author {
    id;
    name;
    thumbnails;
    endpoint;
    badges;
    is_moderator;
    is_verified;
    is_verified_artist;
    url;
    constructor(item, badges, thumbs, id) {
        const nav_text = new Text$1(item);
        this.id = id || nav_text?.runs?.[0]?.endpoint?.payload?.browseId || nav_text?.endpoint?.payload?.browseId || 'N/A';
        this.name = nav_text?.text || 'N/A';
        this.thumbnails = thumbs ? Thumbnail.fromResponse(thumbs) : [];
        this.endpoint = nav_text?.runs?.[0]?.endpoint || nav_text?.endpoint;
        if (badges) {
            if (Array.isArray(badges)) {
                this.badges = parseArray(badges);
                this.is_moderator = this.badges?.some((badge) => badge.icon_type == 'MODERATOR');
                this.is_verified = this.badges?.some((badge) => badge.style == 'BADGE_STYLE_TYPE_VERIFIED');
                this.is_verified_artist = this.badges?.some((badge) => badge.style == 'BADGE_STYLE_TYPE_VERIFIED_ARTIST');
            }
            else {
                this.badges = observe([]);
                this.is_verified = !!badges.isVerified;
                this.is_verified_artist = !!badges.isArtist;
            }
        }
        else {
            this.badges = observe([]);
        }
        // @TODO: Refactor this mess.
        this.url =
            nav_text?.runs?.[0]?.endpoint?.metadata?.api_url === '/browse' &&
                `${URLS.YT_BASE}${nav_text?.runs?.[0]?.endpoint?.payload?.canonicalBaseUrl || `/u/${nav_text?.runs?.[0]?.endpoint?.payload?.browseId}`}` ||
                `${URLS.YT_BASE}${nav_text?.endpoint?.payload?.canonicalBaseUrl || `/u/${nav_text?.endpoint?.payload?.browseId}`}`;
    }
    get best_thumbnail() {
        return this.thumbnails[0];
    }
}

class InnertubeError extends Error {
    date;
    version;
    info;
    constructor(message, info) {
        super(message);
        if (info) {
            this.info = info;
        }
        this.date = new Date();
        this.version = packageInfo.version;
    }
}
class ParsingError extends InnertubeError {
}
/**
 * Compares given objects. May not work correctly for
 * objects with methods.
 */
function deepCompare(obj1, obj2) {
    const keys = Reflect.ownKeys(obj1);
    return keys.some((key) => {
        const is_text = obj2[key] instanceof Text$1;
        if (!is_text && typeof obj2[key] === 'object') {
            return JSON.stringify(obj1[key]) === JSON.stringify(obj2[key]);
        }
        return obj1[key] === (is_text ? obj2[key].toString() : obj2[key]);
    });
}
/**
 * Converts time (h:m:s) to seconds.
 * @returns seconds
 */
function timeToSeconds(time) {
    const params = time.split(':').map((param) => parseInt(param.replace(/\D/g, '')));
    switch (params.length) {
        case 1:
            return params[0];
        case 2:
            return params[0] * 60 + params[1];
        case 3:
            return params[0] * 3600 + params[1] * 60 + params[2];
        default:
            throw new Error('Invalid time string');
    }
}
function u8ToBase64(u8) {
    return btoa(String.fromCharCode.apply(null, Array.from(u8)));
}
function isTextRun(run) {
    return !('emoji' in run);
}

const YOUTUBE_BASE = 'https://m.youtube.com';
class YoutubeService {
    constructor() {
        this.clients = new Map();
        this.lastSearch = new Map();
        this.lastSearchQuery = new Map();
    }
    async start() {
        await this.getClient(eD.WEB);
        await this.getClient(eD.ANDROID);
        await this.getClient(eD.MWEB);
        await this.getClient(eD.MUSIC);
    }
    async getClient(type = eD.WEB) {
        let client;
        if (!this.clients.has(type)) {
            const cookies = await CookieManager.get(YOUTUBE_BASE, true);
            const cookieString = Object.entries(cookies).map(([key, value]) => `${key}=${value.value}`).join('; ');
            client = await nHe.create({
                retrieve_player: false,
                enable_session_cache: false,
                generate_session_locally: false,
                client_type: type,
                player_id: "0004de42",
                ...(type !== eD.ANDROID && { cookie: cookieString }),
                fetch: (url, init) => {
                    var _a, _b, _c, _d, _e, _f, _g;
                    // @ts-ignore
                    if (typeof ((_a = init === null || init === void 0 ? void 0 : init.headers) === null || _a === void 0 ? void 0 : _a.set) === 'function') {
                        (_b = init === null || init === void 0 ? void 0 : init.headers) === null || _b === void 0 ? void 0 : _b.set('origin', 'https://www.youtube.com');
                        (_c = init === null || init === void 0 ? void 0 : init.headers) === null || _c === void 0 ? void 0 : _c.set('referer', 'https://www.youtube.com');
                        (_d = init === null || init === void 0 ? void 0 : init.headers) === null || _d === void 0 ? void 0 : _d.set('x-origin', 'https://www.youtube.com');
                        (_e = init === null || init === void 0 ? void 0 : init.headers) === null || _e === void 0 ? void 0 : _e.set('sec-fetch-dest', 'empty');
                        (_f = init === null || init === void 0 ? void 0 : init.headers) === null || _f === void 0 ? void 0 : _f.set('sec-fetch-mode', 'same-origin');
                        (_g = init === null || init === void 0 ? void 0 : init.headers) === null || _g === void 0 ? void 0 : _g.set('sec-fetch-site', 'same-origin');
                    }
                    return fetch(url, init);
                },
            });
            this.clients.set(type, client);
        }
        else {
            client = this.clients.get(type);
        }
        return client;
    }
    clearClients() {
        this.clients.clear();
    }
    async searchVideos(query, pageToken, type = 'web') {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;
        let search;
        if (pageToken && this.lastSearchQuery.get(type) === query && ((_a = this.lastSearch.get(type)) === null || _a === void 0 ? void 0 : _a.has_continuation)) {
            search = await this.lastSearch.get(type).getContinuation();
        }
        else {
            if (type === 'music') {
                const client = await this.getClient(eD.MUSIC);
                search = await client.music.search(query, {
                    type: "song",
                });
                console.log('search', search);
            }
            else {
                const client = await this.getClient();
                search = await client.search(query);
            }
            this.lastSearchQuery.set(type, query);
        }
        this.lastSearch.set(type, search);
        const results = [];
        const seenIds = new Set();
        for (const item of (type === 'music' ? search.contents : search.results)) {
            if (item.type === 'Video' || item.type === 'MusicResponsiveListItem') {
                const video = item;
                const videoId = video.id || video.video_id;
                if (videoId && !seenIds.has(videoId)) {
                    seenIds.add(videoId);
                    results.push({
                        id: videoId,
                        title: ((_b = video.title) === null || _b === void 0 ? void 0 : _b.text) || video.title || '',
                        artist: ((_c = video.author) === null || _c === void 0 ? void 0 : _c.name) || ((_e = (_d = video.artists) === null || _d === void 0 ? void 0 : _d[0]) === null || _e === void 0 ? void 0 : _e.name) || video.author || '',
                        thumbnail: ((_g = (_f = video.thumbnails) === null || _f === void 0 ? void 0 : _f[0]) === null || _g === void 0 ? void 0 : _g.url) || ((_k = (_j = (_h = video.thumbnail) === null || _h === void 0 ? void 0 : _h.contents) === null || _j === void 0 ? void 0 : _j[0]) === null || _k === void 0 ? void 0 : _k.url) || '',
                        duration: ((_l = video.duration) === null || _l === void 0 ? void 0 : _l.seconds) || video.duration || 0,
                        viewCount: ((_m = video.view_count) === null || _m === void 0 ? void 0 : _m.text) || '',
                    });
                }
            }
            if (item.type === 'MusicShelf') {
                const shelf = item.as(MusicShelf);
                for (const content of shelf.contents) {
                    if (content.type === 'MusicResponsiveListItem') {
                        const video = content.as(MusicResponsiveListItem);
                        const videoId = video.id;
                        if (videoId && !seenIds.has(videoId)) {
                            seenIds.add(videoId);
                            results.push({
                                id: videoId,
                                title: video.title || '',
                                artist: ((_p = (_o = video.artists) === null || _o === void 0 ? void 0 : _o[0]) === null || _p === void 0 ? void 0 : _p.name) || 'Unknown',
                                thumbnail: ((_s = (_r = (_q = video.thumbnail) === null || _q === void 0 ? void 0 : _q.contents) === null || _r === void 0 ? void 0 : _r[0]) === null || _s === void 0 ? void 0 : _s.url) || '',
                                duration: ((_t = video.duration) === null || _t === void 0 ? void 0 : _t.seconds) || 0,
                                viewCount: ((_u = video.view_count) === null || _u === void 0 ? void 0 : _u.text) || '',
                            });
                        }
                    }
                }
            }
        }
        return {
            results,
            nextPageToken: search.has_continuation ? 'continue' : undefined,
        };
    }
    async getPlaylists() {
        const client = await this.getClient(eD.WEB);
        const library = await client.getLibrary();
        return library.playlists;
    }
    async getPlaylist(playlistId) {
        const client = await this.getClient(eD.MWEB);
        return await client.music.getPlaylist(playlistId);
    }
    async getPlayableUrl(videoId) {
        const client = await this.getClient(eD.ANDROID);
        const info = await client.getBasicInfo(videoId);
        const format = info.chooseFormat({
            type: 'audio',
            quality: 'best',
        });
        if (!format) {
            throw new Error('No audio format available');
        }
        return format.decipher(client.session.player);
    }
    async getSearchSuggestions(query) {
        try {
            const client = await this.getClient();
            return await client.getSearchSuggestions(query);
        }
        catch (error) {
            console.error('Failed to get search suggestions:', error);
            return [];
        }
    }
    async getYouTubeSuggestions(videoId, type = 'web', size = 10) {
        var _a;
        try {
            const client = await this.getClient(type === 'music' ? eD.MUSIC : eD.WEB);
            const info = await client.getInfo(videoId);
            const videoIds = ((_a = info.watch_next_feed) === null || _a === void 0 ? void 0 : _a.map((x) => x.as(LockupView).content_id)) || [];
            const videos = await Promise.all(videoIds.map(async (id) => {
                try {
                    return await client.getBasicInfo(id);
                }
                catch (error) {
                    return null;
                }
            }));
            console.log('videos', videos);
            return (videos).filter(video => !!video).slice(0, size).filter(video => !!video.basic_info && !!video.basic_info.id).map(video => {
                var _a;
                const info = video.basic_info;
                console.log('[YouTubeService] getInfo for source:', video);
                return {
                    title: info.title || '',
                    artist: info.author || '',
                    artwork: ((_a = info.thumbnail) === null || _a === void 0 ? void 0 : _a[0].url) || '',
                    duration: info.duration || 0,
                    id: info.id,
                    videoId: info.id,
                    addedAt: Date.now(),
                    source: 'youtube',
                };
            });
        }
        catch (error) {
            console.log('error', error);
            return [];
        }
    }
}
const youtubeService = new YoutubeService();

class YouTubeSource {
    constructor() {
        this.id = 'minip-ytb';
        this.name = 'YouTube Music';
        this.version = '1.0.0';
    }
    async initialize() {
        await youtubeService.start();
    }
    async search(query, pageToken, type = 'web') {
        return youtubeService.searchVideos(query, pageToken, type);
    }
    async getPlayableUrl(trackId) {
        return youtubeService.getPlayableUrl(trackId);
    }
    async getSuggestions(trackId, type = 'web', size = 10) {
        return youtubeService.getYouTubeSuggestions(trackId, type, size);
    }
    async getPlaylists() {
        return youtubeService.getPlaylists();
    }
    async getPlaylist(playlistId) {
        return youtubeService.getPlaylist(playlistId);
    }
    async getSearchSuggestions(query) {
        return youtubeService.getSearchSuggestions(query);
    }
}
const defaultSource = new YouTubeSource();
const createSource = () => new YouTubeSource();

export { createSource, defaultSource as default };
